name: CI

on:
  pull_request:
  merge_group:

permissions:
  contents: read
  packages: read
  actions: read
  checks: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  format_prettier:
    name: Format [prettier]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - run: pnpm prettier --check .

  format_cargo:
    name: Format [cargo]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - run: cargo fmt --all -- --check
        working-directory: ./crates

  lint_clippy:
    name: Lint [clippy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - run: cargo clippy --fix
        working-directory: ./crates

      - run: cargo clippy -- -Dwarnings
        working-directory: ./crates

      - name: Drift Detection
        uses: tj-actions/verify-changed-files@a1c6acee9df209257a246f2cc6ae8cb6581c1edf # v20
        id: drifted-files
        with:
          fail-if-changed: true
          files: |
            crates/**/*.rs

      - if: failure()
        env:
          CHANGED_FILES: ${{ steps.drifted-files.outputs.changed_files }}
        run: |
          echo "Changed files: $CHANGED_FILES"

  lint_eslint:
    name: Lint [eslint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - run: turbo run eslint

  lint_goimports:
    name: Lint [goimports]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - name: Check goimports formatting
        run: |
          fmt_files=$(goimports -l .)
          if [ -n "$fmt_files" ]; then
            echo "The following files are not formatted properly:"
            echo "$fmt_files"
            exit 1
          else
            echo "All files are properly formatted."
          fi

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - run: turbo run build

      - name: Drift Detection
        uses: tj-actions/verify-changed-files@a1c6acee9df209257a246f2cc6ae8cb6581c1edf # v20
        with:
          fail-if-changed: true
          files: |
            modules/cosmwasm-schema/*/schema.go
            packages/cosmwasm-schema/*/*.d.ts

  test_plan:
    name: Test [plan]
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.plan.outputs.packages }}
    steps:
      - uses: actions/checkout@v4
      - uses: fuxingloh/turbo-plan@v2
        id: plan
        with:
          task: test

  test_run:
    name: Test [run]
    needs: test_plan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJSON(needs.test_plan.outputs.packages) }}
    env:
      GOTESTSUM_JUNITFILE: reports/gotestsum-junit.xml
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - run: turbo run test --filter=${{ matrix.package }}

      - uses: dorny/test-reporter@v2
        if: ${{ (success() || failure()) && startsWith(matrix.package, '@modules/') && !github.event.pull_request.head.repo.fork }}
        with:
          name: Test [report] (${{matrix.package}})
          path: modules/*/reports/gotestsum-junit.xml
          reporter: java-junit

  test_completed:
    name: Test [completed]
    runs-on: ubuntu-latest
    if: always()
    needs:
      - test_run
    steps:
      - run: |
          if ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped') || contains(needs.*.result, 'cancelled') }} ; then          
            exit 1
          fi
