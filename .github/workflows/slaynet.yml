name: SLAYNet

on:
  push:
    branches: [main]
  pull_request:
  merge_group:

permissions:
  contents: read
  packages: read
  actions: read
  checks: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dry-run:
    name: Dry Run
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      # Install OpenZeppelin Upgrades Core for Forge. This is missing if we use pnpm.
      - run: npm install -g @openzeppelin/upgrades-core

      # Random private key for dry run, not used in production.
      - run: forge script SLAYDeployment --private-key "0x0123456789abcdef012345678901234567890123456789012345678901234567"
        working-directory: ./contracts

  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    environment: SLAYNet
    needs: dry-run
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      # Install OpenZeppelin Upgrades Core for Forge. This is missing if we use pnpm.
      - run: npm install -g @openzeppelin/upgrades-core

      # These are non-production keys, we reset these occasionally.
      # Balances in these accounts are not "real", they're forked and are only used for testing.
      - run: forge script SLAYDeployment --rpc-url slaynet --slow --broadcast --private-key $SLAYNET_PRIVATE_KEY --verify --verifier-url "${TENDERLY_RPC_URL}/verify/etherscan" --etherscan-api-key $TENDERLY_ACCESS_KEY
        working-directory: ./contracts
        env:
          TENDERLY_RPC_URL: ${{ secrets.TENDERLY_RPC_URL }}
          TENDERLY_ACCESS_KEY: ${{ secrets.TENDERLY_ACCESS_KEY }}
          SLAYNET_PRIVATE_KEY: ${{ secrets.SLAYNET_PRIVATE_KEY }}
