name: Release

on:
  push:
    branches: [main]
  release:
    types: [released]

permissions:
  id-token: write
  packages: write
  contents: read

env:
  DOCKER_CACHE_FROM: ghcr.io/satlayer/cosmwasm-optimizer-cache

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      npm: ${{ steps.version.outputs.npm }}
      npm_tag: ${{ steps.version.outputs.npm_tag }}
      crate: ${{ steps.version.outputs.crate }}
    steps:
      - id: version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            VERSION=${{ github.event.release.tag_name }}
            echo "crate=${VERSION#v}" >> $GITHUB_OUTPUT
            echo "npm=${VERSION}" >> $GITHUB_OUTPUT
            echo "npm_tag=latest" >> $GITHUB_OUTPUT
          else
            # Use calendar versioning for the main branch
            echo "crate=0.0.0-main.${{ github.run_number }}+$(date "+%Y.%m.%d")" >> $GITHUB_OUTPUT
            echo "npm=$(date "+%Y.%m.%d-${{ github.run_number }}")" >> $GITHUB_OUTPUT
            echo "npm_tag=main" >> $GITHUB_OUTPUT
          fi

  npm:
    name: NPM
    runs-on: ubuntu-latest
    environment:
      name: npmjs.com/org/satlayer
    needs:
      - version
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - run: sed -i "s/version = \"0\.0\.0\"/version = \"${{ needs.version.outputs.crate }}\"/" crates/Cargo.toml
      - run: pnpm --filter "@satlayer/*" exec npm version ${{ needs.version.outputs.npm }} --git-tag-version=false

      - run: pnpm turbo run build package --filter "@satlayer/*"

      - run: pnpm config set "//registry.npmjs.org/:_authToken" "\${NPM_PACKAGES_TOKEN}" --location=global

      - run: pnpm publish --access public --tag ${{ needs.version.outputs.npm_tag }} --no-git-checks --filter "@satlayer/*"
        env:
          NPM_PACKAGES_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  crates:
    name: Crates [crates.io]
    runs-on: ubuntu-latest
    environment:
      name: crates.io
    needs:
      - version
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup

      - run: sed -i "s/version = \"0\.0\.0\"/version = \"${{ needs.version.outputs.crate }}\"/" crates/Cargo.toml
      - run: pnpm --filter "@satlayer/*" exec npm version ${{ needs.version.outputs.npm }} --git-tag-version=false

      - uses: taiki-e/install-action@cargo-hack
      # https://github.com/rust-lang/crates.io/blob/6bf32bab3afc21d18b307168ae78b6b07585ebd7/config/nginx.conf.erb#L269
      # Burst of 30 crates, 1 crate limit per minute
      - run: |
          members=(
            "bvs-library"
            "bvs-pauser"
            "bvs-registry"
            "bvs-guardrail"
            "bvs-vault-router"
            "bvs-vault-base"
            "bvs-vault-bank"
            "bvs-vault-bank-tokenized"
            "bvs-vault-cw20"
            "bvs-vault-cw20-tokenized"
            "bvs-rewards"
            "bvs-multi-test"
          )
          for member in "${members[@]}"; do
              cargo hack publish -p ${member} --no-dev-deps --allow-dirty
          done
        working-directory: crates
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
