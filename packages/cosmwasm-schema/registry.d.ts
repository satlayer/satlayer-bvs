// This file was automatically generated by json-schema-to-typescript.
// DO NOT MODIFY IT BY HAND.

export interface InstantiateMsg {
  owner: string;
  pauser: string;
}

export type ExecuteMsg =
  | {
      register_as_service: {
        metadata: Metadata;
      };
    }
  | {
      update_service_metadata: Metadata;
    }
  | {
      register_as_operator: {
        metadata: Metadata;
      };
    }
  | {
      update_operator_metadata: Metadata;
    }
  | {
      register_operator_to_service: {
        operator: string;
      };
    }
  | {
      deregister_operator_from_service: {
        operator: string;
      };
    }
  | {
      register_service_to_operator: {
        service: string;
      };
    }
  | {
      deregister_service_from_operator: {
        service: string;
      };
    }
  | {
      transfer_ownership: {
        /**
         * See [`bvs_library::ownership::transfer_ownership`] for more information on this field
         */
        new_owner: string;
      };
    };

/**
 * metadata is emitted as events and not stored on-chain.
 */
export interface Metadata {
  name?: string | null;
  uri?: string | null;
}

export type QueryMsg =
  | {
      status: {
        operator: string;
        service: string;
      };
    }
  | {
      is_service: string;
    }
  | {
      is_operator: string;
    };

export type IsOperatorResponse = boolean;

export type IsServiceResponse = boolean;

export type StatusResponse = number;
