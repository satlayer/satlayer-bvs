{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "name_", "type": "string", "internalType": "string" },
        { "name": "symbol_", "type": "string", "internalType": "string" },
        { "name": "decimals_", "type": "uint8", "internalType": "uint8" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "allowance",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "spender", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "spender", "type": "address", "internalType": "address" },
        { "name": "value", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [{ "name": "account", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "burn",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "decimals",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint8", "internalType": "uint8" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "mint",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalSupply",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transfer",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "value", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "value", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "spender", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        { "name": "from", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ERC20InsufficientAllowance",
      "inputs": [
        { "name": "spender", "type": "address", "internalType": "address" },
        { "name": "allowance", "type": "uint256", "internalType": "uint256" },
        { "name": "needed", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC20InsufficientBalance",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "balance", "type": "uint256", "internalType": "uint256" },
        { "name": "needed", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC20InvalidApprover",
      "inputs": [{ "name": "approver", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC20InvalidReceiver",
      "inputs": [{ "name": "receiver", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC20InvalidSender",
      "inputs": [{ "name": "sender", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC20InvalidSpender",
      "inputs": [{ "name": "spender", "type": "address", "internalType": "address" }]
    }
  ],
  "bytecode": {
    "object": "0x608060405234801562000010575f80fd5b506040516200157238038062001572833981810160405281019062000036919062000241565b828281600390816200004991906200050f565b5080600490816200005b91906200050f565b5050508060055f6101000a81548160ff021916908360ff160217905550505050620005f3565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620000e2826200009a565b810181811067ffffffffffffffff82111715620001045762000103620000aa565b5b80604052505050565b5f6200011862000081565b9050620001268282620000d7565b919050565b5f67ffffffffffffffff821115620001485762000147620000aa565b5b62000153826200009a565b9050602081019050919050565b5f5b838110156200017f57808201518184015260208101905062000162565b5f8484015250505050565b5f620001a06200019a846200012b565b6200010d565b905082815260208101848484011115620001bf57620001be62000096565b5b620001cc84828562000160565b509392505050565b5f82601f830112620001eb57620001ea62000092565b5b8151620001fd8482602086016200018a565b91505092915050565b5f60ff82169050919050565b6200021d8162000206565b811462000228575f80fd5b50565b5f815190506200023b8162000212565b92915050565b5f805f606084860312156200025b576200025a6200008a565b5b5f84015167ffffffffffffffff8111156200027b576200027a6200008e565b5b6200028986828701620001d4565b935050602084015167ffffffffffffffff811115620002ad57620002ac6200008e565b5b620002bb86828701620001d4565b9250506040620002ce868287016200022b565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200032757607f821691505b6020821081036200033d576200033c620002e2565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003a17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000364565b620003ad868362000364565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620003f7620003f1620003eb84620003c5565b620003ce565b620003c5565b9050919050565b5f819050919050565b6200041283620003d7565b6200042a6200042182620003fe565b84845462000370565b825550505050565b5f90565b6200044062000432565b6200044d81848462000407565b505050565b5b818110156200047457620004685f8262000436565b60018101905062000453565b5050565b601f821115620004c3576200048d8162000343565b620004988462000355565b81016020851015620004a8578190505b620004c0620004b78562000355565b83018262000452565b50505b505050565b5f82821c905092915050565b5f620004e55f1984600802620004c8565b1980831691505092915050565b5f620004ff8383620004d4565b9150826002028217905092915050565b6200051a82620002d8565b67ffffffffffffffff811115620005365762000535620000aa565b5b6200054282546200030f565b6200054f82828562000478565b5f60209050601f83116001811462000585575f841562000570578287015190505b6200057c8582620004f2565b865550620005eb565b601f198416620005958662000343565b5f5b82811015620005be5784890151825560018201915060208501945060208101905062000597565b86831015620005de5784890151620005da601f891682620004d4565b8355505b6001600288020188555050505b505050505050565b610f7180620006015f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c806340c10f191161006f57806340c10f191461016557806370a082311461018157806395d89b41146101b15780639dc29fac146101cf578063a9059cbb146101eb578063dd62ed3e1461021b576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b361024b565b6040516100c09190610bea565b60405180910390f35b6100e360048036038101906100de9190610c9b565b6102db565b6040516100f09190610cf3565b60405180910390f35b6101016102fd565b60405161010e9190610d1b565b60405180910390f35b610131600480360381019061012c9190610d34565b610306565b60405161013e9190610cf3565b60405180910390f35b61014f610334565b60405161015c9190610d9f565b60405180910390f35b61017f600480360381019061017a9190610c9b565b610349565b005b61019b60048036038101906101969190610db8565b610357565b6040516101a89190610d1b565b60405180910390f35b6101b961039c565b6040516101c69190610bea565b60405180910390f35b6101e960048036038101906101e49190610c9b565b61042c565b005b61020560048036038101906102009190610c9b565b61043a565b6040516102129190610cf3565b60405180910390f35b61023560048036038101906102309190610de3565b61045c565b6040516102429190610d1b565b60405180910390f35b60606003805461025a90610e4e565b80601f016020809104026020016040519081016040528092919081815260200182805461028690610e4e565b80156102d15780601f106102a8576101008083540402835291602001916102d1565b820191905f5260205f20905b8154815290600101906020018083116102b457829003601f168201915b5050505050905090565b5f806102e56104de565b90506102f28185856104e5565b600191505092915050565b5f600254905090565b5f806103106104de565b905061031d8582856104f7565b61032885858561058a565b60019150509392505050565b5f60055f9054906101000a900460ff16905090565b610353828261067a565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546103ab90610e4e565b80601f01602080910402602001604051908101604052809291908181526020018280546103d790610e4e565b80156104225780601f106103f957610100808354040283529160200191610422565b820191905f5260205f20905b81548152906001019060200180831161040557829003601f168201915b5050505050905090565b61043682826106f9565b5050565b5f806104446104de565b905061045181858561058a565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6104f28383836001610778565b505050565b5f610502848461045c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156105845781811015610575578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161056c93929190610e8d565b60405180910390fd5b61058384848484035f610778565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105fa575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105f19190610ec2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361066a575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106619190610ec2565b60405180910390fd5b610675838383610947565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106ea575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106e19190610ec2565b60405180910390fd5b6106f55f8383610947565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610769575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107609190610ec2565b60405180910390fd5b610774825f83610947565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107e8575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107df9190610ec2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610858575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161084f9190610ec2565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610941578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109389190610d1b565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610997578060025f82825461098b9190610f08565b92505081905550610a65565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610a20578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a1793929190610e8d565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aac578060025f8282540392505081905550610af6565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b539190610d1b565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610b97578082015181840152602081019050610b7c565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610bbc82610b60565b610bc68185610b6a565b9350610bd6818560208601610b7a565b610bdf81610ba2565b840191505092915050565b5f6020820190508181035f830152610c028184610bb2565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c3782610c0e565b9050919050565b610c4781610c2d565b8114610c51575f80fd5b50565b5f81359050610c6281610c3e565b92915050565b5f819050919050565b610c7a81610c68565b8114610c84575f80fd5b50565b5f81359050610c9581610c71565b92915050565b5f8060408385031215610cb157610cb0610c0a565b5b5f610cbe85828601610c54565b9250506020610ccf85828601610c87565b9150509250929050565b5f8115159050919050565b610ced81610cd9565b82525050565b5f602082019050610d065f830184610ce4565b92915050565b610d1581610c68565b82525050565b5f602082019050610d2e5f830184610d0c565b92915050565b5f805f60608486031215610d4b57610d4a610c0a565b5b5f610d5886828701610c54565b9350506020610d6986828701610c54565b9250506040610d7a86828701610c87565b9150509250925092565b5f60ff82169050919050565b610d9981610d84565b82525050565b5f602082019050610db25f830184610d90565b92915050565b5f60208284031215610dcd57610dcc610c0a565b5b5f610dda84828501610c54565b91505092915050565b5f8060408385031215610df957610df8610c0a565b5b5f610e0685828601610c54565b9250506020610e1785828601610c54565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e6557607f821691505b602082108103610e7857610e77610e21565b5b50919050565b610e8781610c2d565b82525050565b5f606082019050610ea05f830186610e7e565b610ead6020830185610d0c565b610eba6040830184610d0c565b949350505050565b5f602082019050610ed55f830184610e7e565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f1282610c68565b9150610f1d83610c68565b9250828201905080821115610f3557610f34610edb565b5b9291505056fea2646970667358221220e5cf0b6d74cc059af465663774f3b800c298685c74578de7ebd4b7e2e748b88964736f6c63430008180033",
    "sourceMap": "135:532:89:-:0;;;249:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;328:5;335:7;1656:5:30;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;366:9:89::1;354;;:21;;;;;;;;;;;;;;;;;;249:133:::0;;;135:532;;7:75:115;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:86::-;2712:7;2752:4;2745:5;2741:16;2730:27;;2677:86;;;:::o;2769:118::-;2840:22;2856:5;2840:22;:::i;:::-;2833:5;2830:33;2820:61;;2877:1;2874;2867:12;2820:61;2769:118;:::o;2893:139::-;2948:5;2979:6;2973:13;2964:22;;2995:31;3020:5;2995:31;:::i;:::-;2893:139;;;;:::o;3038:1005::-;3144:6;3152;3160;3209:2;3197:9;3188:7;3184:23;3180:32;3177:119;;;3215:79;;:::i;:::-;3177:119;3356:1;3345:9;3341:17;3335:24;3386:18;3378:6;3375:30;3372:117;;;3408:79;;:::i;:::-;3372:117;3513:74;3579:7;3570:6;3559:9;3555:22;3513:74;:::i;:::-;3503:84;;3306:291;3657:2;3646:9;3642:18;3636:25;3688:18;3680:6;3677:30;3674:117;;;3710:79;;:::i;:::-;3674:117;3815:74;3881:7;3872:6;3861:9;3857:22;3815:74;:::i;:::-;3805:84;;3607:292;3938:2;3964:62;4018:7;4009:6;3998:9;3994:22;3964:62;:::i;:::-;3954:72;;3909:127;3038:1005;;;;;:::o;4049:99::-;4101:6;4135:5;4129:12;4119:22;;4049:99;;;:::o;4154:180::-;4202:77;4199:1;4192:88;4299:4;4296:1;4289:15;4323:4;4320:1;4313:15;4340:320;4384:6;4421:1;4415:4;4411:12;4401:22;;4468:1;4462:4;4458:12;4489:18;4479:81;;4545:4;4537:6;4533:17;4523:27;;4479:81;4607:2;4599:6;4596:14;4576:18;4573:38;4570:84;;4626:18;;:::i;:::-;4570:84;4391:269;4340:320;;;:::o;4666:141::-;4715:4;4738:3;4730:11;;4761:3;4758:1;4751:14;4795:4;4792:1;4782:18;4774:26;;4666:141;;;:::o;4813:93::-;4850:6;4897:2;4892;4885:5;4881:14;4877:23;4867:33;;4813:93;;;:::o;4912:107::-;4956:8;5006:5;5000:4;4996:16;4975:37;;4912:107;;;;:::o;5025:393::-;5094:6;5144:1;5132:10;5128:18;5167:97;5197:66;5186:9;5167:97;:::i;:::-;5285:39;5315:8;5304:9;5285:39;:::i;:::-;5273:51;;5357:4;5353:9;5346:5;5342:21;5333:30;;5406:4;5396:8;5392:19;5385:5;5382:30;5372:40;;5101:317;;5025:393;;;;;:::o;5424:77::-;5461:7;5490:5;5479:16;;5424:77;;;:::o;5507:60::-;5535:3;5556:5;5549:12;;5507:60;;;:::o;5573:142::-;5623:9;5656:53;5674:34;5683:24;5701:5;5683:24;:::i;:::-;5674:34;:::i;:::-;5656:53;:::i;:::-;5643:66;;5573:142;;;:::o;5721:75::-;5764:3;5785:5;5778:12;;5721:75;;;:::o;5802:269::-;5912:39;5943:7;5912:39;:::i;:::-;5973:91;6022:41;6046:16;6022:41;:::i;:::-;6014:6;6007:4;6001:11;5973:91;:::i;:::-;5967:4;5960:105;5878:193;5802:269;;;:::o;6077:73::-;6122:3;6077:73;:::o;6156:189::-;6233:32;;:::i;:::-;6274:65;6332:6;6324;6318:4;6274:65;:::i;:::-;6209:136;6156:189;;:::o;6351:186::-;6411:120;6428:3;6421:5;6418:14;6411:120;;;6482:39;6519:1;6512:5;6482:39;:::i;:::-;6455:1;6448:5;6444:13;6435:22;;6411:120;;;6351:186;;:::o;6543:543::-;6644:2;6639:3;6636:11;6633:446;;;6678:38;6710:5;6678:38;:::i;:::-;6762:29;6780:10;6762:29;:::i;:::-;6752:8;6748:44;6945:2;6933:10;6930:18;6927:49;;;6966:8;6951:23;;6927:49;6989:80;7045:22;7063:3;7045:22;:::i;:::-;7035:8;7031:37;7018:11;6989:80;:::i;:::-;6648:431;;6633:446;6543:543;;;:::o;7092:117::-;7146:8;7196:5;7190:4;7186:16;7165:37;;7092:117;;;;:::o;7215:169::-;7259:6;7292:51;7340:1;7336:6;7328:5;7325:1;7321:13;7292:51;:::i;:::-;7288:56;7373:4;7367;7363:15;7353:25;;7266:118;7215:169;;;;:::o;7389:295::-;7465:4;7611:29;7636:3;7630:4;7611:29;:::i;:::-;7603:37;;7673:3;7670:1;7666:11;7660:4;7657:21;7649:29;;7389:295;;;;:::o;7689:1395::-;7806:37;7839:3;7806:37;:::i;:::-;7908:18;7900:6;7897:30;7894:56;;;7930:18;;:::i;:::-;7894:56;7974:38;8006:4;8000:11;7974:38;:::i;:::-;8059:67;8119:6;8111;8105:4;8059:67;:::i;:::-;8153:1;8177:4;8164:17;;8209:2;8201:6;8198:14;8226:1;8221:618;;;;8883:1;8900:6;8897:77;;;8949:9;8944:3;8940:19;8934:26;8925:35;;8897:77;9000:67;9060:6;9053:5;9000:67;:::i;:::-;8994:4;8987:81;8856:222;8191:887;;8221:618;8273:4;8269:9;8261:6;8257:22;8307:37;8339:4;8307:37;:::i;:::-;8366:1;8380:208;8394:7;8391:1;8388:14;8380:208;;;8473:9;8468:3;8464:19;8458:26;8450:6;8443:42;8524:1;8516:6;8512:14;8502:24;;8571:2;8560:9;8556:18;8543:31;;8417:4;8414:1;8410:12;8405:17;;8380:208;;;8616:6;8607:7;8604:19;8601:179;;;8674:9;8669:3;8665:19;8659:26;8717:48;8759:4;8751:6;8747:17;8736:9;8717:48;:::i;:::-;8709:6;8702:64;8624:156;8601:179;8826:1;8822;8814:6;8810:14;8806:22;8800:4;8793:36;8228:611;;;8191:887;;7781:1303;;;7689:1395;;:::o;135:532:89:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f80fd5b50600436106100a7575f3560e01c806340c10f191161006f57806340c10f191461016557806370a082311461018157806395d89b41146101b15780639dc29fac146101cf578063a9059cbb146101eb578063dd62ed3e1461021b576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b361024b565b6040516100c09190610bea565b60405180910390f35b6100e360048036038101906100de9190610c9b565b6102db565b6040516100f09190610cf3565b60405180910390f35b6101016102fd565b60405161010e9190610d1b565b60405180910390f35b610131600480360381019061012c9190610d34565b610306565b60405161013e9190610cf3565b60405180910390f35b61014f610334565b60405161015c9190610d9f565b60405180910390f35b61017f600480360381019061017a9190610c9b565b610349565b005b61019b60048036038101906101969190610db8565b610357565b6040516101a89190610d1b565b60405180910390f35b6101b961039c565b6040516101c69190610bea565b60405180910390f35b6101e960048036038101906101e49190610c9b565b61042c565b005b61020560048036038101906102009190610c9b565b61043a565b6040516102129190610cf3565b60405180910390f35b61023560048036038101906102309190610de3565b61045c565b6040516102429190610d1b565b60405180910390f35b60606003805461025a90610e4e565b80601f016020809104026020016040519081016040528092919081815260200182805461028690610e4e565b80156102d15780601f106102a8576101008083540402835291602001916102d1565b820191905f5260205f20905b8154815290600101906020018083116102b457829003601f168201915b5050505050905090565b5f806102e56104de565b90506102f28185856104e5565b600191505092915050565b5f600254905090565b5f806103106104de565b905061031d8582856104f7565b61032885858561058a565b60019150509392505050565b5f60055f9054906101000a900460ff16905090565b610353828261067a565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546103ab90610e4e565b80601f01602080910402602001604051908101604052809291908181526020018280546103d790610e4e565b80156104225780601f106103f957610100808354040283529160200191610422565b820191905f5260205f20905b81548152906001019060200180831161040557829003601f168201915b5050505050905090565b61043682826106f9565b5050565b5f806104446104de565b905061045181858561058a565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6104f28383836001610778565b505050565b5f610502848461045c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156105845781811015610575578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161056c93929190610e8d565b60405180910390fd5b61058384848484035f610778565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105fa575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105f19190610ec2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361066a575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106619190610ec2565b60405180910390fd5b610675838383610947565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106ea575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106e19190610ec2565b60405180910390fd5b6106f55f8383610947565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610769575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107609190610ec2565b60405180910390fd5b610774825f83610947565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107e8575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107df9190610ec2565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610858575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161084f9190610ec2565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610941578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109389190610d1b565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610997578060025f82825461098b9190610f08565b92505081905550610a65565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610a20578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a1793929190610e8d565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aac578060025f8282540392505081905550610af6565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b539190610d1b565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610b97578082015181840152602081019050610b7c565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610bbc82610b60565b610bc68185610b6a565b9350610bd6818560208601610b7a565b610bdf81610ba2565b840191505092915050565b5f6020820190508181035f830152610c028184610bb2565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c3782610c0e565b9050919050565b610c4781610c2d565b8114610c51575f80fd5b50565b5f81359050610c6281610c3e565b92915050565b5f819050919050565b610c7a81610c68565b8114610c84575f80fd5b50565b5f81359050610c9581610c71565b92915050565b5f8060408385031215610cb157610cb0610c0a565b5b5f610cbe85828601610c54565b9250506020610ccf85828601610c87565b9150509250929050565b5f8115159050919050565b610ced81610cd9565b82525050565b5f602082019050610d065f830184610ce4565b92915050565b610d1581610c68565b82525050565b5f602082019050610d2e5f830184610d0c565b92915050565b5f805f60608486031215610d4b57610d4a610c0a565b5b5f610d5886828701610c54565b9350506020610d6986828701610c54565b9250506040610d7a86828701610c87565b9150509250925092565b5f60ff82169050919050565b610d9981610d84565b82525050565b5f602082019050610db25f830184610d90565b92915050565b5f60208284031215610dcd57610dcc610c0a565b5b5f610dda84828501610c54565b91505092915050565b5f8060408385031215610df957610df8610c0a565b5b5f610e0685828601610c54565b9250506020610e1785828601610c54565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e6557607f821691505b602082108103610e7857610e77610e21565b5b50919050565b610e8781610c2d565b82525050565b5f606082019050610ea05f830186610e7e565b610ead6020830185610d0c565b610eba6040830184610d0c565b949350505050565b5f602082019050610ed55f830184610e7e565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f1282610c68565b9150610f1d83610c68565b9250828201905080821115610f3557610f34610edb565b5b9291505056fea2646970667358221220e5cf0b6d74cc059af465663774f3b800c298685c74578de7ebd4b7e2e748b88964736f6c63430008180033",
    "sourceMap": "135:532:89:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3902:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2803:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4680:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;388:90:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;484:85;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2933:116:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;575:89:89;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3244:178:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3455:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3902:186::-;3975:4;3991:13;4007:12;:10;:12::i;:::-;3991:28;;4029:31;4038:5;4045:7;4054:5;4029:8;:31::i;:::-;4077:4;4070:11;;;3902:186;;;;:::o;2803:97::-;2855:7;2881:12;;2874:19;;2803:97;:::o;4680:244::-;4767:4;4783:15;4801:12;:10;:12::i;:::-;4783:30;;4823:37;4839:4;4845:7;4854:5;4823:15;:37::i;:::-;4870:26;4880:4;4886:2;4890:5;4870:9;:26::i;:::-;4913:4;4906:11;;;4680:244;;;;;:::o;388:90:89:-;438:5;462:9;;;;;;;;;;;455:16;;388:90;:::o;484:85::-;545:17;551:2;555:6;545:5;:17::i;:::-;484:85;;:::o;2933:116:30:-;2998:7;3024:9;:18;3034:7;3024:18;;;;;;;;;;;;;;;;3017:25;;2933:116;;;:::o;1962:93::-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;575:89:89:-;638:19;644:4;650:6;638:5;:19::i;:::-;575:89;;:::o;3244:178:30:-;3313:4;3329:13;3345:12;:10;:12::i;:::-;3329:28;;3367:27;3377:5;3384:2;3388:5;3367:9;:27::i;:::-;3411:4;3404:11;;;3244:178;;;;:::o;3455:140::-;3535:7;3561:11;:18;3573:5;3561:18;;;;;;;;;;;;;;;:27;3580:7;3561:27;;;;;;;;;;;;;;;;3554:34;;3455:140;;;;:::o;656:96:38:-;709:7;735:10;728:17;;656:96;:::o;8630:128:30:-;8714:37;8723:5;8730:7;8739:5;8746:4;8714:8;:37::i;:::-;8630:128;;;:::o;10319:476::-;10418:24;10445:25;10455:5;10462:7;10445:9;:25::i;:::-;10418:52;;10503:17;10484:16;:36;10480:309;;;10559:5;10540:16;:24;10536:130;;;10618:7;10627:16;10645:5;10591:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10536:130;10707:57;10716:5;10723:7;10751:5;10732:16;:24;10758:5;10707:8;:57::i;:::-;10480:309;10408:387;10319:476;;;:::o;5297:300::-;5396:1;5380:18;;:4;:18;;;5376:86;;5448:1;5421:30;;;;;;;;;;;:::i;:::-;;;;;;;;5376:86;5489:1;5475:16;;:2;:16;;;5471:86;;5543:1;5514:32;;;;;;;;;;;:::i;:::-;;;;;;;;5471:86;5566:24;5574:4;5580:2;5584:5;5566:7;:24::i;:::-;5297:300;;;:::o;7362:208::-;7451:1;7432:21;;:7;:21;;;7428:91;;7505:1;7476:32;;;;;;;;;;;:::i;:::-;;;;;;;;7428:91;7528:35;7544:1;7548:7;7557:5;7528:7;:35::i;:::-;7362:208;;:::o;7888:206::-;7977:1;7958:21;;:7;:21;;;7954:89;;8029:1;8002:30;;;;;;;;;;;:::i;:::-;;;;;;;;7954:89;8052:35;8060:7;8077:1;8081:5;8052:7;:35::i;:::-;7888:206;;:::o;9605:432::-;9734:1;9717:19;;:5;:19;;;9713:89;;9788:1;9759:32;;;;;;;;;;;:::i;:::-;;;;;;;;9713:89;9834:1;9815:21;;:7;:21;;;9811:90;;9887:1;9859:31;;;;;;;;;;;:::i;:::-;;;;;;;;9811:90;9940:5;9910:11;:18;9922:5;9910:18;;;;;;;;;;;;;;;:27;9929:7;9910:27;;;;;;;;;;;;;;;:35;;;;9959:9;9955:76;;;10005:7;9989:31;;9998:5;9989:31;;;10014:5;9989:31;;;;;;:::i;:::-;;;;;;;;9955:76;9605:432;;;;:::o;5912:1107::-;6017:1;6001:18;;:4;:18;;;5997:540;;6153:5;6137:12;;:21;;;;;;;:::i;:::-;;;;;;;;5997:540;;;6189:19;6211:9;:15;6221:4;6211:15;;;;;;;;;;;;;;;;6189:37;;6258:5;6244:11;:19;6240:115;;;6315:4;6321:11;6334:5;6290:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6240:115;6507:5;6493:11;:19;6475:9;:15;6485:4;6475:15;;;;;;;;;;;;;;;:37;;;;6175:362;5997:540;6565:1;6551:16;;:2;:16;;;6547:425;;6730:5;6714:12;;:21;;;;;;;;;;;6547:425;;;6942:5;6925:9;:13;6935:2;6925:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6547:425;7002:2;6987:25;;6996:4;6987:25;;;7006:5;6987:25;;;;;;:::i;:::-;;;;;;;;5912:1107;;;:::o;7:99:115:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:118::-;6267:24;6285:5;6267:24;:::i;:::-;6262:3;6255:37;6180:118;;:::o;6304:442::-;6453:4;6491:2;6480:9;6476:18;6468:26;;6504:71;6572:1;6561:9;6557:17;6548:6;6504:71;:::i;:::-;6585:72;6653:2;6642:9;6638:18;6629:6;6585:72;:::i;:::-;6667;6735:2;6724:9;6720:18;6711:6;6667:72;:::i;:::-;6304:442;;;;;;:::o;6752:222::-;6845:4;6883:2;6872:9;6868:18;6860:26;;6896:71;6964:1;6953:9;6949:17;6940:6;6896:71;:::i;:::-;6752:222;;;;:::o;6980:180::-;7028:77;7025:1;7018:88;7125:4;7122:1;7115:15;7149:4;7146:1;7139:15;7166:191;7206:3;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7302:1;7299;7295:9;7288:16;;7323:3;7320:1;7317:10;7314:36;;;7330:18;;:::i;:::-;7314:36;7166:191;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(address,uint256)": "9dc29fac",
    "decimals()": "313ce567",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"adds the decimals to be customizable\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@openzeppelin/foundry-upgrades/=node_modules/@openzeppelin/foundry-upgrades/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/MockERC20.sol\":{\"keccak256\":\"0xcf2b5de9b4d822297e22c359eef7e5b5a7bdeb5a321276c59221d852a83134a6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://678666cf0bf3b68470dd29251ca3a669193f04c3bbbabf86068f397b85c348ba\",\"dweb:/ipfs/QmTuJ7euQG8QshaMXLLemJN4ktXfJTB1qhgPmU73LNWRhb\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.24+commit.e11b9ed9" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "string", "name": "name_", "type": "string" },
            { "internalType": "string", "name": "symbol_", "type": "string" },
            { "internalType": "uint8", "name": "decimals_", "type": "uint8" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "spender", "type": "address" },
            { "internalType": "uint256", "name": "allowance", "type": "uint256" },
            { "internalType": "uint256", "name": "needed", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            { "internalType": "uint256", "name": "balance", "type": "uint256" },
            { "internalType": "uint256", "name": "needed", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [{ "internalType": "address", "name": "approver", "type": "address" }],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [{ "internalType": "address", "name": "receiver", "type": "address" }],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [{ "internalType": "address", "name": "spender", "type": "address" }],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "spender", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "value", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address", "indexed": true },
            { "internalType": "address", "name": "to", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "value", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "spender", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "spender", "type": "address" },
            { "internalType": "uint256", "name": "value", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "value", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "value", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": { "details": "Returns the value of tokens owned by `account`." },
          "constructor": { "details": "adds the decimals to be customizable" },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "name()": { "details": "Returns the name of the token." },
          "symbol()": { "details": "Returns the symbol of the token, usually a shorter version of the name." },
          "totalSupply()": { "details": "Returns the value of tokens in existence." },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          }
        },
        "version": 1
      },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@openzeppelin/foundry-upgrades/=node_modules/@openzeppelin/foundry-upgrades/src/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": { "enabled": false, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/MockERC20.sol": "MockERC20" },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e",
        "urls": [
          "bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23",
          "dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994",
        "urls": [
          "bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c",
          "dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
        "urls": [
          "bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
          "dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f",
        "urls": [
          "bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e",
          "dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "src/MockERC20.sol": {
        "keccak256": "0xcf2b5de9b4d822297e22c359eef7e5b5a7bdeb5a321276c59221d852a83134a6",
        "urls": [
          "bzz-raw://678666cf0bf3b68470dd29251ca3a669193f04c3bbbabf86068f397b85c348ba",
          "dweb:/ipfs/QmTuJ7euQG8QshaMXLLemJN4ktXfJTB1qhgPmU73LNWRhb"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4481,
        "contract": "src/MockERC20.sol:MockERC20",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4487,
        "contract": "src/MockERC20.sol:MockERC20",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 4489,
        "contract": "src/MockERC20.sol:MockERC20",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 4491,
        "contract": "src/MockERC20.sol:MockERC20",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 4493,
        "contract": "src/MockERC20.sol:MockERC20",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 61211,
        "contract": "src/MockERC20.sol:MockERC20",
        "label": "_decimals",
        "offset": 0,
        "slot": "5",
        "type": "t_uint8"
      }
    ],
    "types": {
      "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": { "encoding": "bytes", "label": "string", "numberOfBytes": "32" },
      "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" },
      "t_uint8": { "encoding": "inplace", "label": "uint8", "numberOfBytes": "1" }
    }
  },
  "ast": {
    "absolutePath": "src/MockERC20.sol",
    "id": 61267,
    "exportedSymbols": { "ERC20": [4973], "MockERC20": [61266] },
    "nodeType": "SourceUnit",
    "src": "39:628:89",
    "nodes": [
      {
        "id": 61205,
        "nodeType": "PragmaDirective",
        "src": "39:24:89",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".10"]
      },
      {
        "id": 61207,
        "nodeType": "ImportDirective",
        "src": "65:68:89",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61267,
        "sourceUnit": 4974,
        "symbolAliases": [
          {
            "foreign": {
              "id": 61206,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4973,
              "src": "73:5:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61266,
        "nodeType": "ContractDefinition",
        "src": "135:532:89",
        "nodes": [
          {
            "id": 61211,
            "nodeType": "VariableDeclaration",
            "src": "169:23:89",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_decimals",
            "nameLocation": "183:9:89",
            "scope": 61266,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" },
            "typeName": {
              "id": 61210,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "169:5:89",
              "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }
            },
            "visibility": "private"
          },
          {
            "id": 61230,
            "nodeType": "FunctionDefinition",
            "src": "249:133:89",
            "nodes": [],
            "body": {
              "id": 61229,
              "nodeType": "Block",
              "src": "344:38:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61225,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61211,
                      "src": "354:9:89",
                      "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61226,
                      "name": "decimals_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61218,
                      "src": "366:9:89",
                      "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }
                    },
                    "src": "354:21:89",
                    "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }
                  },
                  "id": 61228,
                  "nodeType": "ExpressionStatement",
                  "src": "354:21:89"
                }
              ]
            },
            "documentation": {
              "id": 61212,
              "nodeType": "StructuredDocumentation",
              "src": "199:45:89",
              "text": "@dev adds the decimals to be customizable"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 61221,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61214,
                    "src": "328:5:89",
                    "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                  },
                  {
                    "id": 61222,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61216,
                    "src": "335:7:89",
                    "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                  }
                ],
                "id": 61223,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 61220,
                  "name": "ERC20",
                  "nameLocations": ["322:5:89"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4973,
                  "src": "322:5:89"
                },
                "nodeType": "ModifierInvocation",
                "src": "322:21:89"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 61219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61214,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "275:5:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 61230,
                  "src": "261:19:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                  "typeName": {
                    "id": 61213,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:6:89",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61216,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "296:7:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 61230,
                  "src": "282:21:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                  "typeName": {
                    "id": 61215,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "282:6:89",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61218,
                  "mutability": "mutable",
                  "name": "decimals_",
                  "nameLocation": "311:9:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 61230,
                  "src": "305:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" },
                  "typeName": {
                    "id": 61217,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:5:89",
                    "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "260:61:89"
            },
            "returnParameters": { "id": 61224, "nodeType": "ParameterList", "parameters": [], "src": "344:0:89" },
            "scope": 61266,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61239,
            "nodeType": "FunctionDefinition",
            "src": "388:90:89",
            "nodes": [],
            "body": {
              "id": 61238,
              "nodeType": "Block",
              "src": "445:33:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 61236,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61211,
                    "src": "462:9:89",
                    "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }
                  },
                  "functionReturnParameters": 61235,
                  "id": 61237,
                  "nodeType": "Return",
                  "src": "455:16:89"
                }
              ]
            },
            "baseFunctions": [4537],
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "397:8:89",
            "overrides": { "id": 61232, "nodeType": "OverrideSpecifier", "overrides": [], "src": "420:8:89" },
            "parameters": { "id": 61231, "nodeType": "ParameterList", "parameters": [], "src": "405:2:89" },
            "returnParameters": {
              "id": 61235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61239,
                  "src": "438:5:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" },
                  "typeName": {
                    "id": 61233,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "438:5:89",
                    "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "437:7:89"
            },
            "scope": 61266,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61252,
            "nodeType": "FunctionDefinition",
            "src": "484:85:89",
            "nodes": [],
            "body": {
              "id": 61251,
              "nodeType": "Block",
              "src": "535:34:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61247,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61241,
                        "src": "551:2:89",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 61248,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61243,
                        "src": "555:6:89",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "id": 61246,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4813,
                      "src": "545:5:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 61249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "545:17:89",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 61250,
                  "nodeType": "ExpressionStatement",
                  "src": "545:17:89"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "493:4:89",
            "parameters": {
              "id": 61244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61241,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "506:2:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 61252,
                  "src": "498:10:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 61240,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61243,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "518:6:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 61252,
                  "src": "510:14:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 61242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:89",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "497:28:89"
            },
            "returnParameters": { "id": 61245, "nodeType": "ParameterList", "parameters": [], "src": "535:0:89" },
            "scope": 61266,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61265,
            "nodeType": "FunctionDefinition",
            "src": "575:89:89",
            "nodes": [],
            "body": {
              "id": 61264,
              "nodeType": "Block",
              "src": "628:36:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61260,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61254,
                        "src": "644:4:89",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 61261,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61256,
                        "src": "650:6:89",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "id": 61259,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4846,
                      "src": "638:5:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 61262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "638:19:89",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 61263,
                  "nodeType": "ExpressionStatement",
                  "src": "638:19:89"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "584:4:89",
            "parameters": {
              "id": 61257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61254,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "597:4:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 61265,
                  "src": "589:12:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 61253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61256,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "611:6:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 61265,
                  "src": "603:14:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 61255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:89",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "588:30:89"
            },
            "returnParameters": { "id": 61258, "nodeType": "ParameterList", "parameters": [], "src": "628:0:89" },
            "scope": 61266,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 61208,
              "name": "ERC20",
              "nameLocations": ["157:5:89"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4973,
              "src": "157:5:89"
            },
            "id": 61209,
            "nodeType": "InheritanceSpecifier",
            "src": "157:5:89"
          }
        ],
        "canonicalName": "MockERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [61266, 4973, 3655, 5077, 5051, 6877],
        "name": "MockERC20",
        "nameLocation": "144:9:89",
        "scope": 61267,
        "usedErrors": [3625, 3630, 3635, 3644, 3649, 3654],
        "usedEvents": [4985, 4994]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 89
}
