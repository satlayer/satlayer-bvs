{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "router_", "type": "address", "internalType": "contract SLAYRouterV2" },
        { "name": "registry_", "type": "address", "internalType": "contract SLAYRegistryV2" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "DOMAIN_SEPARATOR",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "REGISTRY",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract SLAYRegistryV2" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ROUTER",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract SLAYRouterV2" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "allowance",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "spender", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        { "name": "spender", "type": "address", "internalType": "address" },
        { "name": "value", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "asset",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [{ "name": "account", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "claimableRedeemRequest",
      "inputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "controller", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "claimableShares", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "convertToAssets",
      "inputs": [{ "name": "shares", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "convertToShares",
      "inputs": [{ "name": "assets", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "decimals",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint8", "internalType": "uint8" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "delegated",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deposit",
      "inputs": [
        { "name": "assets", "type": "uint256", "internalType": "uint256" },
        { "name": "receiver", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "eip712Domain",
      "inputs": [],
      "outputs": [
        { "name": "fields", "type": "bytes1", "internalType": "bytes1" },
        { "name": "name", "type": "string", "internalType": "string" },
        { "name": "version", "type": "string", "internalType": "string" },
        { "name": "chainId", "type": "uint256", "internalType": "uint256" },
        { "name": "verifyingContract", "type": "address", "internalType": "address" },
        { "name": "salt", "type": "bytes32", "internalType": "bytes32" },
        { "name": "extensions", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getWithdrawalDelay",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        { "name": "asset_", "type": "address", "internalType": "contract IERC20" },
        { "name": "delegated_", "type": "address", "internalType": "address" },
        { "name": "name_", "type": "string", "internalType": "string" },
        { "name": "symbol_", "type": "string", "internalType": "string" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isOperator",
      "inputs": [
        { "name": "controller", "type": "address", "internalType": "address" },
        { "name": "operator", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "status", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lockSlashing",
      "inputs": [{ "name": "amount", "type": "uint256", "internalType": "uint256" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "maxDeposit",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxMint",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxRedeem",
      "inputs": [{ "name": "controller", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "maxWithdraw",
      "inputs": [{ "name": "controller", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "mint",
      "inputs": [
        { "name": "shares", "type": "uint256", "internalType": "uint256" },
        { "name": "receiver", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nonces",
      "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pendingRedeemRequest",
      "inputs": [
        { "name": "", "type": "uint256", "internalType": "uint256" },
        { "name": "controller", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "pendingShares", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "permit",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "spender", "type": "address", "internalType": "address" },
        { "name": "value", "type": "uint256", "internalType": "uint256" },
        { "name": "deadline", "type": "uint256", "internalType": "uint256" },
        { "name": "v", "type": "uint8", "internalType": "uint8" },
        { "name": "r", "type": "bytes32", "internalType": "bytes32" },
        { "name": "s", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "previewDeposit",
      "inputs": [{ "name": "assets", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "previewMint",
      "inputs": [{ "name": "shares", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "previewRedeem",
      "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "previewWithdraw",
      "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "redeem",
      "inputs": [
        { "name": "shares", "type": "uint256", "internalType": "uint256" },
        { "name": "receiver", "type": "address", "internalType": "address" },
        { "name": "controller", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "assets", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "requestRedeem",
      "inputs": [
        { "name": "shares", "type": "uint256", "internalType": "uint256" },
        { "name": "controller", "type": "address", "internalType": "address" },
        { "name": "owner", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "requestId", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setOperator",
      "inputs": [
        { "name": "operator", "type": "address", "internalType": "address" },
        { "name": "approved", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [{ "name": "success", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [{ "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalActiveStaked",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalAssets",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "totalSupply",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transfer",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "value", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        { "name": "from", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "value", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "withdraw",
      "inputs": [
        { "name": "assets", "type": "uint256", "internalType": "uint256" },
        { "name": "receiver", "type": "address", "internalType": "address" },
        { "name": "controller", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "shares", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "spender", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Deposit",
      "inputs": [
        { "name": "sender", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "assets", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "shares", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    { "type": "event", "name": "EIP712DomainChanged", "inputs": [], "anonymous": false },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [{ "name": "version", "type": "uint64", "indexed": false, "internalType": "uint64" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OperatorSet",
      "inputs": [
        { "name": "controller", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "operator", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RedeemRequest",
      "inputs": [
        { "name": "controller", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "requestId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        { "name": "sender", "type": "address", "indexed": false, "internalType": "address" },
        { "name": "assets", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SlashingLocked",
      "inputs": [{ "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        { "name": "from", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Withdraw",
      "inputs": [
        { "name": "sender", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "receiver", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "owner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "assets", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "shares", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "ECDSAInvalidSignature", "inputs": [] },
    {
      "type": "error",
      "name": "ECDSAInvalidSignatureLength",
      "inputs": [{ "name": "length", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "ECDSAInvalidSignatureS",
      "inputs": [{ "name": "s", "type": "bytes32", "internalType": "bytes32" }]
    },
    {
      "type": "error",
      "name": "ERC20InsufficientAllowance",
      "inputs": [
        { "name": "spender", "type": "address", "internalType": "address" },
        { "name": "allowance", "type": "uint256", "internalType": "uint256" },
        { "name": "needed", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC20InsufficientBalance",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        { "name": "balance", "type": "uint256", "internalType": "uint256" },
        { "name": "needed", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC20InvalidApprover",
      "inputs": [{ "name": "approver", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC20InvalidReceiver",
      "inputs": [{ "name": "receiver", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC20InvalidSender",
      "inputs": [{ "name": "sender", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC20InvalidSpender",
      "inputs": [{ "name": "spender", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "ERC2612ExpiredSignature",
      "inputs": [{ "name": "deadline", "type": "uint256", "internalType": "uint256" }]
    },
    {
      "type": "error",
      "name": "ERC2612InvalidSigner",
      "inputs": [
        { "name": "signer", "type": "address", "internalType": "address" },
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC4626ExceededMaxDeposit",
      "inputs": [
        { "name": "receiver", "type": "address", "internalType": "address" },
        { "name": "assets", "type": "uint256", "internalType": "uint256" },
        { "name": "max", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC4626ExceededMaxMint",
      "inputs": [
        { "name": "receiver", "type": "address", "internalType": "address" },
        { "name": "shares", "type": "uint256", "internalType": "uint256" },
        { "name": "max", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC4626ExceededMaxRedeem",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "shares", "type": "uint256", "internalType": "uint256" },
        { "name": "max", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC4626ExceededMaxWithdraw",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "assets", "type": "uint256", "internalType": "uint256" },
        { "name": "max", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "EnforcedPause", "inputs": [] },
    { "type": "error", "name": "ExceededMaxRedeemable", "inputs": [] },
    { "type": "error", "name": "ExpectedWhitelisted", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidAccountNonce",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "currentNonce", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "InvalidInitialization", "inputs": [] },
    { "type": "error", "name": "MustClaimAll", "inputs": [] },
    { "type": "error", "name": "NotControllerOrOperator", "inputs": [] },
    { "type": "error", "name": "NotInitializing", "inputs": [] },
    { "type": "error", "name": "NotRouter", "inputs": [] },
    { "type": "error", "name": "PreviewNotSupported", "inputs": [] },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [{ "name": "token", "type": "address", "internalType": "address" }]
    },
    { "type": "error", "name": "WithdrawRequestNotFound", "inputs": [] },
    { "type": "error", "name": "WithdrawalDelayHasNotPassed", "inputs": [] },
    { "type": "error", "name": "ZeroAmount", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x60c060405234801562000010575f80fd5b5060405162002d8c38038062002d8c833981016040819052620000339162000121565b6001600160a01b03808316608052811660a0526200005062000058565b50506200015e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000a95760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001095780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6001600160a01b038116811462000109575f80fd5b5f806040838503121562000133575f80fd5b825162000140816200010c565b602084015190925062000153816200010c565b809150509250929050565b60805160a051612be2620001aa5f395f81816102b9015281816107030152610c8901525f818161039c01528181611386015281816113d9015281816116a4015261214b0152612be25ff3fe608060405234801561000f575f80fd5b5060043610610255575f3560e01c80637ecebe0011610140578063c6e6f592116100bf578063dd62ed3e11610084578063dd62ed3e1461055a578063dff81f7d1461056d578063e49d123214610580578063eaed1d0714610588578063ef8b30f7146104fe578063f5a23d8d1461059b575f80fd5b8063c6e6f592146104fe578063ce96cb7714610511578063cf8db86214610524578063d505accf14610534578063d905777e14610547575f80fd5b8063b3d7f6b911610105578063b3d7f6b91461048a578063b460af941461049d578063b6363cf2146104b0578063ba087652146104eb578063c63d75b6146103ce575f80fd5b80637ecebe001461042e57806384b0196e1461044157806394bf804d1461045c57806395d89b411461046f578063a9059cbb14610477575f80fd5b806323b872dd116101d7578063402d267d1161019c578063402d267d146103ce5780634cdad5061461032e578063558a7297146103e25780636e553f65146103f557806370a08231146104085780637d41c86e1461041b575f80fd5b806323b872dd1461036a578063313ce5671461037d57806332fe7b26146103975780633644e515146103be57806338d52e0f146103c6575f80fd5b806307a2d13a1161021d57806307a2d13a14610308578063095ea7b31461031b5780630a28a4771461032e57806318160ddd146103415780632016a0d214610355575f80fd5b806301e1d1141461025957806301ffc9a714610274578063031609401461029757806306433b1b146102b457806306fdde03146102f3575b5f80fd5b6102616105ae565b6040519081526020015b60405180910390f35b6102876102823660046123db565b610624565b604051901515815260200161026b565b61029f6106e1565b60405163ffffffff909116815260200161026b565b6102db7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161026b565b6102fb61076e565b60405161026b919061244f565b610261610316366004612461565b610813565b61028761032936600461248c565b61081e565b61026161033c366004612461565b610835565b5f80516020612b6d83398151915254610261565b610368610363366004612553565b61084f565b005b6102876103783660046125d7565b6109d3565b6103856109f8565b60405160ff909116815260200161026b565b6102db7f000000000000000000000000000000000000000000000000000000000000000081565b610261610a01565b6102db610a0a565b6102616103dc366004612615565b505f1990565b6102876103f036600461263d565b610a38565b610261610403366004612674565b610b06565b610261610416366004612615565b610b29565b610261610429366004612697565b610b59565b61026161043c366004612615565b610d6f565b610449610d79565b60405161026b97969594939291906126d6565b61026161046a366004612674565b610e22565b6102fb610e3d565b61028761048536600461248c565b610e7b565b610261610498366004612461565b610e88565b6102616104ab366004612697565b610e94565b6102876104be36600461276d565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b6102616104f9366004612697565b610ff1565b61026161050c366004612461565b61114a565b61026161051f366004612615565b611155565b5f546001600160a01b03166102db565b610368610542366004612799565b61119f565b610261610555366004612615565b6112f4565b61026161056836600461276d565b611332565b61036861057b366004612461565b61137b565b610261611434565b610261610596366004612674565b611457565b6102616105a9366004612674565b611498565b5f6105b7610a0a565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156105fb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061061f919061280a565b905090565b5f6001600160e01b031982166336372b0760e01b148061065457506001600160e01b0319821663a219a02560e01b145b8061066f57506001600160e01b0319821663043eff2d60e51b145b8061068a57506001600160e01b03198216631883ba3960e21b145b806106a557506001600160e01b0319821663e3bc4e6560e01b145b806106c057506001600160e01b0319821663f7febc6d60e01b145b806106db57506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f805460405163b1e5082960e01b81526001600160a01b0391821660048201527f00000000000000000000000000000000000000000000000000000000000000009091169063b1e5082990602401602060405180830381865afa15801561074a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061061f9190612821565b60605f5f80516020612b4d8339815191525b905080600301805461079190612844565b80601f01602080910402602001604051908101604052809291908181526020018280546107bd90612844565b80156108085780601f106107df57610100808354040283529160200191610808565b820191905f5260205f20905b8154815290600101906020018083116107eb57829003601f168201915b505050505091505090565b5f6106db825f6114c3565b5f3361082b818585611507565b5060019392505050565b5f60405163468ed21160e11b815260040160405180910390fd5b5f610858611519565b805490915060ff600160401b820416159067ffffffffffffffff165f8115801561087f5750825b90505f8267ffffffffffffffff16600114801561089b5750303b155b9050811580156108a9575080155b156108c75760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156108f157845460ff60401b1916600160401b1785555b6001600160a01b03881661094c5760405162461bcd60e51b815260206004820181905260248201527f44656c656761746564206973206e6f7420612076616c6964206163636f756e7460448201526064015b60405180910390fd5b6109568787611541565b61095f89611557565b6109688761156b565b5f80546001600160a01b0319166001600160a01b038a1617905583156109c857845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b5f336109e0858285611596565b6109eb8585856115fa565b60019150505b9392505050565b5f61061f611657565b5f61061f611699565b7f0773e532dfede91f04b12a73d3d2acd361424f41f76b4fb79f090161e36b4e00546001600160a01b031690565b5f610a416116a2565b6001600160a01b038316610a975760405162461bcd60e51b815260206004820152601f60248201527f4f70657261746f72206973206e6f7420612076616c6964206163636f756e74006044820152606401610943565b335f8181526001602090815260408083206001600160a01b03881680855290835292819020805460ff19168715159081179091558151908152905184927fceb576d9f15e4e200fdb5096d64d5dfd667e16def20c1eefd14256d8e3faa267928290030190a35060019392505050565b5f5f195f610b138561114a565b9050610b2133858784611742565b949350505050565b5f805f80516020612b4d8339815191525b6001600160a01b039093165f9081526020939093525050604090205490565b5f33848203610b7b57604051631f2a200560e01b815260040160405180910390fd5b806001600160a01b0316836001600160a01b031614158015610bc257506001600160a01b038084165f9081526001602090815260408083209385168352929052205460ff16155b15610bd257610bd2838287611596565b806001600160a01b0316846001600160a01b031614158015610c1957506001600160a01b038085165f9081526001602090815260408083209385168352929052205460ff16155b15610c3757604051635c645bcf60e11b815260040160405180910390fd5b6001600160a01b0384165f908152600260205260408120805490918791839190610c62908490612890565b90915550505f805460405163b1e5082960e01b81526001600160a01b0391821660048201527f00000000000000000000000000000000000000000000000000000000000000009091169063b1e5082990602401602060405180830381865afa158015610cd0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cf49190612821565b9050610d0663ffffffff821642612890565b6001830155610d168530896115fa565b604080516001600160a01b038581168252602082018a90525f9281891692918a16917f1fdc681a13d8c5da54e301c7ce6542dcde4581e4725043fdab2db12ddc574506910160405180910390a4505f9695505050505050565b5f6106db826117bb565b5f60608082808083815f80516020612b8d8339815191528054909150158015610da457506001810154155b610de85760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606401610943565b610df06117e3565b610df8611821565b604080515f80825260208201909252600f60f81b9c939b5091995046985030975095509350915050565b5f5f195f610e2f85610e88565b9050610b2133858388611742565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f80516020612b4d8339815191529161079190612844565b5f3361082b8185856115fa565b5f6106db8260016114c3565b5f81336001600160a01b0382168114801590610ed557506001600160a01b038083165f9081526001602090815260408083209385168352929052205460ff16155b15610ef357604051635c645bcf60e11b815260040160405180910390fd5b855f03610f1357604051631f2a200560e01b815260040160405180910390fd5b6001600160a01b0384165f908152600260209081526040808320815180830190925280548252600101549181018290529103610f6257604051632bb8b38560e11b815260040160405180910390fd5b4281602001511115610f87576040516318c16a9360e31b815260040160405180910390fd5b805193505f610f9585610813565b905080881015610fb857604051631de8e6e360e31b815260040160405180910390fd5b80881115610fd957604051632bb3283960e11b815260040160405180910390fd5b610fe63388888489611837565b505050509392505050565b5f81336001600160a01b038216811480159061103257506001600160a01b038083165f9081526001602090815260408083209385168352929052205460ff16155b1561105057604051635c645bcf60e11b815260040160405180910390fd5b855f0361107057604051631f2a200560e01b815260040160405180910390fd5b6001600160a01b0384165f9081526002602090815260408083208151808301909252805482526001015491810182905291036110bf57604051632bb8b38560e11b815260040160405180910390fd5b42816020015111156110e4576040516318c16a9360e31b815260040160405180910390fd5b805187101561110657604051631de8e6e360e31b815260040160405180910390fd5b805187111561112857604051632bb3283960e11b815260040160405180910390fd5b61113187610813565b9350611140338787878b611837565b5050509392505050565b5f6106db825f6118d8565b6001600160a01b0381165f908152600260209081526040808320815180830190925280548252600101549181018290529042106111975780516109f190610813565b505f92915050565b834211156111c35760405163313c898160e11b815260048101859052602401610943565b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861122d8c6001600160a01b03165f9081527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090505f61128782611913565b90505f6112968287878761193f565b9050896001600160a01b0316816001600160a01b0316146112dd576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610943565b6112e88a8a8a611507565b50505050505050505050565b6001600160a01b0381165f90815260026020908152604080832081518083019092528054825260010154918101829052904210611197575192915050565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b6113836116a2565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146113cc57604051639165520160e01b815260040160405180910390fd5b6113fe6113d7610a0a565b7f00000000000000000000000000000000000000000000000000000000000000008361196b565b6040518181527f4126d2da817d1aa12a3c086bf2fa8957ff31629479134de6ca77c014162c77329060200160405180910390a150565b5f61143e30610b29565b5f80516020612b6d8339815191525461061f91906128a3565b6001600160a01b0381165f908152600260205260408120600181015442108015906114825750805415155b1561148f575490506106db565b505f9392505050565b6001600160a01b0381165f908152600260205260408120600181015442101561148f575490506106db565b5f6109f16114cf6105ae565b6114da906001612890565b6114e55f600a612996565b5f80516020612b6d833981519152546114fe9190612890565b859190856119ca565b6115148383836001611a15565b505050565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006106db565b611549611af9565b6115538282611b1e565b5050565b61155f611af9565b61156881611b6e565b50565b611573611af9565b61156881604051806040016040528060018152602001603160f81b815250611bf1565b5f6115a18484611332565b90505f198110156115f457818110156115e657604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610943565b6115f484848484035f611a15565b50505050565b6001600160a01b03831661162357604051634b637e8f60e11b81525f6004820152602401610943565b6001600160a01b03821661164c5760405163ec442f0560e01b81525f6004820152602401610943565b611514838383611c50565b5f807f0773e532dfede91f04b12a73d3d2acd361424f41f76b4fb79f090161e36b4e0090505f81546116939190600160a01b900460ff166129a4565b91505090565b5f61061f611c6b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116fe573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061172291906129bd565b156117405760405163d93c066560e01b815260040160405180910390fd5b565b61175561174d610a0a565b853085611cde565b61175f8382611d17565b826001600160a01b0316846001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d784846040516117ad929190918252602082015260400190565b60405180910390a350505050565b5f807f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00610b3a565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10280546060915f80516020612b8d8339815191529161079190612844565b60605f5f80516020612b8d833981519152610780565b6001600160a01b0383165f9081526002602052604081208181556001015561185f3082611d4b565b61187161186a610a0a565b858461196b565b826001600160a01b0316846001600160a01b0316866001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db85856040516118c9929190918252602082015260400190565b60405180910390a45050505050565b5f6109f16118e782600a612996565b5f80516020612b6d833981519152546119009190612890565b6119086105ae565b6114fe906001612890565b5f6106db61191f611699565b8360405161190160f01b8152600281019290925260228201526042902090565b5f805f8061194f88888888611d7f565b92509250925061195f8282611e47565b50909695505050505050565b6040516001600160a01b0383811660248301526044820183905261151491859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611eff565b5f6119f76119d783611f6b565b80156119f257505f84806119ed576119ed6129d8565b868809115b151590565b611a02868686611f97565b611a0c9190612890565b95945050505050565b5f80516020612b4d8339815191526001600160a01b038516611a4c5760405163e602df0560e01b81525f6004820152602401610943565b6001600160a01b038416611a7557604051634a1406b160e11b81525f6004820152602401610943565b6001600160a01b038086165f90815260018301602090815260408083209388168352929052208390558115611af257836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611ae991815260200190565b60405180910390a35b5050505050565b611b01612047565b61174057604051631afcd79f60e31b815260040160405180910390fd5b611b26611af9565b5f80516020612b4d8339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03611b5f8482612a30565b50600481016115f48382612a30565b611b76611af9565b7f0773e532dfede91f04b12a73d3d2acd361424f41f76b4fb79f090161e36b4e005f80611ba284612060565b9150915081611bb2576012611bb4565b805b83546001600160a81b031916600160a01b60ff92909216919091026001600160a01b031916176001600160a01b0394909416939093179091555050565b611bf9611af9565b5f80516020612b8d8339815191527fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102611c328482612a30565b5060038101611c418382612a30565b505f8082556001909101555050565b611c586116a2565b611c60612136565b6115148383836121d9565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611c95612304565b611c9d61236c565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6040516001600160a01b0384811660248301528381166044830152606482018390526115f49186918216906323b872dd90608401611998565b6001600160a01b038216611d405760405163ec442f0560e01b81525f6004820152602401610943565b6115535f8383611c50565b6001600160a01b038216611d7457604051634b637e8f60e11b81525f6004820152602401610943565b611553825f83611c50565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611db857505f91506003905082611e3d565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611e09573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116611e3457505f925060019150829050611e3d565b92505f91508190505b9450945094915050565b5f826003811115611e5a57611e5a612af0565b03611e63575050565b6001826003811115611e7757611e77612af0565b03611e955760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611ea957611ea9612af0565b03611eca5760405163fce698f760e01b815260048101829052602401610943565b6003826003811115611ede57611ede612af0565b03611553576040516335e2f38360e21b815260048101829052602401610943565b5f8060205f8451602086015f885af180611f1e576040513d5f823e3d81fd5b50505f513d91508115611f35578060011415611f42565b6001600160a01b0384163b155b156115f457604051635274afe760e01b81526001600160a01b0385166004820152602401610943565b5f6002826003811115611f8057611f80612af0565b611f8a9190612b04565b60ff166001149050919050565b5f805f611fa486866123ae565b91509150815f03611fc857838181611fbe57611fbe6129d8565b04925050506109f1565b818411611fdf57611fdf60038515026011186123ca565b5f848688095f868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010185841190960395909502919093039390930492909217029150509392505050565b5f612050611519565b54600160401b900460ff16919050565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290515f918291829182916001600160a01b038716916120a691612b31565b5f60405180830381855afa9150503d805f81146120de576040519150601f19603f3d011682016040523d82523d5f602084013e6120e3565b606091505b50915091508180156120f757506020815110155b1561212a575f81806020019051810190612111919061280a565b905060ff8111612128576001969095509350505050565b505b505f9485945092505050565b60405163016406e960e71b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b203748090602401602060405180830381865afa158015612198573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121bc91906129bd565b6117405760405163c987100f60e01b815260040160405180910390fd5b5f80516020612b4d8339815191526001600160a01b0384166122135781816002015f8282546122089190612890565b909155506122839050565b6001600160a01b0384165f90815260208290526040902054828110156122655760405163391434e360e21b81526001600160a01b03861660048201526024810182905260448101849052606401610943565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b0383166122a15760028101805483900390556122bf565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117ad91815260200190565b5f5f80516020612b8d8339815191528161231c6117e3565b80519091501561233457805160209091012092915050565b81548015612343579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b5f5f80516020612b8d83398151915281612384611821565b80519091501561239c57805160209091012092915050565b60018201548015612343579392505050565b5f805f1983850993909202808410938190039390930393915050565b634e487b715f52806020526024601cfd5b5f602082840312156123eb575f80fd5b81356001600160e01b0319811681146109f1575f80fd5b5f5b8381101561241c578181015183820152602001612404565b50505f910152565b5f815180845261243b816020860160208601612402565b601f01601f19169290920160200192915050565b602081525f6109f16020830184612424565b5f60208284031215612471575f80fd5b5035919050565b6001600160a01b0381168114611568575f80fd5b5f806040838503121561249d575f80fd5b82356124a881612478565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126124d9575f80fd5b813567ffffffffffffffff808211156124f4576124f46124b6565b604051601f8301601f19908116603f0116810190828211818310171561251c5761251c6124b6565b81604052838152866020858801011115612534575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f8060808587031215612566575f80fd5b843561257181612478565b9350602085013561258181612478565b9250604085013567ffffffffffffffff8082111561259d575f80fd5b6125a9888389016124ca565b935060608701359150808211156125be575f80fd5b506125cb878288016124ca565b91505092959194509250565b5f805f606084860312156125e9575f80fd5b83356125f481612478565b9250602084013561260481612478565b929592945050506040919091013590565b5f60208284031215612625575f80fd5b81356109f181612478565b8015158114611568575f80fd5b5f806040838503121561264e575f80fd5b823561265981612478565b9150602083013561266981612630565b809150509250929050565b5f8060408385031215612685575f80fd5b82359150602083013561266981612478565b5f805f606084860312156126a9575f80fd5b8335925060208401356126bb81612478565b915060408401356126cb81612478565b809150509250925092565b60ff60f81b881681525f602060e060208401526126f660e084018a612424565b8381036040850152612708818a612424565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825260208088019350909101905f5b8181101561275b5783518352928401929184019160010161273f565b50909c9b505050505050505050505050565b5f806040838503121561277e575f80fd5b823561278981612478565b9150602083013561266981612478565b5f805f805f805f60e0888a0312156127af575f80fd5b87356127ba81612478565b965060208801356127ca81612478565b95506040880135945060608801359350608088013560ff811681146127ed575f80fd5b9699959850939692959460a0840135945060c09093013592915050565b5f6020828403121561281a575f80fd5b5051919050565b5f60208284031215612831575f80fd5b815163ffffffff811681146109f1575f80fd5b600181811c9082168061285857607f821691505b60208210810361287657634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156106db576106db61287c565b818103818111156106db576106db61287c565b600181815b808511156128f057815f19048211156128d6576128d661287c565b808516156128e357918102915b93841c93908002906128bb565b509250929050565b5f82612906575060016106db565b8161291257505f6106db565b816001811461292857600281146129325761294e565b60019150506106db565b60ff8411156129435761294361287c565b50506001821b6106db565b5060208310610133831016604e8410600b8410161715612971575081810a6106db565b61297b83836128b6565b805f190482111561298e5761298e61287c565b029392505050565b5f6109f160ff8416836128f8565b60ff81811683821601908111156106db576106db61287c565b5f602082840312156129cd575f80fd5b81516109f181612630565b634e487b7160e01b5f52601260045260245ffd5b601f82111561151457805f5260205f20601f840160051c81016020851015612a115750805b601f840160051c820191505b81811015611af2575f8155600101612a1d565b815167ffffffffffffffff811115612a4a57612a4a6124b6565b612a5e81612a588454612844565b846129ec565b602080601f831160018114612a91575f8415612a7a5750858301515b5f19600386901b1c1916600185901b178555612ae8565b5f85815260208120601f198616915b82811015612abf57888601518255948401946001909101908401612aa0565b5085821015612adc57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52602160045260245ffd5b5f60ff831680612b2257634e487b7160e01b5f52601260045260245ffd5b8060ff84160691505092915050565b5f8251612b42818460208701612402565b919091019291505056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100a26469706673582212203444a917955f95a1b79da153a7fa4a1d6c9ecb65bdd3fa737a5951d1b4e030bd64736f6c63430008180033",
    "sourceMap": "2519:16816:79:-:0;;;5623:155;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5693:16:79;;;;;5719:20;;;;5749:22;:20;:22::i;:::-;5623:155;;2519:16816;;7709:422:5;3147:66;7898:15;;;;;;;7894:76;;;7936:23;;-1:-1:-1;;;7936:23:5;;;;;;;;;;;7894:76;7983:14;;-1:-1:-1;;;;;7983:14:5;;;:34;7979:146;;8033:33;;-1:-1:-1;;;;;;8033:33:5;-1:-1:-1;;;;;8033:33:5;;;;;8085:29;;772:50:125;;;8085:29:5;;760:2:125;745:18;8085:29:5;;;;;;;7979:146;7758:373;7709:422::o;14:145:125:-;-1:-1:-1;;;;;103:31:125;;93:42;;83:70;;149:1;146;139:12;164:459;289:6;297;350:2;338:9;329:7;325:23;321:32;318:52;;;366:1;363;356:12;318:52;398:9;392:16;417:45;456:5;417:45;:::i;:::-;531:2;516:18;;510:25;481:5;;-1:-1:-1;544:47:125;510:25;544:47;:::i;:::-;610:7;600:17;;;164:459;;;;;:::o;628:200::-;2519:16816:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "2519:16816:79:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7061:125:9;;;:::i;:::-;;;160:25:125;;;148:2;133:18;7061:125:9;;;;;;;;8592:498:79;;;;;;:::i;:::-;;:::i;:::-;;;652:14:125;;645:22;627:41;;615:2;600:18;8592:498:79;487:187:125;19209:124:79;;;:::i;:::-;;;853:10:125;841:23;;;823:42;;811:2;796:18;19209:124:79;679:192:125;3548:40:79;;;;;;;;-1:-1:-1;;;;;1064:32:125;;;1046:51;;1034:2;1019:18;3548:40:79;876:227:125;2697:144:7;;;:::i;:::-;;;;;;;:::i;7404:148:9:-;;;;;;:::i;:::-;;:::i;5114:186:7:-;;;;;;:::i;:::-;;:::i;18195:156:79:-;;;;;;:::i;:::-;;:::i;3850:152:7:-;-1:-1:-1;;;;;;;;;;;3981:14:7;3850:152;;6322:363:79;;;;;;:::i;:::-;;:::i;:::-;;5892:244:7;;;;;;:::i;:::-;;:::i;6859:164:79:-;;;:::i;:::-;;;4834:4:125;4822:17;;;4804:36;;4792:2;4777:18;6859:164:79;4662:184:125;3283:36:79;;;;;3040:112:8;;;:::i;6873:153:9:-;;;:::i;7587:108::-;;;;;;:::i;:::-;-1:-1:-1;;;7671:17:9;7587:108;12442:357:79;;;;;;:::i;:::-;;:::i;8928:392:9:-;;;;;;:::i;:::-;;:::i;4035:171:7:-;;;;;;:::i;:::-;;:::i;9692:1406:79:-;;;;;;:::i;:::-;;:::i;2794:154:8:-;;;;;;:::i;:::-;;:::i;5043:903:14:-;;;:::i;:::-;;;;;;;;;;;;;:::i;9355:380:9:-;;;;;;:::i;:::-;;:::i;2954:148:7:-;;;:::i;4401:178::-;;;;;;:::i;:::-;;:::i;8387:143:9:-;;;;;;:::i;:::-;;:::i;13749:1075:79:-;;;;;;:::i;:::-;;:::i;13056:160::-;;;;;;:::i;:::-;-1:-1:-1;;;;;13176:23:79;;;13146:11;13176:23;;;:11;:23;;;;;;;;:33;;;;;;;;;;;;;;;13056:160;15168:1084;;;;;;:::i;:::-;;:::i;7221:148:9:-;;;;;;:::i;:::-;;:::i;17118:380:79:-;;;;;;:::i;:::-;;:::i;6724:94::-;6775:7;6801:10;-1:-1:-1;;;;;6801:10:79;6724:94;;2083:672:8;;;;;;:::i;:::-;;:::i;17533:361:79:-;;;;;;:::i;:::-;;:::i;4612:195:7:-;;;;;;:::i;:::-;;:::i;18845:325:79:-;;;;;;:::i;:::-;;:::i;8208:134::-;;;:::i;11493:376::-;;;;;;:::i;:::-;;:::i;11139:313::-;;;;;;:::i;:::-;;:::i;7061:125:9:-;7113:7;7146;:5;:7::i;:::-;7139:40;;-1:-1:-1;;;7139:40:9;;7173:4;7139:40;;;1046:51:125;-1:-1:-1;;;;;7139:25:9;;;;;;;1019:18:125;;7139:40:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7132:47;;7061:125;:::o;8592:498:79:-;8696:4;-1:-1:-1;;;;;;8719:39:79;;-1:-1:-1;;;8719:39:79;;:90;;-1:-1:-1;;;;;;;8762:47:79;;-1:-1:-1;;;8762:47:79;8719:90;:147;;;-1:-1:-1;;;;;;;8825:41:79;;-1:-1:-1;;;8825:41:79;8719:147;:198;;;-1:-1:-1;;;;;;;8870:47:79;;-1:-1:-1;;;8870:47:79;8719:198;:263;;;-1:-1:-1;;;;;;;8933:49:79;;-1:-1:-1;;;8933:49:79;8719:263;:312;;;-1:-1:-1;;;;;;;8986:45:79;;-1:-1:-1;;;8986:45:79;8719:312;:364;;;-1:-1:-1;;;;;;;;;;1101:40:15;;;9047:36:79;8712:371;8592:498;-1:-1:-1;;8592:498:79:o;19209:124::-;19262:6;19315:10;;19287:39;;-1:-1:-1;;;19287:39:79;;-1:-1:-1;;;;;19315:10:79;;;19287:39;;;1046:51:125;19287:8:79;:27;;;;;;1019:18:125;;19287:39:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2697:144:7:-;2742:13;2767:22;-1:-1:-1;;;;;;;;;;;2792:18:7;2767:43;;2827:1;:7;;2820:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144;:::o;7404:148:9:-;7474:7;7500:45;7517:6;7525:19;7500:16;:45::i;5114:186:7:-;5187:4;966:10:10;5241:31:7;966:10:10;5257:7:7;5266:5;5241:8;:31::i;:::-;-1:-1:-1;5289:4:7;;5114:186;-1:-1:-1;;;5114:186:7:o;18195:156:79:-;18297:7;18323:21;;-1:-1:-1;;;18323:21:79;;;;;;;;;;;6322:363;4158:30:5;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:5;-1:-1:-1;;;4302:15:5;;;4301:16;;4348:14;;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;:16;;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:5;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:5;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:5;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:5;-1:-1:-1;;;5011:22:5;;;4977:67;-1:-1:-1;;;;;6478:24:79;::::1;6470:69;;;::::0;-1:-1:-1;;;6470:69:79;;10566:2:125;6470:69:79::1;::::0;::::1;10548:21:125::0;;;10585:18;;;10578:30;10644:34;10624:18;;;10617:62;10696:18;;6470:69:79::1;;;;;;;;;6550:28;6563:5;6570:7;6550:12;:28::i;:::-;6588:22;6603:6;6588:14;:22::i;:::-;6620:25;6639:5;6620:18;:25::i;:::-;6655:10;:23:::0;;-1:-1:-1;;;;;;6655:23:79::1;-1:-1:-1::0;;;;;6655:23:79;::::1;;::::0;;5064:101:5;;;;5098:23;;-1:-1:-1;;;;5098:23:5;;;5140:14;;-1:-1:-1;10878:50:125;;5140:14:5;;10866:2:125;10851:18;5140:14:5;;;;;;;5064:101;4092:1079;;;;;6322:363:79;;;;:::o;5892:244:7:-;5979:4;966:10:10;6035:37:7;6051:4;966:10:10;6066:5:7;6035:15;:37::i;:::-;6082:26;6092:4;6098:2;6102:5;6082:9;:26::i;:::-;6125:4;6118:11;;;5892:244;;;;;;:::o;6859:164:79:-;6963:5;6987:29;:27;:29::i;3040:112:8:-;3099:7;3125:20;:18;:20::i;6873:153:9:-;4209:22;7010:8;-1:-1:-1;;;;;7010:8:9;;6873:153::o;12442:357:79:-;12537:12;5019:19;:17;:19::i;:::-;-1:-1:-1;;;;;12569:22:79;::::1;12561:66;;;::::0;-1:-1:-1;;;12561:66:79;;11141:2:125;12561:66:79::1;::::0;::::1;11123:21:125::0;11180:2;11160:18;;;11153:30;11219:33;11199:18;;;11192:61;11270:18;;12561:66:79::1;10939:355:125::0;12561:66:79::1;966:10:10::0;12638:14:79::1;12677:19:::0;;;:11:::1;:19;::::0;;;;;;;-1:-1:-1;;;;;12677:29:79;::::1;::::0;;;;;;;;;;:40;;-1:-1:-1;;12677:40:79::1;::::0;::::1;;::::0;;::::1;::::0;;;12732:39;;627:41:125;;;12732:39:79;;966:10:10;;12732:39:79::1;::::0;;;;;;::::1;-1:-1:-1::0;12788:4:79::1;::::0;12442:357;-1:-1:-1;;;12442:357:79:o;8928:392:9:-;9003:7;-1:-1:-1;;9192:14:9;9209:22;9224:6;9209:14;:22::i;:::-;9192:39;-1:-1:-1;9241:48:9;966:10:10;9264:8:9;9274:6;9282;9241:8;:48::i;:::-;9307:6;8928:392;-1:-1:-1;;;;8928:392:9:o;4035:171:7:-;4100:7;;-1:-1:-1;;;;;;;;;;;4144:18:7;-1:-1:-1;;;;;4179:20:7;;;:11;:20;;;;;;;;-1:-1:-1;;4179:20:7;;;;;4035:171::o;9692:1406:79:-;9815:17;966:10:10;9950:11:79;;;9946:61;;9984:12;;-1:-1:-1;;;9984:12:79;;;;;;;;;;;9946:61;10104:6;-1:-1:-1;;;;;10095:15:79;:5;-1:-1:-1;;;;;10095:15:79;;;:46;;;;-1:-1:-1;;;;;;10115:18:79;;;;;;;:11;:18;;;;;;;;:26;;;;;;;;;;;;10114:27;10095:46;10091:115;;;10157:38;10173:5;10180:6;10188;10157:15;:38::i;:::-;10343:6;-1:-1:-1;;;;;10329:20:79;:10;-1:-1:-1;;;;;10329:20:79;;;:56;;;;-1:-1:-1;;;;;;10354:23:79;;;;;;;:11;:23;;;;;;;;:31;;;;;;;;;;;;10353:32;10329:56;10325:119;;;10408:25;;-1:-1:-1;;;10408:25:79;;;;;;;;;;;10325:119;-1:-1:-1;;;;;10509:30:79;;10454:52;10509:30;;;:18;:30;;;;;10616:41;;10509:30;;10651:6;;10509:30;;10454:52;10616:41;;10651:6;;10616:41;:::i;:::-;;;;-1:-1:-1;;10739:22:79;10792:10;;10764:39;;-1:-1:-1;;;10764:39:79;;-1:-1:-1;;;;;10792:10:79;;;10764:39;;;1046:51:125;10764:8:79;:27;;;;;;1019:18:125;;10764:39:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10739:64;-1:-1:-1;10852:33:79;;;;:15;:33;:::i;:::-;10813:36;;;:72;10950:39;10960:5;10975:4;10982:6;10950:9;:39::i;:::-;11004:60;;;-1:-1:-1;;;;;12103:32:125;;;12085:51;;12167:2;12152:18;;12145:34;;;3064:1:79;;11004:60;;;;;;;;;;12058:18:125;11004:60:79;;;;;;;-1:-1:-1;3064:1:79;;9692:1406;-1:-1:-1;;;;;;9692:1406:79:o;2794:154:8:-;2896:7;2922:19;2935:5;2922:12;:19::i;5043:903:14:-;5141:13;5168:18;;5141:13;;;5168:18;5141:13;-1:-1:-1;;;;;;;;;;;5647:13:14;;5381:45;;-1:-1:-1;5647:18:14;:43;;;;-1:-1:-1;5669:16:14;;;;:21;5647:43;5639:77;;;;-1:-1:-1;;;5639:77:14;;12392:2:125;5639:77:14;;;12374:21:125;12431:2;12411:18;;;12404:30;-1:-1:-1;;;12450:18:125;;;12443:51;12511:18;;5639:77:14;12190:345:125;5639:77:14;5778:13;:11;:13::i;:::-;5805:16;:14;:16::i;:::-;5913;;;5897:1;5913:16;;;;;;;;;-1:-1:-1;;;5727:212:14;;;-1:-1:-1;5727:212:14;;-1:-1:-1;5835:13:14;;-1:-1:-1;5870:4:14;;-1:-1:-1;5897:1:14;-1:-1:-1;5913:16:14;-1:-1:-1;5727:212:14;-1:-1:-1;;5043:903:14:o;9355:380:9:-;9427:7;-1:-1:-1;;9610:14:9;9627:19;9639:6;9627:11;:19::i;:::-;9610:36;-1:-1:-1;9656:48:9;966:10:10;9679:8:9;9689:6;9697;9656:8;:48::i;2954:148:7:-;3086:9;3079:16;;3001:13;;-1:-1:-1;;;;;;;;;;;2064:20:7;3079:16;;;:::i;4401:178::-;4470:4;966:10:10;4524:27:7;966:10:10;4541:2:7;4545:5;4524:9;:27::i;8387:143:9:-;8453:7;8479:44;8496:6;8504:18;8479:16;:44::i;13749:1075:79:-;13961:14;13932:10;966::10;-1:-1:-1;;;;;4606:20:79;;;;;;;:56;;-1:-1:-1;;;;;;4631:23:79;;;;;;;:11;:23;;;;;;;;:31;;;;;;;;;;;;4630:32;4606:56;4602:119;;;4685:25;;-1:-1:-1;;;4685:25:79;;;;;;;;;;;4602:119;13995:6:::1;14005:1;13995:11:::0;13991:61:::1;;14029:12;;-1:-1:-1::0;;;14029:12:79::1;;;;;;;;;;;13991:61;-1:-1:-1::0;;;;;14099:30:79;::::1;14062:34;14099:30:::0;;;:18:::1;:30;::::0;;;;;;;14062:67;;;;::::1;::::0;;;;;;;::::1;;::::0;;;::::1;::::0;;;;14143:24;14139:87:::1;;14190:25;;-1:-1:-1::0;;;14190:25:79::1;;;;;;;;;;;14139:87;14261:15;14239:7;:19;;;:37;14235:104;;;14299:29;;-1:-1:-1::0;;;14299:29:79::1;;;;;;;;;;;14235:104;14358:14:::0;;;-1:-1:-1;14358:14:79::1;14402:23;14358:14:::0;14402:15:::1;:23::i;:::-;14382:43;;14488:9;14479:6;:18;14475:70;;;14520:14;;-1:-1:-1::0;;;14520:14:79::1;;;;;;;;;;;14475:70;14627:9;14618:6;:18;14614:79;;;14659:23;;-1:-1:-1::0;;;14659:23:79::1;;;;;;;;;;;14614:79;14753:64;966:10:10::0;14777:8:79::1;14787:10;14799:9;14810:6;14753:9;:64::i;:::-;13981:843;;4553:185:::0;13749:1075;;;;;;:::o;15168:1084::-;15378:14;15349:10;966::10;-1:-1:-1;;;;;4606:20:79;;;;;;;:56;;-1:-1:-1;;;;;;4631:23:79;;;;;;;:11;:23;;;;;;;;:31;;;;;;;;;;;;4630:32;4606:56;4602:119;;;4685:25;;-1:-1:-1;;;4685:25:79;;;;;;;;;;;4602:119;15412:6:::1;15422:1;15412:11:::0;15408:61:::1;;15446:12;;-1:-1:-1::0;;;15446:12:79::1;;;;;;;;;;;15408:61;-1:-1:-1::0;;;;;15516:30:79;::::1;15479:34;15516:30:::0;;;:18:::1;:30;::::0;;;;;;;15479:67;;;;::::1;::::0;;;;;;;::::1;;::::0;;;::::1;::::0;;;;15560:24;15556:87:::1;;15607:25;;-1:-1:-1::0;;;15607:25:79::1;;;;;;;;;;;15556:87;15678:15;15656:7;:19;;;:37;15652:104;;;15716:29;;-1:-1:-1::0;;;15716:29:79::1;;;;;;;;;;;15652:104;15814:14:::0;;15805:23;::::1;15801:75;;;15851:14;;-1:-1:-1::0;;;15851:14:79::1;;;;;;;;;;;15801:75;15958:14:::0;;15949:23;::::1;15945:84;;;15995:23;;-1:-1:-1::0;;;15995:23:79::1;;;;;;;;;;;15945:84;16100:23;16116:6;16100:15;:23::i;:::-;16091:32:::0;-1:-1:-1;16184:61:79::1;966:10:10::0;16208:8:79::1;16218:10;16230:6;16238;16184:9;:61::i;:::-;15398:854;4553:185:::0;15168:1084;;;;;;:::o;7221:148:9:-;7291:7;7317:45;7334:6;7342:19;7317:16;:45::i;17118:380:79:-;-1:-1:-1;;;;;17327:30:79;;17267:7;17327:30;;;:18;:30;;;;;;;;17290:67;;;;;;;;;;;;;;;;;;;;;;17394:15;-1:-1:-1;17367:107:79;;17448:14;;17432:31;;:15;:31::i;17367:107::-;-1:-1:-1;17490:1:79;;17118:380;-1:-1:-1;;17118:380:79:o;2083:672:8:-;2304:8;2286:15;:26;2282:97;;;2335:33;;-1:-1:-1;;;2335:33:8;;;;;160:25:125;;;133:18;;2335:33:8;14:177:125;2282:97:8;2389:18;1279:95;2448:5;2455:7;2464:5;2471:16;2481:5;-1:-1:-1;;;;;1954:16:11;1597:7;1954:16;;;1005:21;1954:16;;;;;:18;;;;;;;;;1537:452;2471:16:8;2420:78;;;;;;12827:25:125;;;;-1:-1:-1;;;;;12926:15:125;;;12906:18;;;12899:43;12978:15;;;;12958:18;;;12951:43;13010:18;;;13003:34;13053:19;;;13046:35;13097:19;;;13090:35;;;12799:19;;2420:78:8;;;;;;;;;;;;2410:89;;;;;;2389:110;;2510:12;2525:28;2542:10;2525:16;:28::i;:::-;2510:43;;2564:14;2581:28;2595:4;2601:1;2604;2607;2581:13;:28::i;:::-;2564:45;;2633:5;-1:-1:-1;;;;;2623:15:8;:6;-1:-1:-1;;;;;2623:15:8;;2619:88;;2661:35;;-1:-1:-1;;;2661:35:8;;-1:-1:-1;;;;;13366:15:125;;;2661:35:8;;;13348:34:125;13418:15;;13398:18;;;13391:43;13283:18;;2661:35:8;13136:304:125;2619:88:8;2717:31;2726:5;2733:7;2742:5;2717:8;:31::i;:::-;2272:483;;;2083:672;;;;;;;:::o;17533:361:79:-;-1:-1:-1;;;;;17740:30:79;;17680:7;17740:30;;;:18;:30;;;;;;;;17703:67;;;;;;;;;;;;;;;;;;;;;;17807:15;-1:-1:-1;17780:90:79;;17845:14;;17533:361;-1:-1:-1;;17533:361:79:o;4612:195:7:-;-1:-1:-1;;;;;4771:20:7;;;4692:7;4771:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;4612:195::o;18845:325:79:-;5019:19;:17;:19::i;:::-;966:10:10;18999:6:79::1;-1:-1:-1::0;;;;;18975:31:79::1;;18971:80;;19029:11;;-1:-1:-1::0;;;19029:11:79::1;;;;;;;;;;;18971:80;19061:64;19091:7;:5;:7::i;:::-;19109:6;19118;19061:22;:64::i;:::-;19141:22;::::0;160:25:125;;;19141:22:79::1;::::0;148:2:125;133:18;19141:22:79::1;;;;;;;18845:325:::0;:::o;8208:134::-;8269:7;8311:24;8329:4;8311:9;:24::i;:::-;-1:-1:-1;;;;;;;;;;;3981:14:7;8295:40:79;;;;:::i;11493:376::-;-1:-1:-1;;;;;11693:30:79;;11616:23;11693:30;;;:18;:30;;;;;11737:19;;;;11760:15;-1:-1:-1;11737:38:79;;;:60;;-1:-1:-1;11779:14:79;;:18;;11737:60;11733:112;;;11820:14;;-1:-1:-1;11813:21:79;;11733:112;-1:-1:-1;11861:1:79;;11493:376;-1:-1:-1;;;11493:376:79:o;11139:313::-;-1:-1:-1;;;;;11299:30:79;;11228:21;11299:30;;;:18;:30;;;;;11343:19;;;;11365:15;-1:-1:-1;11339:89:79;;;11403:14;;-1:-1:-1;11396:21:79;;11084:213:9;11181:7;11207:83;11221:13;:11;:13::i;:::-;:17;;11237:1;11221:17;:::i;:::-;11256:23;13258:5;11256:2;:23;:::i;:::-;-1:-1:-1;;;;;;;;;;;3981:14:7;11240:39:9;;;;:::i;:::-;11207:6;;:83;11281:8;11207:13;:83::i;9905:128:7:-;9989:37;9998:5;10005:7;10014:5;10021:4;9989:8;:37::i;:::-;9905:128;;;:::o;9071:205:5:-;9129:30;;3147:66;9186:27;8819:122;2263:147:7;6929:20:5;:18;:20::i;:::-;2365:38:7::1;2388:5;2395:7;2365:22;:38::i;:::-;2263:147:::0;;:::o;5095:114:9:-;6929:20:5;:18;:20::i;:::-;5170:32:9::1;5195:6;5170:24;:32::i;:::-;5095:114:::0;:::o;1832:125:8:-;6929:20:5;:18;:20::i;:::-;1916:34:8::1;1940:4;1916:34;;;;;;;;;;;;;-1:-1:-1::0;;;1916:34:8::1;;::::0;:23:::1;:34::i;11649:476:7:-:0;11748:24;11775:25;11785:5;11792:7;11775:9;:25::i;:::-;11748:52;;-1:-1:-1;;11814:16:7;:36;11810:309;;;11889:5;11870:16;:24;11866:130;;;11921:60;;-1:-1:-1;;;11921:60:7;;-1:-1:-1;;;;;11519:32:125;;11921:60:7;;;11501:51:125;11568:18;;;11561:34;;;11611:18;;;11604:34;;;11474:18;;11921:60:7;11299:345:125;11866:130:7;12037:57;12046:5;12053:7;12081:5;12062:16;:24;12088:5;12037:8;:57::i;:::-;11738:387;11649:476;;;:::o;6509:300::-;-1:-1:-1;;;;;6592:18:7;;6588:86;;6633:30;;-1:-1:-1;;;6633:30:7;;6660:1;6633:30;;;1046:51:125;1019:18;;6633:30:7;876:227:125;6588:86:7;-1:-1:-1;;;;;6687:16:7;;6683:86;;6726:32;;-1:-1:-1;;;6726:32:7;;6755:1;6726:32;;;1046:51:125;1019:18;;6726:32:7;876:227:125;6683:86:7;6778:24;6786:4;6792:2;6796:5;6778:7;:24::i;6617:221:9:-;6709:5;;4209:22;6726:47;-1:-1:-1;13258:5:9;6790:21;;:41;;;-1:-1:-1;;;6790:21:9;;;;:41;:::i;:::-;6783:48;;;6617:221;:::o;3901:109:14:-;3954:7;3980:23;:21;:23::i;7749:135:79:-;7814:6;-1:-1:-1;;;;;7814:13:79;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7810:68;;;7852:15;;-1:-1:-1;;;7852:15:79;;;;;;;;;;;7810:68;7749:135::o;11361:841:9:-;12031:74;12065:7;:5;:7::i;:::-;12075:6;12091:4;12098:6;12031:26;:74::i;:::-;12115:23;12121:8;12131:6;12115:5;:23::i;:::-;12170:8;-1:-1:-1;;;;;12154:41:9;12162:6;-1:-1:-1;;;;;12154:41:9;;12180:6;12188;12154:41;;;;;;15532:25:125;;;15588:2;15573:18;;15566:34;15520:2;15505:18;;15358:248;12154:41:9;;;;;;;;11361:841;;;;:::o;1259:164:11:-;1319:7;;1005:21;1364:19;886:156;6170:155:14;6311:7;6304:14;;6224:13;;-1:-1:-1;;;;;;;;;;;2725:21:14;6304:14;;;:::i;6552:161::-;6609:13;6634:23;-1:-1:-1;;;;;;;;;;;6660:19:14;2606:156;16514:569:79;-1:-1:-1;;;;;16764:30:79;;;;;;:18;:30;;;;;16757:37;;;;;;16857:28;16871:4;16878:6;16857:5;:28::i;:::-;16949:57;16979:7;:5;:7::i;:::-;16989:8;16999:6;16949:22;:57::i;:::-;17049:10;-1:-1:-1;;;;;17022:54:79;17039:8;-1:-1:-1;;;;;17022:54:79;17031:6;-1:-1:-1;;;;;17022:54:79;;17061:6;17069;17022:54;;;;;;15532:25:125;;;15588:2;15573:18;;15566:34;15520:2;15505:18;;15358:248;17022:54:79;;;;;;;;16514:569;;;;;:::o;10747:213:9:-;10844:7;10870:83;10900:23;10844:7;10900:2;:23;:::i;:::-;-1:-1:-1;;;;;;;;;;;3981:14:7;10884:39:9;;;;:::i;:::-;10925:13;:11;:13::i;:::-;:17;;10941:1;10925:17;:::i;4832:176:14:-;4909:7;4935:66;4968:20;:18;:20::i;:::-;4990:10;4049:4:53;4043:11;-1:-1:-1;;;4067:23:53;;4119:4;4110:14;;4103:39;;;;4171:4;4162:14;;4155:34;4227:4;4212:20;;;3874:374;6887:260:52;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;-1:-1:-1;7131:9:52;;6887:260;-1:-1:-1;;;;;;6887:260:52:o;1219:160:40:-;1328:43;;-1:-1:-1;;;;;12103:32:125;;;1328:43:40;;;12085:51:125;12152:18;;;12145:34;;;1301:71:40;;1321:5;;1343:14;;;;;12058:18:125;;1328:43:40;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1328:43:40;;;;;;;;;;;1301:19;:71::i;11054:238:56:-;11155:7;11209:76;11225:26;11242:8;11225:16;:26::i;:::-;:59;;;;;11283:1;11268:11;11255:25;;;;;:::i;:::-;11265:1;11262;11255:25;:29;11225:59;34914:9:57;34907:17;;34795:145;11209:76:56;11181:25;11188:1;11191;11194:11;11181:6;:25::i;:::-;:104;;;;:::i;:::-;11174:111;11054:238;-1:-1:-1;;;;;11054:238:56:o;10880:487:7:-;-1:-1:-1;;;;;;;;;;;;;;;;11045:19:7;;11041:89;;11087:32;;-1:-1:-1;;;11087:32:7;;11116:1;11087:32;;;1046:51:125;1019:18;;11087:32:7;876:227:125;11041:89:7;-1:-1:-1;;;;;11143:21:7;;11139:90;;11187:31;;-1:-1:-1;;;11187:31:7;;11215:1;11187:31;;;1046:51:125;1019:18;;11187:31:7;876:227:125;11139:90:7;-1:-1:-1;;;;;11238:20:7;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11285:76;;;;11335:7;-1:-1:-1;;;;;11319:31:7;11328:5;-1:-1:-1;;;;;11319:31:7;;11344:5;11319:31;;;;160:25:125;;148:2;133:18;;14:177;11319:31:7;;;;;;;;11285:76;10978:389;10880:487;;;;:::o;7082:141:5:-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:5;;;;;;;;;;;2416:216:7;6929:20:5;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2581:7:7;:15:::1;2591:5:::0;2581:7;:15:::1;:::i;:::-;-1:-1:-1::0;2606:9:7::1;::::0;::::1;:19;2618:7:::0;2606:9;:19:::1;:::i;5215:304:9:-:0;6929:20:5;:18;:20::i;:::-;4209:22:9;5300:24:::1;::::0;5395:28:::1;5416:6:::0;5395:20:::1;:28::i;:::-;5357:66;;;;5457:7;:28;;5483:2;5457:28;;;5467:13;5457:28;5433:52:::0;;-1:-1:-1;;;;;;5495:17:9;-1:-1:-1;;;5433:52:9::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;;;5495:17:9;;-1:-1:-1;;;;;5495:17:9;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;5215:304:9:o;3485:330:14:-;6929:20:5;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;3652:7:14;:14:::1;3662:4:::0;3652:7;:14:::1;:::i;:::-;-1:-1:-1::0;3676:10:14::1;::::0;::::1;:20;3689:7:::0;3676:10;:20:::1;:::i;:::-;-1:-1:-1::0;3777:1:14::1;3761:17:::0;;;3788:16:::1;::::0;;::::1;:20:::0;-1:-1:-1;;3485:330:14:o;7498:161:79:-;5019:19;:17;:19::i;:::-;5251:21:::1;:19;:21::i;:::-;7622:30:::2;7636:4;7642:2;7646:5;7622:13;:30::i;4016:191:14:-:0;4071:7;1959:95;4129:17;:15;:17::i;:::-;4148:20;:18;:20::i;:::-;4107:92;;;;;;18172:25:125;;;;18213:18;;18206:34;;;;18256:18;;;18249:34;4170:13:14;18299:18:125;;;18292:34;4193:4:14;18342:19:125;;;18335:61;18144:19;;4107:92:14;;;;;;;;;;;;4097:103;;;;;;4090:110;;4016:191;:::o;1618:188:40:-;1745:53;;-1:-1:-1;;;;;18665:15:125;;;1745:53:40;;;18647:34:125;18717:15;;;18697:18;;;18690:43;18749:18;;;18742:34;;;1718:81:40;;1738:5;;1760:18;;;;;18582::125;;1745:53:40;18407:375:125;8637:208:7;-1:-1:-1;;;;;8707:21:7;;8703:91;;8751:32;;-1:-1:-1;;;8751:32:7;;8780:1;8751:32;;;1046:51:125;1019:18;;8751:32:7;876:227:125;8703:91:7;8803:35;8819:1;8823:7;8832:5;8803:7;:35::i;9163:206::-;-1:-1:-1;;;;;9233:21:7;;9229:89;;9277:30;;-1:-1:-1;;;9277:30:7;;9304:1;9277:30;;;1046:51:125;1019:18;;9277:30:7;876:227:125;9229:89:7;9327:35;9335:7;9352:1;9356:5;9327:7;:35::i;5203:1551:52:-;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:52;;-1:-1:-1;6385:30:52;;-1:-1:-1;6417:1:52;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;19014:25:125;;;19087:4;19075:17;;19055:18;;;19048:45;;;;19109:18;;;19102:34;;;19152:18;;;19145:34;;;6541:24:52;;18986:19:125;;6541:24:52;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:52;;-1:-1:-1;;6541:24:52;;;-1:-1:-1;;;;;;;6579:20:52;;6575:113;;-1:-1:-1;6631:1:52;;-1:-1:-1;6635:29:52;;-1:-1:-1;6631:1:52;;-1:-1:-1;6615:62:52;;6575:113;6706:6;-1:-1:-1;6714:20:52;;-1:-1:-1;6714:20:52;;-1:-1:-1;5203:1551:52;;;;;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:52;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:52;;;;;160:25:125;;;133:18;;7634:46:52;14:177:125;7563:243:52;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:52;;;;;160:25:125;;;133:18;;7763:32:52;14:177:125;8370:720:40;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:40;8910:8;8866:16;;-1:-1:-1;8942:15:40;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:40;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:40;;-1:-1:-1;;;;;1064:32:125;;9033:40:40;;;1046:51:125;1019:18;;9033:40:40;876:227:125;32020:122:56;32088:4;32129:1;32117:8;32111:15;;;;;;;;:::i;:::-;:19;;;;:::i;:::-;:24;;32134:1;32111:24;32104:31;;32020:122;;;:::o;7242:3683::-;7324:14;7375:12;7389:11;7404:12;7411:1;7414;7404:6;:12::i;:::-;7374:42;;;;7498:4;7506:1;7498:9;7494:365;;7833:11;7827:3;:17;;;;;:::i;:::-;;7820:24;;;;;;7494:365;7984:4;7969:11;:19;7965:142;;8008:84;5312:5;8028:16;;5311:36;940:4:46;5306:42:56;8008:11;:84::i;:::-;8359:17;8510:11;8507:1;8504;8497:25;8902:12;8932:15;;;8917:31;;9067:22;;;;;9800:1;9781;:15;;9780:21;;10033;;;10029:25;;10018:36;10103:21;;;10099:25;;10088:36;10175:21;;;10171:25;;10160:36;10246:21;;;10242:25;;10231:36;10319:21;;;10315:25;;10304:36;10393:21;;;10389:25;;;10378:36;9309:12;;;;9305:23;;;9330:1;9301:31;8622:18;;;8612:29;;;9416:11;;;;8665:19;;;;9160:14;;;;9409:18;;;;10868:13;;-1:-1:-1;;7242:3683:56;;;;;:::o;8485:120:5:-;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:5;;;;;;-1:-1:-1;8485:120:5:o;5662:550:9:-;5856:43;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5856:43:9;-1:-1:-1;;;5856:43:9;;;5816:93;;5729:7;;;;;;;;-1:-1:-1;;;;;5816:26:9;;;:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5769:140;;;;5923:7;:39;;;;;5960:2;5934:15;:22;:28;;5923:39;5919:260;;;5978:24;6016:15;6005:38;;;;;;;;;;;;:::i;:::-;5978:65;-1:-1:-1;6081:15:9;6061:35;;6057:112;;6124:4;;6136:16;;-1:-1:-1;5662:550:9;-1:-1:-1;;;;5662:550:9:o;6057:112::-;5964:215;5919:260;-1:-1:-1;6196:5:9;;;;-1:-1:-1;5662:550:9;-1:-1:-1;;;5662:550:9:o;8000:169:79:-;8068:40;;-1:-1:-1;;;8068:40:79;;8102:4;8068:40;;;1046:51:125;8068:6:79;-1:-1:-1;;;;;8068:25:79;;;;1019:18:125;;8068:40:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8063:100;;8131:21;;-1:-1:-1;;;8131:21:79;;;;;;;;;;;7124:1170:7;-1:-1:-1;;;;;;;;;;;;;;;;7266:18:7;;7262:546;;7420:5;7402:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7262:546:7;;-1:-1:-1;7262:546:7;;-1:-1:-1;;;;;7478:17:7;;7456:19;7478:17;;;;;;;;;;;7513:19;;;7509:115;;;7559:50;;-1:-1:-1;;;7559:50:7;;-1:-1:-1;;;;;11519:32:125;;7559:50:7;;;11501:51:125;11568:18;;;11561:34;;;11611:18;;;11604:34;;;11474:18;;7559:50:7;11299:345:125;7509:115:7;-1:-1:-1;;;;;7744:17:7;;:11;:17;;;;;;;;;;7764:19;;;;7744:39;;7262:546;-1:-1:-1;;;;;7822:16:7;;7818:429;;7985:14;;;:23;;;;;;;7818:429;;;-1:-1:-1;;;;;8198:15:7;;:11;:15;;;;;;;;;;:24;;;;;;7818:429;8277:2;-1:-1:-1;;;;;8262:25:7;8271:4;-1:-1:-1;;;;;8262:25:7;;8281:5;8262:25;;;;160::125;;148:2;133:18;;14:177;6928:687:14;6978:7;-1:-1:-1;;;;;;;;;;;6978:7:14;7073:13;:11;:13::i;:::-;7100:18;;7052:34;;-1:-1:-1;7100:22:14;7096:513;;7145:22;;;;;;;;6928:687;-1:-1:-1;;6928:687:14:o;7096:513::-;7442:13;;7473:15;;7469:130;;7515:10;6928:687;-1:-1:-1;;;6928:687:14:o;7469:130::-;7571:13;7564:20;;;;;6928:687;:::o;7836:723::-;7889:7;-1:-1:-1;;;;;;;;;;;7889:7:14;7987:16;:14;:16::i;:::-;8017:21;;7963:40;;-1:-1:-1;8017:25:14;8013:540;;8065:25;;;;;;;;7836:723;-1:-1:-1;;7836:723:14:o;8013:540::-;8377:16;;;;8411:18;;8407:136;;8456:13;7836:723;-1:-1:-1;;;7836:723:14:o;1027:550:56:-;1088:12;;-1:-1:-1;;1471:1:56;1468;1461:20;1501:9;;;;1549:11;;;1535:12;;;;1531:30;;;;;1027:550;-1:-1:-1;;1027:550:56:o;1776:194:46:-;1881:10;1875:4;1868:24;1918:4;1912;1905:18;1949:4;1943;1936:18;196:286:125;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;349:23;;-1:-1:-1;;;;;;401:32:125;;391:43;;381:71;;448:1;445;438:12;1108:250;1193:1;1203:113;1217:6;1214:1;1211:13;1203:113;;;1293:11;;;1287:18;1274:11;;;1267:39;1239:2;1232:10;1203:113;;;-1:-1:-1;;1350:1:125;1332:16;;1325:27;1108:250::o;1363:271::-;1405:3;1443:5;1437:12;1470:6;1465:3;1458:19;1486:76;1555:6;1548:4;1543:3;1539:14;1532:4;1525:5;1521:16;1486:76;:::i;:::-;1616:2;1595:15;-1:-1:-1;;1591:29:125;1582:39;;;;1623:4;1578:50;;1363:271;-1:-1:-1;;1363:271:125:o;1639:220::-;1788:2;1777:9;1770:21;1751:4;1808:45;1849:2;1838:9;1834:18;1826:6;1808:45;:::i;1864:180::-;1923:6;1976:2;1964:9;1955:7;1951:23;1947:32;1944:52;;;1992:1;1989;1982:12;1944:52;-1:-1:-1;2015:23:125;;1864:180;-1:-1:-1;1864:180:125:o;2049:131::-;-1:-1:-1;;;;;2124:31:125;;2114:42;;2104:70;;2170:1;2167;2160:12;2185:315;2253:6;2261;2314:2;2302:9;2293:7;2289:23;2285:32;2282:52;;;2330:1;2327;2320:12;2282:52;2369:9;2356:23;2388:31;2413:5;2388:31;:::i;:::-;2438:5;2490:2;2475:18;;;;2462:32;;-1:-1:-1;;;2185:315:125:o;2505:127::-;2566:10;2561:3;2557:20;2554:1;2547:31;2597:4;2594:1;2587:15;2621:4;2618:1;2611:15;2637:719;2680:5;2733:3;2726:4;2718:6;2714:17;2710:27;2700:55;;2751:1;2748;2741:12;2700:55;2787:6;2774:20;2813:18;2850:2;2846;2843:10;2840:36;;;2856:18;;:::i;:::-;2931:2;2925:9;2899:2;2985:13;;-1:-1:-1;;2981:22:125;;;3005:2;2977:31;2973:40;2961:53;;;3029:18;;;3049:22;;;3026:46;3023:72;;;3075:18;;:::i;:::-;3115:10;3111:2;3104:22;3150:2;3142:6;3135:18;3196:3;3189:4;3184:2;3176:6;3172:15;3168:26;3165:35;3162:55;;;3213:1;3210;3203:12;3162:55;3277:2;3270:4;3262:6;3258:17;3251:4;3243:6;3239:17;3226:54;3324:1;3317:4;3312:2;3304:6;3300:15;3296:26;3289:37;3344:6;3335:15;;;;;;2637:719;;;;:::o;3361:835::-;3482:6;3490;3498;3506;3559:3;3547:9;3538:7;3534:23;3530:33;3527:53;;;3576:1;3573;3566:12;3527:53;3615:9;3602:23;3634:31;3659:5;3634:31;:::i;:::-;3684:5;-1:-1:-1;3741:2:125;3726:18;;3713:32;3754:33;3713:32;3754:33;:::i;:::-;3806:7;-1:-1:-1;3864:2:125;3849:18;;3836:32;3887:18;3917:14;;;3914:34;;;3944:1;3941;3934:12;3914:34;3967:50;4009:7;4000:6;3989:9;3985:22;3967:50;:::i;:::-;3957:60;;4070:2;4059:9;4055:18;4042:32;4026:48;;4099:2;4089:8;4086:16;4083:36;;;4115:1;4112;4105:12;4083:36;;4138:52;4182:7;4171:8;4160:9;4156:24;4138:52;:::i;:::-;4128:62;;;3361:835;;;;;;;:::o;4201:456::-;4278:6;4286;4294;4347:2;4335:9;4326:7;4322:23;4318:32;4315:52;;;4363:1;4360;4353:12;4315:52;4402:9;4389:23;4421:31;4446:5;4421:31;:::i;:::-;4471:5;-1:-1:-1;4528:2:125;4513:18;;4500:32;4541:33;4500:32;4541:33;:::i;:::-;4201:456;;4593:7;;-1:-1:-1;;;4647:2:125;4632:18;;;;4619:32;;4201:456::o;5471:247::-;5530:6;5583:2;5571:9;5562:7;5558:23;5554:32;5551:52;;;5599:1;5596;5589:12;5551:52;5638:9;5625:23;5657:31;5682:5;5657:31;:::i;5723:118::-;5809:5;5802:13;5795:21;5788:5;5785:32;5775:60;;5831:1;5828;5821:12;5846:382;5911:6;5919;5972:2;5960:9;5951:7;5947:23;5943:32;5940:52;;;5988:1;5985;5978:12;5940:52;6027:9;6014:23;6046:31;6071:5;6046:31;:::i;:::-;6096:5;-1:-1:-1;6153:2:125;6138:18;;6125:32;6166:30;6125:32;6166:30;:::i;:::-;6215:7;6205:17;;;5846:382;;;;;:::o;6233:315::-;6301:6;6309;6362:2;6350:9;6341:7;6337:23;6333:32;6330:52;;;6378:1;6375;6368:12;6330:52;6414:9;6401:23;6391:33;;6474:2;6463:9;6459:18;6446:32;6487:31;6512:5;6487:31;:::i;6553:456::-;6630:6;6638;6646;6699:2;6687:9;6678:7;6674:23;6670:32;6667:52;;;6715:1;6712;6705:12;6667:52;6751:9;6738:23;6728:33;;6811:2;6800:9;6796:18;6783:32;6824:31;6849:5;6824:31;:::i;:::-;6874:5;-1:-1:-1;6931:2:125;6916:18;;6903:32;6944:33;6903:32;6944:33;:::i;:::-;6996:7;6986:17;;;6553:456;;;;;:::o;7014:1259::-;7420:3;7415;7411:13;7403:6;7399:26;7388:9;7381:45;7362:4;7445:2;7483:3;7478:2;7467:9;7463:18;7456:31;7510:46;7551:3;7540:9;7536:19;7528:6;7510:46;:::i;:::-;7604:9;7596:6;7592:22;7587:2;7576:9;7572:18;7565:50;7638:33;7664:6;7656;7638:33;:::i;:::-;7702:2;7687:18;;7680:34;;;-1:-1:-1;;;;;7751:32:125;;7745:3;7730:19;;7723:61;7771:3;7800:19;;7793:35;;;7865:22;;;7859:3;7844:19;;7837:51;7937:13;;7959:22;;;8009:2;8035:15;;;;-1:-1:-1;7997:15:125;;;;-1:-1:-1;8078:169:125;8092:6;8089:1;8086:13;8078:169;;;8153:13;;8141:26;;8222:15;;;;8187:12;;;;8114:1;8107:9;8078:169;;;-1:-1:-1;8264:3:125;;7014:1259;-1:-1:-1;;;;;;;;;;;;7014:1259:125:o;8278:388::-;8346:6;8354;8407:2;8395:9;8386:7;8382:23;8378:32;8375:52;;;8423:1;8420;8413:12;8375:52;8462:9;8449:23;8481:31;8506:5;8481:31;:::i;:::-;8531:5;-1:-1:-1;8588:2:125;8573:18;;8560:32;8601:33;8560:32;8601:33;:::i;8671:829::-;8782:6;8790;8798;8806;8814;8822;8830;8883:3;8871:9;8862:7;8858:23;8854:33;8851:53;;;8900:1;8897;8890:12;8851:53;8939:9;8926:23;8958:31;8983:5;8958:31;:::i;:::-;9008:5;-1:-1:-1;9065:2:125;9050:18;;9037:32;9078:33;9037:32;9078:33;:::i;:::-;9130:7;-1:-1:-1;9184:2:125;9169:18;;9156:32;;-1:-1:-1;9235:2:125;9220:18;;9207:32;;-1:-1:-1;9291:3:125;9276:19;;9263:33;9340:4;9327:18;;9315:31;;9305:59;;9360:1;9357;9350:12;9305:59;8671:829;;;;-1:-1:-1;8671:829:125;;;;9383:7;9437:3;9422:19;;9409:33;;-1:-1:-1;9489:3:125;9474:19;;;9461:33;;8671:829;-1:-1:-1;;8671:829:125:o;9505:184::-;9575:6;9628:2;9616:9;9607:7;9603:23;9599:32;9596:52;;;9644:1;9641;9634:12;9596:52;-1:-1:-1;9667:16:125;;9505:184;-1:-1:-1;9505:184:125:o;9694:280::-;9763:6;9816:2;9804:9;9795:7;9791:23;9787:32;9784:52;;;9832:1;9829;9822:12;9784:52;9864:9;9858:16;9914:10;9907:5;9903:22;9896:5;9893:33;9883:61;;9940:1;9937;9930:12;9979:380;10058:1;10054:12;;;;10101;;;10122:61;;10176:4;10168:6;10164:17;10154:27;;10122:61;10229:2;10221:6;10218:14;10198:18;10195:38;10192:161;;10275:10;10270:3;10266:20;10263:1;10256:31;10310:4;10307:1;10300:15;10338:4;10335:1;10328:15;10192:161;;9979:380;;;:::o;11649:127::-;11710:10;11705:3;11701:20;11698:1;11691:31;11741:4;11738:1;11731:15;11765:4;11762:1;11755:15;11781:125;11846:9;;;11867:10;;;11864:36;;;11880:18;;:::i;13445:128::-;13512:9;;;13533:11;;;13530:37;;;13547:18;;:::i;13578:416::-;13667:1;13704:5;13667:1;13718:270;13739:7;13729:8;13726:21;13718:270;;;13798:4;13794:1;13790:6;13786:17;13780:4;13777:27;13774:53;;;13807:18;;:::i;:::-;13857:7;13847:8;13843:22;13840:55;;;13877:16;;;;13840:55;13956:22;;;;13916:15;;;;13718:270;;;13722:3;13578:416;;;;;:::o;13999:806::-;14048:5;14078:8;14068:80;;-1:-1:-1;14119:1:125;14133:5;;14068:80;14167:4;14157:76;;-1:-1:-1;14204:1:125;14218:5;;14157:76;14249:4;14267:1;14262:59;;;;14335:1;14330:130;;;;14242:218;;14262:59;14292:1;14283:10;;14306:5;;;14330:130;14367:3;14357:8;14354:17;14351:43;;;14374:18;;:::i;:::-;-1:-1:-1;;14430:1:125;14416:16;;14445:5;;14242:218;;14544:2;14534:8;14531:16;14525:3;14519:4;14516:13;14512:36;14506:2;14496:8;14493:16;14488:2;14482:4;14479:12;14475:35;14472:77;14469:159;;;-1:-1:-1;14581:19:125;;;14613:5;;14469:159;14660:34;14685:8;14679:4;14660:34;:::i;:::-;14730:6;14726:1;14722:6;14718:19;14709:7;14706:32;14703:58;;;14741:18;;:::i;:::-;14779:20;;13999:806;-1:-1:-1;;;13999:806:125:o;14810:140::-;14868:5;14897:47;14938:4;14928:8;14924:19;14918:4;14897:47;:::i;14955:148::-;15043:4;15022:12;;;15036;;;15018:31;;15061:13;;15058:39;;;15077:18;;:::i;15108:245::-;15175:6;15228:2;15216:9;15207:7;15203:23;15199:32;15196:52;;;15244:1;15241;15234:12;15196:52;15276:9;15270:16;15295:28;15317:5;15295:28;:::i;15611:127::-;15672:10;15667:3;15663:20;15660:1;15653:31;15703:4;15700:1;15693:15;15727:4;15724:1;15717:15;15869:518;15971:2;15966:3;15963:11;15960:421;;;16007:5;16004:1;15997:16;16051:4;16048:1;16038:18;16121:2;16109:10;16105:19;16102:1;16098:27;16092:4;16088:38;16157:4;16145:10;16142:20;16139:47;;;-1:-1:-1;16180:4:125;16139:47;16235:2;16230:3;16226:12;16223:1;16219:20;16213:4;16209:31;16199:41;;16290:81;16308:2;16301:5;16298:13;16290:81;;;16367:1;16353:16;;16334:1;16323:13;16290:81;;16563:1345;16689:3;16683:10;16716:18;16708:6;16705:30;16702:56;;;16738:18;;:::i;:::-;16767:97;16857:6;16817:38;16849:4;16843:11;16817:38;:::i;:::-;16811:4;16767:97;:::i;:::-;16919:4;;16976:2;16965:14;;16993:1;16988:663;;;;17695:1;17712:6;17709:89;;;-1:-1:-1;17764:19:125;;;17758:26;17709:89;-1:-1:-1;;16520:1:125;16516:11;;;16512:24;16508:29;16498:40;16544:1;16540:11;;;16495:57;17811:81;;16958:944;;16988:663;15816:1;15809:14;;;15853:4;15840:18;;-1:-1:-1;;17024:20:125;;;17142:236;17156:7;17153:1;17150:14;17142:236;;;17245:19;;;17239:26;17224:42;;17337:27;;;;17305:1;17293:14;;;;17172:19;;17142:236;;;17146:3;17406:6;17397:7;17394:19;17391:201;;;17467:19;;;17461:26;-1:-1:-1;;17550:1:125;17546:14;;;17562:3;17542:24;17538:37;17534:42;17519:58;17504:74;;17391:201;;;17638:1;17629:6;17626:1;17622:14;17618:22;17612:4;17605:36;16958:944;;;;;16563:1345;;:::o;19190:127::-;19251:10;19246:3;19242:20;19239:1;19232:31;19282:4;19279:1;19272:15;19306:4;19303:1;19296:15;19322:254;19352:1;19386:4;19383:1;19379:12;19410:3;19400:134;;19456:10;19451:3;19447:20;19444:1;19437:31;19491:4;19488:1;19481:15;19519:4;19516:1;19509:15;19400:134;19566:3;19559:4;19556:1;19552:12;19548:22;19543:27;;;19322:254;;;;:::o;19581:287::-;19710:3;19748:6;19742:13;19764:66;19823:6;19818:3;19811:4;19803:6;19799:17;19764:66;:::i;:::-;19846:16;;;;;19581:287;-1:-1:-1;;19581:287:125:o",
    "linkReferences": {},
    "immutableReferences": {
      "26526": [
        { "start": 924, "length": 32 },
        { "start": 4998, "length": 32 },
        { "start": 5081, "length": 32 },
        { "start": 5796, "length": 32 },
        { "start": 8523, "length": 32 }
      ],
      "26530": [
        { "start": 697, "length": 32 },
        { "start": 1795, "length": 32 },
        { "start": 3209, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "REGISTRY()": "06433b1b",
    "ROUTER()": "32fe7b26",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "asset()": "38d52e0f",
    "balanceOf(address)": "70a08231",
    "claimableRedeemRequest(uint256,address)": "eaed1d07",
    "convertToAssets(uint256)": "07a2d13a",
    "convertToShares(uint256)": "c6e6f592",
    "decimals()": "313ce567",
    "delegated()": "cf8db862",
    "deposit(uint256,address)": "6e553f65",
    "eip712Domain()": "84b0196e",
    "getWithdrawalDelay()": "03160940",
    "initialize(address,address,string,string)": "2016a0d2",
    "isOperator(address,address)": "b6363cf2",
    "lockSlashing(uint256)": "dff81f7d",
    "maxDeposit(address)": "402d267d",
    "maxMint(address)": "c63d75b6",
    "maxRedeem(address)": "d905777e",
    "maxWithdraw(address)": "ce96cb77",
    "mint(uint256,address)": "94bf804d",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "pendingRedeemRequest(uint256,address)": "f5a23d8d",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "previewDeposit(uint256)": "ef8b30f7",
    "previewMint(uint256)": "b3d7f6b9",
    "previewRedeem(uint256)": "4cdad506",
    "previewWithdraw(uint256)": "0a28a477",
    "redeem(uint256,address,address)": "ba087652",
    "requestRedeem(uint256,address,address)": "7d41c86e",
    "setOperator(address,bool)": "558a7297",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalActiveStaked()": "e49d1232",
    "totalAssets()": "01e1d114",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "withdraw(uint256,address,address)": "b460af94"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract SLAYRouterV2\",\"name\":\"router_\",\"type\":\"address\"},{\"internalType\":\"contract SLAYRegistryV2\",\"name\":\"registry_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxDeposit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxRedeem\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExceededMaxRedeemable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedWhitelisted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustClaimAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotControllerOrOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotRouter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PreviewNotSupported\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawRequestNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawalDelayHasNotPassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"OperatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"RedeemRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SlashingLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REGISTRY\",\"outputs\":[{\"internalType\":\"contract SLAYRegistryV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROUTER\",\"outputs\":[{\"internalType\":\"contract SLAYRouterV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"claimableRedeemRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimableShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegated\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawalDelay\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"asset_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegated_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lockSlashing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"pendingRedeemRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pendingShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"requestRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalActiveStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"- This contract is deployed via the SLAYVaultFactory using the Beacon Proxy pattern - It integrates the ERC20, ERC4626, and ERC20Permit standards with custom logic for delayed redemptions,   as defined in the ERC7540 interface - Redeem requests are initiated by transferring shares to the vault and can be claimed after a configurable delay - Preview functions are intentionally disabled to prevent misuse in asynchronous flows - Immutable dependencies (`SLAYRouter` and `SLAYRegistry`) are injected at construction for efficient immutable access Key Features: - Asynchronous redeem request/claim pattern using `requestRedeem`, `withdraw`, and `redeem` - IERC7540Operator for request/claim with configurable controller-operator relationships - Upgradeable via Beacon Proxy pattern - Pausing and whitelisting enforced by SLAYRouter WARNING: This contract does not support non-standard ERC20 tokens. Assets that do not conform to the ERC20 standard, might lead to unexpected behavior or loss of funds. For example, tokens with fee-on-transfer mechanism are non-compliant. Thus, vault with non-standard asset will NOT be whitelisted in the SLAYRouter.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"ERC4626ExceededMaxDeposit(address,uint256,uint256)\":[{\"details\":\"Attempted to deposit more assets than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxMint(address,uint256,uint256)\":[{\"details\":\"Attempted to mint more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxRedeem(address,uint256,uint256)\":[{\"details\":\"Attempted to redeem more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxWithdraw(address,uint256,uint256)\":[{\"details\":\"Attempted to withdraw more assets than the max amount for `receiver`.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"OperatorSet(address,address,bool)\":{\"details\":\"The event emitted when an operator is set.\",\"params\":{\"approved\":\"The approval status.\",\"controller\":\"The address of the controller.\",\"operator\":\"The address of the operator.\"}},\"SlashingLocked(uint256)\":{\"params\":{\"amount\":\"The amount of assets locked for slashing\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"claimableRedeemRequest(uint256,address)\":{\"details\":\"Returns the amount of requested shares in Claimable state for the controller to redeem or withdraw. - MUST NOT include any shares in Pending state for redeem or withdraw. - MUST NOT show any variations depending on the caller. - MUST NOT revert unless due to integer overflow caused by an unreasonably large input.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\",\"details\":\"Sets immutable references to the router and registry contracts Disables initializers to prevent re-initialization\",\"params\":{\"registry_\":\"The address of the SLAYRegistry contract\",\"router_\":\"The address of the SLAYRouter contract\"}},\"convertToAssets(uint256)\":{\"details\":\"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"convertToShares(uint256)\":{\"details\":\"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"delegated()\":{\"details\":\"This address is the SatLayer operator that is delegated to manage the vault This address cannot withdraw assets from the vault See https://build.satlayer.xyz/architecture/operators for more information\",\"returns\":{\"_0\":\"The address of the delegated operator\"}},\"deposit(uint256,address)\":{\"details\":\"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"initialize(address,address,string,string)\":{\"details\":\"Initializes the SLAYVault with the given parameters This function is called by the SLAYVaultFactory when creating a new SLAYVault instance Not to be called directly\",\"params\":{\"asset_\":\"The address of the underlying asset (ERC20 token) that the vault will hold\",\"delegated_\":\"The address of the delegated operator for this vault\",\"name_\":\"The name of the vault, used for ERC20 token metadata\",\"symbol_\":\"The symbol of the vault, used for ERC20 token metadata\"}},\"isOperator(address,address)\":{\"details\":\"This is not the same as the SatLayer Operator See ERC7540 for more details on Operators\",\"params\":{\"controller\":\"The address of the controller.\",\"operator\":\"The address of the operator.\"},\"returns\":{\"status\":\"The approval status\"}},\"lockSlashing(uint256)\":{\"details\":\"Only callable by the router contract. This function is used during the slashing process to transfer assets from the vault to the router for penalty distribution\",\"params\":{\"amount\":\"The amount of underlying asset to move to the router\"}},\"maxDeposit(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert.\"},\"maxMint(address)\":{\"details\":\"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert.\"},\"maxRedeem(address)\":{\"details\":\"Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert.\"},\"maxWithdraw(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert.\"},\"mint(uint256,address)\":{\"details\":\"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"pendingRedeemRequest(uint256,address)\":{\"details\":\"Returns the amount of requested shares in Pending state. - MUST NOT include any shares in Claimable state for redeem or withdraw. - MUST NOT show any variations depending on the caller. - MUST NOT revert unless due to integer overflow caused by an unreasonably large input.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"previewDeposit(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"previewMint(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting.\"},\"previewRedeem(uint256)\":{\"details\":\"For ERC7540, preview functions MUST revert for all callers and inputs See https://eips.ethereum.org/EIPS/eip-7540#reversion-of-preview-functions-in-async-request-flows\"},\"previewWithdraw(uint256)\":{\"details\":\"For ERC7540, preview functions MUST revert for all callers and inputs See https://eips.ethereum.org/EIPS/eip-7540#reversion-of-preview-functions-in-async-request-flows\"},\"redeem(uint256,address,address)\":{\"details\":\"For ERC7540, the redeem functions are used to claim the shares. This function does not transfer the shares to the contract, because this already happened on requestRedeem. Controller MUST be the msg.sender unless the controller has approved msg.sender as an operator.\"},\"requestRedeem(uint256,address,address)\":{\"details\":\"Assumes control of shares from sender into the Vault and submits a Request for asynchronous redeem. - MUST support a redeem Request flow where the control of shares is taken from sender directly   where msg.sender has ERC-20 approval over the shares of owner. - MUST revert if all of shares cannot be requested for redeem.\",\"params\":{\"controller\":\"the controller of the request who will be able to operate the request\",\"owner\":\"the source of the shares to be redeemed NOTE: most implementations will require pre-approval of the Vault with the Vault's share token.\",\"shares\":\"the amount of shares to be redeemed to transfer from owner\"}},\"setOperator(address,bool)\":{\"details\":\"This is ERC7540's Operator, not SatLayer's Operator An Operator in this context is an account that can manage Requests on behalf of another account This includes the ability to request and claim redemptions This is an optional feature to allow third parties to manage redemptions on behalf of the controller You do not need to set an Operator to request or claim redemptions As described in the ERC7540 standard\",\"params\":{\"approved\":\"The approval status.\",\"operator\":\"The address of the operator.\"},\"returns\":{\"success\":\"Whether the call was executed successfully or not\"}},\"supportsInterface(bytes4)\":{\"details\":\"Support for the most common interfaces for SLAYVault There might be more interfaces not listed here\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalActiveStaked()\":{\"returns\":{\"_0\":\"Total tokens actively staked in the vault\"}},\"totalAssets()\":{\"details\":\"Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"withdraw(uint256,address,address)\":{\"details\":\"For ERC7540, the withdraw functions are used to claim the assets. This function does not transfer the shares to the contract, because this already happened on requestRedeem. Controller MUST be the msg.sender unless the controller has approved msg.sender as an operator.\"}},\"stateVariables\":{\"REGISTRY\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"This is an immutable reference to the registry contract\"},\"REQUEST_ID\":{\"details\":\"Assume requests are non-fungible and all have ID = 0\"},\"ROUTER\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"This is an immutable reference to the router contract\"},\"_delegated\":{\"details\":\"This address cannot withdraw assets from the vault This delegated address (also called the Operator in SLAYRegistry) is not the same as the ERC7540 Operator See https://build.satlayer.xyz/architecture/operators for more information\"},\"_isOperator\":{\"details\":\"Maps controller addresses to a mapping of operator addresses to approval status\"},\"_pendingRedemption\":{\"details\":\"Maps controller addresses to their redemption request details\"}},\"title\":\"SatLayer Vault\",\"version\":1},\"userdoc\":{\"errors\":{\"EnforcedPause()\":[{\"notice\":\"The operation failed because the contract is paused\"}],\"ExceededMaxRedeemable()\":[{\"notice\":\"The operation failed because assets to withdraw exceed the maximum redeemable amount\"}],\"ExpectedWhitelisted()\":[{\"notice\":\"The operation failed because the contract is not whitelisted\"}],\"MustClaimAll()\":[{\"notice\":\"The operation failed because all assets must be withdrawn at once\"}],\"NotControllerOrOperator()\":[{\"notice\":\"The operation failed because the caller is not the controller or an approved operator\"}],\"NotRouter()\":[{\"notice\":\"The operation failed because the caller is not the router contract\"}],\"PreviewNotSupported()\":[{\"notice\":\"The operation failed because preview functions are not supported for asynchronous flows\"}],\"WithdrawRequestNotFound()\":[{\"notice\":\"The operation failed because the specified withdraw request was not found\"}],\"WithdrawalDelayHasNotPassed()\":[{\"notice\":\"The operation failed because the withdrawal delay period has not yet passed\"}],\"ZeroAmount()\":[{\"notice\":\"The operation failed because the amount specified is zero\"}]},\"events\":{\"SlashingLocked(uint256)\":{\"notice\":\"Emitted when assets are locked for slashing\"}},\"kind\":\"user\",\"methods\":{\"REGISTRY()\":{\"notice\":\"The SLAYRegistry contract that manages operators and withdrawal delays\"},\"ROUTER()\":{\"notice\":\"The SLAYRouter contract that manages pausing and whitelisting\"},\"delegated()\":{\"notice\":\"Returns the address where the vault is delegated to\"},\"getWithdrawalDelay()\":{\"notice\":\"Retrieve the withdrawal delay set by the `delegated()` (Operator in SLAYRegistry) vault.\"},\"isOperator(address,address)\":{\"notice\":\"Checks if the `operator` is an approved operator for the `controller`\"},\"lockSlashing(uint256)\":{\"notice\":\"Moves assets from the vault to the router contract as part of the slashing process\"},\"previewRedeem(uint256)\":{\"notice\":\"Always reverts as preview functions are not supported for asynchronous flows\"},\"previewWithdraw(uint256)\":{\"notice\":\"Always reverts as preview functions are not supported for asynchronous flows\"},\"requestRedeem(uint256,address,address)\":{\"notice\":\"The controller is the address that will be able to claim the redemption request. They take ownership of the shares and can transfer to any address during withdrawal. Only give access to controller that are trusted by the msg.sender (or set it to msg.sender). Likewise, setting it to a random address or (0) is equivalent to \\\"burning\\\" it.\"},\"setOperator(address,bool)\":{\"notice\":\"Sets an operator for a controller\"},\"supportsInterface(bytes4)\":{\"notice\":\"Checks if the contract supports a given interface\"},\"totalActiveStaked()\":{\"notice\":\"Returns the amount of tokenized shares that are actively staked in the vault. This amount will exclude any tokens that are pending redeem, pending withdrawal or donation of shares token. For slashed amount, they are underlying assets, not shares, so they are not included in this amount. They will be reflected in the exchange rate of the vault.\"}},\"notice\":\"ERC4626-compliant tokenized vault designed for asynchronous redemption workflows\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@satlayer/contracts/src/SLAYVaultV2.sol\":\"SLAYVaultV2\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=node_modules/@aave/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@openzeppelin/foundry-upgrades/=node_modules/@openzeppelin/foundry-upgrades/src/\",\":@satlayer/contracts/=node_modules/@satlayer/contracts/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xe9570c90b688339474e80090b0cdf0b2c85c25aa28cc6044d489dda9efc2c716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f358f7eab8cc53b784d5ff3f82073124d797638aee71487beca3543414a46a23\",\"dweb:/ipfs/QmWy153MjdHfUbqtCKELubAmMavjBEeRByTDv9MMoUVZN4\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x075302c23ba4b3a1d2a5000947ac44bbb4e84b011ecadad6f5e3fd92cd568659\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13806b62ea930e61dfba5fbbfd4eafe135bb0e2e4d55ce8cde1407d7b20a739\",\"dweb:/ipfs/QmYjt4fwBLdKrMbGHZPqdsiwsK4obFdXdKFhQBBW5ruEuC\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol\":{\"keccak256\":\"0xfd8828f97df3d421ee29b7ab5051fd465b7035cb44aa74213b8a8d5349c7558f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d56d2f64e953b65c96d6f72b73c2fc1bcc29d46baaca9c92e2c82d91ae4b3050\",\"dweb:/ipfs/QmQrjKHAY8oTnmevXndP2GDA8WS4cvjNi3gvp4jhBSpRUD\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x89374b2a634f0a9c08f5891b6ecce0179bc2e0577819c787ed3268ca428c2459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f13d2572e5bdd55e483dfac069aac47603644071616a41fce699e94368e38c13\",\"dweb:/ipfs/QmfKeyNT6vyb99vJQatPZ88UyZgXNmAiHUXSWnaR1TPE11\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x23460d4a98e568bde8b7ecaa2316853778032106b489c03be29db1abb0e712c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47b8be8c67117387069c0880d69b8df0bef52b54ba01a7f4b90c04f50655bd30\",\"dweb:/ipfs/QmNNpBXysQBbF3GSNTDsP39VBnFEBYUVeg1EWDaHzSsWSz\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"node_modules/@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"node_modules/@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"node_modules/@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"node_modules/@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xe32a5a466492f6a3b871d705d045fc2f8d6e6c8bf69288011531ff875003993f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61c69a907ca80a9cff4bdf30f64d5ee458a6c54f0a87ed7e4c2a1b9275256851\",\"dweb:/ipfs/QmVmhbvE7w5Hs9tj9NBPLk6yAirrEhaRYgTRT9USat4H9a\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x1fc283df727585919c3db301b948a3e827aee16917457ad7f916db9da2228e77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4f4b5e2cd0ebc3b74e41e4e94771a0417eedd9b11cec3ef9f90b2ac2989264b\",\"dweb:/ipfs/QmZmsEsvsXiwAyAe1YeoLSKezeFcvR1giUeEY6ex4zpsTS\"]},\"node_modules/@satlayer/contracts/src/RelationshipV2.sol\":{\"keccak256\":\"0x476a00c6a985c8b5d44c81b800821ca1fb156e4d527414f5227dd1fa500248e2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2aa1058d2c60df65d564b4b453efcdd5e602310fb66eac1e313c0390d8eef763\",\"dweb:/ipfs/QmPyFGVcfeo9dRzHVYPaignPyME2pGDKFoNVhEwaZkk3LT\"]},\"node_modules/@satlayer/contracts/src/SLAYBase.sol\":{\"keccak256\":\"0xcb54991671c9d13a15852d791c6f3522bed7be17c57a66a51bfde4454aa4650b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7018ccefd60a828d7baf02b74f517ab3845c87a9be80ff1d22391ff4751cb890\",\"dweb:/ipfs/QmU3CVxE3G4n2NYb5KzWXoLyjfjxT4urW1SgbPSGPHqdkz\"]},\"node_modules/@satlayer/contracts/src/SLAYRegistryV2.sol\":{\"keccak256\":\"0x06fa99d860c131b8f048cdb256c8298b85c531459f622605aa28416128a5849d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9d7fe7fd2cdfb7383f293742c8ae5090aaa5358623280ab24271a1685f4ecb35\",\"dweb:/ipfs/QmVA8hVtJW4PajkAdjiomBcAjReCs5WU4sdBfACKztPHwh\"]},\"node_modules/@satlayer/contracts/src/SLAYRouterV2.sol\":{\"keccak256\":\"0x71af92222bef5978b4bf835c3780e6890ee9e19996a66e56fb1b7691d123ca15\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://01e76d6de36d5808cdc8b2c4247629b7b45c9f6d309d375dcf9dcfc7b3c9acea\",\"dweb:/ipfs/Qmd8k3xfBoxvUaLZnPfgqNb9xFqbG4xoYRhAaxnTk3ZmtX\"]},\"node_modules/@satlayer/contracts/src/SLAYVaultV2.sol\":{\"keccak256\":\"0xb5c4ae13fe39a5ef5acd5773987185ad4b5cceb143f98e50771f6c93991c3a63\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d1fa9a5dc554bf598f06733a011cce60147fdab53945ece943ed7509cf2b117f\",\"dweb:/ipfs/QmPivTjiNWVZSXNZ18dnHUG1Xov7H7Z4VDdQsTFG7jQgPy\"]},\"node_modules/@satlayer/contracts/src/interface/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"node_modules/@satlayer/contracts/src/interface/IERC7540.sol\":{\"keccak256\":\"0x9e130f02e48f3a015fd9e41428b1c8fb359bb7193bba4bd97f5e068af5903025\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67ebd6a0f3d0197aa74fe905b3135bd555a387bbc9d53975b1bd2134644dbf94\",\"dweb:/ipfs/QmfJytpVRmpytBunkrGLiugW3tPBZn12A3Ak9LAcV6Tj3m\"]},\"node_modules/@satlayer/contracts/src/interface/IERC7575.sol\":{\"keccak256\":\"0xb46aebdd749e632cf76466d2f75428f8e41e8283145818b621acd2624793782c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b32be8816d4658db66fdca29e9a9bc3a071bc47da19d6afa950eec5a32781ccb\",\"dweb:/ipfs/QmbJ27FAJz4rxV2xTzEPHkihYRrvhHH9mdkNSdxvba5Zxf\"]},\"node_modules/@satlayer/contracts/src/interface/ISLAYRegistryV2.sol\":{\"keccak256\":\"0x51333ef7c92f3f6d94691ea0f966acd07b12dc32277dd81892f6783b3bab2f5a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2a20146f9e3a67e6955877ac774d3d0623c80d76a8dcab49fa791cf2bb5b24d3\",\"dweb:/ipfs/QmfVYvZ8pkHvwZbSzWQNkuy3hYmdF7ZkhAmtC9fC8Lftnd\"]},\"node_modules/@satlayer/contracts/src/interface/ISLAYRouterSlashingV2.sol\":{\"keccak256\":\"0x2646cba81e9d4a9d7355bf82d0ae15975372446cf063630de83c443b6fbec182\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5930245bf72345a5225ce6ee11b0dcea27c6a7adc97030a5f16f2bb4182cdbbf\",\"dweb:/ipfs/QmbV3Y2sQHyPF1WgbWZQKHvh63gDnFWp3ixPhaqDPhBDCU\"]},\"node_modules/@satlayer/contracts/src/interface/ISLAYRouterV2.sol\":{\"keccak256\":\"0xcf593eb947d98627d7c3bc27250e33bc55b5d78af97fead4da64a94923839797\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://488da4391a1b48821f69440880ec5a242aad5c00fd729500bfe55fdd463eb73f\",\"dweb:/ipfs/QmVvPzoyhYmktVZwKd96QwArQ2HPjf6AUt7y3ZVqCFZsTK\"]},\"node_modules/@satlayer/contracts/src/interface/ISLAYVaultV2.sol\":{\"keccak256\":\"0xc31f89d1eedddb30e6d4670b53f7a7b928a4002d2ac04f25b409b6eeff80ceb5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0b5d5d80ac3cf14680a86d16a6436275dc48a02e8263689ca1e5555cb4bd8797\",\"dweb:/ipfs/QmbEMuJDvQbqguNiZ5gn47LwYkvc7po3zdWApaxwmcFHKD\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.24+commit.e11b9ed9" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "contract SLAYRouterV2", "name": "router_", "type": "address" },
            { "internalType": "contract SLAYRegistryV2", "name": "registry_", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "ECDSAInvalidSignature" },
        {
          "inputs": [{ "internalType": "uint256", "name": "length", "type": "uint256" }],
          "type": "error",
          "name": "ECDSAInvalidSignatureLength"
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "s", "type": "bytes32" }],
          "type": "error",
          "name": "ECDSAInvalidSignatureS"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "spender", "type": "address" },
            { "internalType": "uint256", "name": "allowance", "type": "uint256" },
            { "internalType": "uint256", "name": "needed", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            { "internalType": "uint256", "name": "balance", "type": "uint256" },
            { "internalType": "uint256", "name": "needed", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [{ "internalType": "address", "name": "approver", "type": "address" }],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [{ "internalType": "address", "name": "receiver", "type": "address" }],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [{ "internalType": "address", "name": "spender", "type": "address" }],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "deadline", "type": "uint256" }],
          "type": "error",
          "name": "ERC2612ExpiredSignature"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "signer", "type": "address" },
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "ERC2612InvalidSigner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "receiver", "type": "address" },
            { "internalType": "uint256", "name": "assets", "type": "uint256" },
            { "internalType": "uint256", "name": "max", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC4626ExceededMaxDeposit"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "receiver", "type": "address" },
            { "internalType": "uint256", "name": "shares", "type": "uint256" },
            { "internalType": "uint256", "name": "max", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC4626ExceededMaxMint"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "uint256", "name": "shares", "type": "uint256" },
            { "internalType": "uint256", "name": "max", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC4626ExceededMaxRedeem"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "uint256", "name": "assets", "type": "uint256" },
            { "internalType": "uint256", "name": "max", "type": "uint256" }
          ],
          "type": "error",
          "name": "ERC4626ExceededMaxWithdraw"
        },
        { "inputs": [], "type": "error", "name": "EnforcedPause" },
        { "inputs": [], "type": "error", "name": "ExceededMaxRedeemable" },
        { "inputs": [], "type": "error", "name": "ExpectedWhitelisted" },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            { "internalType": "uint256", "name": "currentNonce", "type": "uint256" }
          ],
          "type": "error",
          "name": "InvalidAccountNonce"
        },
        { "inputs": [], "type": "error", "name": "InvalidInitialization" },
        { "inputs": [], "type": "error", "name": "MustClaimAll" },
        { "inputs": [], "type": "error", "name": "NotControllerOrOperator" },
        { "inputs": [], "type": "error", "name": "NotInitializing" },
        { "inputs": [], "type": "error", "name": "NotRouter" },
        { "inputs": [], "type": "error", "name": "PreviewNotSupported" },
        {
          "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        { "inputs": [], "type": "error", "name": "WithdrawRequestNotFound" },
        { "inputs": [], "type": "error", "name": "WithdrawalDelayHasNotPassed" },
        { "inputs": [], "type": "error", "name": "ZeroAmount" },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "spender", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "value", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address", "indexed": true },
            { "internalType": "address", "name": "owner", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "assets", "type": "uint256", "indexed": false },
            { "internalType": "uint256", "name": "shares", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        { "inputs": [], "type": "event", "name": "EIP712DomainChanged", "anonymous": false },
        {
          "inputs": [{ "internalType": "uint64", "name": "version", "type": "uint64", "indexed": false }],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "controller", "type": "address", "indexed": true },
            { "internalType": "address", "name": "operator", "type": "address", "indexed": true },
            { "internalType": "bool", "name": "approved", "type": "bool", "indexed": false }
          ],
          "type": "event",
          "name": "OperatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "controller", "type": "address", "indexed": true },
            { "internalType": "address", "name": "owner", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "requestId", "type": "uint256", "indexed": true },
            { "internalType": "address", "name": "sender", "type": "address", "indexed": false },
            { "internalType": "uint256", "name": "assets", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "RedeemRequest",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "amount", "type": "uint256", "indexed": false }],
          "type": "event",
          "name": "SlashingLocked",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address", "indexed": true },
            { "internalType": "address", "name": "to", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "value", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address", "indexed": true },
            { "internalType": "address", "name": "receiver", "type": "address", "indexed": true },
            { "internalType": "address", "name": "owner", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "assets", "type": "uint256", "indexed": false },
            { "internalType": "uint256", "name": "shares", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "Withdraw",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "REGISTRY",
          "outputs": [{ "internalType": "contract SLAYRegistryV2", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ROUTER",
          "outputs": [{ "internalType": "contract SLAYRouterV2", "name": "", "type": "address" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "spender", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "spender", "type": "address" },
            { "internalType": "uint256", "name": "value", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "asset",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "address", "name": "controller", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "claimableRedeemRequest",
          "outputs": [{ "internalType": "uint256", "name": "claimableShares", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "shares", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToAssets",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "assets", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "convertToShares",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegated",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "assets", "type": "uint256" },
            { "internalType": "address", "name": "receiver", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            { "internalType": "bytes1", "name": "fields", "type": "bytes1" },
            { "internalType": "string", "name": "name", "type": "string" },
            { "internalType": "string", "name": "version", "type": "string" },
            { "internalType": "uint256", "name": "chainId", "type": "uint256" },
            { "internalType": "address", "name": "verifyingContract", "type": "address" },
            { "internalType": "bytes32", "name": "salt", "type": "bytes32" },
            { "internalType": "uint256[]", "name": "extensions", "type": "uint256[]" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getWithdrawalDelay",
          "outputs": [{ "internalType": "uint32", "name": "", "type": "uint32" }]
        },
        {
          "inputs": [
            { "internalType": "contract IERC20", "name": "asset_", "type": "address" },
            { "internalType": "address", "name": "delegated_", "type": "address" },
            { "internalType": "string", "name": "name_", "type": "string" },
            { "internalType": "string", "name": "symbol_", "type": "string" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "controller", "type": "address" },
            { "internalType": "address", "name": "operator", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [{ "internalType": "bool", "name": "status", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "amount", "type": "uint256" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lockSlashing"
        },
        {
          "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "maxDeposit",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "maxMint",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "controller", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "maxRedeem",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "controller", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "maxWithdraw",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "shares", "type": "uint256" },
            { "internalType": "address", "name": "receiver", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" },
            { "internalType": "address", "name": "controller", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingRedeemRequest",
          "outputs": [{ "internalType": "uint256", "name": "pendingShares", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "spender", "type": "address" },
            { "internalType": "uint256", "name": "value", "type": "uint256" },
            { "internalType": "uint256", "name": "deadline", "type": "uint256" },
            { "internalType": "uint8", "name": "v", "type": "uint8" },
            { "internalType": "bytes32", "name": "r", "type": "bytes32" },
            { "internalType": "bytes32", "name": "s", "type": "bytes32" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "assets", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "previewDeposit",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "shares", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "previewMint",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "pure",
          "type": "function",
          "name": "previewRedeem",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
          "stateMutability": "pure",
          "type": "function",
          "name": "previewWithdraw",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "shares", "type": "uint256" },
            { "internalType": "address", "name": "receiver", "type": "address" },
            { "internalType": "address", "name": "controller", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [{ "internalType": "uint256", "name": "assets", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "shares", "type": "uint256" },
            { "internalType": "address", "name": "controller", "type": "address" },
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requestRedeem",
          "outputs": [{ "internalType": "uint256", "name": "requestId", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "operator", "type": "address" },
            { "internalType": "bool", "name": "approved", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperator",
          "outputs": [{ "internalType": "bool", "name": "success", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "bytes4", "name": "interfaceId", "type": "bytes4" }],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalActiveStaked",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalAssets",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "value", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "from", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "value", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "assets", "type": "uint256" },
            { "internalType": "address", "name": "receiver", "type": "address" },
            { "internalType": "address", "name": "controller", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [{ "internalType": "uint256", "name": "shares", "type": "uint256" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
          },
          "allowance(address,address)": {
            "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "asset()": {
            "details": "Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert."
          },
          "balanceOf(address)": { "details": "Returns the value of tokens owned by `account`." },
          "claimableRedeemRequest(uint256,address)": {
            "details": "Returns the amount of requested shares in Claimable state for the controller to redeem or withdraw. - MUST NOT include any shares in Pending state for redeem or withdraw. - MUST NOT show any variations depending on the caller. - MUST NOT revert unless due to integer overflow caused by an unreasonably large input."
          },
          "constructor": {
            "custom:oz-upgrades-unsafe-allow": "constructor",
            "details": "Sets immutable references to the router and registry contracts Disables initializers to prevent re-initialization",
            "params": {
              "registry_": "The address of the SLAYRegistry contract",
              "router_": "The address of the SLAYRouter contract"
            }
          },
          "convertToAssets(uint256)": {
            "details": "Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."
          },
          "convertToShares(uint256)": {
            "details": "Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."
          },
          "decimals()": { "details": "Returns the decimals places of the token." },
          "delegated()": {
            "details": "This address is the SatLayer operator that is delegated to manage the vault This address cannot withdraw assets from the vault See https://build.satlayer.xyz/architecture/operators for more information",
            "returns": { "_0": "The address of the delegated operator" }
          },
          "deposit(uint256,address)": {
            "details": "Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
          },
          "eip712Domain()": {
            "details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
          },
          "initialize(address,address,string,string)": {
            "details": "Initializes the SLAYVault with the given parameters This function is called by the SLAYVaultFactory when creating a new SLAYVault instance Not to be called directly",
            "params": {
              "asset_": "The address of the underlying asset (ERC20 token) that the vault will hold",
              "delegated_": "The address of the delegated operator for this vault",
              "name_": "The name of the vault, used for ERC20 token metadata",
              "symbol_": "The symbol of the vault, used for ERC20 token metadata"
            }
          },
          "isOperator(address,address)": {
            "details": "This is not the same as the SatLayer Operator See ERC7540 for more details on Operators",
            "params": { "controller": "The address of the controller.", "operator": "The address of the operator." },
            "returns": { "status": "The approval status" }
          },
          "lockSlashing(uint256)": {
            "details": "Only callable by the router contract. This function is used during the slashing process to transfer assets from the vault to the router for penalty distribution",
            "params": { "amount": "The amount of underlying asset to move to the router" }
          },
          "maxDeposit(address)": {
            "details": "Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert."
          },
          "maxMint(address)": {
            "details": "Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert."
          },
          "maxRedeem(address)": {
            "details": "Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert."
          },
          "maxWithdraw(address)": {
            "details": "Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert."
          },
          "mint(uint256,address)": {
            "details": "Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
          },
          "name()": { "details": "Returns the name of the token." },
          "nonces(address)": {
            "details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
          },
          "pendingRedeemRequest(uint256,address)": {
            "details": "Returns the amount of requested shares in Pending state. - MUST NOT include any shares in Claimable state for redeem or withdraw. - MUST NOT show any variations depending on the caller. - MUST NOT revert unless due to integer overflow caused by an unreasonably large input."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
          },
          "previewDeposit(uint256)": {
            "details": "Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."
          },
          "previewMint(uint256)": {
            "details": "Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting."
          },
          "previewRedeem(uint256)": {
            "details": "For ERC7540, preview functions MUST revert for all callers and inputs See https://eips.ethereum.org/EIPS/eip-7540#reversion-of-preview-functions-in-async-request-flows"
          },
          "previewWithdraw(uint256)": {
            "details": "For ERC7540, preview functions MUST revert for all callers and inputs See https://eips.ethereum.org/EIPS/eip-7540#reversion-of-preview-functions-in-async-request-flows"
          },
          "redeem(uint256,address,address)": {
            "details": "For ERC7540, the redeem functions are used to claim the shares. This function does not transfer the shares to the contract, because this already happened on requestRedeem. Controller MUST be the msg.sender unless the controller has approved msg.sender as an operator."
          },
          "requestRedeem(uint256,address,address)": {
            "details": "Assumes control of shares from sender into the Vault and submits a Request for asynchronous redeem. - MUST support a redeem Request flow where the control of shares is taken from sender directly   where msg.sender has ERC-20 approval over the shares of owner. - MUST revert if all of shares cannot be requested for redeem.",
            "params": {
              "controller": "the controller of the request who will be able to operate the request",
              "owner": "the source of the shares to be redeemed NOTE: most implementations will require pre-approval of the Vault with the Vault's share token.",
              "shares": "the amount of shares to be redeemed to transfer from owner"
            }
          },
          "setOperator(address,bool)": {
            "details": "This is ERC7540's Operator, not SatLayer's Operator An Operator in this context is an account that can manage Requests on behalf of another account This includes the ability to request and claim redemptions This is an optional feature to allow third parties to manage redemptions on behalf of the controller You do not need to set an Operator to request or claim redemptions As described in the ERC7540 standard",
            "params": { "approved": "The approval status.", "operator": "The address of the operator." },
            "returns": { "success": "Whether the call was executed successfully or not" }
          },
          "supportsInterface(bytes4)": {
            "details": "Support for the most common interfaces for SLAYVault There might be more interfaces not listed here"
          },
          "symbol()": { "details": "Returns the symbol of the token, usually a shorter version of the name." },
          "totalActiveStaked()": { "returns": { "_0": "Total tokens actively staked in the vault" } },
          "totalAssets()": {
            "details": "Returns the total amount of the underlying asset that is “managed” by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert."
          },
          "totalSupply()": { "details": "Returns the value of tokens in existence." },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          },
          "withdraw(uint256,address,address)": {
            "details": "For ERC7540, the withdraw functions are used to claim the assets. This function does not transfer the shares to the contract, because this already happened on requestRedeem. Controller MUST be the msg.sender unless the controller has approved msg.sender as an operator."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "REGISTRY()": { "notice": "The SLAYRegistry contract that manages operators and withdrawal delays" },
          "ROUTER()": { "notice": "The SLAYRouter contract that manages pausing and whitelisting" },
          "delegated()": { "notice": "Returns the address where the vault is delegated to" },
          "getWithdrawalDelay()": {
            "notice": "Retrieve the withdrawal delay set by the `delegated()` (Operator in SLAYRegistry) vault."
          },
          "isOperator(address,address)": {
            "notice": "Checks if the `operator` is an approved operator for the `controller`"
          },
          "lockSlashing(uint256)": {
            "notice": "Moves assets from the vault to the router contract as part of the slashing process"
          },
          "previewRedeem(uint256)": {
            "notice": "Always reverts as preview functions are not supported for asynchronous flows"
          },
          "previewWithdraw(uint256)": {
            "notice": "Always reverts as preview functions are not supported for asynchronous flows"
          },
          "requestRedeem(uint256,address,address)": {
            "notice": "The controller is the address that will be able to claim the redemption request. They take ownership of the shares and can transfer to any address during withdrawal. Only give access to controller that are trusted by the msg.sender (or set it to msg.sender). Likewise, setting it to a random address or (0) is equivalent to \"burning\" it."
          },
          "setOperator(address,bool)": { "notice": "Sets an operator for a controller" },
          "supportsInterface(bytes4)": { "notice": "Checks if the contract supports a given interface" },
          "totalActiveStaked()": {
            "notice": "Returns the amount of tokenized shares that are actively staked in the vault. This amount will exclude any tokens that are pending redeem, pending withdrawal or donation of shares token. For slashed amount, they are underlying assets, not shares, so they are not included in this amount. They will be reflected in the exchange rate of the vault."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aave/=node_modules/@aave/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@openzeppelin/foundry-upgrades/=node_modules/@openzeppelin/foundry-upgrades/src/",
        "@satlayer/contracts/=node_modules/@satlayer/contracts/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "node_modules/@satlayer/contracts/src/SLAYVaultV2.sol": "SLAYVaultV2" },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0xe9570c90b688339474e80090b0cdf0b2c85c25aa28cc6044d489dda9efc2c716",
        "urls": [
          "bzz-raw://f358f7eab8cc53b784d5ff3f82073124d797638aee71487beca3543414a46a23",
          "dweb:/ipfs/QmWy153MjdHfUbqtCKELubAmMavjBEeRByTDv9MMoUVZN4"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
        "urls": [
          "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
          "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63",
        "urls": [
          "bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec",
          "dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022",
        "urls": [
          "bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0",
          "dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol": {
        "keccak256": "0x075302c23ba4b3a1d2a5000947ac44bbb4e84b011ecadad6f5e3fd92cd568659",
        "urls": [
          "bzz-raw://c13806b62ea930e61dfba5fbbfd4eafe135bb0e2e4d55ce8cde1407d7b20a739",
          "dweb:/ipfs/QmYjt4fwBLdKrMbGHZPqdsiwsK4obFdXdKFhQBBW5ruEuC"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol": {
        "keccak256": "0xfd8828f97df3d421ee29b7ab5051fd465b7035cb44aa74213b8a8d5349c7558f",
        "urls": [
          "bzz-raw://d56d2f64e953b65c96d6f72b73c2fc1bcc29d46baaca9c92e2c82d91ae4b3050",
          "dweb:/ipfs/QmQrjKHAY8oTnmevXndP2GDA8WS4cvjNi3gvp4jhBSpRUD"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol": {
        "keccak256": "0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4",
        "urls": [
          "bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827",
          "dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
        "keccak256": "0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5",
        "urls": [
          "bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb",
          "dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866",
        "urls": [
          "bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf",
          "dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol": {
        "keccak256": "0x89374b2a634f0a9c08f5891b6ecce0179bc2e0577819c787ed3268ca428c2459",
        "urls": [
          "bzz-raw://f13d2572e5bdd55e483dfac069aac47603644071616a41fce699e94368e38c13",
          "dweb:/ipfs/QmfKeyNT6vyb99vJQatPZ88UyZgXNmAiHUXSWnaR1TPE11"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f",
        "urls": [
          "bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a",
          "dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d",
        "urls": [
          "bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100",
          "dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc",
        "urls": [
          "bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037",
          "dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5",
        "urls": [
          "bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c",
          "dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44",
        "urls": [
          "bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d",
          "dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0x23460d4a98e568bde8b7ecaa2316853778032106b489c03be29db1abb0e712c4",
        "urls": [
          "bzz-raw://47b8be8c67117387069c0880d69b8df0bef52b54ba01a7f4b90c04f50655bd30",
          "dweb:/ipfs/QmNNpBXysQBbF3GSNTDsP39VBnFEBYUVeg1EWDaHzSsWSz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee",
        "urls": [
          "bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae",
          "dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b",
        "urls": [
          "bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422",
          "dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e",
        "urls": [
          "bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23",
          "dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618",
        "urls": [
          "bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a",
          "dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b",
        "urls": [
          "bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d",
          "dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
        "urls": [
          "bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
          "dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f",
        "urls": [
          "bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e",
          "dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4",
        "urls": [
          "bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a",
          "dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
        "urls": [
          "bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
          "dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0",
        "urls": [
          "bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f",
          "dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Arrays.sol": {
        "keccak256": "0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e",
        "urls": [
          "bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d",
          "dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Comparators.sol": {
        "keccak256": "0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58",
        "urls": [
          "bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd",
          "dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Errors.sol": {
        "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
        "urls": [
          "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
          "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol": {
        "keccak256": "0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26",
        "urls": [
          "bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2",
          "dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4",
        "urls": [
          "bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e",
          "dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84",
        "urls": [
          "bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9",
          "dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
        "keccak256": "0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631",
        "urls": [
          "bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59",
          "dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c",
        "urls": [
          "bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617",
          "dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
        "urls": [
          "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
          "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
        "urls": [
          "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
          "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol": {
        "keccak256": "0xe32a5a466492f6a3b871d705d045fc2f8d6e6c8bf69288011531ff875003993f",
        "urls": [
          "bzz-raw://61c69a907ca80a9cff4bdf30f64d5ee458a6c54f0a87ed7e4c2a1b9275256851",
          "dweb:/ipfs/QmVmhbvE7w5Hs9tj9NBPLk6yAirrEhaRYgTRT9USat4H9a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x1fc283df727585919c3db301b948a3e827aee16917457ad7f916db9da2228e77",
        "urls": [
          "bzz-raw://a4f4b5e2cd0ebc3b74e41e4e94771a0417eedd9b11cec3ef9f90b2ac2989264b",
          "dweb:/ipfs/QmZmsEsvsXiwAyAe1YeoLSKezeFcvR1giUeEY6ex4zpsTS"
        ],
        "license": "MIT"
      },
      "node_modules/@satlayer/contracts/src/RelationshipV2.sol": {
        "keccak256": "0x476a00c6a985c8b5d44c81b800821ca1fb156e4d527414f5227dd1fa500248e2",
        "urls": [
          "bzz-raw://2aa1058d2c60df65d564b4b453efcdd5e602310fb66eac1e313c0390d8eef763",
          "dweb:/ipfs/QmPyFGVcfeo9dRzHVYPaignPyME2pGDKFoNVhEwaZkk3LT"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/SLAYBase.sol": {
        "keccak256": "0xcb54991671c9d13a15852d791c6f3522bed7be17c57a66a51bfde4454aa4650b",
        "urls": [
          "bzz-raw://7018ccefd60a828d7baf02b74f517ab3845c87a9be80ff1d22391ff4751cb890",
          "dweb:/ipfs/QmU3CVxE3G4n2NYb5KzWXoLyjfjxT4urW1SgbPSGPHqdkz"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/SLAYRegistryV2.sol": {
        "keccak256": "0x06fa99d860c131b8f048cdb256c8298b85c531459f622605aa28416128a5849d",
        "urls": [
          "bzz-raw://9d7fe7fd2cdfb7383f293742c8ae5090aaa5358623280ab24271a1685f4ecb35",
          "dweb:/ipfs/QmVA8hVtJW4PajkAdjiomBcAjReCs5WU4sdBfACKztPHwh"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/SLAYRouterV2.sol": {
        "keccak256": "0x71af92222bef5978b4bf835c3780e6890ee9e19996a66e56fb1b7691d123ca15",
        "urls": [
          "bzz-raw://01e76d6de36d5808cdc8b2c4247629b7b45c9f6d309d375dcf9dcfc7b3c9acea",
          "dweb:/ipfs/Qmd8k3xfBoxvUaLZnPfgqNb9xFqbG4xoYRhAaxnTk3ZmtX"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/SLAYVaultV2.sol": {
        "keccak256": "0xb5c4ae13fe39a5ef5acd5773987185ad4b5cceb143f98e50771f6c93991c3a63",
        "urls": [
          "bzz-raw://d1fa9a5dc554bf598f06733a011cce60147fdab53945ece943ed7509cf2b117f",
          "dweb:/ipfs/QmPivTjiNWVZSXNZ18dnHUG1Xov7H7Z4VDdQsTFG7jQgPy"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/interface/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "node_modules/@satlayer/contracts/src/interface/IERC7540.sol": {
        "keccak256": "0x9e130f02e48f3a015fd9e41428b1c8fb359bb7193bba4bd97f5e068af5903025",
        "urls": [
          "bzz-raw://67ebd6a0f3d0197aa74fe905b3135bd555a387bbc9d53975b1bd2134644dbf94",
          "dweb:/ipfs/QmfJytpVRmpytBunkrGLiugW3tPBZn12A3Ak9LAcV6Tj3m"
        ],
        "license": "MIT"
      },
      "node_modules/@satlayer/contracts/src/interface/IERC7575.sol": {
        "keccak256": "0xb46aebdd749e632cf76466d2f75428f8e41e8283145818b621acd2624793782c",
        "urls": [
          "bzz-raw://b32be8816d4658db66fdca29e9a9bc3a071bc47da19d6afa950eec5a32781ccb",
          "dweb:/ipfs/QmbJ27FAJz4rxV2xTzEPHkihYRrvhHH9mdkNSdxvba5Zxf"
        ],
        "license": "MIT"
      },
      "node_modules/@satlayer/contracts/src/interface/ISLAYRegistryV2.sol": {
        "keccak256": "0x51333ef7c92f3f6d94691ea0f966acd07b12dc32277dd81892f6783b3bab2f5a",
        "urls": [
          "bzz-raw://2a20146f9e3a67e6955877ac774d3d0623c80d76a8dcab49fa791cf2bb5b24d3",
          "dweb:/ipfs/QmfVYvZ8pkHvwZbSzWQNkuy3hYmdF7ZkhAmtC9fC8Lftnd"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/interface/ISLAYRouterSlashingV2.sol": {
        "keccak256": "0x2646cba81e9d4a9d7355bf82d0ae15975372446cf063630de83c443b6fbec182",
        "urls": [
          "bzz-raw://5930245bf72345a5225ce6ee11b0dcea27c6a7adc97030a5f16f2bb4182cdbbf",
          "dweb:/ipfs/QmbV3Y2sQHyPF1WgbWZQKHvh63gDnFWp3ixPhaqDPhBDCU"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/interface/ISLAYRouterV2.sol": {
        "keccak256": "0xcf593eb947d98627d7c3bc27250e33bc55b5d78af97fead4da64a94923839797",
        "urls": [
          "bzz-raw://488da4391a1b48821f69440880ec5a242aad5c00fd729500bfe55fdd463eb73f",
          "dweb:/ipfs/QmVvPzoyhYmktVZwKd96QwArQ2HPjf6AUt7y3ZVqCFZsTK"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/interface/ISLAYVaultV2.sol": {
        "keccak256": "0xc31f89d1eedddb30e6d4670b53f7a7b928a4002d2ac04f25b409b6eeff80ceb5",
        "urls": [
          "bzz-raw://0b5d5d80ac3cf14680a86d16a6436275dc48a02e8263689ca1e5555cb4bd8797",
          "dweb:/ipfs/QmbEMuJDvQbqguNiZ5gn47LwYkvc7po3zdWApaxwmcFHKD"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26533,
        "contract": "node_modules/@satlayer/contracts/src/SLAYVaultV2.sol:SLAYVaultV2",
        "label": "_delegated",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 26540,
        "contract": "node_modules/@satlayer/contracts/src/SLAYVaultV2.sol:SLAYVaultV2",
        "label": "_isOperator",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 26546,
        "contract": "node_modules/@satlayer/contracts/src/SLAYVaultV2.sol:SLAYVaultV2",
        "label": "_pendingRedemption",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(RedeemRequestStruct)28684_storage)"
      }
    ],
    "types": {
      "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
      "t_bool": { "encoding": "inplace", "label": "bool", "numberOfBytes": "1" },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_struct(RedeemRequestStruct)28684_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ISLAYVaultV2.RedeemRequestStruct)",
        "numberOfBytes": "32",
        "value": "t_struct(RedeemRequestStruct)28684_storage"
      },
      "t_struct(RedeemRequestStruct)28684_storage": {
        "encoding": "inplace",
        "label": "struct ISLAYVaultV2.RedeemRequestStruct",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 28680,
            "contract": "node_modules/@satlayer/contracts/src/SLAYVaultV2.sol:SLAYVaultV2",
            "label": "shares",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 28683,
            "contract": "node_modules/@satlayer/contracts/src/SLAYVaultV2.sol:SLAYVaultV2",
            "label": "claimableAt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ]
      },
      "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" }
    }
  },
  "ast": {
    "absolutePath": "node_modules/@satlayer/contracts/src/SLAYVaultV2.sol",
    "id": 27420,
    "exportedSymbols": {
      "ERC165Upgradeable": [4349],
      "ERC20PermitUpgradeable": [2767],
      "ERC20Upgradeable": [2598],
      "ERC4626Upgradeable": [3519],
      "IERC20": [6631],
      "IERC20Metadata": [7351],
      "IERC4626": [5158],
      "IERC7540Operator": [27465],
      "IERC7540Redeem": [27585],
      "ISLAYVaultV2": [28709],
      "Initializable": [1799],
      "SLAYRegistryV2": [24613],
      "SLAYRouterV2": [26255],
      "SLAYVaultV2": [27419],
      "SafeERC20": [7851]
    },
    "nodeType": "SourceUnit",
    "src": "37:19299:79",
    "nodes": [
      {
        "id": 26474,
        "nodeType": "PragmaDirective",
        "src": "37:24:79",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".24"]
      },
      {
        "id": 26476,
        "nodeType": "ImportDirective",
        "src": "63:112:79",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27420,
        "sourceUnit": 4350,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26475,
              "name": "ERC165Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4349,
              "src": "71:17:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26478,
        "nodeType": "ImportDirective",
        "src": "176:129:79",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27420,
        "sourceUnit": 2768,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26477,
              "name": "ERC20PermitUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2767,
              "src": "184:22:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26480,
        "nodeType": "ImportDirective",
        "src": "306:102:79",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27420,
        "sourceUnit": 2599,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26479,
              "name": "ERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2598,
              "src": "314:16:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26482,
        "nodeType": "ImportDirective",
        "src": "409:117:79",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27420,
        "sourceUnit": 3520,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26481,
              "name": "ERC4626Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3519,
              "src": "417:18:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26484,
        "nodeType": "ImportDirective",
        "src": "527:97:79",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27420,
        "sourceUnit": 7352,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26483,
              "name": "IERC20Metadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7351,
              "src": "535:14:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26486,
        "nodeType": "ImportDirective",
        "src": "625:82:79",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27420,
        "sourceUnit": 7852,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26485,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7851,
              "src": "633:9:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26488,
        "nodeType": "ImportDirective",
        "src": "708:70:79",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27420,
        "sourceUnit": 6632,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26487,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6631,
              "src": "716:6:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26490,
        "nodeType": "ImportDirective",
        "src": "779:73:79",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/interfaces/IERC4626.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27420,
        "sourceUnit": 5159,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26489,
              "name": "IERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5158,
              "src": "787:8:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26492,
        "nodeType": "ImportDirective",
        "src": "853:96:79",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27420,
        "sourceUnit": 1800,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26491,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1799,
              "src": "861:13:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26495,
        "nodeType": "ImportDirective",
        "src": "951:74:79",
        "nodes": [],
        "absolutePath": "node_modules/@satlayer/contracts/src/interface/IERC7540.sol",
        "file": "./interface/IERC7540.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27420,
        "sourceUnit": 27594,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26493,
              "name": "IERC7540Redeem",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27585,
              "src": "959:14:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 26494,
              "name": "IERC7540Operator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27465,
              "src": "975:16:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26497,
        "nodeType": "ImportDirective",
        "src": "1027:52:79",
        "nodes": [],
        "absolutePath": "node_modules/@satlayer/contracts/src/SLAYRegistryV2.sol",
        "file": "./SLAYRegistryV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27420,
        "sourceUnit": 24614,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26496,
              "name": "SLAYRegistryV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24613,
              "src": "1035:14:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26499,
        "nodeType": "ImportDirective",
        "src": "1080:48:79",
        "nodes": [],
        "absolutePath": "node_modules/@satlayer/contracts/src/SLAYRouterV2.sol",
        "file": "./SLAYRouterV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27420,
        "sourceUnit": 26256,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26498,
              "name": "SLAYRouterV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26255,
              "src": "1088:12:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26501,
        "nodeType": "ImportDirective",
        "src": "1129:58:79",
        "nodes": [],
        "absolutePath": "node_modules/@satlayer/contracts/src/interface/ISLAYVaultV2.sol",
        "file": "./interface/ISLAYVaultV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27420,
        "sourceUnit": 28710,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26500,
              "name": "ISLAYVaultV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28709,
              "src": "1137:12:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 27419,
        "nodeType": "ContractDefinition",
        "src": "2519:16816:79",
        "nodes": [
          {
            "id": 26518,
            "nodeType": "UsingForDirective",
            "src": "2682:27:79",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 26515,
              "name": "SafeERC20",
              "nameLocations": ["2688:9:79"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7851,
              "src": "2688:9:79"
            },
            "typeName": {
              "id": 26517,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26516,
                "name": "IERC20",
                "nameLocations": ["2702:6:79"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6631,
                "src": "2702:6:79"
              },
              "referencedDeclaration": 6631,
              "src": "2702:6:79",
              "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$6631", "typeString": "contract IERC20" }
            }
          },
          {
            "id": 26522,
            "nodeType": "VariableDeclaration",
            "src": "3025:40:79",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 26519,
              "nodeType": "StructuredDocumentation",
              "src": "2898:122:79",
              "text": "@dev Assume requests are non-fungible and all have ID = 0\n @notice Constant ID used for all redemption requests"
            },
            "mutability": "constant",
            "name": "REQUEST_ID",
            "nameLocation": "3051:10:79",
            "scope": 27419,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
            "typeName": {
              "id": 26520,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3025:7:79",
              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
            },
            "value": {
              "hexValue": "30",
              "id": 26521,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3064:1:79",
              "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "id": 26526,
            "nodeType": "VariableDeclaration",
            "src": "3283:36:79",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 26523,
              "nodeType": "StructuredDocumentation",
              "src": "3072:206:79",
              "text": "@notice The SLAYRouter contract that manages pausing and whitelisting\n @dev This is an immutable reference to the router contract\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
            },
            "functionSelector": "32fe7b26",
            "mutability": "immutable",
            "name": "ROUTER",
            "nameLocation": "3313:6:79",
            "scope": 27419,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLAYRouterV2_$26255",
              "typeString": "contract SLAYRouterV2"
            },
            "typeName": {
              "id": 26525,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26524,
                "name": "SLAYRouterV2",
                "nameLocations": ["3283:12:79"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26255,
                "src": "3283:12:79"
              },
              "referencedDeclaration": 26255,
              "src": "3283:12:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLAYRouterV2_$26255",
                "typeString": "contract SLAYRouterV2"
              }
            },
            "visibility": "public"
          },
          {
            "id": 26530,
            "nodeType": "VariableDeclaration",
            "src": "3548:40:79",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 26527,
              "nodeType": "StructuredDocumentation",
              "src": "3326:217:79",
              "text": "@notice The SLAYRegistry contract that manages operators and withdrawal delays\n @dev This is an immutable reference to the registry contract\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
            },
            "functionSelector": "06433b1b",
            "mutability": "immutable",
            "name": "REGISTRY",
            "nameLocation": "3580:8:79",
            "scope": 27419,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLAYRegistryV2_$24613",
              "typeString": "contract SLAYRegistryV2"
            },
            "typeName": {
              "id": 26529,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26528,
                "name": "SLAYRegistryV2",
                "nameLocations": ["3548:14:79"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24613,
                "src": "3548:14:79"
              },
              "referencedDeclaration": 24613,
              "src": "3548:14:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLAYRegistryV2_$24613",
                "typeString": "contract SLAYRegistryV2"
              }
            },
            "visibility": "public"
          },
          {
            "id": 26533,
            "nodeType": "VariableDeclaration",
            "src": "3928:27:79",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 26531,
              "nodeType": "StructuredDocumentation",
              "src": "3595:328:79",
              "text": " @notice The address where the vault is delegated to\n @dev This address cannot withdraw assets from the vault\n This delegated address (also called the Operator in SLAYRegistry) is not the same as the ERC7540 Operator\n See https://build.satlayer.xyz/architecture/operators for more information"
            },
            "mutability": "mutable",
            "name": "_delegated",
            "nameLocation": "3945:10:79",
            "scope": 27419,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
            "typeName": {
              "id": 26532,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3928:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "visibility": "internal"
          },
          {
            "id": 26540,
            "nodeType": "VariableDeclaration",
            "src": "4055:85:79",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 26534,
              "nodeType": "StructuredDocumentation",
              "src": "3962:88:79",
              "text": "@dev Maps controller addresses to a mapping of operator addresses to approval status"
            },
            "mutability": "mutable",
            "name": "_isOperator",
            "nameLocation": "4129:11:79",
            "scope": 27419,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 26539,
              "keyName": "controller",
              "keyNameLocation": "4071:10:79",
              "keyType": {
                "id": 26535,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4063:7:79",
                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
              },
              "nodeType": "Mapping",
              "src": "4055:64:79",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 26538,
                "keyName": "operator",
                "keyNameLocation": "4101:8:79",
                "keyType": {
                  "id": 26536,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4093:7:79",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                },
                "nodeType": "Mapping",
                "src": "4085:33:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 26537,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "4113:4:79",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 26546,
            "nodeType": "VariableDeclaration",
            "src": "4222:78:79",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 26541,
              "nodeType": "StructuredDocumentation",
              "src": "4147:70:79",
              "text": "@dev Maps controller addresses to their redemption request details"
            },
            "mutability": "mutable",
            "name": "_pendingRedemption",
            "nameLocation": "4282:18:79",
            "scope": 27419,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RedeemRequestStruct_$28684_storage_$",
              "typeString": "mapping(address => struct ISLAYVaultV2.RedeemRequestStruct)"
            },
            "typeName": {
              "id": 26545,
              "keyName": "controller",
              "keyNameLocation": "4238:10:79",
              "keyType": {
                "id": 26542,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4230:7:79",
                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
              },
              "nodeType": "Mapping",
              "src": "4222:50:79",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RedeemRequestStruct_$28684_storage_$",
                "typeString": "mapping(address => struct ISLAYVaultV2.RedeemRequestStruct)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 26544,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 26543,
                  "name": "RedeemRequestStruct",
                  "nameLocations": ["4252:19:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28684,
                  "src": "4252:19:79"
                },
                "referencedDeclaration": 28684,
                "src": "4252:19:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                  "typeString": "struct ISLAYVaultV2.RedeemRequestStruct"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 26573,
            "nodeType": "ModifierDefinition",
            "src": "4499:239:79",
            "nodes": [],
            "body": {
              "id": 26572,
              "nodeType": "Block",
              "src": "4553:185:79",
              "nodes": [],
              "statements": [
                {
                  "assignments": [26552],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26552,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "4571:6:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 26572,
                      "src": "4563:14:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                      "typeName": {
                        "id": 26551,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4563:7:79",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26555,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 26553,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3547,
                      "src": "4580:10:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 26554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4580:12:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4563:29:79"
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" },
                    "id": 26565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                      "id": 26558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 26556,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26552,
                        "src": "4606:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 26557,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26549,
                        "src": "4616:10:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "src": "4606:20:79",
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 26564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "4630:32:79",
                      "subExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 26559,
                            "name": "_isOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26540,
                            "src": "4631:11:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(address => mapping(address => bool))"
                            }
                          },
                          "id": 26561,
                          "indexExpression": {
                            "id": 26560,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26549,
                            "src": "4643:10:79",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4631:23:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 26563,
                        "indexExpression": {
                          "id": 26562,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26552,
                          "src": "4655:6:79",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4631:31:79",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    },
                    "src": "4606:56:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 26570,
                  "nodeType": "IfStatement",
                  "src": "4602:119:79",
                  "trueBody": {
                    "id": 26569,
                    "nodeType": "Block",
                    "src": "4664:57:79",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 26566,
                            "name": "NotControllerOrOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28662,
                            "src": "4685:23:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 26567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4685:25:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 26568,
                        "nodeType": "RevertStatement",
                        "src": "4678:32:79"
                      }
                    ]
                  }
                },
                { "id": 26571, "nodeType": "PlaceholderStatement", "src": "4730:1:79" }
              ]
            },
            "documentation": {
              "id": 26547,
              "nodeType": "StructuredDocumentation",
              "src": "4307:187:79",
              "text": " @dev Only allows _msgSender() to be the controller or an approved operator of the controller to call the function\n @param controller The address of the controller"
            },
            "name": "onlyControllerOrOperator",
            "nameLocation": "4508:24:79",
            "parameters": {
              "id": 26550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26549,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "4541:10:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26573,
                  "src": "4533:18:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 26548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4533:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4532:20:79"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 26581,
            "nodeType": "ModifierDefinition",
            "src": "4984:72:79",
            "nodes": [],
            "body": {
              "id": 26580,
              "nodeType": "Block",
              "src": "5009:47:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 26576,
                      "name": "_requireNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26716,
                      "src": "5019:17:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 26577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5019:19:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 26578,
                  "nodeType": "ExpressionStatement",
                  "src": "5019:19:79"
                },
                { "id": 26579, "nodeType": "PlaceholderStatement", "src": "5048:1:79" }
              ]
            },
            "documentation": {
              "id": 26574,
              "nodeType": "StructuredDocumentation",
              "src": "4744:235:79",
              "text": " @dev SLAYVault doesn't enforce its own pause state, but relies on the SLAYRouter to manage the pause state\n If the SLAYRouter is paused, all operations marked with this modifier will revert with `EnforcedPause`"
            },
            "name": "whenNotPaused",
            "nameLocation": "4993:13:79",
            "parameters": { "id": 26575, "nodeType": "ParameterList", "parameters": [], "src": "5006:2:79" },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 26589,
            "nodeType": "ModifierDefinition",
            "src": "5214:76:79",
            "nodes": [],
            "body": {
              "id": 26588,
              "nodeType": "Block",
              "src": "5241:49:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 26584,
                      "name": "_requireWhitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26734,
                      "src": "5251:19:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 26585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5251:21:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 26586,
                  "nodeType": "ExpressionStatement",
                  "src": "5251:21:79"
                },
                { "id": 26587, "nodeType": "PlaceholderStatement", "src": "5282:1:79" }
              ]
            },
            "documentation": {
              "id": 26582,
              "nodeType": "StructuredDocumentation",
              "src": "5062:147:79",
              "text": " @dev If the SLAYVault is not whitelisted,\n all operations marked with this modifier will revert with `ExpectedWhitelisted`"
            },
            "name": "onlyWhitelisted",
            "nameLocation": "5223:15:79",
            "parameters": { "id": 26583, "nodeType": "ParameterList", "parameters": [], "src": "5238:2:79" },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 26611,
            "nodeType": "FunctionDefinition",
            "src": "5623:155:79",
            "nodes": [],
            "body": {
              "id": 26610,
              "nodeType": "Block",
              "src": "5683:95:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 26601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26599,
                      "name": "ROUTER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26526,
                      "src": "5693:6:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLAYRouterV2_$26255",
                        "typeString": "contract SLAYRouterV2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26600,
                      "name": "router_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26593,
                      "src": "5702:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLAYRouterV2_$26255",
                        "typeString": "contract SLAYRouterV2"
                      }
                    },
                    "src": "5693:16:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLAYRouterV2_$26255",
                      "typeString": "contract SLAYRouterV2"
                    }
                  },
                  "id": 26602,
                  "nodeType": "ExpressionStatement",
                  "src": "5693:16:79"
                },
                {
                  "expression": {
                    "id": 26605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26603,
                      "name": "REGISTRY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26530,
                      "src": "5719:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLAYRegistryV2_$24613",
                        "typeString": "contract SLAYRegistryV2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26604,
                      "name": "registry_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26596,
                      "src": "5730:9:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLAYRegistryV2_$24613",
                        "typeString": "contract SLAYRegistryV2"
                      }
                    },
                    "src": "5719:20:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLAYRegistryV2_$24613",
                      "typeString": "contract SLAYRegistryV2"
                    }
                  },
                  "id": 26606,
                  "nodeType": "ExpressionStatement",
                  "src": "5719:20:79"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 26607,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1753,
                      "src": "5749:20:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 26608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5749:22:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 26609,
                  "nodeType": "ExpressionStatement",
                  "src": "5749:22:79"
                }
              ]
            },
            "documentation": {
              "id": 26590,
              "nodeType": "StructuredDocumentation",
              "src": "5296:322:79",
              "text": " @dev Sets immutable references to the router and registry contracts\n Disables initializers to prevent re-initialization\n @param router_ The address of the SLAYRouter contract\n @param registry_ The address of the SLAYRegistry contract\n @custom:oz-upgrades-unsafe-allow constructor"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 26597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26593,
                  "mutability": "mutable",
                  "name": "router_",
                  "nameLocation": "5648:7:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26611,
                  "src": "5635:20:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SLAYRouterV2_$26255",
                    "typeString": "contract SLAYRouterV2"
                  },
                  "typeName": {
                    "id": 26592,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 26591,
                      "name": "SLAYRouterV2",
                      "nameLocations": ["5635:12:79"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 26255,
                      "src": "5635:12:79"
                    },
                    "referencedDeclaration": 26255,
                    "src": "5635:12:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLAYRouterV2_$26255",
                      "typeString": "contract SLAYRouterV2"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26596,
                  "mutability": "mutable",
                  "name": "registry_",
                  "nameLocation": "5672:9:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26611,
                  "src": "5657:24:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SLAYRegistryV2_$24613",
                    "typeString": "contract SLAYRegistryV2"
                  },
                  "typeName": {
                    "id": 26595,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 26594,
                      "name": "SLAYRegistryV2",
                      "nameLocations": ["5657:14:79"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24613,
                      "src": "5657:14:79"
                    },
                    "referencedDeclaration": 24613,
                    "src": "5657:14:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLAYRegistryV2_$24613",
                      "typeString": "contract SLAYRegistryV2"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5634:48:79"
            },
            "returnParameters": { "id": 26598, "nodeType": "ParameterList", "parameters": [], "src": "5683:0:79" },
            "scope": 27419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26654,
            "nodeType": "FunctionDefinition",
            "src": "6322:363:79",
            "nodes": [],
            "body": {
              "id": 26653,
              "nodeType": "Block",
              "src": "6460:225:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                        "id": 26632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26627,
                          "name": "delegated_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26617,
                          "src": "6478:10:79",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 26630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6500:1:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }],
                            "id": 26629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6492:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 26628,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6492:7:79",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 26631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6492:10:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "src": "6478:24:79",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "44656c656761746564206973206e6f7420612076616c6964206163636f756e74",
                        "id": 26633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6504:34:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_028a322e9fbd5e753e1658a1525c5cbfc656fb354fa9aedcded429b63f881c18",
                          "typeString": "literal_string \"Delegated is not a valid account\""
                        },
                        "value": "Delegated is not a valid account"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_028a322e9fbd5e753e1658a1525c5cbfc656fb354fa9aedcded429b63f881c18",
                          "typeString": "literal_string \"Delegated is not a valid account\""
                        }
                      ],
                      "id": 26626,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "6470:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6470:69:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 26635,
                  "nodeType": "ExpressionStatement",
                  "src": "6470:69:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26637,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26619,
                        "src": "6563:5:79",
                        "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                      },
                      {
                        "id": 26638,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26621,
                        "src": "6570:7:79",
                        "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" },
                        { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                      ],
                      "id": 26636,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2049,
                      "src": "6550:12:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 26639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6550:28:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 26640,
                  "nodeType": "ExpressionStatement",
                  "src": "6550:28:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26642,
                        "name": "asset_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26615,
                        "src": "6603:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6631",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_contract$_IERC20_$6631", "typeString": "contract IERC20" }
                      ],
                      "id": 26641,
                      "name": "__ERC4626_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2861,
                      "src": "6588:14:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$6631_$returns$__$",
                        "typeString": "function (contract IERC20)"
                      }
                    },
                    "id": 26643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6588:22:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 26644,
                  "nodeType": "ExpressionStatement",
                  "src": "6588:22:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26646,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26619,
                        "src": "6639:5:79",
                        "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }],
                      "id": 26645,
                      "name": "__ERC20Permit_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2654,
                      "src": "6620:18:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 26647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6620:25:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 26648,
                  "nodeType": "ExpressionStatement",
                  "src": "6620:25:79"
                },
                {
                  "expression": {
                    "id": 26651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26649,
                      "name": "_delegated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26533,
                      "src": "6655:10:79",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26650,
                      "name": "delegated_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26617,
                      "src": "6668:10:79",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "src": "6655:23:79",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "id": 26652,
                  "nodeType": "ExpressionStatement",
                  "src": "6655:23:79"
                }
              ]
            },
            "documentation": {
              "id": 26612,
              "nodeType": "StructuredDocumentation",
              "src": "5784:533:79",
              "text": " @dev Initializes the SLAYVault with the given parameters\n This function is called by the SLAYVaultFactory when creating a new SLAYVault instance\n Not to be called directly\n @param asset_ The address of the underlying asset (ERC20 token) that the vault will hold\n @param delegated_ The address of the delegated operator for this vault\n @param name_ The name of the vault, used for ERC20 token metadata\n @param symbol_ The symbol of the vault, used for ERC20 token metadata"
            },
            "functionSelector": "2016a0d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 26624,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 26623,
                  "name": "initializer",
                  "nameLocations": ["6444:11:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1639,
                  "src": "6444:11:79"
                },
                "nodeType": "ModifierInvocation",
                "src": "6444:11:79"
              }
            ],
            "name": "initialize",
            "nameLocation": "6331:10:79",
            "parameters": {
              "id": 26622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26615,
                  "mutability": "mutable",
                  "name": "asset_",
                  "nameLocation": "6349:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26654,
                  "src": "6342:13:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$6631", "typeString": "contract IERC20" },
                  "typeName": {
                    "id": 26614,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 26613,
                      "name": "IERC20",
                      "nameLocations": ["6342:6:79"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6631,
                      "src": "6342:6:79"
                    },
                    "referencedDeclaration": 6631,
                    "src": "6342:6:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6631",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26617,
                  "mutability": "mutable",
                  "name": "delegated_",
                  "nameLocation": "6365:10:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26654,
                  "src": "6357:18:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 26616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6357:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26619,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "6391:5:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26654,
                  "src": "6377:19:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                  "typeName": {
                    "id": 26618,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6377:6:79",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26621,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "6412:7:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26654,
                  "src": "6398:21:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                  "typeName": {
                    "id": 26620,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6398:6:79",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6341:79:79"
            },
            "returnParameters": { "id": 26625, "nodeType": "ParameterList", "parameters": [], "src": "6460:0:79" },
            "scope": 27419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26664,
            "nodeType": "FunctionDefinition",
            "src": "6724:94:79",
            "nodes": [],
            "body": {
              "id": 26663,
              "nodeType": "Block",
              "src": "6784:34:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 26661,
                    "name": "_delegated",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26533,
                    "src": "6801:10:79",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "functionReturnParameters": 26660,
                  "id": 26662,
                  "nodeType": "Return",
                  "src": "6794:17:79"
                }
              ]
            },
            "baseFunctions": [28690],
            "documentation": {
              "id": 26655,
              "nodeType": "StructuredDocumentation",
              "src": "6691:28:79",
              "text": "@inheritdoc ISLAYVaultV2"
            },
            "functionSelector": "cf8db862",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegated",
            "nameLocation": "6733:9:79",
            "overrides": { "id": 26657, "nodeType": "OverrideSpecifier", "overrides": [], "src": "6757:8:79" },
            "parameters": { "id": 26656, "nodeType": "ParameterList", "parameters": [], "src": "6742:2:79" },
            "returnParameters": {
              "id": 26660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26659,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26664,
                  "src": "6775:7:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 26658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6775:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6774:9:79"
            },
            "scope": 27419,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26679,
            "nodeType": "FunctionDefinition",
            "src": "6859:164:79",
            "nodes": [],
            "body": {
              "id": 26678,
              "nodeType": "Block",
              "src": "6970:53:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 26674,
                        "name": "ERC4626Upgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3519,
                        "src": "6987:18:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC4626Upgradeable_$3519_$",
                          "typeString": "type(contract ERC4626Upgradeable)"
                        }
                      },
                      "id": 26675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7006:8:79",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2988,
                      "src": "6987:27:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                        "typeString": "function () view returns (uint8)"
                      }
                    },
                    "id": 26676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6987:29:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }
                  },
                  "functionReturnParameters": 26673,
                  "id": 26677,
                  "nodeType": "Return",
                  "src": "6980:36:79"
                }
              ]
            },
            "baseFunctions": [2118, 2988, 7350],
            "documentation": {
              "id": 26665,
              "nodeType": "StructuredDocumentation",
              "src": "6824:30:79",
              "text": "@inheritdoc IERC20Metadata"
            },
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "6868:8:79",
            "overrides": {
              "id": 26670,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 26667,
                  "name": "ERC20Upgradeable",
                  "nameLocations": ["6900:16:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2598,
                  "src": "6900:16:79"
                },
                {
                  "id": 26668,
                  "name": "ERC4626Upgradeable",
                  "nameLocations": ["6918:18:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3519,
                  "src": "6918:18:79"
                },
                {
                  "id": 26669,
                  "name": "IERC20Metadata",
                  "nameLocations": ["6938:14:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7351,
                  "src": "6938:14:79"
                }
              ],
              "src": "6891:62:79"
            },
            "parameters": { "id": 26666, "nodeType": "ParameterList", "parameters": [], "src": "6876:2:79" },
            "returnParameters": {
              "id": 26673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26672,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26679,
                  "src": "6963:5:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" },
                  "typeName": {
                    "id": 26671,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6963:5:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6962:7:79"
            },
            "scope": 27419,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26703,
            "nodeType": "FunctionDefinition",
            "src": "7498:161:79",
            "nodes": [],
            "body": {
              "id": 26702,
              "nodeType": "Block",
              "src": "7612:47:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26697,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26682,
                        "src": "7636:4:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 26698,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26684,
                        "src": "7642:2:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 26699,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26686,
                        "src": "7646:5:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 26694,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7622:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SLAYVaultV2_$27419_$",
                          "typeString": "type(contract super SLAYVaultV2)"
                        }
                      },
                      "id": 26696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7628:7:79",
                      "memberName": "_update",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2397,
                      "src": "7622:13:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7622:30:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 26701,
                  "nodeType": "ExpressionStatement",
                  "src": "7622:30:79"
                }
              ]
            },
            "baseFunctions": [2397],
            "documentation": {
              "id": 26680,
              "nodeType": "StructuredDocumentation",
              "src": "7029:464:79",
              "text": " @dev See {ERC20Upgradable-_update} with additional requirements from SLAYRouter\n To update the balances of the SLAYVault (and therefore mint/deposit/withdraw/redeem),\n the following conditions must be met:\n - The contract must not be paused in the SLAYRouter (whenNotPaused modifier)\n - The contract must be whitelisted in the SLAYRouter (whenWhitelisted modifier)\n @inheritdoc ERC20Upgradeable"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 26690,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 26689,
                  "name": "whenNotPaused",
                  "nameLocations": ["7582:13:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26581,
                  "src": "7582:13:79"
                },
                "nodeType": "ModifierInvocation",
                "src": "7582:13:79"
              },
              {
                "id": 26692,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 26691,
                  "name": "onlyWhitelisted",
                  "nameLocations": ["7596:15:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26589,
                  "src": "7596:15:79"
                },
                "nodeType": "ModifierInvocation",
                "src": "7596:15:79"
              }
            ],
            "name": "_update",
            "nameLocation": "7507:7:79",
            "overrides": { "id": 26688, "nodeType": "OverrideSpecifier", "overrides": [], "src": "7573:8:79" },
            "parameters": {
              "id": 26687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26682,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7523:4:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26703,
                  "src": "7515:12:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 26681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7515:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26684,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7537:2:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26703,
                  "src": "7529:10:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 26683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7529:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26686,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7549:5:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26703,
                  "src": "7541:13:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 26685,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7541:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7514:41:79"
            },
            "returnParameters": { "id": 26693, "nodeType": "ParameterList", "parameters": [], "src": "7612:0:79" },
            "scope": 27419,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 26716,
            "nodeType": "FunctionDefinition",
            "src": "7749:135:79",
            "nodes": [],
            "body": {
              "id": 26715,
              "nodeType": "Block",
              "src": "7800:84:79",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 26707,
                        "name": "ROUTER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26526,
                        "src": "7814:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SLAYRouterV2_$26255",
                          "typeString": "contract SLAYRouterV2"
                        }
                      },
                      "id": 26708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7821:6:79",
                      "memberName": "paused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3762,
                      "src": "7814:13:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                        "typeString": "function () view external returns (bool)"
                      }
                    },
                    "id": 26709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7814:15:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 26714,
                  "nodeType": "IfStatement",
                  "src": "7810:68:79",
                  "trueBody": {
                    "id": 26713,
                    "nodeType": "Block",
                    "src": "7831:47:79",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 26710,
                            "name": "EnforcedPause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28644,
                            "src": "7852:13:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 26711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7852:15:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 26712,
                        "nodeType": "RevertStatement",
                        "src": "7845:22:79"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 26704,
              "nodeType": "StructuredDocumentation",
              "src": "7665:79:79",
              "text": " @dev Checks if the SLAYRouter is paused and reverts if it is"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireNotPaused",
            "nameLocation": "7758:17:79",
            "parameters": { "id": 26705, "nodeType": "ParameterList", "parameters": [], "src": "7775:2:79" },
            "returnParameters": { "id": 26706, "nodeType": "ParameterList", "parameters": [], "src": "7800:0:79" },
            "scope": 27419,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 26734,
            "nodeType": "FunctionDefinition",
            "src": "8000:169:79",
            "nodes": [],
            "body": {
              "id": 26733,
              "nodeType": "Block",
              "src": "8053:116:79",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 26727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "8067:41:79",
                    "subExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 26724,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "8102:4:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                                "typeString": "contract SLAYVaultV2"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                                "typeString": "contract SLAYVaultV2"
                              }
                            ],
                            "id": 26723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8094:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 26722,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8094:7:79",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 26725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8094:13:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                        "expression": {
                          "id": 26720,
                          "name": "ROUTER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26526,
                          "src": "8068:6:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLAYRouterV2_$26255",
                            "typeString": "contract SLAYRouterV2"
                          }
                        },
                        "id": 26721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8075:18:79",
                        "memberName": "isVaultWhitelisted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25387,
                        "src": "8068:25:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 26726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8068:40:79",
                      "tryCall": false,
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    },
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 26732,
                  "nodeType": "IfStatement",
                  "src": "8063:100:79",
                  "trueBody": {
                    "id": 26731,
                    "nodeType": "Block",
                    "src": "8110:53:79",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 26728,
                            "name": "ExpectedWhitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28647,
                            "src": "8131:19:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 26729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8131:21:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 26730,
                        "nodeType": "RevertStatement",
                        "src": "8124:28:79"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 26717,
              "nodeType": "StructuredDocumentation",
              "src": "7890:105:79",
              "text": " @dev Checks if the SLAYVault is whitelisted in the SLAYRouter and reverts if it is not"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireWhitelisted",
            "nameLocation": "8009:19:79",
            "parameters": { "id": 26718, "nodeType": "ParameterList", "parameters": [], "src": "8028:2:79" },
            "returnParameters": { "id": 26719, "nodeType": "ParameterList", "parameters": [], "src": "8053:0:79" },
            "scope": 27419,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 26752,
            "nodeType": "FunctionDefinition",
            "src": "8208:134:79",
            "nodes": [],
            "body": {
              "id": 26751,
              "nodeType": "Block",
              "src": "8278:64:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 26749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 26741,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2134,
                        "src": "8295:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 26742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8295:13:79",
                      "tryCall": false,
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 26746,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "8329:4:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                                "typeString": "contract SLAYVaultV2"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                                "typeString": "contract SLAYVaultV2"
                              }
                            ],
                            "id": 26745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8321:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 26744,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8321:7:79",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 26747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8321:13:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                        "id": 26743,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2154,
                        "src": "8311:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 26748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8311:24:79",
                      "tryCall": false,
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "8295:40:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "functionReturnParameters": 26740,
                  "id": 26750,
                  "nodeType": "Return",
                  "src": "8288:47:79"
                }
              ]
            },
            "baseFunctions": [28696],
            "documentation": {
              "id": 26735,
              "nodeType": "StructuredDocumentation",
              "src": "8175:28:79",
              "text": "@inheritdoc ISLAYVaultV2"
            },
            "functionSelector": "e49d1232",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalActiveStaked",
            "nameLocation": "8217:17:79",
            "overrides": { "id": 26737, "nodeType": "OverrideSpecifier", "overrides": [], "src": "8251:8:79" },
            "parameters": { "id": 26736, "nodeType": "ParameterList", "parameters": [], "src": "8234:2:79" },
            "returnParameters": {
              "id": 26740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26739,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26752,
                  "src": "8269:7:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 26738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8269:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8268:9:79"
            },
            "scope": 27419,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26810,
            "nodeType": "FunctionDefinition",
            "src": "8592:498:79",
            "nodes": [],
            "body": {
              "id": 26809,
              "nodeType": "Block",
              "src": "8702:388:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" },
                    "id": 26807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" },
                      "id": 26802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "id": 26795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" },
                          "id": 26788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" },
                            "id": 26781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" },
                              "id": 26774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" },
                                "id": 26767,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 26762,
                                  "name": "interfaceId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26755,
                                  "src": "8719:11:79",
                                  "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 26764,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6631,
                                        "src": "8739:6:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$6631_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$6631_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      ],
                                      "id": 26763,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "8734:4:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 26765,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8734:12:79",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_contract$_IERC20_$6631",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 26766,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "8747:11:79",
                                  "memberName": "interfaceId",
                                  "nodeType": "MemberAccess",
                                  "src": "8734:24:79",
                                  "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                                },
                                "src": "8719:39:79",
                                "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" },
                                "id": 26773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 26768,
                                  "name": "interfaceId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26755,
                                  "src": "8762:11:79",
                                  "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 26770,
                                        "name": "IERC20Metadata",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7351,
                                        "src": "8782:14:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$7351_$",
                                          "typeString": "type(contract IERC20Metadata)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$7351_$",
                                          "typeString": "type(contract IERC20Metadata)"
                                        }
                                      ],
                                      "id": 26769,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "8777:4:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 26771,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8777:20:79",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_contract$_IERC20Metadata_$7351",
                                      "typeString": "type(contract IERC20Metadata)"
                                    }
                                  },
                                  "id": 26772,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "8798:11:79",
                                  "memberName": "interfaceId",
                                  "nodeType": "MemberAccess",
                                  "src": "8777:32:79",
                                  "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                                },
                                "src": "8762:47:79",
                                "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                              },
                              "src": "8719:90:79",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" },
                              "id": 26780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 26775,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26755,
                                "src": "8825:11:79",
                                "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 26777,
                                      "name": "IERC4626",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5158,
                                      "src": "8845:8:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC4626_$5158_$",
                                        "typeString": "type(contract IERC4626)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_IERC4626_$5158_$",
                                        "typeString": "type(contract IERC4626)"
                                      }
                                    ],
                                    "id": 26776,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "8840:4:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 26778,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8840:14:79",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_IERC4626_$5158",
                                    "typeString": "type(contract IERC4626)"
                                  }
                                },
                                "id": 26779,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "8855:11:79",
                                "memberName": "interfaceId",
                                "nodeType": "MemberAccess",
                                "src": "8840:26:79",
                                "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                              },
                              "src": "8825:41:79",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            "src": "8719:147:79",
                            "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" },
                            "id": 26787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 26782,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26755,
                              "src": "8870:11:79",
                              "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 26784,
                                    "name": "IERC7540Redeem",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27585,
                                    "src": "8890:14:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC7540Redeem_$27585_$",
                                      "typeString": "type(contract IERC7540Redeem)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_IERC7540Redeem_$27585_$",
                                      "typeString": "type(contract IERC7540Redeem)"
                                    }
                                  ],
                                  "id": 26783,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "8885:4:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 26785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8885:20:79",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_IERC7540Redeem_$27585",
                                  "typeString": "type(contract IERC7540Redeem)"
                                }
                              },
                              "id": 26786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "8906:11:79",
                              "memberName": "interfaceId",
                              "nodeType": "MemberAccess",
                              "src": "8885:32:79",
                              "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                            },
                            "src": "8870:47:79",
                            "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                          },
                          "src": "8719:198:79",
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" },
                          "id": 26794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 26789,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26755,
                            "src": "8933:11:79",
                            "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 26791,
                                  "name": "IERC7540Operator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 27465,
                                  "src": "8953:16:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC7540Operator_$27465_$",
                                    "typeString": "type(contract IERC7540Operator)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC7540Operator_$27465_$",
                                    "typeString": "type(contract IERC7540Operator)"
                                  }
                                ],
                                "id": 26790,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "8948:4:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 26792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8948:22:79",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC7540Operator_$27465",
                                "typeString": "type(contract IERC7540Operator)"
                              }
                            },
                            "id": 26793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8971:11:79",
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "8948:34:79",
                            "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                          },
                          "src": "8933:49:79",
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "src": "8719:263:79",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" },
                        "id": 26801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26796,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26755,
                          "src": "8986:11:79",
                          "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 26798,
                                "name": "ISLAYVaultV2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28709,
                                "src": "9006:12:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISLAYVaultV2_$28709_$",
                                  "typeString": "type(contract ISLAYVaultV2)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_ISLAYVaultV2_$28709_$",
                                  "typeString": "type(contract ISLAYVaultV2)"
                                }
                              ],
                              "id": 26797,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "9001:4:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 26799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9001:18:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_ISLAYVaultV2_$28709",
                              "typeString": "type(contract ISLAYVaultV2)"
                            }
                          },
                          "id": 26800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "9020:11:79",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "9001:30:79",
                          "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                        },
                        "src": "8986:45:79",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      "src": "8719:312:79",
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 26805,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26755,
                          "src": "9071:11:79",
                          "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [{ "typeIdentifier": "t_bytes4", "typeString": "bytes4" }],
                        "expression": {
                          "id": 26803,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "9047:5:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_SLAYVaultV2_$27419_$",
                            "typeString": "type(contract super SLAYVaultV2)"
                          }
                        },
                        "id": 26804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9053:17:79",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4348,
                        "src": "9047:23:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 26806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9047:36:79",
                      "tryCall": false,
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    },
                    "src": "8719:364:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "functionReturnParameters": 26761,
                  "id": 26808,
                  "nodeType": "Return",
                  "src": "8712:371:79"
                }
              ]
            },
            "baseFunctions": [4348],
            "documentation": {
              "id": 26753,
              "nodeType": "StructuredDocumentation",
              "src": "8348:239:79",
              "text": " @notice Checks if the contract supports a given interface\n @dev Support for the most common interfaces for SLAYVault\n There might be more interfaces not listed here\n @inheritdoc ERC165Upgradeable"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "8601:17:79",
            "overrides": {
              "id": 26758,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 26757,
                  "name": "ERC165Upgradeable",
                  "nameLocations": ["8668:17:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4349,
                  "src": "8668:17:79"
                }
              ],
              "src": "8659:27:79"
            },
            "parameters": {
              "id": 26756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26755,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "8626:11:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26810,
                  "src": "8619:18:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" },
                  "typeName": {
                    "id": 26754,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "8619:6:79",
                    "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8618:20:79"
            },
            "returnParameters": {
              "id": 26761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26760,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26810,
                  "src": "8696:4:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                  "typeName": {
                    "id": 26759,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8696:4:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8695:6:79"
            },
            "scope": 27419,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 26918,
            "nodeType": "FunctionDefinition",
            "src": "9692:1406:79",
            "nodes": [],
            "body": {
              "id": 26917,
              "nodeType": "Block",
              "src": "9838:1260:79",
              "nodes": [],
              "statements": [
                {
                  "assignments": [26824],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26824,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "9856:6:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 26917,
                      "src": "9848:14:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                      "typeName": {
                        "id": 26823,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9848:7:79",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26827,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 26825,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3547,
                      "src": "9865:10:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 26826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9865:12:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9848:29:79"
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 26830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 26828,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26813,
                      "src": "9950:6:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 26829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9960:1:79",
                      "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                      "value": "0"
                    },
                    "src": "9950:11:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 26835,
                  "nodeType": "IfStatement",
                  "src": "9946:61:79",
                  "trueBody": {
                    "id": 26834,
                    "nodeType": "Block",
                    "src": "9963:44:79",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 26831,
                            "name": "ZeroAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28650,
                            "src": "9984:10:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 26832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9984:12:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 26833,
                        "nodeType": "RevertStatement",
                        "src": "9977:19:79"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" },
                    "id": 26845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                      "id": 26838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 26836,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26817,
                        "src": "10095:5:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 26837,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26824,
                        "src": "10104:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "src": "10095:15:79",
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 26844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "10114:27:79",
                      "subExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 26839,
                            "name": "_isOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26540,
                            "src": "10115:11:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(address => mapping(address => bool))"
                            }
                          },
                          "id": 26841,
                          "indexExpression": {
                            "id": 26840,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26817,
                            "src": "10127:5:79",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10115:18:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 26843,
                        "indexExpression": {
                          "id": 26842,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26824,
                          "src": "10134:6:79",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10115:26:79",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    },
                    "src": "10095:46:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 26853,
                  "nodeType": "IfStatement",
                  "src": "10091:115:79",
                  "trueBody": {
                    "id": 26852,
                    "nodeType": "Block",
                    "src": "10143:63:79",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 26847,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26817,
                              "src": "10173:5:79",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "id": 26848,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26824,
                              "src": "10180:6:79",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "id": 26849,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26813,
                              "src": "10188:6:79",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            ],
                            "id": 26846,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2597,
                            "src": "10157:15:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 26850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10157:38:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 26851,
                        "nodeType": "ExpressionStatement",
                        "src": "10157:38:79"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" },
                    "id": 26863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                      "id": 26856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 26854,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26815,
                        "src": "10329:10:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 26855,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26824,
                        "src": "10343:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "src": "10329:20:79",
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 26862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "10353:32:79",
                      "subExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 26857,
                            "name": "_isOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26540,
                            "src": "10354:11:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(address => mapping(address => bool))"
                            }
                          },
                          "id": 26859,
                          "indexExpression": {
                            "id": 26858,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26815,
                            "src": "10366:10:79",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10354:23:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 26861,
                        "indexExpression": {
                          "id": 26860,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26824,
                          "src": "10378:6:79",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10354:31:79",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    },
                    "src": "10329:56:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 26868,
                  "nodeType": "IfStatement",
                  "src": "10325:119:79",
                  "trueBody": {
                    "id": 26867,
                    "nodeType": "Block",
                    "src": "10387:57:79",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 26864,
                            "name": "NotControllerOrOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28662,
                            "src": "10408:23:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 26865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10408:25:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 26866,
                        "nodeType": "RevertStatement",
                        "src": "10401:32:79"
                      }
                    ]
                  }
                },
                {
                  "assignments": [26871],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26871,
                      "mutability": "mutable",
                      "name": "pendingRedemptionRequest",
                      "nameLocation": "10482:24:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 26917,
                      "src": "10454:52:79",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                        "typeString": "struct ISLAYVaultV2.RedeemRequestStruct"
                      },
                      "typeName": {
                        "id": 26870,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 26869,
                          "name": "RedeemRequestStruct",
                          "nameLocations": ["10454:19:79"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28684,
                          "src": "10454:19:79"
                        },
                        "referencedDeclaration": 28684,
                        "src": "10454:19:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26875,
                  "initialValue": {
                    "baseExpression": {
                      "id": 26872,
                      "name": "_pendingRedemption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26546,
                      "src": "10509:18:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RedeemRequestStruct_$28684_storage_$",
                        "typeString": "mapping(address => struct ISLAYVaultV2.RedeemRequestStruct storage ref)"
                      }
                    },
                    "id": 26874,
                    "indexExpression": {
                      "id": 26873,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26815,
                      "src": "10528:10:79",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10509:30:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage",
                      "typeString": "struct ISLAYVaultV2.RedeemRequestStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10454:85:79"
                },
                {
                  "expression": {
                    "id": 26880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 26876,
                        "name": "pendingRedemptionRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26871,
                        "src": "10616:24:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct storage pointer"
                        }
                      },
                      "id": 26878,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10641:6:79",
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28680,
                      "src": "10616:31:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 26879,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26813,
                      "src": "10651:6:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "10616:41:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "id": 26881,
                  "nodeType": "ExpressionStatement",
                  "src": "10616:41:79"
                },
                {
                  "assignments": [26883],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26883,
                      "mutability": "mutable",
                      "name": "withdrawalDelay",
                      "nameLocation": "10746:15:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 26917,
                      "src": "10739:22:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" },
                      "typeName": {
                        "id": 26882,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10739:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26888,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 26886,
                        "name": "_delegated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26533,
                        "src": "10792:10:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 26884,
                        "name": "REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26530,
                        "src": "10764:8:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SLAYRegistryV2_$24613",
                          "typeString": "contract SLAYRegistryV2"
                        }
                      },
                      "id": 26885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10773:18:79",
                      "memberName": "getWithdrawalDelay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23886,
                      "src": "10764:27:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint32_$",
                        "typeString": "function (address) view external returns (uint32)"
                      }
                    },
                    "id": 26887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10764:39:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10739:64:79"
                },
                {
                  "expression": {
                    "id": 26896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 26889,
                        "name": "pendingRedemptionRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26871,
                        "src": "10813:24:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct storage pointer"
                        }
                      },
                      "id": 26891,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10838:11:79",
                      "memberName": "claimableAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28683,
                      "src": "10813:36:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "id": 26895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 26892,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "10852:5:79",
                          "typeDescriptions": { "typeIdentifier": "t_magic_block", "typeString": "block" }
                        },
                        "id": 26893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10858:9:79",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "10852:15:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 26894,
                        "name": "withdrawalDelay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26883,
                        "src": "10870:15:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" }
                      },
                      "src": "10852:33:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "10813:72:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "id": 26897,
                  "nodeType": "ExpressionStatement",
                  "src": "10813:72:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26899,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26817,
                        "src": "10960:5:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "arguments": [
                          {
                            "id": 26902,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10975:4:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                              "typeString": "contract SLAYVaultV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_SLAYVaultV2_$27419", "typeString": "contract SLAYVaultV2" }
                          ],
                          "id": 26901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10967:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 26900,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10967:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 26903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10967:13:79",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 26904,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26813,
                        "src": "10982:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "id": 26898,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2305,
                      "src": "10950:9:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 26905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10950:39:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 26906,
                  "nodeType": "ExpressionStatement",
                  "src": "10950:39:79"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 26908,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26815,
                        "src": "11018:10:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 26909,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26817,
                        "src": "11030:5:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 26910,
                        "name": "REQUEST_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26522,
                        "src": "11037:10:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 26911,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26824,
                        "src": "11049:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 26912,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26813,
                        "src": "11057:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "id": 26907,
                      "name": "RedeemRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27552,
                      "src": "11004:13:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,address,uint256)"
                      }
                    },
                    "id": 26913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11004:60:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 26914,
                  "nodeType": "EmitStatement",
                  "src": "10999:65:79"
                },
                {
                  "expression": {
                    "id": 26915,
                    "name": "REQUEST_ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26522,
                    "src": "11081:10:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "functionReturnParameters": 26822,
                  "id": 26916,
                  "nodeType": "Return",
                  "src": "11074:17:79"
                }
              ]
            },
            "baseFunctions": [27564],
            "documentation": {
              "id": 26811,
              "nodeType": "StructuredDocumentation",
              "src": "9279:408:79",
              "text": "@inheritdoc IERC7540Redeem\n @notice The controller is the address that will be able to claim the redemption request.\n They take ownership of the shares and can transfer to any address during withdrawal.\n Only give access to controller that are trusted by the msg.sender (or set it to msg.sender).\n Likewise, setting it to a random address or (0) is equivalent to \"burning\" it."
            },
            "functionSelector": "7d41c86e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestRedeem",
            "nameLocation": "9701:13:79",
            "overrides": { "id": 26819, "nodeType": "OverrideSpecifier", "overrides": [], "src": "9789:8:79" },
            "parameters": {
              "id": 26818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26813,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "9723:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26918,
                  "src": "9715:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 26812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9715:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26815,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "9739:10:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26918,
                  "src": "9731:18:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 26814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9731:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26817,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "9759:5:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26918,
                  "src": "9751:13:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 26816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9751:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9714:51:79"
            },
            "returnParameters": {
              "id": 26822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26821,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "9823:9:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26918,
                  "src": "9815:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 26820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9815:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9814:19:79"
            },
            "scope": 27419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26949,
            "nodeType": "FunctionDefinition",
            "src": "11139:313:79",
            "nodes": [],
            "body": {
              "id": 26948,
              "nodeType": "Block",
              "src": "11251:201:79",
              "nodes": [],
              "statements": [
                {
                  "assignments": [26931],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26931,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "11289:7:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 26948,
                      "src": "11261:35:79",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                        "typeString": "struct ISLAYVaultV2.RedeemRequestStruct"
                      },
                      "typeName": {
                        "id": 26930,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 26929,
                          "name": "RedeemRequestStruct",
                          "nameLocations": ["11261:19:79"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28684,
                          "src": "11261:19:79"
                        },
                        "referencedDeclaration": 28684,
                        "src": "11261:19:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26935,
                  "initialValue": {
                    "baseExpression": {
                      "id": 26932,
                      "name": "_pendingRedemption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26546,
                      "src": "11299:18:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RedeemRequestStruct_$28684_storage_$",
                        "typeString": "mapping(address => struct ISLAYVaultV2.RedeemRequestStruct storage ref)"
                      }
                    },
                    "id": 26934,
                    "indexExpression": {
                      "id": 26933,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26923,
                      "src": "11318:10:79",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11299:30:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage",
                      "typeString": "struct ISLAYVaultV2.RedeemRequestStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11261:68:79"
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 26940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 26936,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26931,
                        "src": "11343:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct storage pointer"
                        }
                      },
                      "id": 26937,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11351:11:79",
                      "memberName": "claimableAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28683,
                      "src": "11343:19:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 26938,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11365:5:79",
                        "typeDescriptions": { "typeIdentifier": "t_magic_block", "typeString": "block" }
                      },
                      "id": 26939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11371:9:79",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11365:15:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "11343:37:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 26945,
                  "nodeType": "IfStatement",
                  "src": "11339:89:79",
                  "trueBody": {
                    "id": 26944,
                    "nodeType": "Block",
                    "src": "11382:46:79",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 26941,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26931,
                            "src": "11403:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                              "typeString": "struct ISLAYVaultV2.RedeemRequestStruct storage pointer"
                            }
                          },
                          "id": 26942,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11411:6:79",
                          "memberName": "shares",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28680,
                          "src": "11403:14:79",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 26928,
                        "id": 26943,
                        "nodeType": "Return",
                        "src": "11396:21:79"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 26946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11444:1:79",
                    "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                    "value": "0"
                  },
                  "functionReturnParameters": 26928,
                  "id": 26947,
                  "nodeType": "Return",
                  "src": "11437:8:79"
                }
              ]
            },
            "baseFunctions": [27574],
            "documentation": {
              "id": 26919,
              "nodeType": "StructuredDocumentation",
              "src": "11104:30:79",
              "text": "@inheritdoc IERC7540Redeem"
            },
            "functionSelector": "f5a23d8d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingRedeemRequest",
            "nameLocation": "11148:20:79",
            "overrides": { "id": 26925, "nodeType": "OverrideSpecifier", "overrides": [], "src": "11210:8:79" },
            "parameters": {
              "id": 26924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26921,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26949,
                  "src": "11169:7:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 26920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11169:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26923,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "11186:10:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26949,
                  "src": "11178:18:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 26922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11178:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11168:29:79"
            },
            "returnParameters": {
              "id": 26928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26927,
                  "mutability": "mutable",
                  "name": "pendingShares",
                  "nameLocation": "11236:13:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26949,
                  "src": "11228:21:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 26926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11228:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11227:23:79"
            },
            "scope": 27419,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26985,
            "nodeType": "FunctionDefinition",
            "src": "11493:376:79",
            "nodes": [],
            "body": {
              "id": 26984,
              "nodeType": "Block",
              "src": "11645:224:79",
              "nodes": [],
              "statements": [
                {
                  "assignments": [26962],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26962,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "11683:7:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 26984,
                      "src": "11655:35:79",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                        "typeString": "struct ISLAYVaultV2.RedeemRequestStruct"
                      },
                      "typeName": {
                        "id": 26961,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 26960,
                          "name": "RedeemRequestStruct",
                          "nameLocations": ["11655:19:79"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28684,
                          "src": "11655:19:79"
                        },
                        "referencedDeclaration": 28684,
                        "src": "11655:19:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 26966,
                  "initialValue": {
                    "baseExpression": {
                      "id": 26963,
                      "name": "_pendingRedemption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26546,
                      "src": "11693:18:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RedeemRequestStruct_$28684_storage_$",
                        "typeString": "mapping(address => struct ISLAYVaultV2.RedeemRequestStruct storage ref)"
                      }
                    },
                    "id": 26965,
                    "indexExpression": {
                      "id": 26964,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26954,
                      "src": "11712:10:79",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11693:30:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage",
                      "typeString": "struct ISLAYVaultV2.RedeemRequestStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11655:68:79"
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" },
                    "id": 26976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "id": 26971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 26967,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26962,
                          "src": "11737:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                            "typeString": "struct ISLAYVaultV2.RedeemRequestStruct storage pointer"
                          }
                        },
                        "id": 26968,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11745:11:79",
                        "memberName": "claimableAt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28683,
                        "src": "11737:19:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "expression": {
                          "id": 26969,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "11760:5:79",
                          "typeDescriptions": { "typeIdentifier": "t_magic_block", "typeString": "block" }
                        },
                        "id": 26970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11766:9:79",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "11760:15:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "src": "11737:38:79",
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "id": 26975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 26972,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26962,
                          "src": "11779:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                            "typeString": "struct ISLAYVaultV2.RedeemRequestStruct storage pointer"
                          }
                        },
                        "id": 26973,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11787:6:79",
                        "memberName": "shares",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28680,
                        "src": "11779:14:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 26974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11796:1:79",
                        "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        "value": "0"
                      },
                      "src": "11779:18:79",
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    },
                    "src": "11737:60:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 26981,
                  "nodeType": "IfStatement",
                  "src": "11733:112:79",
                  "trueBody": {
                    "id": 26980,
                    "nodeType": "Block",
                    "src": "11799:46:79",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 26977,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26962,
                            "src": "11820:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                              "typeString": "struct ISLAYVaultV2.RedeemRequestStruct storage pointer"
                            }
                          },
                          "id": 26978,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11828:6:79",
                          "memberName": "shares",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28680,
                          "src": "11820:14:79",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 26959,
                        "id": 26979,
                        "nodeType": "Return",
                        "src": "11813:21:79"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 26982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11861:1:79",
                    "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                    "value": "0"
                  },
                  "functionReturnParameters": 26959,
                  "id": 26983,
                  "nodeType": "Return",
                  "src": "11854:8:79"
                }
              ]
            },
            "baseFunctions": [27584],
            "documentation": {
              "id": 26950,
              "nodeType": "StructuredDocumentation",
              "src": "11458:30:79",
              "text": "@inheritdoc IERC7540Redeem"
            },
            "functionSelector": "eaed1d07",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimableRedeemRequest",
            "nameLocation": "11502:22:79",
            "overrides": { "id": 26956, "nodeType": "OverrideSpecifier", "overrides": [], "src": "11590:8:79" },
            "parameters": {
              "id": 26955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26952,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26985,
                  "src": "11525:7:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 26951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11525:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26954,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "11542:10:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26985,
                  "src": "11534:18:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 26953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11534:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11524:29:79"
            },
            "returnParameters": {
              "id": 26959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26958,
                  "mutability": "mutable",
                  "name": "claimableShares",
                  "nameLocation": "11624:15:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 26985,
                  "src": "11616:23:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 26957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11616:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11615:25:79"
            },
            "scope": 27419,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27030,
            "nodeType": "FunctionDefinition",
            "src": "12442:357:79",
            "nodes": [],
            "body": {
              "id": 27029,
              "nodeType": "Block",
              "src": "12551:248:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                        "id": 27004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 26999,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26988,
                          "src": "12569:8:79",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 27002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12589:1:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }],
                            "id": 27001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12581:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 27000,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12581:7:79",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 27003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12581:10:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "src": "12569:22:79",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "4f70657261746f72206973206e6f7420612076616c6964206163636f756e74",
                        "id": 27005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12593:33:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5cc6b3aa71dbd29ec610060c642f00918a77447f7622e4006098db9767247b1",
                          "typeString": "literal_string \"Operator is not a valid account\""
                        },
                        "value": "Operator is not a valid account"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_c5cc6b3aa71dbd29ec610060c642f00918a77447f7622e4006098db9767247b1",
                          "typeString": "literal_string \"Operator is not a valid account\""
                        }
                      ],
                      "id": 26998,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "12561:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12561:66:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 27007,
                  "nodeType": "ExpressionStatement",
                  "src": "12561:66:79"
                },
                {
                  "assignments": [27009],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27009,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "12646:6:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 27029,
                      "src": "12638:14:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                      "typeName": {
                        "id": 27008,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12638:7:79",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27012,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27010,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3547,
                      "src": "12655:10:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 27011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12655:12:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12638:29:79"
                },
                {
                  "expression": {
                    "id": 27019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 27013,
                          "name": "_isOperator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26540,
                          "src": "12677:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 27016,
                        "indexExpression": {
                          "id": 27014,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27009,
                          "src": "12689:6:79",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12677:19:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 27017,
                      "indexExpression": {
                        "id": 27015,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26988,
                        "src": "12697:8:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12677:29:79",
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 27018,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26990,
                      "src": "12709:8:79",
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    },
                    "src": "12677:40:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 27020,
                  "nodeType": "ExpressionStatement",
                  "src": "12677:40:79"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 27022,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27009,
                        "src": "12744:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 27023,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26988,
                        "src": "12752:8:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 27024,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26990,
                        "src": "12762:8:79",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" }
                      ],
                      "id": 27021,
                      "name": "OperatorSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27444,
                      "src": "12732:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 27025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12732:39:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 27026,
                  "nodeType": "EmitStatement",
                  "src": "12727:44:79"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 27027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12788:4:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                    "value": "true"
                  },
                  "functionReturnParameters": 26997,
                  "id": 27028,
                  "nodeType": "Return",
                  "src": "12781:11:79"
                }
              ]
            },
            "baseFunctions": [27454],
            "documentation": {
              "id": 26986,
              "nodeType": "StructuredDocumentation",
              "src": "11875:562:79",
              "text": " @notice Sets an operator for a controller\n @dev This is ERC7540's Operator, not SatLayer's Operator\n An Operator in this context is an account that can manage Requests on behalf of another account\n This includes the ability to request and claim redemptions\n This is an optional feature to allow third parties to manage redemptions on behalf of the controller\n You do not need to set an Operator to request or claim redemptions\n As described in the ERC7540 standard\n @inheritdoc IERC7540Operator"
            },
            "functionSelector": "558a7297",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 26994,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 26993,
                  "name": "whenNotPaused",
                  "nameLocations": ["12514:13:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26581,
                  "src": "12514:13:79"
                },
                "nodeType": "ModifierInvocation",
                "src": "12514:13:79"
              }
            ],
            "name": "setOperator",
            "nameLocation": "12451:11:79",
            "overrides": { "id": 26992, "nodeType": "OverrideSpecifier", "overrides": [], "src": "12505:8:79" },
            "parameters": {
              "id": 26991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26988,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "12471:8:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27030,
                  "src": "12463:16:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 26987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12463:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26990,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "12486:8:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27030,
                  "src": "12481:13:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                  "typeName": {
                    "id": 26989,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12481:4:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12462:33:79"
            },
            "returnParameters": {
              "id": 26997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26996,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "12542:7:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27030,
                  "src": "12537:12:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                  "typeName": {
                    "id": 26995,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12537:4:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12536:14:79"
            },
            "scope": 27419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27048,
            "nodeType": "FunctionDefinition",
            "src": "13056:160:79",
            "nodes": [],
            "body": {
              "id": 27047,
              "nodeType": "Block",
              "src": "13159:57:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 27041,
                        "name": "_isOperator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26540,
                        "src": "13176:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 27043,
                      "indexExpression": {
                        "id": 27042,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27033,
                        "src": "13188:10:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13176:23:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 27045,
                    "indexExpression": {
                      "id": 27044,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27035,
                      "src": "13200:8:79",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13176:33:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "functionReturnParameters": 27040,
                  "id": 27046,
                  "nodeType": "Return",
                  "src": "13169:40:79"
                }
              ]
            },
            "baseFunctions": [27464],
            "documentation": {
              "id": 27031,
              "nodeType": "StructuredDocumentation",
              "src": "12805:246:79",
              "text": " @notice Checks if the `operator` is an approved operator for the `controller`\n @dev This is not the same as the SatLayer Operator\n See ERC7540 for more details on Operators\n @inheritdoc IERC7540Operator"
            },
            "functionSelector": "b6363cf2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperator",
            "nameLocation": "13065:10:79",
            "overrides": { "id": 27037, "nodeType": "OverrideSpecifier", "overrides": [], "src": "13128:8:79" },
            "parameters": {
              "id": 27036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27033,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "13084:10:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27048,
                  "src": "13076:18:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 27032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13076:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27035,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13104:8:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27048,
                  "src": "13096:16:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 27034,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13096:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13075:38:79"
            },
            "returnParameters": {
              "id": 27040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27039,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "13151:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27048,
                  "src": "13146:11:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                  "typeName": {
                    "id": 27038,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13146:4:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13145:13:79"
            },
            "scope": 27419,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27137,
            "nodeType": "FunctionDefinition",
            "src": "13749:1075:79",
            "nodes": [],
            "body": {
              "id": 27136,
              "nodeType": "Block",
              "src": "13981:843:79",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 27068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 27066,
                      "name": "assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27051,
                      "src": "13995:6:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 27067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14005:1:79",
                      "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                      "value": "0"
                    },
                    "src": "13995:11:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 27073,
                  "nodeType": "IfStatement",
                  "src": "13991:61:79",
                  "trueBody": {
                    "id": 27072,
                    "nodeType": "Block",
                    "src": "14008:44:79",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 27069,
                            "name": "ZeroAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28650,
                            "src": "14029:10:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 27070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14029:12:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 27071,
                        "nodeType": "RevertStatement",
                        "src": "14022:19:79"
                      }
                    ]
                  }
                },
                {
                  "assignments": [27076],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27076,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "14089:7:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 27136,
                      "src": "14062:34:79",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_memory_ptr",
                        "typeString": "struct ISLAYVaultV2.RedeemRequestStruct"
                      },
                      "typeName": {
                        "id": 27075,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 27074,
                          "name": "RedeemRequestStruct",
                          "nameLocations": ["14062:19:79"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28684,
                          "src": "14062:19:79"
                        },
                        "referencedDeclaration": 28684,
                        "src": "14062:19:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27080,
                  "initialValue": {
                    "baseExpression": {
                      "id": 27077,
                      "name": "_pendingRedemption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26546,
                      "src": "14099:18:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RedeemRequestStruct_$28684_storage_$",
                        "typeString": "mapping(address => struct ISLAYVaultV2.RedeemRequestStruct storage ref)"
                      }
                    },
                    "id": 27079,
                    "indexExpression": {
                      "id": 27078,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27055,
                      "src": "14118:10:79",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14099:30:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage",
                      "typeString": "struct ISLAYVaultV2.RedeemRequestStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14062:67:79"
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 27084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 27081,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27076,
                        "src": "14143:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_memory_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct memory"
                        }
                      },
                      "id": 27082,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14151:11:79",
                      "memberName": "claimableAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28683,
                      "src": "14143:19:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 27083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14166:1:79",
                      "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                      "value": "0"
                    },
                    "src": "14143:24:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 27089,
                  "nodeType": "IfStatement",
                  "src": "14139:87:79",
                  "trueBody": {
                    "id": 27088,
                    "nodeType": "Block",
                    "src": "14169:57:79",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 27085,
                            "name": "WithdrawRequestNotFound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28668,
                            "src": "14190:23:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 27086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14190:25:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 27087,
                        "nodeType": "RevertStatement",
                        "src": "14183:32:79"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 27094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 27090,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27076,
                        "src": "14239:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_memory_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct memory"
                        }
                      },
                      "id": 27091,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14247:11:79",
                      "memberName": "claimableAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28683,
                      "src": "14239:19:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 27092,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "14261:5:79",
                        "typeDescriptions": { "typeIdentifier": "t_magic_block", "typeString": "block" }
                      },
                      "id": 27093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14267:9:79",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "14261:15:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "14239:37:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 27099,
                  "nodeType": "IfStatement",
                  "src": "14235:104:79",
                  "trueBody": {
                    "id": 27098,
                    "nodeType": "Block",
                    "src": "14278:61:79",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 27095,
                            "name": "WithdrawalDelayHasNotPassed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28659,
                            "src": "14299:27:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 27096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14299:29:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 27097,
                        "nodeType": "RevertStatement",
                        "src": "14292:36:79"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 27103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27100,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27064,
                      "src": "14349:6:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 27101,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27076,
                        "src": "14358:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_memory_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct memory"
                        }
                      },
                      "id": 27102,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14366:6:79",
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28680,
                      "src": "14358:14:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "14349:23:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "id": 27104,
                  "nodeType": "ExpressionStatement",
                  "src": "14349:23:79"
                },
                {
                  "assignments": [27106],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27106,
                      "mutability": "mutable",
                      "name": "maxAssets",
                      "nameLocation": "14390:9:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 27136,
                      "src": "14382:17:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 27105,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14382:7:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27110,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 27108,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27064,
                        "src": "14418:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }],
                      "id": 27107,
                      "name": "convertToAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3057,
                      "src": "14402:15:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 27109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14402:23:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14382:43:79"
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 27113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 27111,
                      "name": "assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27051,
                      "src": "14479:6:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 27112,
                      "name": "maxAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27106,
                      "src": "14488:9:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "14479:18:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 27118,
                  "nodeType": "IfStatement",
                  "src": "14475:70:79",
                  "trueBody": {
                    "id": 27117,
                    "nodeType": "Block",
                    "src": "14499:46:79",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 27114,
                            "name": "MustClaimAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28653,
                            "src": "14520:12:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 27115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14520:14:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 27116,
                        "nodeType": "RevertStatement",
                        "src": "14513:21:79"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 27121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 27119,
                      "name": "assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27051,
                      "src": "14618:6:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 27120,
                      "name": "maxAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27106,
                      "src": "14627:9:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "14618:18:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 27126,
                  "nodeType": "IfStatement",
                  "src": "14614:79:79",
                  "trueBody": {
                    "id": 27125,
                    "nodeType": "Block",
                    "src": "14638:55:79",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 27122,
                            "name": "ExceededMaxRedeemable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28656,
                            "src": "14659:21:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 27123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14659:23:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 27124,
                        "nodeType": "RevertStatement",
                        "src": "14652:30:79"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 27128,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3547,
                          "src": "14763:10:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 27129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14763:12:79",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 27130,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27053,
                        "src": "14777:8:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 27131,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27055,
                        "src": "14787:10:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 27132,
                        "name": "maxAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27106,
                        "src": "14799:9:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 27133,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27064,
                        "src": "14810:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "id": 27127,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [27272],
                      "referencedDeclaration": 27272,
                      "src": "14753:9:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 27134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14753:64:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 27135,
                  "nodeType": "ExpressionStatement",
                  "src": "14753:64:79"
                }
              ]
            },
            "baseFunctions": [3317, 5129],
            "documentation": {
              "id": 27049,
              "nodeType": "StructuredDocumentation",
              "src": "13409:335:79",
              "text": " @inheritdoc IERC4626\n @dev For ERC7540, the withdraw functions are used to claim the assets.\n This function does not transfer the shares to the contract, because this already happened on requestRedeem.\n Controller MUST be the msg.sender unless the controller has approved msg.sender as an operator."
            },
            "functionSelector": "b460af94",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 27061,
                    "name": "controller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27055,
                    "src": "13932:10:79",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  }
                ],
                "id": 27062,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 27060,
                  "name": "onlyControllerOrOperator",
                  "nameLocations": ["13907:24:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26573,
                  "src": "13907:24:79"
                },
                "nodeType": "ModifierInvocation",
                "src": "13907:36:79"
              }
            ],
            "name": "withdraw",
            "nameLocation": "13758:8:79",
            "overrides": {
              "id": 27059,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 27057,
                  "name": "IERC4626",
                  "nameLocations": ["13869:8:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5158,
                  "src": "13869:8:79"
                },
                {
                  "id": 27058,
                  "name": "ERC4626Upgradeable",
                  "nameLocations": ["13879:18:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3519,
                  "src": "13879:18:79"
                }
              ],
              "src": "13860:38:79"
            },
            "parameters": {
              "id": 27056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27051,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "13775:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27137,
                  "src": "13767:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 27050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13767:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27053,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "13791:8:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27137,
                  "src": "13783:16:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 27052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13783:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27055,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "13809:10:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27137,
                  "src": "13801:18:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 27054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13801:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13766:54:79"
            },
            "returnParameters": {
              "id": 27065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27064,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "13969:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27137,
                  "src": "13961:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 27063,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13961:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13960:16:79"
            },
            "scope": 27419,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 27223,
            "nodeType": "FunctionDefinition",
            "src": "15168:1084:79",
            "nodes": [],
            "body": {
              "id": 27222,
              "nodeType": "Block",
              "src": "15398:854:79",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 27157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 27155,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27140,
                      "src": "15412:6:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 27156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15422:1:79",
                      "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                      "value": "0"
                    },
                    "src": "15412:11:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 27162,
                  "nodeType": "IfStatement",
                  "src": "15408:61:79",
                  "trueBody": {
                    "id": 27161,
                    "nodeType": "Block",
                    "src": "15425:44:79",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 27158,
                            "name": "ZeroAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28650,
                            "src": "15446:10:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 27159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15446:12:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 27160,
                        "nodeType": "RevertStatement",
                        "src": "15439:19:79"
                      }
                    ]
                  }
                },
                {
                  "assignments": [27165],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27165,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "15506:7:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 27222,
                      "src": "15479:34:79",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_memory_ptr",
                        "typeString": "struct ISLAYVaultV2.RedeemRequestStruct"
                      },
                      "typeName": {
                        "id": 27164,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 27163,
                          "name": "RedeemRequestStruct",
                          "nameLocations": ["15479:19:79"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28684,
                          "src": "15479:19:79"
                        },
                        "referencedDeclaration": 28684,
                        "src": "15479:19:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27169,
                  "initialValue": {
                    "baseExpression": {
                      "id": 27166,
                      "name": "_pendingRedemption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26546,
                      "src": "15516:18:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RedeemRequestStruct_$28684_storage_$",
                        "typeString": "mapping(address => struct ISLAYVaultV2.RedeemRequestStruct storage ref)"
                      }
                    },
                    "id": 27168,
                    "indexExpression": {
                      "id": 27167,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27144,
                      "src": "15535:10:79",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15516:30:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage",
                      "typeString": "struct ISLAYVaultV2.RedeemRequestStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15479:67:79"
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 27173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 27170,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27165,
                        "src": "15560:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_memory_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct memory"
                        }
                      },
                      "id": 27171,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15568:11:79",
                      "memberName": "claimableAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28683,
                      "src": "15560:19:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 27172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15583:1:79",
                      "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                      "value": "0"
                    },
                    "src": "15560:24:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 27178,
                  "nodeType": "IfStatement",
                  "src": "15556:87:79",
                  "trueBody": {
                    "id": 27177,
                    "nodeType": "Block",
                    "src": "15586:57:79",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 27174,
                            "name": "WithdrawRequestNotFound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28668,
                            "src": "15607:23:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 27175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15607:25:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 27176,
                        "nodeType": "RevertStatement",
                        "src": "15600:32:79"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 27183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 27179,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27165,
                        "src": "15656:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_memory_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct memory"
                        }
                      },
                      "id": 27180,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15664:11:79",
                      "memberName": "claimableAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28683,
                      "src": "15656:19:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 27181,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "15678:5:79",
                        "typeDescriptions": { "typeIdentifier": "t_magic_block", "typeString": "block" }
                      },
                      "id": 27182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15684:9:79",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "15678:15:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "15656:37:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 27188,
                  "nodeType": "IfStatement",
                  "src": "15652:104:79",
                  "trueBody": {
                    "id": 27187,
                    "nodeType": "Block",
                    "src": "15695:61:79",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 27184,
                            "name": "WithdrawalDelayHasNotPassed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28659,
                            "src": "15716:27:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 27185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15716:29:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 27186,
                        "nodeType": "RevertStatement",
                        "src": "15709:36:79"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 27192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 27189,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27140,
                      "src": "15805:6:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 27190,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27165,
                        "src": "15814:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_memory_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct memory"
                        }
                      },
                      "id": 27191,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15822:6:79",
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28680,
                      "src": "15814:14:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "15805:23:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 27197,
                  "nodeType": "IfStatement",
                  "src": "15801:75:79",
                  "trueBody": {
                    "id": 27196,
                    "nodeType": "Block",
                    "src": "15830:46:79",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 27193,
                            "name": "MustClaimAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28653,
                            "src": "15851:12:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 27194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15851:14:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 27195,
                        "nodeType": "RevertStatement",
                        "src": "15844:21:79"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 27201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 27198,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27140,
                      "src": "15949:6:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 27199,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27165,
                        "src": "15958:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_memory_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct memory"
                        }
                      },
                      "id": 27200,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15966:6:79",
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28680,
                      "src": "15958:14:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "15949:23:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 27206,
                  "nodeType": "IfStatement",
                  "src": "15945:84:79",
                  "trueBody": {
                    "id": 27205,
                    "nodeType": "Block",
                    "src": "15974:55:79",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 27202,
                            "name": "ExceededMaxRedeemable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28656,
                            "src": "15995:21:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 27203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15995:23:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 27204,
                        "nodeType": "RevertStatement",
                        "src": "15988:30:79"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 27211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27207,
                      "name": "assets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27153,
                      "src": "16091:6:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 27209,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27140,
                          "src": "16116:6:79",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }],
                        "id": 27208,
                        "name": "convertToAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3057,
                        "src": "16100:15:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 27210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16100:23:79",
                      "tryCall": false,
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "16091:32:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "id": 27212,
                  "nodeType": "ExpressionStatement",
                  "src": "16091:32:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 27214,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3547,
                          "src": "16194:10:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 27215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16194:12:79",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 27216,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27142,
                        "src": "16208:8:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 27217,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27144,
                        "src": "16218:10:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 27218,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27153,
                        "src": "16230:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 27219,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27140,
                        "src": "16238:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "id": 27213,
                      "name": "_withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [27272],
                      "referencedDeclaration": 27272,
                      "src": "16184:9:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 27220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16184:61:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 27221,
                  "nodeType": "ExpressionStatement",
                  "src": "16184:61:79"
                }
              ]
            },
            "baseFunctions": [3364, 5157],
            "documentation": {
              "id": 27138,
              "nodeType": "StructuredDocumentation",
              "src": "14830:333:79",
              "text": " @inheritdoc IERC4626\n @dev For ERC7540, the redeem functions are used to claim the shares.\n This function does not transfer the shares to the contract, because this already happened on requestRedeem.\n Controller MUST be the msg.sender unless the controller has approved msg.sender as an operator."
            },
            "functionSelector": "ba087652",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 27150,
                    "name": "controller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27144,
                    "src": "15349:10:79",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  }
                ],
                "id": 27151,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 27149,
                  "name": "onlyControllerOrOperator",
                  "nameLocations": ["15324:24:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26573,
                  "src": "15324:24:79"
                },
                "nodeType": "ModifierInvocation",
                "src": "15324:36:79"
              }
            ],
            "name": "redeem",
            "nameLocation": "15177:6:79",
            "overrides": {
              "id": 27148,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 27146,
                  "name": "IERC4626",
                  "nameLocations": ["15286:8:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5158,
                  "src": "15286:8:79"
                },
                {
                  "id": 27147,
                  "name": "ERC4626Upgradeable",
                  "nameLocations": ["15296:18:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3519,
                  "src": "15296:18:79"
                }
              ],
              "src": "15277:38:79"
            },
            "parameters": {
              "id": 27145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27140,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "15192:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27223,
                  "src": "15184:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 27139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15184:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27142,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "15208:8:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27223,
                  "src": "15200:16:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 27141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15200:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27144,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "15226:10:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27223,
                  "src": "15218:18:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 27143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15218:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15183:54:79"
            },
            "returnParameters": {
              "id": 27154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27153,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "15386:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27223,
                  "src": "15378:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 27152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15378:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15377:16:79"
            },
            "scope": 27419,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 27272,
            "nodeType": "FunctionDefinition",
            "src": "16514:569:79",
            "nodes": [],
            "body": {
              "id": 27271,
              "nodeType": "Block",
              "src": "16693:390:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 27242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "16757:37:79",
                    "subExpression": {
                      "baseExpression": {
                        "id": 27239,
                        "name": "_pendingRedemption",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26546,
                        "src": "16764:18:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RedeemRequestStruct_$28684_storage_$",
                          "typeString": "mapping(address => struct ISLAYVaultV2.RedeemRequestStruct storage ref)"
                        }
                      },
                      "id": 27241,
                      "indexExpression": {
                        "id": 27240,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27230,
                        "src": "16783:10:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16764:30:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage",
                        "typeString": "struct ISLAYVaultV2.RedeemRequestStruct storage ref"
                      }
                    },
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 27243,
                  "nodeType": "ExpressionStatement",
                  "src": "16757:37:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27247,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "16871:4:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                              "typeString": "contract SLAYVaultV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_SLAYVaultV2_$27419", "typeString": "contract SLAYVaultV2" }
                          ],
                          "id": 27246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16863:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27245,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16863:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16863:13:79",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 27249,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27234,
                        "src": "16878:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "id": 27244,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2463,
                      "src": "16857:5:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 27250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16857:28:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 27251,
                  "nodeType": "ExpressionStatement",
                  "src": "16857:28:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 27256,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3007,
                              "src": "16979:5:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 27257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16979:7:79",
                            "tryCall": false,
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "id": 27255,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6631,
                          "src": "16972:6:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$6631_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 27258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16972:15:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6631",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 27259,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27228,
                        "src": "16989:8:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 27260,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27232,
                        "src": "16999:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_contract$_IERC20_$6631", "typeString": "contract IERC20" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 27252,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7851,
                        "src": "16949:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$7851_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 27254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16959:12:79",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7432,
                      "src": "16949:22:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$6631_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 27261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16949:57:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 27262,
                  "nodeType": "ExpressionStatement",
                  "src": "16949:57:79"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 27264,
                        "name": "caller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27226,
                        "src": "17031:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 27265,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27228,
                        "src": "17039:8:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 27266,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27230,
                        "src": "17049:10:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 27267,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27232,
                        "src": "17061:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 27268,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27234,
                        "src": "17069:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "id": 27263,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5021,
                      "src": "17022:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 27269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17022:54:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 27270,
                  "nodeType": "EmitStatement",
                  "src": "17017:59:79"
                }
              ]
            },
            "baseFunctions": [3510],
            "documentation": {
              "id": 27224,
              "nodeType": "StructuredDocumentation",
              "src": "16258:251:79",
              "text": " @dev Withdraw/redeem common workflow to:\n - Burn shares from the contract (owner has transferred shares to the contract in requestRedeem)\n - Transfer assets to the receiver\n - Update state variables and emit events"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdraw",
            "nameLocation": "16523:9:79",
            "overrides": {
              "id": 27237,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 27236,
                  "name": "ERC4626Upgradeable",
                  "nameLocations": ["16669:18:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3519,
                  "src": "16669:18:79"
                }
              ],
              "src": "16660:28:79"
            },
            "parameters": {
              "id": 27235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27226,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "16541:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27272,
                  "src": "16533:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 27225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16533:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27228,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "16557:8:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27272,
                  "src": "16549:16:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 27227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16549:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27230,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "16575:10:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27272,
                  "src": "16567:18:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 27229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16567:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27232,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "16595:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27272,
                  "src": "16587:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 27231,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16587:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27234,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "16611:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27272,
                  "src": "16603:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 27233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16603:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16532:86:79"
            },
            "returnParameters": { "id": 27238, "nodeType": "ParameterList", "parameters": [], "src": "16693:0:79" },
            "scope": 27419,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 27305,
            "nodeType": "FunctionDefinition",
            "src": "17118:380:79",
            "nodes": [],
            "body": {
              "id": 27304,
              "nodeType": "Block",
              "src": "17280:218:79",
              "nodes": [],
              "statements": [
                {
                  "assignments": [27285],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27285,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "17317:7:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 27304,
                      "src": "17290:34:79",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_memory_ptr",
                        "typeString": "struct ISLAYVaultV2.RedeemRequestStruct"
                      },
                      "typeName": {
                        "id": 27284,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 27283,
                          "name": "RedeemRequestStruct",
                          "nameLocations": ["17290:19:79"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28684,
                          "src": "17290:19:79"
                        },
                        "referencedDeclaration": 28684,
                        "src": "17290:19:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27289,
                  "initialValue": {
                    "baseExpression": {
                      "id": 27286,
                      "name": "_pendingRedemption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26546,
                      "src": "17327:18:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RedeemRequestStruct_$28684_storage_$",
                        "typeString": "mapping(address => struct ISLAYVaultV2.RedeemRequestStruct storage ref)"
                      }
                    },
                    "id": 27288,
                    "indexExpression": {
                      "id": 27287,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27275,
                      "src": "17346:10:79",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17327:30:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage",
                      "typeString": "struct ISLAYVaultV2.RedeemRequestStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17290:67:79"
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 27294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 27290,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27285,
                        "src": "17371:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_memory_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct memory"
                        }
                      },
                      "id": 27291,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17379:11:79",
                      "memberName": "claimableAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28683,
                      "src": "17371:19:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 27292,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "17394:5:79",
                        "typeDescriptions": { "typeIdentifier": "t_magic_block", "typeString": "block" }
                      },
                      "id": 27293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17400:9:79",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "17394:15:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "17371:38:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 27301,
                  "nodeType": "IfStatement",
                  "src": "17367:107:79",
                  "trueBody": {
                    "id": 27300,
                    "nodeType": "Block",
                    "src": "17411:63:79",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 27296,
                                "name": "request",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27285,
                                "src": "17448:7:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_memory_ptr",
                                  "typeString": "struct ISLAYVaultV2.RedeemRequestStruct memory"
                                }
                              },
                              "id": 27297,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17456:6:79",
                              "memberName": "shares",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28680,
                              "src": "17448:14:79",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }],
                            "id": 27295,
                            "name": "convertToAssets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3057,
                            "src": "17432:15:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 27298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17432:31:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 27282,
                        "id": 27299,
                        "nodeType": "Return",
                        "src": "17425:38:79"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 27302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "17490:1:79",
                    "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                    "value": "0"
                  },
                  "functionReturnParameters": 27282,
                  "id": 27303,
                  "nodeType": "Return",
                  "src": "17483:8:79"
                }
              ]
            },
            "baseFunctions": [3105, 5109],
            "documentation": {
              "id": 27273,
              "nodeType": "StructuredDocumentation",
              "src": "17089:24:79",
              "text": "@inheritdoc IERC4626"
            },
            "functionSelector": "ce96cb77",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxWithdraw",
            "nameLocation": "17127:11:79",
            "overrides": {
              "id": 27279,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 27277,
                  "name": "IERC4626",
                  "nameLocations": ["17220:8:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5158,
                  "src": "17220:8:79"
                },
                {
                  "id": 27278,
                  "name": "ERC4626Upgradeable",
                  "nameLocations": ["17230:18:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3519,
                  "src": "17230:18:79"
                }
              ],
              "src": "17211:38:79"
            },
            "parameters": {
              "id": 27276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27275,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "17147:10:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27305,
                  "src": "17139:18:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 27274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17139:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17138:20:79"
            },
            "returnParameters": {
              "id": 27282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27281,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27305,
                  "src": "17267:7:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 27280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17267:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17266:9:79"
            },
            "scope": 27419,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 27336,
            "nodeType": "FunctionDefinition",
            "src": "17533:361:79",
            "nodes": [],
            "body": {
              "id": 27335,
              "nodeType": "Block",
              "src": "17693:201:79",
              "nodes": [],
              "statements": [
                {
                  "assignments": [27318],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27318,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "17730:7:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 27335,
                      "src": "17703:34:79",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_memory_ptr",
                        "typeString": "struct ISLAYVaultV2.RedeemRequestStruct"
                      },
                      "typeName": {
                        "id": 27317,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 27316,
                          "name": "RedeemRequestStruct",
                          "nameLocations": ["17703:19:79"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28684,
                          "src": "17703:19:79"
                        },
                        "referencedDeclaration": 28684,
                        "src": "17703:19:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27322,
                  "initialValue": {
                    "baseExpression": {
                      "id": 27319,
                      "name": "_pendingRedemption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26546,
                      "src": "17740:18:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RedeemRequestStruct_$28684_storage_$",
                        "typeString": "mapping(address => struct ISLAYVaultV2.RedeemRequestStruct storage ref)"
                      }
                    },
                    "id": 27321,
                    "indexExpression": {
                      "id": 27320,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27308,
                      "src": "17759:10:79",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17740:30:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_storage",
                      "typeString": "struct ISLAYVaultV2.RedeemRequestStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17703:67:79"
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 27327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 27323,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27318,
                        "src": "17784:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_memory_ptr",
                          "typeString": "struct ISLAYVaultV2.RedeemRequestStruct memory"
                        }
                      },
                      "id": 27324,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17792:11:79",
                      "memberName": "claimableAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28683,
                      "src": "17784:19:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 27325,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "17807:5:79",
                        "typeDescriptions": { "typeIdentifier": "t_magic_block", "typeString": "block" }
                      },
                      "id": 27326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17813:9:79",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "17807:15:79",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "17784:38:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 27332,
                  "nodeType": "IfStatement",
                  "src": "17780:90:79",
                  "trueBody": {
                    "id": 27331,
                    "nodeType": "Block",
                    "src": "17824:46:79",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 27328,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27318,
                            "src": "17845:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RedeemRequestStruct_$28684_memory_ptr",
                              "typeString": "struct ISLAYVaultV2.RedeemRequestStruct memory"
                            }
                          },
                          "id": 27329,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17853:6:79",
                          "memberName": "shares",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28680,
                          "src": "17845:14:79",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 27315,
                        "id": 27330,
                        "nodeType": "Return",
                        "src": "17838:21:79"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 27333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "17886:1:79",
                    "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                    "value": "0"
                  },
                  "functionReturnParameters": 27315,
                  "id": 27334,
                  "nodeType": "Return",
                  "src": "17879:8:79"
                }
              ]
            },
            "baseFunctions": [3118, 5137],
            "documentation": {
              "id": 27306,
              "nodeType": "StructuredDocumentation",
              "src": "17504:24:79",
              "text": "@inheritdoc IERC4626"
            },
            "functionSelector": "d905777e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxRedeem",
            "nameLocation": "17542:9:79",
            "overrides": {
              "id": 27312,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 27310,
                  "name": "IERC4626",
                  "nameLocations": ["17633:8:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5158,
                  "src": "17633:8:79"
                },
                {
                  "id": 27311,
                  "name": "ERC4626Upgradeable",
                  "nameLocations": ["17643:18:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3519,
                  "src": "17643:18:79"
                }
              ],
              "src": "17624:38:79"
            },
            "parameters": {
              "id": 27309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27308,
                  "mutability": "mutable",
                  "name": "controller",
                  "nameLocation": "17560:10:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27336,
                  "src": "17552:18:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 27307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17552:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17551:20:79"
            },
            "returnParameters": {
              "id": 27315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27314,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27336,
                  "src": "17680:7:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 27313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17680:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17679:9:79"
            },
            "scope": 27419,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 27351,
            "nodeType": "FunctionDefinition",
            "src": "18195:156:79",
            "nodes": [],
            "body": {
              "id": 27350,
              "nodeType": "Block",
              "src": "18306:45:79",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27347,
                      "name": "PreviewNotSupported",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28665,
                      "src": "18323:19:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 27348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18323:21:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 27349,
                  "nodeType": "RevertStatement",
                  "src": "18316:28:79"
                }
              ]
            },
            "baseFunctions": [3166, 5117],
            "documentation": {
              "id": 27337,
              "nodeType": "StructuredDocumentation",
              "src": "17900:290:79",
              "text": " @notice Always reverts as preview functions are not supported for asynchronous flows\n @dev For ERC7540, preview functions MUST revert for all callers and inputs\n See https://eips.ethereum.org/EIPS/eip-7540#reversion-of-preview-functions-in-async-request-flows"
            },
            "functionSelector": "0a28a477",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "previewWithdraw",
            "nameLocation": "18204:15:79",
            "overrides": {
              "id": 27343,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 27341,
                  "name": "IERC4626",
                  "nameLocations": ["18258:8:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5158,
                  "src": "18258:8:79"
                },
                {
                  "id": 27342,
                  "name": "ERC4626Upgradeable",
                  "nameLocations": ["18268:18:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3519,
                  "src": "18268:18:79"
                }
              ],
              "src": "18249:38:79"
            },
            "parameters": {
              "id": 27340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27339,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27351,
                  "src": "18220:7:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 27338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18220:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18219:9:79"
            },
            "returnParameters": {
              "id": 27346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27345,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27351,
                  "src": "18297:7:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 27344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18297:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18296:9:79"
            },
            "scope": 27419,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 27366,
            "nodeType": "FunctionDefinition",
            "src": "18652:154:79",
            "nodes": [],
            "body": {
              "id": 27365,
              "nodeType": "Block",
              "src": "18761:45:79",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27362,
                      "name": "PreviewNotSupported",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28665,
                      "src": "18778:19:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 27363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18778:21:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 27364,
                  "nodeType": "RevertStatement",
                  "src": "18771:28:79"
                }
              ]
            },
            "baseFunctions": [3182, 5145],
            "documentation": {
              "id": 27352,
              "nodeType": "StructuredDocumentation",
              "src": "18357:290:79",
              "text": " @notice Always reverts as preview functions are not supported for asynchronous flows\n @dev For ERC7540, preview functions MUST revert for all callers and inputs\n See https://eips.ethereum.org/EIPS/eip-7540#reversion-of-preview-functions-in-async-request-flows"
            },
            "functionSelector": "4cdad506",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "previewRedeem",
            "nameLocation": "18661:13:79",
            "overrides": {
              "id": 27358,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 27356,
                  "name": "IERC4626",
                  "nameLocations": ["18713:8:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5158,
                  "src": "18713:8:79"
                },
                {
                  "id": 27357,
                  "name": "ERC4626Upgradeable",
                  "nameLocations": ["18723:18:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3519,
                  "src": "18723:18:79"
                }
              ],
              "src": "18704:38:79"
            },
            "parameters": {
              "id": 27355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27354,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27366,
                  "src": "18675:7:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 27353,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18675:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18674:9:79"
            },
            "returnParameters": {
              "id": 27361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27360,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27366,
                  "src": "18752:7:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 27359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18752:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18751:9:79"
            },
            "scope": 27419,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 27406,
            "nodeType": "FunctionDefinition",
            "src": "18845:325:79",
            "nodes": [],
            "body": {
              "id": 27405,
              "nodeType": "Block",
              "src": "18915:255:79",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                    "id": 27381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 27375,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3547,
                        "src": "18975:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 27376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18975:12:79",
                      "tryCall": false,
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 27379,
                          "name": "ROUTER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26526,
                          "src": "18999:6:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLAYRouterV2_$26255",
                            "typeString": "contract SLAYRouterV2"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_contract$_SLAYRouterV2_$26255", "typeString": "contract SLAYRouterV2" }
                        ],
                        "id": 27378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "18991:7:79",
                        "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" },
                        "typeName": {
                          "id": 27377,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18991:7:79",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 27380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18991:15:79",
                      "tryCall": false,
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "src": "18975:31:79",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 27386,
                  "nodeType": "IfStatement",
                  "src": "18971:80:79",
                  "trueBody": {
                    "id": 27385,
                    "nodeType": "Block",
                    "src": "19008:43:79",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 27382,
                            "name": "NotRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28671,
                            "src": "19029:9:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 27383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19029:11:79",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 27384,
                        "nodeType": "RevertStatement",
                        "src": "19022:18:79"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 27391,
                              "name": "asset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3007,
                              "src": "19091:5:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 27392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19091:7:79",
                            "tryCall": false,
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "id": 27390,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6631,
                          "src": "19084:6:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$6631_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 27393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19084:15:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6631",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27396,
                            "name": "ROUTER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26526,
                            "src": "19109:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLAYRouterV2_$26255",
                              "typeString": "contract SLAYRouterV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SLAYRouterV2_$26255",
                              "typeString": "contract SLAYRouterV2"
                            }
                          ],
                          "id": 27395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19101:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27394,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19101:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19101:15:79",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 27398,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27369,
                        "src": "19118:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_contract$_IERC20_$6631", "typeString": "contract IERC20" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 27387,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7851,
                        "src": "19061:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$7851_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 27389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19071:12:79",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7432,
                      "src": "19061:22:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$6631_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 27399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19061:64:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 27400,
                  "nodeType": "ExpressionStatement",
                  "src": "19061:64:79"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 27402,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27369,
                        "src": "19156:6:79",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }],
                      "id": 27401,
                      "name": "SlashingLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28676,
                      "src": "19141:14:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 27403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19141:22:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 27404,
                  "nodeType": "EmitStatement",
                  "src": "19136:27:79"
                }
              ]
            },
            "baseFunctions": [28702],
            "documentation": {
              "id": 27367,
              "nodeType": "StructuredDocumentation",
              "src": "18812:28:79",
              "text": "@inheritdoc ISLAYVaultV2"
            },
            "functionSelector": "dff81f7d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 27373,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 27372,
                  "name": "whenNotPaused",
                  "nameLocations": ["18901:13:79"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26581,
                  "src": "18901:13:79"
                },
                "nodeType": "ModifierInvocation",
                "src": "18901:13:79"
              }
            ],
            "name": "lockSlashing",
            "nameLocation": "18854:12:79",
            "overrides": { "id": 27371, "nodeType": "OverrideSpecifier", "overrides": [], "src": "18892:8:79" },
            "parameters": {
              "id": 27370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27369,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18875:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 27406,
                  "src": "18867:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 27368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18867:7:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18866:16:79"
            },
            "returnParameters": { "id": 27374, "nodeType": "ParameterList", "parameters": [], "src": "18915:0:79" },
            "scope": 27419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27418,
            "nodeType": "FunctionDefinition",
            "src": "19209:124:79",
            "nodes": [],
            "body": {
              "id": 27417,
              "nodeType": "Block",
              "src": "19270:63:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27414,
                        "name": "_delegated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26533,
                        "src": "19315:10:79",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 27412,
                        "name": "REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26530,
                        "src": "19287:8:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SLAYRegistryV2_$24613",
                          "typeString": "contract SLAYRegistryV2"
                        }
                      },
                      "id": 27413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19296:18:79",
                      "memberName": "getWithdrawalDelay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23886,
                      "src": "19287:27:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint32_$",
                        "typeString": "function (address) view external returns (uint32)"
                      }
                    },
                    "id": 27415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19287:39:79",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" }
                  },
                  "functionReturnParameters": 27411,
                  "id": 27416,
                  "nodeType": "Return",
                  "src": "19280:46:79"
                }
              ]
            },
            "baseFunctions": [28708],
            "documentation": {
              "id": 27407,
              "nodeType": "StructuredDocumentation",
              "src": "19176:28:79",
              "text": "@inheritdoc ISLAYVaultV2"
            },
            "functionSelector": "03160940",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWithdrawalDelay",
            "nameLocation": "19218:18:79",
            "parameters": { "id": 27408, "nodeType": "ParameterList", "parameters": [], "src": "19236:2:79" },
            "returnParameters": {
              "id": 27411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27410,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27418,
                  "src": "19262:6:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" },
                  "typeName": {
                    "id": 27409,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "19262:6:79",
                    "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19261:8:79"
            },
            "scope": 27419,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26503,
              "name": "Initializable",
              "nameLocations": ["2547:13:79"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1799,
              "src": "2547:13:79"
            },
            "id": 26504,
            "nodeType": "InheritanceSpecifier",
            "src": "2547:13:79"
          },
          {
            "baseName": {
              "id": 26505,
              "name": "ERC20Upgradeable",
              "nameLocations": ["2566:16:79"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2598,
              "src": "2566:16:79"
            },
            "id": 26506,
            "nodeType": "InheritanceSpecifier",
            "src": "2566:16:79"
          },
          {
            "baseName": {
              "id": 26507,
              "name": "ERC4626Upgradeable",
              "nameLocations": ["2588:18:79"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3519,
              "src": "2588:18:79"
            },
            "id": 26508,
            "nodeType": "InheritanceSpecifier",
            "src": "2588:18:79"
          },
          {
            "baseName": {
              "id": 26509,
              "name": "ERC165Upgradeable",
              "nameLocations": ["2612:17:79"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4349,
              "src": "2612:17:79"
            },
            "id": 26510,
            "nodeType": "InheritanceSpecifier",
            "src": "2612:17:79"
          },
          {
            "baseName": {
              "id": 26511,
              "name": "ERC20PermitUpgradeable",
              "nameLocations": ["2635:22:79"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2767,
              "src": "2635:22:79"
            },
            "id": 26512,
            "nodeType": "InheritanceSpecifier",
            "src": "2635:22:79"
          },
          {
            "baseName": {
              "id": 26513,
              "name": "ISLAYVaultV2",
              "nameLocations": ["2663:12:79"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28709,
              "src": "2663:12:79"
            },
            "id": 26514,
            "nodeType": "InheritanceSpecifier",
            "src": "2663:12:79"
          }
        ],
        "canonicalName": "SLAYVaultV2",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 26502,
          "nodeType": "StructuredDocumentation",
          "src": "1189:1329:79",
          "text": " @title SatLayer Vault\n @notice ERC4626-compliant tokenized vault designed for asynchronous redemption workflows\n @dev\n - This contract is deployed via the SLAYVaultFactory using the Beacon Proxy pattern\n - It integrates the ERC20, ERC4626, and ERC20Permit standards with custom logic for delayed redemptions,\n   as defined in the ERC7540 interface\n - Redeem requests are initiated by transferring shares to the vault and can be claimed after a configurable delay\n - Preview functions are intentionally disabled to prevent misuse in asynchronous flows\n - Immutable dependencies (`SLAYRouter` and `SLAYRegistry`) are injected at construction for efficient immutable access\n Key Features:\n - Asynchronous redeem request/claim pattern using `requestRedeem`, `withdraw`, and `redeem`\n - IERC7540Operator for request/claim with configurable controller-operator relationships\n - Upgradeable via Beacon Proxy pattern\n - Pausing and whitelisting enforced by SLAYRouter\n WARNING: This contract does not support non-standard ERC20 tokens. Assets that do not conform to the ERC20 standard,\n might lead to unexpected behavior or loss of funds. For example, tokens with fee-on-transfer mechanism are non-compliant.\n Thus, vault with non-standard asset will NOT be whitelisted in the SLAYRouter."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          27419, 28709, 27585, 27465, 2767, 3676, 4309, 5183, 7387, 4349, 11528, 3519, 5158, 2598, 5235, 7351, 6631,
          3565, 1799
        ],
        "name": "SLAYVaultV2",
        "nameLocation": "2528:11:79",
        "scope": 27420,
        "usedErrors": [
          1548, 1551, 2633, 2640, 2820, 2829, 2838, 2847, 3579, 5205, 5210, 5215, 5224, 5229, 5234, 7399, 11069, 11074,
          11079, 28644, 28647, 28650, 28653, 28656, 28659, 28662, 28665, 28668, 28671
        ],
        "usedEvents": [1556, 5009, 5021, 5163, 6565, 6574, 27444, 27552, 28676]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 79
}
