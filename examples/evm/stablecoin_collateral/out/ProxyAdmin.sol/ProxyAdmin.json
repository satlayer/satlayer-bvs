{
  "abi": [
    {
      "type": "constructor",
      "inputs": [{ "name": "initialOwner", "type": "address", "internalType": "address" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "UPGRADE_INTERFACE_VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    { "type": "function", "name": "renounceOwnership", "inputs": [], "outputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [{ "name": "newOwner", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "upgradeAndCall",
      "inputs": [
        { "name": "proxy", "type": "address", "internalType": "contract ITransparentUpgradeableProxy" },
        { "name": "implementation", "type": "address", "internalType": "address" },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        { "name": "previousOwner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "newOwner", "type": "address", "indexed": true, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [{ "name": "account", "type": "address", "internalType": "address" }]
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561000f575f80fd5b506040516104fc3803806104fc83398101604081905261002e916100bb565b806001600160a01b03811661005c57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100658161006c565b50506100e8565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100cb575f80fd5b81516001600160a01b03811681146100e1575f80fd5b9392505050565b610407806100f55f395ff3fe608060405260043610610049575f3560e01c8063715018a61461004d5780638da5cb5b146100635780639623609d1461008e578063ad3cb1cc146100a1578063f2fde38b146100de575b5f80fd5b348015610058575f80fd5b506100616100fd565b005b34801561006e575f80fd5b505f546040516001600160a01b0390911681526020015b60405180910390f35b61006161009c366004610260565b610110565b3480156100ac575f80fd5b506100d1604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516100859190610372565b3480156100e9575f80fd5b506100616100f836600461038b565b61017b565b6101056101bd565b61010e5f6101e9565b565b6101186101bd565b60405163278f794360e11b81526001600160a01b03841690634f1ef28690349061014890869086906004016103a6565b5f604051808303818588803b15801561015f575f80fd5b505af1158015610171573d5f803e3d5ffd5b5050505050505050565b6101836101bd565b6001600160a01b0381166101b157604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6101ba816101e9565b50565b5f546001600160a01b0316331461010e5760405163118cdaa760e01b81523360048201526024016101a8565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146101ba575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f805f60608486031215610272575f80fd5b833561027d81610238565b9250602084013561028d81610238565b9150604084013567ffffffffffffffff808211156102a9575f80fd5b818601915086601f8301126102bc575f80fd5b8135818111156102ce576102ce61024c565b604051601f8201601f19908116603f011681019083821181831017156102f6576102f661024c565b8160405282815289602084870101111561030e575f80fd5b826020860160208301375f6020848301015280955050505050509250925092565b5f81518084525f5b8181101561035357602081850181015186830182015201610337565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f610384602083018461032f565b9392505050565b5f6020828403121561039b575f80fd5b813561038481610238565b6001600160a01b03831681526040602082018190525f906103c99083018461032f565b94935050505056fea2646970667358221220882d6990d6aea9bac479eab6257a71b4a9d482e00600c280e1d0119d69af966264736f6c63430008180033",
    "sourceMap": "502:1462:33:-:0;;;1329:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1371:12;-1:-1:-1;;;;;1273:26:18;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:18;;1350:1;1322:31;;;455:51:124;428:18;;1322:31:18;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;1329:58:33;502:1462;;2912:187:18;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:18;;;-1:-1:-1;;;;;;3020:17:18;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:124:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:124;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:124:o;309:203::-;502:1462:33;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610610049575f3560e01c8063715018a61461004d5780638da5cb5b146100635780639623609d1461008e578063ad3cb1cc146100a1578063f2fde38b146100de575b5f80fd5b348015610058575f80fd5b506100616100fd565b005b34801561006e575f80fd5b505f546040516001600160a01b0390911681526020015b60405180910390f35b61006161009c366004610260565b610110565b3480156100ac575f80fd5b506100d1604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516100859190610372565b3480156100e9575f80fd5b506100616100f836600461038b565b61017b565b6101056101bd565b61010e5f6101e9565b565b6101186101bd565b60405163278f794360e11b81526001600160a01b03841690634f1ef28690349061014890869086906004016103a6565b5f604051808303818588803b15801561015f575f80fd5b505af1158015610171573d5f803e3d5ffd5b5050505050505050565b6101836101bd565b6001600160a01b0381166101b157604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6101ba816101e9565b50565b5f546001600160a01b0316331461010e5760405163118cdaa760e01b81523360048201526024016101a8565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146101ba575f80fd5b634e487b7160e01b5f52604160045260245ffd5b5f805f60608486031215610272575f80fd5b833561027d81610238565b9250602084013561028d81610238565b9150604084013567ffffffffffffffff808211156102a9575f80fd5b818601915086601f8301126102bc575f80fd5b8135818111156102ce576102ce61024c565b604051601f8201601f19908116603f011681019083821181831017156102f6576102f661024c565b8160405282815289602084870101111561030e575f80fd5b826020860160208301375f6020848301015280955050505050509250925092565b5f81518084525f5b8181101561035357602081850181015186830182015201610337565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f610384602083018461032f565b9392505050565b5f6020828403121561039b575f80fd5b813561038481610238565b6001600160a01b03831681526040602082018190525f906103c99083018461032f565b94935050505056fea2646970667358221220882d6990d6aea9bac479eab6257a71b4a9d482e00600c280e1d0119d69af966264736f6c63430008180033",
    "sourceMap": "502:1462:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2293:101:18;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;-1:-1:-1;1684:7:18;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:18;;;160:51:124;;148:2;133:18;1638:85:18;;;;;;;;1717:245:33;;;;;;:::i;:::-;;:::i;1187:58::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1187:58:33;;;;;;;;;;;;:::i;2543:215:18:-;;;;;;;;;;-1:-1:-1;2543:215:18;;;;;:::i;:::-;;:::i;2293:101::-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1717:245:33:-;1531:13:18;:11;:13::i;:::-;1893:62:33::1;::::0;-1:-1:-1;;;1893:62:33;;-1:-1:-1;;;;;1893:22:33;::::1;::::0;::::1;::::0;1923:9:::1;::::0;1893:62:::1;::::0;1934:14;;1950:4;;1893:62:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;1717:245:::0;;;:::o;2543:215:18:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:18;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:18;;2700:1:::1;2672:31;::::0;::::1;160:51:124::0;133:18;;2672:31:18::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:18;735:10:44;1855:23:18;1851:101;;1901:40;;-1:-1:-1;;;1901:40:18;;735:10:44;1901:40:18;;;160:51:124;133:18;;1901:40:18;14:203:124;2912:187:18;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:18;;;-1:-1:-1;;;;;;3020:17:18;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;222:161:124:-;-1:-1:-1;;;;;327:31:124;;317:42;;307:70;;373:1;370;363:12;388:127;449:10;444:3;440:20;437:1;430:31;480:4;477:1;470:15;504:4;501:1;494:15;520:1294;643:6;651;659;712:2;700:9;691:7;687:23;683:32;680:52;;;728:1;725;718:12;680:52;767:9;754:23;786:61;841:5;786:61;:::i;:::-;866:5;-1:-1:-1;923:2:124;908:18;;895:32;936:63;895:32;936:63;:::i;:::-;1018:7;-1:-1:-1;1076:2:124;1061:18;;1048:32;1099:18;1129:14;;;1126:34;;;1156:1;1153;1146:12;1126:34;1194:6;1183:9;1179:22;1169:32;;1239:7;1232:4;1228:2;1224:13;1220:27;1210:55;;1261:1;1258;1251:12;1210:55;1297:2;1284:16;1319:2;1315;1312:10;1309:36;;;1325:18;;:::i;:::-;1400:2;1394:9;1368:2;1454:13;;-1:-1:-1;;1450:22:124;;;1474:2;1446:31;1442:40;1430:53;;;1498:18;;;1518:22;;;1495:46;1492:72;;;1544:18;;:::i;:::-;1584:10;1580:2;1573:22;1619:2;1611:6;1604:18;1659:7;1654:2;1649;1645;1641:11;1637:20;1634:33;1631:53;;;1680:1;1677;1670:12;1631:53;1736:2;1731;1727;1723:11;1718:2;1710:6;1706:15;1693:46;1781:1;1776:2;1771;1763:6;1759:15;1755:24;1748:35;1802:6;1792:16;;;;;;;520:1294;;;;;:::o;1819:423::-;1861:3;1899:5;1893:12;1926:6;1921:3;1914:19;1951:1;1961:162;1975:6;1972:1;1969:13;1961:162;;;2037:4;2093:13;;;2089:22;;2083:29;2065:11;;;2061:20;;2054:59;1990:12;1961:162;;;1965:3;2168:1;2161:4;2152:6;2147:3;2143:16;2139:27;2132:38;2231:4;2224:2;2220:7;2215:2;2207:6;2203:15;2199:29;2194:3;2190:39;2186:50;2179:57;;;1819:423;;;;:::o;2247:220::-;2396:2;2385:9;2378:21;2359:4;2416:45;2457:2;2446:9;2442:18;2434:6;2416:45;:::i;:::-;2408:53;2247:220;-1:-1:-1;;;2247:220:124:o;2472:277::-;2531:6;2584:2;2572:9;2563:7;2559:23;2555:32;2552:52;;;2600:1;2597;2590:12;2552:52;2639:9;2626:23;2658:61;2713:5;2658:61;:::i;2754:315::-;-1:-1:-1;;;;;2929:32:124;;2911:51;;2998:2;2993;2978:18;;2971:30;;;-1:-1:-1;;3018:45:124;;3044:18;;3036:6;3018:45;:::i;:::-;3010:53;2754:315;-1:-1:-1;;;;2754:315:124:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "upgradeAndCall(address,address,bytes)": "9623609d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the initial owner who can perform upgrades.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeAndCall(address,address,bytes)\":{\"details\":\"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`. - If `data` is empty, `msg.value` must be zero.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address,address)` and `upgradeAndCall(address,address,bytes)` are present, and `upgrade` must be used if no function should be called, while `upgradeAndCall` will invoke the `receive` function if the third argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeAndCall(address,address,bytes)` is present, and the third argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":\"ProxyAdmin\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=node_modules/@aave/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@openzeppelin/foundry-upgrades/=node_modules/@openzeppelin/foundry-upgrades/src/\",\":@satlayer/contracts/=node_modules/@satlayer/contracts/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa3066ff86b94128a9d3956a63a0511fa1aae41bd455772ab587b32ff322acb2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7b192fd82acf6187970c80548f624b1b9c80425b62fa49e7fdb538a52de049\",\"dweb:/ipfs/QmWXG1YCde1tqDYTbNwjkZDWVgPEjzaQGSDqWkyKLzaNua\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x46f86003755f50eff00a7c5aaf493ae62e024142b8aec4493a313851d3c14872\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462c770cb667cc75ab22df5a29c50873b24b267274edf87ac5cfe0112bf4c3f7\",\"dweb:/ipfs/QmTfKk32AkQ2yyYZCYJ44V69EM5t9ryBFC6bRF7FVMHXvj\"]},\"node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x92579f452fe663595a898cbac85d80bb3868a6c9f034f19ba7fbebdfa3b65a4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d07a888cd4a26c7077a30dd99e9ac30fbe2752bfb37e58c65f06a3b192079ef3\",\"dweb:/ipfs/QmZCQY4FC4ynBv9dha4BBWM1vYxTUJPBdFBS4HEFe6XzVB\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.24+commit.e11b9ed9" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [{ "internalType": "address", "name": "initialOwner", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "previousOwner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "newOwner", "type": "address", "indexed": true }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UPGRADE_INTERFACE_VERSION",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "renounceOwnership" },
        {
          "inputs": [{ "internalType": "address", "name": "newOwner", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            { "internalType": "contract ITransparentUpgradeableProxy", "name": "proxy", "type": "address" },
            { "internalType": "address", "name": "implementation", "type": "address" },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": { "details": "Sets the initial owner who can perform upgrades." },
          "owner()": { "details": "Returns the address of the current owner." },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "upgradeAndCall(address,address,bytes)": {
            "details": "Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`. - If `data` is empty, `msg.value` must be zero."
          }
        },
        "version": 1
      },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@aave/=node_modules/@aave/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@openzeppelin/foundry-upgrades/=node_modules/@openzeppelin/foundry-upgrades/src/",
        "@satlayer/contracts/=node_modules/@satlayer/contracts/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol": "ProxyAdmin" },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5",
        "urls": [
          "bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c",
          "dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0xa3066ff86b94128a9d3956a63a0511fa1aae41bd455772ab587b32ff322acb2e",
        "urls": [
          "bzz-raw://bf7b192fd82acf6187970c80548f624b1b9c80425b62fa49e7fdb538a52de049",
          "dweb:/ipfs/QmWXG1YCde1tqDYTbNwjkZDWVgPEjzaQGSDqWkyKLzaNua"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618",
        "urls": [
          "bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a",
          "dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
        "urls": [
          "bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
          "dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b",
        "urls": [
          "bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d",
          "dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol": {
        "keccak256": "0x46f86003755f50eff00a7c5aaf493ae62e024142b8aec4493a313851d3c14872",
        "urls": [
          "bzz-raw://462c770cb667cc75ab22df5a29c50873b24b267274edf87ac5cfe0112bf4c3f7",
          "dweb:/ipfs/QmTfKk32AkQ2yyYZCYJ44V69EM5t9ryBFC6bRF7FVMHXvj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "keccak256": "0x92579f452fe663595a898cbac85d80bb3868a6c9f034f19ba7fbebdfa3b65a4d",
        "urls": [
          "bzz-raw://d07a888cd4a26c7077a30dd99e9ac30fbe2752bfb37e58c65f06a3b192079ef3",
          "dweb:/ipfs/QmZCQY4FC4ynBv9dha4BBWM1vYxTUJPBdFBS4HEFe6XzVB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0",
        "urls": [
          "bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f",
          "dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Errors.sol": {
        "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
        "urls": [
          "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
          "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4738,
        "contract": "node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": { "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" } }
  },
  "ast": {
    "absolutePath": "node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
    "id": 5903,
    "exportedSymbols": { "ITransparentUpgradeableProxy": [5924], "Ownable": [4877], "ProxyAdmin": [5902] },
    "nodeType": "SourceUnit",
    "src": "116:1849:33",
    "nodes": [
      {
        "id": 5856,
        "nodeType": "PragmaDirective",
        "src": "116:24:33",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".22"]
      },
      {
        "id": 5858,
        "nodeType": "ImportDirective",
        "src": "142:79:33",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "file": "./TransparentUpgradeableProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5903,
        "sourceUnit": 6039,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5857,
              "name": "ITransparentUpgradeableProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5924,
              "src": "150:28:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5860,
        "nodeType": "ImportDirective",
        "src": "222:49:33",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../../access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5903,
        "sourceUnit": 4878,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5859,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4877,
              "src": "230:7:33",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5902,
        "nodeType": "ContractDefinition",
        "src": "502:1462:33",
        "nodes": [
          {
            "id": 5867,
            "nodeType": "VariableDeclaration",
            "src": "1187:58:33",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 5864,
              "nodeType": "StructuredDocumentation",
              "src": "539:643:33",
              "text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address,address)`\n and `upgradeAndCall(address,address,bytes)` are present, and `upgrade` must be used if no function should be called,\n while `upgradeAndCall` will invoke the `receive` function if the third argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,address,bytes)` is present, and the third argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
            },
            "functionSelector": "ad3cb1cc",
            "mutability": "constant",
            "name": "UPGRADE_INTERFACE_VERSION",
            "nameLocation": "1210:25:33",
            "scope": 5902,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
            "typeName": {
              "id": 5865,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1187:6:33",
              "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
            },
            "value": {
              "hexValue": "352e302e30",
              "id": 5866,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1238:7:33",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
                "typeString": "literal_string \"5.0.0\""
              },
              "value": "5.0.0"
            },
            "visibility": "public"
          },
          {
            "id": 5877,
            "nodeType": "FunctionDefinition",
            "src": "1329:58:33",
            "nodes": [],
            "body": { "id": 5876, "nodeType": "Block", "src": "1385:2:33", "nodes": [], "statements": [] },
            "documentation": {
              "id": 5868,
              "nodeType": "StructuredDocumentation",
              "src": "1252:72:33",
              "text": " @dev Sets the initial owner who can perform upgrades."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5873,
                    "name": "initialOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5870,
                    "src": "1371:12:33",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  }
                ],
                "id": 5874,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5872,
                  "name": "Ownable",
                  "nameLocations": ["1363:7:33"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4877,
                  "src": "1363:7:33"
                },
                "nodeType": "ModifierInvocation",
                "src": "1363:21:33"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5870,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "1349:12:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 5877,
                  "src": "1341:20:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 5869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1341:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1340:22:33"
            },
            "returnParameters": { "id": 5875, "nodeType": "ParameterList", "parameters": [], "src": "1385:0:33" },
            "scope": 5902,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5901,
            "nodeType": "FunctionDefinition",
            "src": "1717:245:33",
            "nodes": [],
            "body": {
              "id": 5900,
              "nodeType": "Block",
              "src": "1883:79:33",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5896,
                        "name": "implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5883,
                        "src": "1934:14:33",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 5897,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5885,
                        "src": "1950:4:33",
                        "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                        ],
                        "expression": {
                          "id": 5890,
                          "name": "proxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5881,
                          "src": "1893:5:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$5924",
                            "typeString": "contract ITransparentUpgradeableProxy"
                          }
                        },
                        "id": 5892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1899:16:33",
                        "memberName": "upgradeToAndCall",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5923,
                        "src": "1893:22:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                          "typeString": "function (address,bytes memory) payable external"
                        }
                      },
                      "id": 5895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": ["value"],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 5893,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1923:3:33",
                            "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                          },
                          "id": 5894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1927:5:33",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1923:9:33",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        }
                      ],
                      "src": "1893:40:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$value",
                        "typeString": "function (address,bytes memory) payable external"
                      }
                    },
                    "id": 5898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1893:62:33",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 5899,
                  "nodeType": "ExpressionStatement",
                  "src": "1893:62:33"
                }
              ]
            },
            "documentation": {
              "id": 5878,
              "nodeType": "StructuredDocumentation",
              "src": "1393:319:33",
              "text": " @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation.\n See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}.\n Requirements:\n - This contract must be the admin of `proxy`.\n - If `data` is empty, `msg.value` must be zero."
            },
            "functionSelector": "9623609d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5888,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5887,
                  "name": "onlyOwner",
                  "nameLocations": ["1873:9:33"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4788,
                  "src": "1873:9:33"
                },
                "nodeType": "ModifierInvocation",
                "src": "1873:9:33"
              }
            ],
            "name": "upgradeAndCall",
            "nameLocation": "1726:14:33",
            "parameters": {
              "id": 5886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5881,
                  "mutability": "mutable",
                  "name": "proxy",
                  "nameLocation": "1779:5:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 5901,
                  "src": "1750:34:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$5924",
                    "typeString": "contract ITransparentUpgradeableProxy"
                  },
                  "typeName": {
                    "id": 5880,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5879,
                      "name": "ITransparentUpgradeableProxy",
                      "nameLocations": ["1750:28:33"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5924,
                      "src": "1750:28:33"
                    },
                    "referencedDeclaration": 5924,
                    "src": "1750:28:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$5924",
                      "typeString": "contract ITransparentUpgradeableProxy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5883,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "1802:14:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 5901,
                  "src": "1794:22:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 5882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:7:33",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5885,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1839:4:33",
                  "nodeType": "VariableDeclaration",
                  "scope": 5901,
                  "src": "1826:17:33",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" },
                  "typeName": {
                    "id": 5884,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:5:33",
                    "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1740:109:33"
            },
            "returnParameters": { "id": 5889, "nodeType": "ParameterList", "parameters": [], "src": "1883:0:33" },
            "scope": 5902,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5862,
              "name": "Ownable",
              "nameLocations": ["525:7:33"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4877,
              "src": "525:7:33"
            },
            "id": 5863,
            "nodeType": "InheritanceSpecifier",
            "src": "525:7:33"
          }
        ],
        "canonicalName": "ProxyAdmin",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5861,
          "nodeType": "StructuredDocumentation",
          "src": "273:228:33",
          "text": " @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [5902, 4877, 9151],
        "name": "ProxyAdmin",
        "nameLocation": "511:10:33",
        "scope": 5903,
        "usedErrors": [4743, 4748],
        "usedEvents": [4754]
      }
    ],
    "license": "MIT"
  },
  "id": 33
}
