{
  "abi": [
    {
      "type": "function",
      "name": "getRoleAdmin",
      "inputs": [{ "name": "role", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "grantRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "hasRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "callerConfirmation", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revokeRole",
      "inputs": [
        { "name": "role", "type": "bytes32", "internalType": "bytes32" },
        { "name": "account", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "RoleAdminChanged",
      "inputs": [
        { "name": "role", "type": "bytes32", "indexed": true, "internalType": "bytes32" },
        { "name": "previousAdminRole", "type": "bytes32", "indexed": true, "internalType": "bytes32" },
        { "name": "newAdminRole", "type": "bytes32", "indexed": true, "internalType": "bytes32" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleGranted",
      "inputs": [
        { "name": "role", "type": "bytes32", "indexed": true, "internalType": "bytes32" },
        { "name": "account", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "sender", "type": "address", "indexed": true, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RoleRevoked",
      "inputs": [
        { "name": "role", "type": "bytes32", "indexed": true, "internalType": "bytes32" },
        { "name": "account", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "sender", "type": "address", "indexed": true, "internalType": "address" }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "AccessControlBadConfirmation", "inputs": [] },
    {
      "type": "error",
      "name": "AccessControlUnauthorizedAccount",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" },
        { "name": "neededRole", "type": "bytes32", "internalType": "bytes32" }
      ]
    }
  ],
  "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "methodIdentifiers": {
    "getRoleAdmin(bytes32)": "248a9ca3",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=node_modules/@aave/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@openzeppelin/foundry-upgrades/=node_modules/@openzeppelin/foundry-upgrades/src/\",\":@satlayer/contracts/=node_modules/@satlayer/contracts/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.24+commit.e11b9ed9" },
    "language": "Solidity",
    "output": {
      "abi": [
        { "inputs": [], "type": "error", "name": "AccessControlBadConfirmation" },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" },
            { "internalType": "bytes32", "name": "neededRole", "type": "bytes32" }
          ],
          "type": "error",
          "name": "AccessControlUnauthorizedAccount"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32", "indexed": true },
            { "internalType": "bytes32", "name": "previousAdminRole", "type": "bytes32", "indexed": true },
            { "internalType": "bytes32", "name": "newAdminRole", "type": "bytes32", "indexed": true }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32", "indexed": true },
            { "internalType": "address", "name": "account", "type": "address", "indexed": true },
            { "internalType": "address", "name": "sender", "type": "address", "indexed": true }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32", "indexed": true },
            { "internalType": "address", "name": "account", "type": "address", "indexed": true },
            { "internalType": "address", "name": "sender", "type": "address", "indexed": true }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "role", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "callerConfirmation", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "role", "type": "bytes32" },
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
          },
          "hasRole(bytes32,address)": { "details": "Returns `true` if `account` has been granted `role`." },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
          }
        },
        "version": 1
      },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@aave/=node_modules/@aave/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@openzeppelin/foundry-upgrades/=node_modules/@openzeppelin/foundry-upgrades/src/",
        "@satlayer/contracts/=node_modules/@satlayer/contracts/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": "IAccessControl" },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c",
        "urls": [
          "bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d",
          "dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": { "storage": [], "types": {} },
  "ast": {
    "absolutePath": "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
    "id": 4730,
    "exportedSymbols": { "IAccessControl": [4729] },
    "nodeType": "SourceUnit",
    "src": "109:3234:17",
    "nodes": [
      {
        "id": 4648,
        "nodeType": "PragmaDirective",
        "src": "109:24:17",
        "nodes": [],
        "literals": ["solidity", ">=", "0.8", ".4"]
      },
      {
        "id": 4729,
        "nodeType": "ContractDefinition",
        "src": "226:3116:17",
        "nodes": [
          {
            "id": 4656,
            "nodeType": "ErrorDefinition",
            "src": "318:76:17",
            "nodes": [],
            "documentation": {
              "id": 4650,
              "nodeType": "StructuredDocumentation",
              "src": "257:56:17",
              "text": " @dev The `account` is missing a role."
            },
            "errorSelector": "e2517d3f",
            "name": "AccessControlUnauthorizedAccount",
            "nameLocation": "324:32:17",
            "parameters": {
              "id": 4655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4652,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "365:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4656,
                  "src": "357:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 4651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4654,
                  "mutability": "mutable",
                  "name": "neededRole",
                  "nameLocation": "382:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4656,
                  "src": "374:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 4653,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "374:7:17",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "356:37:17"
            }
          },
          {
            "id": 4659,
            "nodeType": "ErrorDefinition",
            "src": "553:37:17",
            "nodes": [],
            "documentation": {
              "id": 4657,
              "nodeType": "StructuredDocumentation",
              "src": "400:148:17",
              "text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
            },
            "errorSelector": "6697b232",
            "name": "AccessControlBadConfirmation",
            "nameLocation": "559:28:17",
            "parameters": { "id": 4658, "nodeType": "ParameterList", "parameters": [], "src": "587:2:17" }
          },
          {
            "id": 4668,
            "nodeType": "EventDefinition",
            "src": "855:110:17",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 4660,
              "nodeType": "StructuredDocumentation",
              "src": "596:254:17",
              "text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
            },
            "eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
            "name": "RoleAdminChanged",
            "nameLocation": "861:16:17",
            "parameters": {
              "id": 4667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4662,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "894:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4668,
                  "src": "878:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 4661,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:7:17",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4664,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousAdminRole",
                  "nameLocation": "916:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4668,
                  "src": "900:33:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 4663,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:7:17",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4666,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newAdminRole",
                  "nameLocation": "951:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4668,
                  "src": "935:28:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 4665,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:17",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:87:17"
            }
          },
          {
            "id": 4677,
            "nodeType": "EventDefinition",
            "src": "1271:89:17",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 4669,
              "nodeType": "StructuredDocumentation",
              "src": "971:295:17",
              "text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
            },
            "eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
            "name": "RoleGranted",
            "nameLocation": "1277:11:17",
            "parameters": {
              "id": 4676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4671,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "1305:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4677,
                  "src": "1289:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 4670,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:7:17",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4673,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1327:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4677,
                  "src": "1311:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 4672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4675,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1352:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4677,
                  "src": "1336:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 4674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1336:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1288:71:17"
            }
          },
          {
            "id": 4686,
            "nodeType": "EventDefinition",
            "src": "1646:89:17",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 4678,
              "nodeType": "StructuredDocumentation",
              "src": "1366:275:17",
              "text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
            },
            "eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
            "name": "RoleRevoked",
            "nameLocation": "1652:11:17",
            "parameters": {
              "id": 4685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4680,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "1680:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4686,
                  "src": "1664:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 4679,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:7:17",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4682,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1702:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4686,
                  "src": "1686:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 4681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4684,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1727:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4686,
                  "src": "1711:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 4683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1711:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1663:71:17"
            }
          },
          {
            "id": 4696,
            "nodeType": "FunctionDefinition",
            "src": "1822:77:17",
            "nodes": [],
            "documentation": {
              "id": 4687,
              "nodeType": "StructuredDocumentation",
              "src": "1741:76:17",
              "text": " @dev Returns `true` if `account` has been granted `role`."
            },
            "functionSelector": "91d14854",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hasRole",
            "nameLocation": "1831:7:17",
            "parameters": {
              "id": 4692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4689,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "1847:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4696,
                  "src": "1839:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 4688,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1839:7:17",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4691,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1861:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4696,
                  "src": "1853:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 4690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1838:31:17"
            },
            "returnParameters": {
              "id": 4695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4694,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4696,
                  "src": "1893:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                  "typeName": {
                    "id": 4693,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1893:4:17",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1892:6:17"
            },
            "scope": 4729,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4704,
            "nodeType": "FunctionDefinition",
            "src": "2094:68:17",
            "nodes": [],
            "documentation": {
              "id": 4697,
              "nodeType": "StructuredDocumentation",
              "src": "1905:184:17",
              "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
            },
            "functionSelector": "248a9ca3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRoleAdmin",
            "nameLocation": "2103:12:17",
            "parameters": {
              "id": 4700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4699,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "2124:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4704,
                  "src": "2116:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 4698,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2116:7:17",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2115:14:17"
            },
            "returnParameters": {
              "id": 4703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4702,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4704,
                  "src": "2153:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 4701,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2153:7:17",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2152:9:17"
            },
            "scope": 4729,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4712,
            "nodeType": "FunctionDefinition",
            "src": "2412:59:17",
            "nodes": [],
            "documentation": {
              "id": 4705,
              "nodeType": "StructuredDocumentation",
              "src": "2168:239:17",
              "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
            },
            "functionSelector": "2f2ff15d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "grantRole",
            "nameLocation": "2421:9:17",
            "parameters": {
              "id": 4710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4707,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "2439:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4712,
                  "src": "2431:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 4706,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2431:7:17",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4709,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2453:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4712,
                  "src": "2445:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 4708,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2445:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2430:31:17"
            },
            "returnParameters": { "id": 4711, "nodeType": "ParameterList", "parameters": [], "src": "2470:0:17" },
            "scope": 4729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4720,
            "nodeType": "FunctionDefinition",
            "src": "2705:60:17",
            "nodes": [],
            "documentation": {
              "id": 4713,
              "nodeType": "StructuredDocumentation",
              "src": "2477:223:17",
              "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
            },
            "functionSelector": "d547741f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revokeRole",
            "nameLocation": "2714:10:17",
            "parameters": {
              "id": 4718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4715,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "2733:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4720,
                  "src": "2725:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 4714,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2725:7:17",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4717,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2747:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4720,
                  "src": "2739:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 4716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2739:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2724:31:17"
            },
            "returnParameters": { "id": 4719, "nodeType": "ParameterList", "parameters": [], "src": "2764:0:17" },
            "scope": 4729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4728,
            "nodeType": "FunctionDefinition",
            "src": "3267:73:17",
            "nodes": [],
            "documentation": {
              "id": 4721,
              "nodeType": "StructuredDocumentation",
              "src": "2771:491:17",
              "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
            },
            "functionSelector": "36568abe",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "renounceRole",
            "nameLocation": "3276:12:17",
            "parameters": {
              "id": 4726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4723,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "3297:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4728,
                  "src": "3289:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 4722,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:7:17",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4725,
                  "mutability": "mutable",
                  "name": "callerConfirmation",
                  "nameLocation": "3311:18:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 4728,
                  "src": "3303:26:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 4724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3303:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3288:42:17"
            },
            "returnParameters": { "id": 4727, "nodeType": "ParameterList", "parameters": [], "src": "3339:0:17" },
            "scope": 4729,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IAccessControl",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 4649,
          "nodeType": "StructuredDocumentation",
          "src": "135:90:17",
          "text": " @dev External interface of AccessControl declared to support ERC-165 detection."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [4729],
        "name": "IAccessControl",
        "nameLocation": "236:14:17",
        "scope": 4730,
        "usedErrors": [4656, 4659],
        "usedEvents": [4668, 4677, 4686]
      }
    ],
    "license": "MIT"
  },
  "id": 17
}
