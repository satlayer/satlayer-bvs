{
  "abi": [
    { "type": "constructor", "inputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "UPGRADE_INTERFACE_VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    { "type": "function", "name": "acceptOwnership", "inputs": [], "outputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "claimRewards",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ISLAYRewardsV2.ClaimableRewardProof",
          "components": [
            { "name": "provider", "type": "address", "internalType": "address" },
            { "name": "token", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "merkleRoot", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "leafIndex", "type": "uint32", "internalType": "uint32" },
            { "name": "totalLeaves", "type": "uint32", "internalType": "uint32" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "distributeRewards",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" },
        { "name": "merkleRoot", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getBalance",
      "inputs": [
        { "name": "provider", "type": "address", "internalType": "address" },
        { "name": "token", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getClaimedRewards",
      "inputs": [
        { "name": "provider", "type": "address", "internalType": "address" },
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "earner", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDistributionRoots",
      "inputs": [
        { "name": "provider", "type": "address", "internalType": "address" },
        { "name": "token", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ISLAYRewardsV2.DistributionRoots",
          "components": [
            { "name": "prevRoot", "type": "bytes32", "internalType": "bytes32" },
            { "name": "currentRoot", "type": "bytes32", "internalType": "bytes32" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [{ "name": "initialOwner", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    { "type": "function", "name": "pause", "inputs": [], "outputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pendingOwner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    { "type": "function", "name": "renounceOwnership", "inputs": [], "outputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [{ "name": "newOwner", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    { "type": "function", "name": "unpause", "inputs": [], "outputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "upgradeToAndCall",
      "inputs": [
        { "name": "newImplementation", "type": "address", "internalType": "address" },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [{ "name": "version", "type": "uint64", "indexed": false, "internalType": "uint64" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferStarted",
      "inputs": [
        { "name": "previousOwner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "newOwner", "type": "address", "indexed": true, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        { "name": "previousOwner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "newOwner", "type": "address", "indexed": true, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [{ "name": "account", "type": "address", "indexed": false, "internalType": "address" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardsClaimed",
      "inputs": [
        { "name": "provider", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "token", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "earner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "recipient", "type": "address", "indexed": false, "internalType": "address" },
        { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "merkleRoot", "type": "bytes32", "indexed": false, "internalType": "bytes32" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardsDistributed",
      "inputs": [
        { "name": "provider", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "token", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "merkleRoot", "type": "bytes32", "indexed": true, "internalType": "bytes32" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [{ "name": "account", "type": "address", "indexed": false, "internalType": "address" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [{ "name": "implementation", "type": "address", "indexed": true, "internalType": "address" }],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [{ "name": "target", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "AmountAlreadyClaimed",
      "inputs": [
        { "name": "provider", "type": "address", "internalType": "address" },
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "earner", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "ERC1967InvalidImplementation",
      "inputs": [{ "name": "implementation", "type": "address", "internalType": "address" }]
    },
    { "type": "error", "name": "ERC1967NonPayable", "inputs": [] },
    { "type": "error", "name": "EnforcedPause", "inputs": [] },
    { "type": "error", "name": "ExpectedPause", "inputs": [] },
    { "type": "error", "name": "FailedCall", "inputs": [] },
    {
      "type": "error",
      "name": "InsufficientBalance",
      "inputs": [
        { "name": "provider", "type": "address", "internalType": "address" },
        { "name": "token", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "InvalidInitialization", "inputs": [] },
    { "type": "error", "name": "InvalidMerkleProof", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidMerkleRoot",
      "inputs": [
        { "name": "provider", "type": "address", "internalType": "address" },
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "merkleRoot", "type": "bytes32", "internalType": "bytes32" }
      ]
    },
    { "type": "error", "name": "InvalidProofLength", "inputs": [] },
    { "type": "error", "name": "NotInitializing", "inputs": [] },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [{ "name": "account", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [{ "name": "token", "type": "address", "internalType": "address" }]
    },
    {
      "type": "error",
      "name": "StringsInsufficientHexLength",
      "inputs": [
        { "name": "value", "type": "uint256", "internalType": "uint256" },
        { "name": "length", "type": "uint256", "internalType": "uint256" }
      ]
    },
    { "type": "error", "name": "UUPSUnauthorizedCallContext", "inputs": [] },
    {
      "type": "error",
      "name": "UUPSUnsupportedProxiableUUID",
      "inputs": [{ "name": "slot", "type": "bytes32", "internalType": "bytes32" }]
    }
  ],
  "bytecode": {
    "object": "0x60a06040523060805234801562000014575f80fd5b506200001f6200002f565b620000296200002f565b620000e3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000805760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000e05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051611f146200010a5f395f8181610f1901528181610f4201526110860152611f145ff3fe6080604052600436106100fa575f3560e01c80637733369c11610092578063ad3cb1cc11610062578063ad3cb1cc1461027b578063c4d66de8146102b8578063d4fac45d146102d7578063e30c39781461031b578063f2fde38b1461032f575f80fd5b80637733369c1461020857806379ba5097146102275780638456cb591461023b5780638da5cb5b1461024f575f80fd5b80635c975abb116100cd5780635c975abb1461016d5780635e04f87e1461019b5780636fdaf166146101d5578063715018a6146101f4575f80fd5b80633f4ba83a146100fe57806340b3a4bf146101145780634f1ef2861461013357806352d1902d14610146575b5f80fd5b348015610109575f80fd5b5061011261034e565b005b34801561011f575f80fd5b5061011261012e366004611add565b610360565b610112610141366004611b21565b6104cf565b348015610151575f80fd5b5061015a6104ee565b6040519081526020015b60405180910390f35b348015610178575f80fd5b505f80516020611ebf8339815191525460ff166040519015158152602001610164565b3480156101a6575f80fd5b506101ba6101b5366004611bdd565b610509565b60408051825181526020928301519281019290925201610164565b3480156101e0575f80fd5b506101126101ef366004611c0e565b610556565b3480156101ff575f80fd5b50610112610b4e565b348015610213575f80fd5b5061015a610222366004611c46565b610b5f565b348015610232575f80fd5b50610112610b96565b348015610246575f80fd5b50610112610bde565b34801561025a575f80fd5b50610263610bee565b6040516001600160a01b039091168152602001610164565b348015610286575f80fd5b506102ab604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101649190611ca8565b3480156102c3575f80fd5b506101126102d2366004611cda565b610c22565b3480156102e2575f80fd5b5061015a6102f1366004611bdd565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b348015610326575f80fd5b50610263610d33565b34801561033a575f80fd5b50610112610349366004611cda565b610d5b565b610356610de0565b61035e610e12565b565b610368610e71565b806103ba5760405162461bcd60e51b815260206004820152601b60248201527f4d65726b6c6520726f6f742063616e6e6f7420626520656d707479000000000060448201526064015b60405180910390fd5b6001600160a01b0383166104105760405162461bcd60e51b815260206004820152601c60248201527f546f6b656e20616464726573732063616e6e6f74206265207a65726f0000000060448201526064016103b1565b33821561045f5761042384823086610ea1565b6001600160a01b038082165f90815260016020908152604080832093881683529290529081208054859290610459908490611d07565b90915550505b6001600160a01b038181165f81815260208181526040808320948916808452948252918290206001810180548255879055915187815291938693909290917f9b7287e3e899d95da564c38a8d18e3c3d2135143b3d53bd6fa257cd8a961afd9910160405180910390a45050505050565b6104d7610f0e565b6104e082610fb2565b6104ea8282610fba565b5050565b5f6104f761107b565b505f80516020611e9f83398151915290565b6040805180820182525f80825260209182018190526001600160a01b0385811682528183528382209085168252825282902082518084019093528054835260010154908201525b92915050565b61055e610e71565b5f61056f6040830160208401611cda565b6001600160a01b0316036105c55760405162461bcd60e51b815260206004820152601c60248201527f546f6b656e20616464726573732063616e6e6f74206265207a65726f0000000060448201526064016103b1565b5f8160400135116106185760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016103b1565b60808101356106695760405162461bcd60e51b815260206004820152601b60248201527f4d65726b6c6520726f6f742063616e6e6f7420626520656d707479000000000060448201526064016103b1565b5f80806106796020850185611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f8360200160208101906106ac9190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f20905080600101548260800135141580156106ea57508054608083013514155b15610742576106fc6020830183611cda565b61070c6040840160208501611cda565b60405163c9f7e85160e01b81526001600160a01b03928316600482015291166024820152608083013560448201526064016103b1565b335f6002816107546020870187611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f8560200160208101906107879190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f836001600160a01b03166001600160a01b031681526020019081526020015f2054905080846040013511610831576107e26020850185611cda565b6107f26040860160208701611cda565b6040805163ed7deb9d60e01b81526001600160a01b039384166004820152918316602483015291841660448201529085013560648201526084016103b1565b60408401358190035f60018161084a6020890189611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f87602001602081019061087d9190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f20549050818110156108f0576108b46020870187611cda565b6108c46040880160208901611cda565b604051630a542ddd60e31b81526001600160a01b039283166004820152911660248201526044016103b1565b61096d61090060a0880188611d1a565b808060200260200160405190810160405280939291908181526020018383602002808284375f92019190915250505050608088013561094560e08a0160c08b01611d67565b63ffffffff1661095c6101008b0160e08c01611d67565b63ffffffff16888b604001356110c4565b61098a5760405163582f497d60e11b815260040160405180910390fd5b81810360015f61099d60208a018a611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f8860200160208101906109d09190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f2081905550856040013560025f885f016020810190610a0d9190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f886020016020810190610a409190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f866001600160a01b03166001600160a01b031681526020019081526020015f2081905550610ab0866020016020810190610a9a9190611cda565b610aaa6080890160608a01611cda565b846110eb565b6001600160a01b038416610aca6040880160208901611cda565b6001600160a01b0316610ae06020890189611cda565b6001600160a01b03167f4ba395584971ca8c6ff7586af6bcfddf50b5c3cb179dd2be9cf9316578e24a16610b1a60808b0160608c01611cda565b604080516001600160a01b0390921682526020820188905260808c01359082015260600160405180910390a4505050505050565b610b56610de0565b61035e5f61111c565b6001600160a01b038084165f90815260026020908152604080832086851684528252808320938516835292905220545b9392505050565b3380610ba0610d33565b6001600160a01b031614610bd25760405163118cdaa760e01b81526001600160a01b03821660048201526024016103b1565b610bdb8161111c565b50565b610be6610de0565b61035e611154565b5f807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b5f610c2b61119c565b805490915060ff600160401b820416159067ffffffffffffffff165f81158015610c525750825b90505f8267ffffffffffffffff166001148015610c6e5750303b155b905081158015610c7c575080155b15610c9a5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610cc457845460ff60401b1916600160401b1785555b610ccd866111c4565b610cd56111d5565b610cdd6111d5565b610ce56111d5565b8315610d2b57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b5f807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00610c12565b610d63610de0565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b0383169081178255610da7610bee565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b33610de9610bee565b6001600160a01b03161461035e5760405163118cdaa760e01b81523360048201526024016103b1565b610e1a6111dd565b5f80516020611ebf833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b5f80516020611ebf8339815191525460ff161561035e5760405163d93c066560e01b815260040160405180910390fd5b6040516001600160a01b038481166024830152838116604483015260648201839052610f089186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061120c565b50505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610f9457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610f885f80516020611e9f833981519152546001600160a01b031690565b6001600160a01b031614155b1561035e5760405163703e46dd60e11b815260040160405180910390fd5b610bdb610de0565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611014575060408051601f3d908101601f1916820190925261101191810190611d8a565b60015b61103c57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016103b1565b5f80516020611e9f833981519152811461106c57604051632a87526960e21b8152600481018290526024016103b1565b6110768383611278565b505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461035e5760405163703e46dd60e11b815260040160405180910390fd5b5f806110d084846112cd565b90506110df8888838989611336565b98975050505050505050565b6040516001600160a01b0383811660248301526044820183905261107691859182169063a9059cbb90606401610ed6565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b03191681556104ea8261134f565b61115c610e71565b5f80516020611ebf833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610e53565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610550565b6111cc6113bf565b610bdb816113e4565b61035e6113bf565b5f80516020611ebf8339815191525460ff1661035e57604051638dfc202b60e01b815260040160405180910390fd5b5f8060205f8451602086015f885af18061122b576040513d5f823e3d81fd5b50505f513d9150811561124257806001141561124f565b6001600160a01b0384163b155b15610f0857604051635274afe760e01b81526001600160a01b03851660048201526024016103b1565b61128182611415565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156112c5576110768282611478565b6104ea6114ea565b5f806112d884611509565b90505f6112e4846115b7565b905081816040516020016112f9929190611da1565b60408051601f1981840301815282825280516020918201209083015201604051602081830303815290604052805190602001209250505092915050565b5f8461134487868686611647565b149695505050505050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6113c76116e9565b61035e57604051631afcd79f60e31b815260040160405180910390fd5b6113ec6113bf565b6001600160a01b038116610bd257604051631e4fbdf760e01b81525f60048201526024016103b1565b806001600160a01b03163b5f0361144a57604051634c9c8ce360e01b81526001600160a01b03821660048201526024016103b1565b5f80516020611e9f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516114949190611dcf565b5f60405180830381855af49150503d805f81146114cc576040519150601f19603f3d011682016040523d82523d5f602084013e6114d1565b606091505b50915091506114e1858383611702565b95945050505050565b341561035e5760405163b398979f60e01b815260040160405180910390fd5b60605f6115158361175e565b6028602282012090915060601c60295b60018111156115ae57600782600f1611801561155a5750606083828151811061155057611550611dea565b016020015160f81c115b1561159757602060f81b83828151811061157657611576611dea565b0160200180516001600160f81b0319908116909218909116905f82901a9053505b60049190911c906115a781611dfe565b9050611525565b50909392505050565b60605f6115c383611774565b60010190505f8167ffffffffffffffff8111156115e2576115e2611b0d565b6040519080825280601f01601f19166020018201604052801561160c576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461161657509392505050565b5f8061165483600161184b565b905085518114611677576040516313717da960e21b815260040160405180910390fd5b8460015b875181116116de5761168e600287611e27565b5f036116b257815f526020810288015160205260405f2091506002860495506116cc565b602081028801515f528160205260405f2091506002860495505b806116d681611e3a565b91505061167b565b509695505050505050565b5f6116f261119c565b54600160401b900460ff16919050565b60608261171757611712826118f4565b610b8f565b815115801561172e57506001600160a01b0384163b155b1561175757604051639996b31560e01b81526001600160a01b03851660048201526024016103b1565b5080610b8f565b60606105506001600160a01b038316601461191c565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106117b25772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106117de576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106117fc57662386f26fc10000830492506010015b6305f5e1008310611814576305f5e100830492506008015b612710831061182857612710830492506004015b6064831061183a576064830492506002015b600a83106105505760010192915050565b5f806118ca845f60076fffffffffffffffffffffffffffffffff8311901b9050600667ffffffffffffffff83831c11901b17600563ffffffff83831c11901b17600461ffff83831c11901b17600360ff83831c11901b176002600f83831c116d010102020202030303030303030360801b911b9190911791821c1a1790565b90506118ec6118d884611a96565b80156118e7575084826001901b105b151590565b019392505050565b80511561190357805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b6060825f61192b846002611e52565b611936906002611d07565b67ffffffffffffffff81111561194e5761194e611b0d565b6040519080825280601f01601f191660200182016040528015611978576020820181803683370190505b509050600360fc1b815f8151811061199257611992611dea565b60200101906001600160f81b03191690815f1a905350600f60fb1b816001815181106119c0576119c0611dea565b60200101906001600160f81b03191690815f1a9053505f6119e2856002611e52565b6119ed906001611d07565b90505b6001811115611a64576f181899199a1a9b1b9c1cb0b131b232b360811b83600f1660108110611a2157611a21611dea565b1a60f81b828281518110611a3757611a37611dea565b60200101906001600160f81b03191690815f1a90535060049290921c91611a5d81611dfe565b90506119f0565b508115611a8e5760405163e22e27eb60e01b815260048101869052602481018590526044016103b1565b949350505050565b5f6002826003811115611aab57611aab611e69565b611ab59190611e7d565b60ff166001149050919050565b80356001600160a01b0381168114611ad8575f80fd5b919050565b5f805f60608486031215611aef575f80fd5b611af884611ac2565b95602085013595506040909401359392505050565b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215611b32575f80fd5b611b3b83611ac2565b9150602083013567ffffffffffffffff80821115611b57575f80fd5b818501915085601f830112611b6a575f80fd5b813581811115611b7c57611b7c611b0d565b604051601f8201601f19908116603f01168101908382118183101715611ba457611ba4611b0d565b81604052828152886020848701011115611bbc575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f8060408385031215611bee575f80fd5b611bf783611ac2565b9150611c0560208401611ac2565b90509250929050565b5f60208284031215611c1e575f80fd5b813567ffffffffffffffff811115611c34575f80fd5b82016101008185031215610b8f575f80fd5b5f805f60608486031215611c58575f80fd5b611c6184611ac2565b9250611c6f60208501611ac2565b9150611c7d60408501611ac2565b90509250925092565b5f5b83811015611ca0578181015183820152602001611c88565b50505f910152565b602081525f8251806020840152611cc6816040850160208701611c86565b601f01601f19169190910160400192915050565b5f60208284031215611cea575f80fd5b610b8f82611ac2565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561055057610550611cf3565b5f808335601e19843603018112611d2f575f80fd5b83018035915067ffffffffffffffff821115611d49575f80fd5b6020019150600581901b3603821315611d60575f80fd5b9250929050565b5f60208284031215611d77575f80fd5b813563ffffffff81168114610b8f575f80fd5b5f60208284031215611d9a575f80fd5b5051919050565b5f8351611db2818460208801611c86565b835190830190611dc6818360208801611c86565b01949350505050565b5f8251611de0818460208701611c86565b9190910192915050565b634e487b7160e01b5f52603260045260245ffd5b5f81611e0c57611e0c611cf3565b505f190190565b634e487b7160e01b5f52601260045260245ffd5b5f82611e3557611e35611e13565b500690565b5f60018201611e4b57611e4b611cf3565b5060010190565b808202811582820484141761055057610550611cf3565b634e487b7160e01b5f52602160045260245ffd5b5f60ff831680611e8f57611e8f611e13565b8060ff8416069150509291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a26469706673582212206a3ed852be7c0498a8e77e04bac3d43824a29f7bd0d71d11ee89e0297c0d205e64736f6c63430008180033",
    "sourceMap": "616:8498:76:-:0;;;1171:4:6;1128:48;;2059:53:76;;;;;;;;;-1:-1:-1;1676:22:74;:20;:22::i;:::-;2083::76;:20;:22::i;:::-;616:8498;;7709:422:5;3147:66;7898:15;;;;;;;7894:76;;;7936:23;;-1:-1:-1;;;7936:23:5;;;;;;;;;;;7894:76;7983:14;;-1:-1:-1;;;;;7983:14:5;;;:34;7979:146;;8033:33;;-1:-1:-1;;;;;;8033:33:5;-1:-1:-1;;;;;8033:33:5;;;;;8085:29;;158:50:124;;;8085:29:5;;146:2:124;131:18;8085:29:5;;;;;;;7979:146;7758:373;7709:422::o;14:200:124:-;616:8498:76;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100fa575f3560e01c80637733369c11610092578063ad3cb1cc11610062578063ad3cb1cc1461027b578063c4d66de8146102b8578063d4fac45d146102d7578063e30c39781461031b578063f2fde38b1461032f575f80fd5b80637733369c1461020857806379ba5097146102275780638456cb591461023b5780638da5cb5b1461024f575f80fd5b80635c975abb116100cd5780635c975abb1461016d5780635e04f87e1461019b5780636fdaf166146101d5578063715018a6146101f4575f80fd5b80633f4ba83a146100fe57806340b3a4bf146101145780634f1ef2861461013357806352d1902d14610146575b5f80fd5b348015610109575f80fd5b5061011261034e565b005b34801561011f575f80fd5b5061011261012e366004611add565b610360565b610112610141366004611b21565b6104cf565b348015610151575f80fd5b5061015a6104ee565b6040519081526020015b60405180910390f35b348015610178575f80fd5b505f80516020611ebf8339815191525460ff166040519015158152602001610164565b3480156101a6575f80fd5b506101ba6101b5366004611bdd565b610509565b60408051825181526020928301519281019290925201610164565b3480156101e0575f80fd5b506101126101ef366004611c0e565b610556565b3480156101ff575f80fd5b50610112610b4e565b348015610213575f80fd5b5061015a610222366004611c46565b610b5f565b348015610232575f80fd5b50610112610b96565b348015610246575f80fd5b50610112610bde565b34801561025a575f80fd5b50610263610bee565b6040516001600160a01b039091168152602001610164565b348015610286575f80fd5b506102ab604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101649190611ca8565b3480156102c3575f80fd5b506101126102d2366004611cda565b610c22565b3480156102e2575f80fd5b5061015a6102f1366004611bdd565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b348015610326575f80fd5b50610263610d33565b34801561033a575f80fd5b50610112610349366004611cda565b610d5b565b610356610de0565b61035e610e12565b565b610368610e71565b806103ba5760405162461bcd60e51b815260206004820152601b60248201527f4d65726b6c6520726f6f742063616e6e6f7420626520656d707479000000000060448201526064015b60405180910390fd5b6001600160a01b0383166104105760405162461bcd60e51b815260206004820152601c60248201527f546f6b656e20616464726573732063616e6e6f74206265207a65726f0000000060448201526064016103b1565b33821561045f5761042384823086610ea1565b6001600160a01b038082165f90815260016020908152604080832093881683529290529081208054859290610459908490611d07565b90915550505b6001600160a01b038181165f81815260208181526040808320948916808452948252918290206001810180548255879055915187815291938693909290917f9b7287e3e899d95da564c38a8d18e3c3d2135143b3d53bd6fa257cd8a961afd9910160405180910390a45050505050565b6104d7610f0e565b6104e082610fb2565b6104ea8282610fba565b5050565b5f6104f761107b565b505f80516020611e9f83398151915290565b6040805180820182525f80825260209182018190526001600160a01b0385811682528183528382209085168252825282902082518084019093528054835260010154908201525b92915050565b61055e610e71565b5f61056f6040830160208401611cda565b6001600160a01b0316036105c55760405162461bcd60e51b815260206004820152601c60248201527f546f6b656e20616464726573732063616e6e6f74206265207a65726f0000000060448201526064016103b1565b5f8160400135116106185760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016103b1565b60808101356106695760405162461bcd60e51b815260206004820152601b60248201527f4d65726b6c6520726f6f742063616e6e6f7420626520656d707479000000000060448201526064016103b1565b5f80806106796020850185611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f8360200160208101906106ac9190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f20905080600101548260800135141580156106ea57508054608083013514155b15610742576106fc6020830183611cda565b61070c6040840160208501611cda565b60405163c9f7e85160e01b81526001600160a01b03928316600482015291166024820152608083013560448201526064016103b1565b335f6002816107546020870187611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f8560200160208101906107879190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f836001600160a01b03166001600160a01b031681526020019081526020015f2054905080846040013511610831576107e26020850185611cda565b6107f26040860160208701611cda565b6040805163ed7deb9d60e01b81526001600160a01b039384166004820152918316602483015291841660448201529085013560648201526084016103b1565b60408401358190035f60018161084a6020890189611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f87602001602081019061087d9190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f20549050818110156108f0576108b46020870187611cda565b6108c46040880160208901611cda565b604051630a542ddd60e31b81526001600160a01b039283166004820152911660248201526044016103b1565b61096d61090060a0880188611d1a565b808060200260200160405190810160405280939291908181526020018383602002808284375f92019190915250505050608088013561094560e08a0160c08b01611d67565b63ffffffff1661095c6101008b0160e08c01611d67565b63ffffffff16888b604001356110c4565b61098a5760405163582f497d60e11b815260040160405180910390fd5b81810360015f61099d60208a018a611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f8860200160208101906109d09190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f2081905550856040013560025f885f016020810190610a0d9190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f886020016020810190610a409190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f866001600160a01b03166001600160a01b031681526020019081526020015f2081905550610ab0866020016020810190610a9a9190611cda565b610aaa6080890160608a01611cda565b846110eb565b6001600160a01b038416610aca6040880160208901611cda565b6001600160a01b0316610ae06020890189611cda565b6001600160a01b03167f4ba395584971ca8c6ff7586af6bcfddf50b5c3cb179dd2be9cf9316578e24a16610b1a60808b0160608c01611cda565b604080516001600160a01b0390921682526020820188905260808c01359082015260600160405180910390a4505050505050565b610b56610de0565b61035e5f61111c565b6001600160a01b038084165f90815260026020908152604080832086851684528252808320938516835292905220545b9392505050565b3380610ba0610d33565b6001600160a01b031614610bd25760405163118cdaa760e01b81526001600160a01b03821660048201526024016103b1565b610bdb8161111c565b50565b610be6610de0565b61035e611154565b5f807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b5f610c2b61119c565b805490915060ff600160401b820416159067ffffffffffffffff165f81158015610c525750825b90505f8267ffffffffffffffff166001148015610c6e5750303b155b905081158015610c7c575080155b15610c9a5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610cc457845460ff60401b1916600160401b1785555b610ccd866111c4565b610cd56111d5565b610cdd6111d5565b610ce56111d5565b8315610d2b57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b5f807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00610c12565b610d63610de0565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b0383169081178255610da7610bee565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b33610de9610bee565b6001600160a01b03161461035e5760405163118cdaa760e01b81523360048201526024016103b1565b610e1a6111dd565b5f80516020611ebf833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b5f80516020611ebf8339815191525460ff161561035e5760405163d93c066560e01b815260040160405180910390fd5b6040516001600160a01b038481166024830152838116604483015260648201839052610f089186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061120c565b50505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610f9457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610f885f80516020611e9f833981519152546001600160a01b031690565b6001600160a01b031614155b1561035e5760405163703e46dd60e11b815260040160405180910390fd5b610bdb610de0565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611014575060408051601f3d908101601f1916820190925261101191810190611d8a565b60015b61103c57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016103b1565b5f80516020611e9f833981519152811461106c57604051632a87526960e21b8152600481018290526024016103b1565b6110768383611278565b505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461035e5760405163703e46dd60e11b815260040160405180910390fd5b5f806110d084846112cd565b90506110df8888838989611336565b98975050505050505050565b6040516001600160a01b0383811660248301526044820183905261107691859182169063a9059cbb90606401610ed6565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b03191681556104ea8261134f565b61115c610e71565b5f80516020611ebf833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610e53565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610550565b6111cc6113bf565b610bdb816113e4565b61035e6113bf565b5f80516020611ebf8339815191525460ff1661035e57604051638dfc202b60e01b815260040160405180910390fd5b5f8060205f8451602086015f885af18061122b576040513d5f823e3d81fd5b50505f513d9150811561124257806001141561124f565b6001600160a01b0384163b155b15610f0857604051635274afe760e01b81526001600160a01b03851660048201526024016103b1565b61128182611415565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156112c5576110768282611478565b6104ea6114ea565b5f806112d884611509565b90505f6112e4846115b7565b905081816040516020016112f9929190611da1565b60408051601f1981840301815282825280516020918201209083015201604051602081830303815290604052805190602001209250505092915050565b5f8461134487868686611647565b149695505050505050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6113c76116e9565b61035e57604051631afcd79f60e31b815260040160405180910390fd5b6113ec6113bf565b6001600160a01b038116610bd257604051631e4fbdf760e01b81525f60048201526024016103b1565b806001600160a01b03163b5f0361144a57604051634c9c8ce360e01b81526001600160a01b03821660048201526024016103b1565b5f80516020611e9f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516114949190611dcf565b5f60405180830381855af49150503d805f81146114cc576040519150601f19603f3d011682016040523d82523d5f602084013e6114d1565b606091505b50915091506114e1858383611702565b95945050505050565b341561035e5760405163b398979f60e01b815260040160405180910390fd5b60605f6115158361175e565b6028602282012090915060601c60295b60018111156115ae57600782600f1611801561155a5750606083828151811061155057611550611dea565b016020015160f81c115b1561159757602060f81b83828151811061157657611576611dea565b0160200180516001600160f81b0319908116909218909116905f82901a9053505b60049190911c906115a781611dfe565b9050611525565b50909392505050565b60605f6115c383611774565b60010190505f8167ffffffffffffffff8111156115e2576115e2611b0d565b6040519080825280601f01601f19166020018201604052801561160c576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461161657509392505050565b5f8061165483600161184b565b905085518114611677576040516313717da960e21b815260040160405180910390fd5b8460015b875181116116de5761168e600287611e27565b5f036116b257815f526020810288015160205260405f2091506002860495506116cc565b602081028801515f528160205260405f2091506002860495505b806116d681611e3a565b91505061167b565b509695505050505050565b5f6116f261119c565b54600160401b900460ff16919050565b60608261171757611712826118f4565b610b8f565b815115801561172e57506001600160a01b0384163b155b1561175757604051639996b31560e01b81526001600160a01b03851660048201526024016103b1565b5080610b8f565b60606105506001600160a01b038316601461191c565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106117b25772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106117de576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106117fc57662386f26fc10000830492506010015b6305f5e1008310611814576305f5e100830492506008015b612710831061182857612710830492506004015b6064831061183a576064830492506002015b600a83106105505760010192915050565b5f806118ca845f60076fffffffffffffffffffffffffffffffff8311901b9050600667ffffffffffffffff83831c11901b17600563ffffffff83831c11901b17600461ffff83831c11901b17600360ff83831c11901b176002600f83831c116d010102020202030303030303030360801b911b9190911791821c1a1790565b90506118ec6118d884611a96565b80156118e7575084826001901b105b151590565b019392505050565b80511561190357805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b6060825f61192b846002611e52565b611936906002611d07565b67ffffffffffffffff81111561194e5761194e611b0d565b6040519080825280601f01601f191660200182016040528015611978576020820181803683370190505b509050600360fc1b815f8151811061199257611992611dea565b60200101906001600160f81b03191690815f1a905350600f60fb1b816001815181106119c0576119c0611dea565b60200101906001600160f81b03191690815f1a9053505f6119e2856002611e52565b6119ed906001611d07565b90505b6001811115611a64576f181899199a1a9b1b9c1cb0b131b232b360811b83600f1660108110611a2157611a21611dea565b1a60f81b828281518110611a3757611a37611dea565b60200101906001600160f81b03191690815f1a90535060049290921c91611a5d81611dfe565b90506119f0565b508115611a8e5760405163e22e27eb60e01b815260048101869052602481018590526044016103b1565b949350505050565b5f6002826003811115611aab57611aab611e69565b611ab59190611e7d565b60ff166001149050919050565b80356001600160a01b0381168114611ad8575f80fd5b919050565b5f805f60608486031215611aef575f80fd5b611af884611ac2565b95602085013595506040909401359392505050565b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215611b32575f80fd5b611b3b83611ac2565b9150602083013567ffffffffffffffff80821115611b57575f80fd5b818501915085601f830112611b6a575f80fd5b813581811115611b7c57611b7c611b0d565b604051601f8201601f19908116603f01168101908382118183101715611ba457611ba4611b0d565b81604052828152886020848701011115611bbc575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f8060408385031215611bee575f80fd5b611bf783611ac2565b9150611c0560208401611ac2565b90509250929050565b5f60208284031215611c1e575f80fd5b813567ffffffffffffffff811115611c34575f80fd5b82016101008185031215610b8f575f80fd5b5f805f60608486031215611c58575f80fd5b611c6184611ac2565b9250611c6f60208501611ac2565b9150611c7d60408501611ac2565b90509250925092565b5f5b83811015611ca0578181015183820152602001611c88565b50505f910152565b602081525f8251806020840152611cc6816040850160208701611c86565b601f01601f19169190910160400192915050565b5f60208284031215611cea575f80fd5b610b8f82611ac2565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561055057610550611cf3565b5f808335601e19843603018112611d2f575f80fd5b83018035915067ffffffffffffffff821115611d49575f80fd5b6020019150600581901b3603821315611d60575f80fd5b9250929050565b5f60208284031215611d77575f80fd5b813563ffffffff81168114610b8f575f80fd5b5f60208284031215611d9a575f80fd5b5051919050565b5f8351611db2818460208801611c86565b835190830190611dc6818360208801611c86565b01949350505050565b5f8251611de0818460208701611c86565b9190910192915050565b634e487b7160e01b5f52603260045260245ffd5b5f81611e0c57611e0c611cf3565b505f190190565b634e487b7160e01b5f52601260045260245ffd5b5f82611e3557611e35611e13565b500690565b5f60018201611e4b57611e4b611cf3565b5060010190565b808202811582820484141761055057610550611cf3565b634e487b7160e01b5f52602160045260245ffd5b5f60ff831680611e8f57611e8f611e13565b8060ff8416069150509291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a26469706673582212206a3ed852be7c0498a8e77e04bac3d43824a29f7bd0d71d11ee89e0297c0d205e64736f6c63430008180033",
    "sourceMap": "616:8498:76:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3262:65:74;;;;;;;;;;;;;:::i;:::-;;2754:1357:76;;;;;;;;;;-1:-1:-1;2754:1357:76;;;;;:::i;:::-;;:::i;4161:214:6:-;;;;;;:::i;:::-;;:::i;3708:134::-;;;;;;;;;;;;;:::i;:::-;;;1797:25:124;;;1785:2;1770:18;3708:134:6;;;;;;;;2496:145:12;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2625:9:12;;;2496:145;;1998:14:124;;1991:22;1973:41;;1961:2;1946:18;2496:145:12;1833:187:124;2153:171:76;;;;;;;;;;-1:-1:-1;2153:171:76;;;;;:::i;:::-;;:::i;:::-;;;;2526:13:124;;2508:32;;2596:4;2584:17;;;2578:24;2556:20;;;2549:54;;;;2481:18;2153:171:76;2290:319:124;4152:2595:76;;;;;;;;;;-1:-1:-1;4152:2595:76;;;;;:::i;:::-;;:::i;3155:101:4:-;;;;;;;;;;;;;:::i;2541:172:76:-;;;;;;;;;;-1:-1:-1;2541:172:76;;;;;:::i;:::-;;:::i;3257:229:3:-;;;;;;;;;;;;;:::i;2915:61:74:-;;;;;;;;;;;;;:::i;2441:144:4:-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;3705:32:124;;;3687:51;;3675:2;3660:18;2441:144:4;3541:203:124;1819:58:6;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:6;;;;;;;;;;;;:::i;2058:198:74:-;;;;;;;;;;-1:-1:-1;2058:198:74;;;;;:::i;:::-;;:::i;2365:135:76:-;;;;;;;;;;-1:-1:-1;2365:135:76;;;;;:::i;:::-;-1:-1:-1;;;;;2467:19:76;;;2441:7;2467:19;;;:9;:19;;;;;;;;:26;;;;;;;;;;;;;2365:135;2038:168:3;;;;;;;;;;;;;:::i;2524:247::-;;;;;;;;;;-1:-1:-1;2524:247:3;;;;;:::i;:::-;;:::i;3262:65:74:-;2334:13:4;:11;:13::i;:::-;3310:10:74::1;:8;:10::i;:::-;3262:65::o:0;2754:1357:76:-;1979:19:12;:17;:19::i;:::-;2882:10:76;2874:64:::1;;;::::0;-1:-1:-1;;;2874:64:76;;4798:2:124;2874:64:76::1;::::0;::::1;4780:21:124::0;4837:2;4817:18;;;4810:30;4876:29;4856:18;;;4849:57;4923:18;;2874:64:76::1;;;;;;;;;-1:-1:-1::0;;;;;2956:19:76;::::1;2948:60;;;::::0;-1:-1:-1;;;2948:60:76;;5154:2:124;2948:60:76::1;::::0;::::1;5136:21:124::0;5193:2;5173:18;;;5166:30;5232;5212:18;;;5205:58;5280:18;;2948:60:76::1;4952:352:124::0;2948:60:76::1;966:10:10::0;3159::76;;3155:680:::1;;3519:74;3553:5;3561:8;3579:4;3586:6;3519:26;:74::i;:::-;-1:-1:-1::0;;;;;3788:19:76;;::::1;;::::0;;;:9:::1;:19;::::0;;;;;;;:26;;::::1;::::0;;;;;;;;:36;;3818:6;;3788:19;:36:::1;::::0;3818:6;;3788:36:::1;:::i;:::-;::::0;;;-1:-1:-1;;3155:680:76::1;-1:-1:-1::0;;;;;3914:28:76;;::::1;3880:31;3914:28:::0;;;::::1;::::0;;;;;;;:35;;::::1;::::0;;;;;;;;;;3976:17:::1;::::0;::::1;::::0;;3959:34;;4003:30;;;4049:55;;1797:25:124;;;3914:35:76;;4003:30;;3914:35;;:28;;4049:55:::1;::::0;1770:18:124;4049:55:76::1;;;;;;;2864:1247;;2754:1357:::0;;;:::o;4161:214:6:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:6;:::o;2153:171:76:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;2282:28:76;;;;;;;;;;;:35;;;;;;;;;;2275:42;;;;;;;;;;;;;;;;;;;2153:171;;;;;:::o;4152:2595::-;1979:19:12;:17;:19::i;:::-;4286:1:76::1;4262:12;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;4262:26:76::1;::::0;4254:67:::1;;;::::0;-1:-1:-1;;;4254:67:76;;5154:2:124;4254:67:76::1;::::0;::::1;5136:21:124::0;5193:2;5173:18;;;5166:30;5232;5212:18;;;5205:58;5280:18;;4254:67:76::1;4952:352:124::0;4254:67:76::1;4355:1;4339:6;:13;;;:17;4331:62;;;::::0;-1:-1:-1;;;4331:62:76;;5773:2:124;4331:62:76::1;::::0;::::1;5755:21:124::0;;;5792:18;;;5785:30;5851:34;5831:18;;;5824:62;5903:18;;4331:62:76::1;5571:356:124::0;4331:62:76::1;4411:17;::::0;::::1;;4403:71;;;::::0;-1:-1:-1;;;4403:71:76;;4798:2:124;4403:71:76::1;::::0;::::1;4780:21:124::0;4837:2;4817:18;;;4810:30;4876:29;4856:18;;;4849:57;4923:18;;4403:71:76::1;4596:351:124::0;4403:71:76::1;4578:31;::::0;;4631:15:::1;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;4612:35:76::1;-1:-1:-1::0;;;;;4612:35:76::1;;;;;;;;;;;;:49;4648:6;:12;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4612:49:76::1;-1:-1:-1::0;;;;;4612:49:76::1;;;;;;;;;;;;4578:83;;4696:5;:17;;;4675:6;:17;;;:38;;:77;;;;-1:-1:-1::0;4738:14:76;;4717:17:::1;::::0;::::1;;:35;;4675:77;4671:182;;;4793:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;4810:12;::::0;;;::::1;::::0;::::1;;:::i;:::-;4775:67;::::0;-1:-1:-1;;;4775:67:76;;-1:-1:-1;;;;;6190:15:124;;;4775:67:76::1;::::0;::::1;6172:34:124::0;6242:15;;6222:18;;;6215:43;4824:17:76::1;::::0;::::1;;6274:18:124::0;;;6267:34;6107:18;;4775:67:76::1;5932:375:124::0;4671:182:76::1;966:10:10::0;4863:14:76::1;4927:15;4863:14:::0;4943:15:::1;;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;4927:32:76::1;-1:-1:-1::0;;;;;4927:32:76::1;;;;;;;;;;;;:46;4960:6;:12;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4927:46:76::1;-1:-1:-1::0;;;;;4927:46:76::1;;;;;;;;;;;;:54;4974:6;-1:-1:-1::0;;;;;4927:54:76::1;-1:-1:-1::0;;;;;4927:54:76::1;;;;;;;;;;;;;4903:78;;5070:13;5053:6;:13;;;:30;5049:142;;5127:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;5144:12;::::0;;;::::1;::::0;::::1;;:::i;:::-;5166:13;5106:74:::0;;-1:-1:-1;;;5106:74:76;;-1:-1:-1;;;;;6599:15:124;;;5106:74:76::1;::::0;::::1;6581:34:124::0;6651:15;;;6631:18;;;6624:43;6703:15;;;6683:18;;;6676:43;5166:13:76;;::::1;;6735:18:124::0;;;6728:34;6515:19;;5106:74:76::1;6312:456:124::0;5049:142:76::1;5377:13;::::0;::::1;;:29:::0;;::::1;5201:21;5524:9;5201:21:::0;5534:15:::1;;::::0;::::1;5377:6:::0;5534:15:::1;:::i;:::-;-1:-1:-1::0;;;;;5524:26:76::1;-1:-1:-1::0;;;;;5524:26:76::1;;;;;;;;;;;;:40;5551:6;:12;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5524:40:76::1;-1:-1:-1::0;;;;;5524:40:76::1;;;;;;;;;;;;;5498:66;;5596:13;5578:15;:31;5574:138;;;5663:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;5687:12;::::0;;;::::1;::::0;::::1;;:::i;:::-;5632:69;::::0;-1:-1:-1;;;5632:69:76;;-1:-1:-1;;;;;7003:15:124;;;5632:69:76::1;::::0;::::1;6985:34:124::0;7055:15;;7035:18;;;7028:43;6920:18;;5632:69:76::1;6773:304:124::0;5574:138:76::1;5775:142;5811:12;;::::0;::::1;:6:::0;:12:::1;:::i;:::-;5775:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;;5825:17:76::1;::::0;::::1;;5844:16;::::0;;;::::1;::::0;::::1;;:::i;:::-;5775:142;;5862:18;::::0;;;::::1;::::0;::::1;;:::i;:::-;5775:142;;5882:6;5890;:13;;;5775:18;:142::i;:::-;5757:223;;5949:20;;-1:-1:-1::0;;;5949:20:76::1;;;;;;;;;;;5757:223;6167:31:::0;;::::1;6124:9;:26;6134:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;6124:26:76::1;-1:-1:-1::0;;;;;6124:26:76::1;;;;;;;;;;;;:40;6151:6;:12;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6124:40:76::1;-1:-1:-1::0;;;;;6124:40:76::1;;;;;;;;;;;;:74;;;;6370:6;:13;;;6313:15;:32;6329:6;:15;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6313:32:76::1;-1:-1:-1::0;;;;;6313:32:76::1;;;;;;;;;;;;:46;6346:6;:12;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6313:46:76::1;-1:-1:-1::0;;;;;6313:46:76::1;;;;;;;;;;;;:54;6360:6;-1:-1:-1::0;;;;;6313:54:76::1;-1:-1:-1::0;;;;;6313:54:76::1;;;;;;;;;;;;:70;;;;6542:77;6572:6;:12;;;;;;;;;;:::i;:::-;6587:16;::::0;;;::::1;::::0;::::1;;:::i;:::-;6605:13;6542:22;:77::i;:::-;-1:-1:-1::0;;;;;6635:105:76;::::1;6667:12;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;6635:105:76::1;6650:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;-1:-1:-1::0;;;;;6635:105:76::1;;6689:16;::::0;;;::::1;::::0;::::1;;:::i;:::-;6635:105;::::0;;-1:-1:-1;;;;;8133:32:124;;;8115:51;;8197:2;8182:18;;8175:34;;;6722:17:76::1;::::0;::::1;;8225:18:124::0;;;8218:34;8103:2;8088:18;6635:105:76::1;;;;;;;4244:2503;;;;;4152:2595:::0;:::o;3155:101:4:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;2541:172:76:-:0;-1:-1:-1;;;;;2666:25:76;;;2640:7;2666:25;;;:15;:25;;;;;;;;:32;;;;;;;;;;:40;;;;;;;;;;2541:172;;;;;;:::o;3257:229:3:-;966:10:10;;3352:14:3;:12;:14::i;:::-;-1:-1:-1;;;;;3352:24:3;;3348:96;;3399:34;;-1:-1:-1;;;3399:34:3;;-1:-1:-1;;;;;3705:32:124;;3399:34:3;;;3687:51:124;3660:18;;3399:34:3;3541:203:124;3348:96:3;3453:26;3472:6;3453:18;:26::i;:::-;3299:187;3257:229::o;2915:61:74:-;2334:13:4;:11;:13::i;:::-;2961:8:74::1;:6;:8::i;2441:144:4:-:0;2487:7;;1313:22;2533:20;2570:8;-1:-1:-1;;;;;2570:8:4;;2441:144;-1:-1:-1;;2441:144:4:o;2058:198:74:-;4158:30:5;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:5;-1:-1:-1;;;4302:15:5;;;4301:16;;4348:14;;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;:16;;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:5;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:5;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:5;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:5;-1:-1:-1;;;5011:22:5;;;4977:67;2129:28:74::1;2144:12;2129:14;:28::i;:::-;2167:21;:19;:21::i;:::-;2198:24;:22;:24::i;:::-;2232:17;:15;:17::i;:::-;5068:14:5::0;5064:101;;;5098:23;;-1:-1:-1;;;;5098:23:5;;;5140:14;;-1:-1:-1;8416:50:124;;5140:14:5;;8404:2:124;8389:18;5140:14:5;;;;;;;5064:101;4092:1079;;;;;2058:198:74;:::o;2038:168:3:-;2091:7;;1676:27;2142:25;1545:174;2524:247;2334:13:4;:11;:13::i;:::-;1676:27:3;2680:26;;-1:-1:-1;;;;;;2680:26:3::1;-1:-1:-1::0;;;;;2680:26:3;::::1;::::0;;::::1;::::0;;2746:7:::1;:5;:7::i;:::-;-1:-1:-1::0;;;;;2721:43:3::1;;;;;;;;;;;2603:168;2524:247:::0;:::o;2658:162:4:-;966:10:10;2717:7:4;:5;:7::i;:::-;-1:-1:-1;;;;;2717:23:4;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:4;;966:10:10;2763:40:4;;;3687:51:124;3660:18;;2763:40:4;3541:203:124;3478:178:12;2226:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3595:17:12;;-1:-1:-1;;3595:17:12::1;::::0;;3627:22:::1;966:10:10::0;3636:12:12::1;3627:22;::::0;-1:-1:-1;;;;;3705:32:124;;;3687:51;;3675:2;3660:18;3627:22:12::1;;;;;;;3526:130;3478:178::o:0;2709:128::-;-1:-1:-1;;;;;;;;;;;2625:9:12;;;2770:61;;;2805:15;;-1:-1:-1;;;2805:15:12;;;;;;;;;;;1618:188:40;1745:53;;-1:-1:-1;;;;;6190:15:124;;;1745:53:40;;;6172:34:124;6242:15;;;6222:18;;;6215:43;6274:18;;;6267:34;;;1718:81:40;;1738:5;;1760:18;;;;;6107::124;;1745:53:40;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1745:53:40;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;4578:312:6:-;4658:4;-1:-1:-1;;;;;4667:6:6;4650:23;;;:120;;;4764:6;-1:-1:-1;;;;;4728:42:6;:32;-1:-1:-1;;;;;;;;;;;1519:53:28;-1:-1:-1;;;;;1519:53:28;;1441:138;4728:32:6;-1:-1:-1;;;;;4728:42:6;;;4650:120;4633:251;;;4844:29;;-1:-1:-1;;;4844:29:6;;;;;;;;;;;2579:84:74;2334:13:4;:11;:13::i;6032:538:6:-;6149:17;-1:-1:-1;;;;;6131:50:6;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6131:52:6;;;;;;;;-1:-1:-1;;6131:52:6;;;;;;;;;;;;:::i;:::-;;;6127:437;;6493:60;;-1:-1:-1;;;6493:60:6;;-1:-1:-1;;;;;3705:32:124;;6493:60:6;;;3687:51:124;3660:18;;6493:60:6;3541:203:124;6127:437:6;-1:-1:-1;;;;;;;;;;;6225:40:6;;6221:120;;6292:34;;-1:-1:-1;;;6292:34:6;;;;;1797:25:124;;;1770:18;;6292:34:6;1651:177:124;6221:120:6;6354:54;6384:17;6403:4;6354:29;:54::i;:::-;6184:235;6032:538;;:::o;5007:213::-;5081:4;-1:-1:-1;;;;;5090:6:6;5073:23;;5069:145;;5174:29;;-1:-1:-1;;;5174:29:6;;;;;;;;;;;7232:348:76;7443:4;7459:12;7474:25;7484:6;7492;7474:9;:25::i;:::-;7459:40;;7516:57;7535:5;7542:4;7548;7554:5;7561:11;7516:18;:57::i;:::-;7509:64;7232:348;-1:-1:-1;;;;;;;;7232:348:76:o;1219:160:40:-;1328:43;;-1:-1:-1;;;;;9238:32:124;;;1328:43:40;;;9220:51:124;9287:18;;;9280:34;;;1301:71:40;;1321:5;;1343:14;;;;;9193:18:124;;1328:43:40;9046:274:124;2955:222:3;1676:27;3104:22;;-1:-1:-1;;;;;;3104:22:3;;;3136:34;3161:8;3136:24;:34::i;3170:176:12:-;1979:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3288:16:12;;-1:-1:-1;;3288:16:12::1;3300:4;3288:16;::::0;;3319:20:::1;966:10:10::0;3326:12:12::1;887:96:10::0;9071:205:5;9129:30;;3147:66;9186:27;8819:122;1847:127:4;6929:20:5;:18;:20::i;:::-;1929:38:4::1;1954:12;1929:24;:38::i;1819:64:3:-:0;6929:20:5;:18;:20::i;2909:126:12:-;-1:-1:-1;;;;;;;;;;;2625:9:12;;;2967:62;;3003:15;;-1:-1:-1;;;3003:15:12;;;;;;;;;;;8370:720:40;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:40;8910:8;8866:16;;-1:-1:-1;8942:15:40;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:40;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:40;;-1:-1:-1;;;;;3705:32:124;;9033:40:40;;;3687:51:124;3660:18;;9033:40:40;3541:203:124;2264:344:28;2355:37;2374:17;2355:18;:37::i;:::-;2407:36;;-1:-1:-1;;;;;2407:36:28;;;;;;;;2458:11;;:15;2454:148;;2489:53;2518:17;2537:4;2489:28;:53::i;2454:148::-;2573:18;:16;:18::i;8473:639:76:-;8547:7;8566:31;8600:35;8628:6;8600:27;:35::i;:::-;8566:69;;8645:31;8679:24;8696:6;8679:16;:24::i;:::-;8645:58;;9065:17;9084;9048:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9048:54:76;;;;;;;;;9038:65;;9048:54;9038:65;;;;9021:83;;;9955:19:124;9990:12;9021:83:76;;;;;;;;;;;;9011:94;;;;;;9004:101;;;;8473:639;;;;:::o;1639:238:72:-;1790:4;1866;1817:45;1830:5;1837:4;1843:5;1850:11;1817:12;:45::i;:::-;:53;;1639:238;-1:-1:-1;;;;;;1639:238:72:o;3774:248:4:-;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:4;;-1:-1:-1;;;;;3941:19:4;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;7082:141:5:-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:5;;;;;;;;;;;1980:235:4;6929:20:5;:18;:20::i;:::-;-1:-1:-1;;;;;2076:26:4;::::1;2072:95;;2125:31;::::0;-1:-1:-1;;;2125:31:4;;2153:1:::1;2125:31;::::0;::::1;3687:51:124::0;3660:18;;2125:31:4::1;3541:203:124::0;1671:281:28;1748:17;-1:-1:-1;;;;;1748:29:28;;1781:1;1748:34;1744:119;;1805:47;;-1:-1:-1;;;1805:47:28;;-1:-1:-1;;;;;3705:32:124;;1805:47:28;;;3687:51:124;3660:18;;1805:47:28;3541:203:124;1744:119:28;-1:-1:-1;;;;;;;;;;;1872:73:28;;-1:-1:-1;;;;;;1872:73:28;-1:-1:-1;;;;;1872:73:28;;;;;;;;;;1671:281::o;3916:253:41:-;3999:12;4024;4038:23;4065:6;-1:-1:-1;;;;;4065:19:41;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;3916:253;-1:-1:-1;;;;;3916:253:41:o;6113:122:28:-;6163:9;:13;6159:70;;6199:19;;-1:-1:-1;;;6199:19:28;;;;;;;;;;;3620:723:51;3686:13;3711:19;3739:17;3751:4;3739:11;:17::i;:::-;3958:2;3951:4;3939:17;;3929:32;3711:46;;-1:-1:-1;3925:2:51;3921:41;3999:2;3982:324;4007:1;4003;:5;3982:324;;;4139:1;4121:9;4133:3;4121:15;:19;:44;;;;;4163:2;4150:6;4157:1;4150:9;;;;;;;;:::i;:::-;;;;;;;4144:21;4121:44;4117:150;;;4248:4;4235:17;;:6;4242:1;4235:9;;;;;;;;:::i;:::-;;;;:17;;-1:-1:-1;;;;;;4235:17:51;;;;;;;;;;;;;;;;;4117:150;4294:1;4280:15;;;;;4010:3;;;:::i;:::-;;;3982:324;;;-1:-1:-1;4329:6:51;;3620:723;-1:-1:-1;;;3620:723:51:o;1308:634::-;1364:13;1413:14;1430:17;1441:5;1430:10;:17::i;:::-;1450:1;1430:21;1413:38;;1465:20;1499:6;1488:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1488:18:51;-1:-1:-1;1465:41:51;-1:-1:-1;1595:30:51;;;1611:4;1595:30;1652:247;-1:-1:-1;;1683:5:51;-1:-1:-1;;;1782:2:51;1771:14;;1766:32;1683:5;1753:46;1843:2;1834:11;;;-1:-1:-1;1863:21:51;1652:247;1863:21;-1:-1:-1;1919:6:51;1308:634;-1:-1:-1;;;1308:634:51:o;2694:1412:72:-;2837:7;2958:18;2979:42;2989:11;3002:18;2979:9;:42::i;:::-;2958:63;;3049:5;:12;3035:10;:26;3031:59;;3070:20;;-1:-1:-1;;;3070:20:72;;;;;;;;;;;3031:59;3191:4;3300:1;3283:788;3308:5;:12;3303:1;:17;3283:788;;3345:9;3353:1;3345:5;:9;:::i;:::-;3358:1;3345:14;3341:720;;3496:12;3490:4;3483:26;3567:4;3564:1;3560:12;3553:5;3549:24;3543:31;3537:4;3530:45;3628:4;3622;3612:21;3596:37;;3674:1;3667:5;3663:13;3654:22;;3341:720;;;3873:4;3870:1;3866:12;3859:5;3855:24;3849:31;3843:4;3836:45;3915:12;3909:4;3902:26;3981:4;3975;3965:21;3949:37;;4027:1;4020:5;4016:13;4007:22;;3341:720;3322:3;;;;:::i;:::-;;;;3283:788;;;-1:-1:-1;4087:12:72;2694:1412;-1:-1:-1;;;;;;2694:1412:72:o;8485:120:5:-;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:5;;;;;;-1:-1:-1;8485:120:5:o;4437:582:41:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4857:17;;:22;:49;;;;-1:-1:-1;;;;;;4883:18:41;;;:23;4857:49;4853:119;;;4933:24;;-1:-1:-1;;;4933:24:41;;-1:-1:-1;;;;;3705:32:124;;4933:24:41;;;3687:51:124;3660:18;;4933:24:41;3541:203:124;4853:119:41;-1:-1:-1;4992:10:41;4985:17;;3296:148:51;3354:13;3386:51;-1:-1:-1;;;;;3398:22:51;;448:2;3386:11;:51::i;29154:916:56:-;29207:7;;-1:-1:-1;;;29282:17:56;;29278:103;;-1:-1:-1;;;29319:17:56;;;-1:-1:-1;29364:2:56;29354:12;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;-1:-1:-1;29480:2:56;29470:12;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;-1:-1:-1;29596:2:56;29586:12;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;-1:-1:-1;29710:1:56;29700:11;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;-1:-1:-1;29823:1:56;29813:11;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;-1:-1:-1;29936:1:56;29926:11;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;30057:6;29154:916;-1:-1:-1;;29154:916:56:o;28768:255::-;28839:7;28882:14;28899:11;28904:5;26270:9;26426:1;26387:34;26383:38;;26367:60;;;-1:-1:-1;26558:1:56;26535:18;26525:6;;;26524:29;26508:51;;26503:56;26681:1;26666:10;26656:6;;;26655:21;26639:43;;26634:48;26800:1;26789:6;26779;;;26778:17;26762:39;;26757:44;26915:1;26906:4;26896:6;;;26895:15;26879:37;;26874:42;27028:1;27020:3;27010:6;;;27009:14;-1:-1:-1;;;26993:36:56;;26988:41;;;;28520:9;;;28515:83;28509:90;;26222:2393;28899:11;28882:28;;28940:66;28956:26;28973:8;28956:16;:26::i;:::-;:49;;;;;29000:5;28991:6;28986:1;:11;;:19;28956:49;34914:9:57;34907:17;;34795:145;28940:66:56;28931:75;;28768:255;-1:-1:-1;;;28768:255:56:o;5559:434:41:-;5690:17;;:21;5686:301;;5894:10;5888:17;5881:4;5869:10;5865:21;5858:48;5686:301;5957:19;;-1:-1:-1;;;5957:19:41;;;;;;;;;;;2612:525:51;2687:13;2733:5;2712:18;2780:10;2784:6;2780:1;:10;:::i;:::-;:14;;2793:1;2780:14;:::i;:::-;2770:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2770:25:51;;2748:47;;-1:-1:-1;;;2805:6:51;2812:1;2805:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2805:15:51;;;;;;;;;-1:-1:-1;;;2830:6:51;2837:1;2830:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2830:15:51;;;;;;;;-1:-1:-1;2860:9:51;2872:10;2876:6;2872:1;:10;:::i;:::-;:14;;2885:1;2872:14;:::i;:::-;2860:26;;2855:140;2892:1;2888;:5;2855:140;;;-1:-1:-1;;;2937:10:51;2950:3;2937:16;2926:28;;;;;;;:::i;:::-;;;;2914:6;2921:1;2914:9;;;;;;;;:::i;:::-;;;;:40;-1:-1:-1;;;;;2914:40:51;;;;;;;;-1:-1:-1;2983:1:51;2968:16;;;;;2895:3;;;:::i;:::-;;;2855:140;;;-1:-1:-1;3008:15:51;;3004:96;;3046:43;;-1:-1:-1;;;3046:43:51;;;;;11314:25:124;;;11355:18;;;11348:34;;;11287:18;;3046:43:51;11140:248:124;3004:96:51;3123:6;2612:525;-1:-1:-1;;;;2612:525:51:o;32020:122:56:-;32088:4;32129:1;32117:8;32111:15;;;;;;;;:::i;:::-;:19;;;;:::i;:::-;:24;;32134:1;32111:24;32104:31;;32020:122;;;:::o;14:173:124:-;82:20;;-1:-1:-1;;;;;131:31:124;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:322::-;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:52;;;354:1;351;344:12;306:52;377:29;396:9;377:29;:::i;:::-;367:39;453:2;438:18;;425:32;;-1:-1:-1;504:2:124;489:18;;;476:32;;192:322;-1:-1:-1;;;192:322:124:o;519:127::-;580:10;575:3;571:20;568:1;561:31;611:4;608:1;601:15;635:4;632:1;625:15;651:995;728:6;736;789:2;777:9;768:7;764:23;760:32;757:52;;;805:1;802;795:12;757:52;828:29;847:9;828:29;:::i;:::-;818:39;;908:2;897:9;893:18;880:32;931:18;972:2;964:6;961:14;958:34;;;988:1;985;978:12;958:34;1026:6;1015:9;1011:22;1001:32;;1071:7;1064:4;1060:2;1056:13;1052:27;1042:55;;1093:1;1090;1083:12;1042:55;1129:2;1116:16;1151:2;1147;1144:10;1141:36;;;1157:18;;:::i;:::-;1232:2;1226:9;1200:2;1286:13;;-1:-1:-1;;1282:22:124;;;1306:2;1278:31;1274:40;1262:53;;;1330:18;;;1350:22;;;1327:46;1324:72;;;1376:18;;:::i;:::-;1416:10;1412:2;1405:22;1451:2;1443:6;1436:18;1491:7;1486:2;1481;1477;1473:11;1469:20;1466:33;1463:53;;;1512:1;1509;1502:12;1463:53;1568:2;1563;1559;1555:11;1550:2;1542:6;1538:15;1525:46;1613:1;1608:2;1603;1595:6;1591:15;1587:24;1580:35;1634:6;1624:16;;;;;;;651:995;;;;;:::o;2025:260::-;2093:6;2101;2154:2;2142:9;2133:7;2129:23;2125:32;2122:52;;;2170:1;2167;2160:12;2122:52;2193:29;2212:9;2193:29;:::i;:::-;2183:39;;2241:38;2275:2;2264:9;2260:18;2241:38;:::i;:::-;2231:48;;2025:260;;;;;:::o;2614:401::-;2714:6;2767:2;2755:9;2746:7;2742:23;2738:32;2735:52;;;2783:1;2780;2773:12;2735:52;2823:9;2810:23;2856:18;2848:6;2845:30;2842:50;;;2888:1;2885;2878:12;2842:50;2911:22;;2967:3;2949:16;;;2945:26;2942:46;;;2984:1;2981;2974:12;3020:334;3097:6;3105;3113;3166:2;3154:9;3145:7;3141:23;3137:32;3134:52;;;3182:1;3179;3172:12;3134:52;3205:29;3224:9;3205:29;:::i;:::-;3195:39;;3253:38;3287:2;3276:9;3272:18;3253:38;:::i;:::-;3243:48;;3310:38;3344:2;3333:9;3329:18;3310:38;:::i;:::-;3300:48;;3020:334;;;;;:::o;3749:250::-;3834:1;3844:113;3858:6;3855:1;3852:13;3844:113;;;3934:11;;;3928:18;3915:11;;;3908:39;3880:2;3873:10;3844:113;;;-1:-1:-1;;3991:1:124;3973:16;;3966:27;3749:250::o;4004:396::-;4153:2;4142:9;4135:21;4116:4;4185:6;4179:13;4228:6;4223:2;4212:9;4208:18;4201:34;4244:79;4316:6;4311:2;4300:9;4296:18;4291:2;4283:6;4279:15;4244:79;:::i;:::-;4384:2;4363:15;-1:-1:-1;;4359:29:124;4344:45;;;;4391:2;4340:54;;4004:396;-1:-1:-1;;4004:396:124:o;4405:186::-;4464:6;4517:2;4505:9;4496:7;4492:23;4488:32;4485:52;;;4533:1;4530;4523:12;4485:52;4556:29;4575:9;4556:29;:::i;5309:127::-;5370:10;5365:3;5361:20;5358:1;5351:31;5401:4;5398:1;5391:15;5425:4;5422:1;5415:15;5441:125;5506:9;;;5527:10;;;5524:36;;;5540:18;;:::i;7082:545::-;7175:4;7181:6;7241:11;7228:25;7335:2;7331:7;7320:8;7304:14;7300:29;7296:43;7276:18;7272:68;7262:96;;7354:1;7351;7344:12;7262:96;7381:33;;7433:20;;;-1:-1:-1;7476:18:124;7465:30;;7462:50;;;7508:1;7505;7498:12;7462:50;7541:4;7529:17;;-1:-1:-1;7592:1:124;7588:14;;;7572;7568:35;7558:46;;7555:66;;;7617:1;7614;7607:12;7555:66;7082:545;;;;;:::o;7632:276::-;7690:6;7743:2;7731:9;7722:7;7718:23;7714:32;7711:52;;;7759:1;7756;7749:12;7711:52;7798:9;7785:23;7848:10;7841:5;7837:22;7830:5;7827:33;7817:61;;7874:1;7871;7864:12;8857:184;8927:6;8980:2;8968:9;8959:7;8955:23;8951:32;8948:52;;;8996:1;8993;8986:12;8948:52;-1:-1:-1;9019:16:124;;8857:184;-1:-1:-1;8857:184:124:o;9325:496::-;9504:3;9542:6;9536:13;9558:66;9617:6;9612:3;9605:4;9597:6;9593:17;9558:66;:::i;:::-;9687:13;;9646:16;;;;9709:70;9687:13;9646:16;9756:4;9744:17;;9709:70;:::i;:::-;9795:20;;9325:496;-1:-1:-1;;;;9325:496:124:o;10013:287::-;10142:3;10180:6;10174:13;10196:66;10255:6;10250:3;10243:4;10235:6;10231:17;10196:66;:::i;:::-;10278:16;;;;;10013:287;-1:-1:-1;;10013:287:124:o;10305:127::-;10366:10;10361:3;10357:20;10354:1;10347:31;10397:4;10394:1;10387:15;10421:4;10418:1;10411:15;10437:136;10476:3;10504:5;10494:39;;10513:18;;:::i;:::-;-1:-1:-1;;;10549:18:124;;10437:136::o;10578:127::-;10639:10;10634:3;10630:20;10627:1;10620:31;10670:4;10667:1;10660:15;10694:4;10691:1;10684:15;10710:112;10742:1;10768;10758:35;;10773:18;;:::i;:::-;-1:-1:-1;10807:9:124;;10710:112::o;10827:135::-;10866:3;10887:17;;;10884:43;;10907:18;;:::i;:::-;-1:-1:-1;10954:1:124;10943:13;;10827:135::o;10967:168::-;11040:9;;;11071;;11088:15;;;11082:22;;11068:37;11058:71;;11109:18;;:::i;11393:127::-;11454:10;11449:3;11445:20;11442:1;11435:31;11485:4;11482:1;11475:15;11509:4;11506:1;11499:15;11525:157;11555:1;11589:4;11586:1;11582:12;11613:3;11603:37;;11620:18;;:::i;:::-;11672:3;11665:4;11662:1;11658:12;11654:22;11649:27;;;11525:157;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "1819": [
        { "start": 3865, "length": 32 },
        { "start": 3906, "length": 32 },
        { "start": 4230, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
    "acceptOwnership()": "79ba5097",
    "claimRewards((address,address,uint256,address,bytes32,bytes32[],uint32,uint32))": "6fdaf166",
    "distributeRewards(address,uint256,bytes32)": "40b3a4bf",
    "getBalance(address,address)": "d4fac45d",
    "getClaimedRewards(address,address,address)": "7733369c",
    "getDistributionRoots(address,address)": "5e04f87e",
    "initialize(address)": "c4d66de8",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "pendingOwner()": "e30c3978",
    "proxiableUUID()": "52d1902d",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "unpause()": "3f4ba83a",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AmountAlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"InvalidMerkleRoot\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProofLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint32\",\"name\":\"leafIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"totalLeaves\",\"type\":\"uint32\"}],\"internalType\":\"struct ISLAYRewardsV2.ClaimableRewardProof\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"distributeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"}],\"name\":\"getClaimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getDistributionRoots\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"prevRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"currentRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISLAYRewardsV2.DistributionRoots\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-from\":\"src/SLAYBase.sol:SLAYBase\",\"details\":\"This contract serves as a contract for distributing rewards and claiming them.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AmountAlreadyClaimed(address,address,address,uint256)\":[{\"details\":\"Error thrown when an earner attempts to claim an amount that has already been claimed.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InsufficientBalance(address,address)\":[{\"details\":\"Error thrown when a provider has insufficient balance for a token to distribute rewards.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidMerkleProof()\":[{\"details\":\"Error thrown when an invalid Merkle proof is provided during reward claiming.\"}],\"InvalidMerkleRoot(address,address,bytes32)\":[{\"details\":\"Error thrown when an invalid Merkle root is provided for a provider and token pair.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}],\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RewardsClaimed(address,address,address,address,uint256,bytes32)\":{\"params\":{\"amount\":\"The amount of tokens claimed.\",\"earner\":\"The address of the earner claiming rewards.\",\"merkleRoot\":\"The Merkle root of the distribution from which the claim is made.\",\"provider\":\"The address of the provider from which rewards are claimed.\",\"recipient\":\"The address receiving the claimed rewards.\",\"token\":\"The address of the token being claimed.\"}},\"RewardsDistributed(address,address,uint256,bytes32)\":{\"params\":{\"amount\":\"The total amount of tokens distributed.\",\"merkleRoot\":\"The Merkle root of the distribution.\",\"provider\":\"The address of the provider (service or operator) distributing rewards.\",\"token\":\"The address of the token being distributed.\"}},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"claimRewards((address,address,uint256,address,bytes32,bytes32[],uint32,uint32))\":{\"details\":\"The function checks the Merkle proof, updates the claimed rewards and send the tokens to the recipient.\",\"params\":{\"params\":\"The parameters containing provider, token, amount, recipient, merkleRoot, proof, leafIndex, and totalLeaves.\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\",\"details\":\"Cyclic parameters in the constructor are possible because an SLAYBase (initial base implementation) is used for the initial deployment, after which all contracts are upgraded to their respective implementations with immutable proxy addresses. This contract extends SLAYBase, which provides the initial owner and pause functionality. SLAYBase.initialize() is called to set the initial owner of the contract.\"},\"distributeRewards(address,uint256,bytes32)\":{\"details\":\"Service needs to ensure proper allowance is made for the contract to transfer tokens. When the {amount} is 0, the function will essentially only update the Merkle root without any token transfer. This allows for patching of existing distributions.\",\"params\":{\"amount\":\"The amount of tokens to distribute.\",\"merkleRoot\":\"The Merkle root of the distribution.\",\"token\":\"The address of the token to distribute.\"}},\"getBalance(address,address)\":{\"params\":{\"provider\":\"The address of the provider (e.g. service or operator).\",\"token\":\"The address of the token.\"},\"returns\":{\"_0\":\"The balance of the provider for the specified token.\"}},\"getClaimedRewards(address,address,address)\":{\"params\":{\"earner\":\"The address of the earner.\",\"provider\":\"The address of the provider (e.g. service or operator).\",\"token\":\"The address of the token.\"},\"returns\":{\"_0\":\"The total amount of claimed rewards for the specified provider, token, and earner.\"}},\"getDistributionRoots(address,address)\":{\"params\":{\"provider\":\"The address of the provider (e.g. service or operator).\",\"token\":\"The address of the token.\"},\"returns\":{\"_0\":\"DistributionRoots containing the previous and current Merkle roots.\"}},\"initialize(address)\":{\"details\":\"Initializes the contract and sets the initial owner. To reserve the proxy address for future immutable contract deployment. `__Pausable_init()` is also initialized here to ensure that the contract can be paused before upgrade.\",\"params\":{\"initialOwner\":\"The address to be set as the initial owner.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pauses the contract. The modifiers `whenNotPaused` and `whenPaused` are available for use in derived contracts. This allows the base contract to be paused before any upgrade to the actual implementation.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"},\"unpause()\":{\"details\":\"Unpauses the contract. This allows normal operations to resume after the contract has been paused. The modifiers `whenNotPaused` and `whenPaused` are available for use in derived contracts. Only the owner can unpause the contract.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"_balances\":{\"details\":\"Stores the rewards balances for each provider and token received from {distributeRewards} function.\"},\"_claimedRewards\":{\"details\":\"Stores the total claimed rewards for each earner for a specific provider and token.\"},\"_distributionRoots\":{\"details\":\"Stores the merkle roots (previous and current) for each (provider,token)'s distribution. This is to prevent race conditions in the case of concurrent calls to distributeRewards and claimRewards.\"}},\"title\":\"Rewards contract\",\"version\":1},\"userdoc\":{\"events\":{\"RewardsClaimed(address,address,address,address,uint256,bytes32)\":{\"notice\":\"Emitted when rewards are claimed by an earner.\"},\"RewardsDistributed(address,address,uint256,bytes32)\":{\"notice\":\"Emitted when rewards are distributed by provider.\"}},\"kind\":\"user\",\"methods\":{\"claimRewards((address,address,uint256,address,bytes32,bytes32[],uint32,uint32))\":{\"notice\":\"Claims rewards for an earner for a specific provider and token using merkle proof.\"},\"distributeRewards(address,uint256,bytes32)\":{\"notice\":\"Distributes rewards from a provider (service or operator) to earners using a Merkle tree. Although rewards are usually distributed by service or operator, anybody can distribute rewards. This is not limited to the service/operator itself to allow for flexibility in reward distribution.\"},\"getBalance(address,address)\":{\"notice\":\"Returns the balance of a provider for a specific token.\"},\"getClaimedRewards(address,address,address)\":{\"notice\":\"Returns the total claimed rewards for a specific provider, token, and earner.\"},\"getDistributionRoots(address,address)\":{\"notice\":\"Returns the current and previous Merkle roots for a (provider,token) pair.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@satlayer/contracts/src/SLAYRewardsV2.sol\":\"SLAYRewardsV2\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=node_modules/@aave/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@openzeppelin/foundry-upgrades/=node_modules/@openzeppelin/foundry-upgrades/src/\",\":@satlayer/contracts/=node_modules/@satlayer/contracts/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xe9570c90b688339474e80090b0cdf0b2c85c25aa28cc6044d489dda9efc2c716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f358f7eab8cc53b784d5ff3f82073124d797638aee71487beca3543414a46a23\",\"dweb:/ipfs/QmWy153MjdHfUbqtCKELubAmMavjBEeRByTDv9MMoUVZN4\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"node_modules/@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"node_modules/@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"node_modules/@satlayer/contracts/src/MerkleProof.sol\":{\"keccak256\":\"0x2334c056ca384e72a8c1d6fb15b64dc5a6e4cb5478667dd8887c7801e3aaf195\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7a6df4b032bfa4786dffd99be22abfc4c28af7322c9e148a2e74de8be1884548\",\"dweb:/ipfs/QmWNwth1h6GQ5KCBK5XTMvYq4evDXn2ZinLx5o48VWdMvi\"]},\"node_modules/@satlayer/contracts/src/SLAYBase.sol\":{\"keccak256\":\"0xcb54991671c9d13a15852d791c6f3522bed7be17c57a66a51bfde4454aa4650b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7018ccefd60a828d7baf02b74f517ab3845c87a9be80ff1d22391ff4751cb890\",\"dweb:/ipfs/QmU3CVxE3G4n2NYb5KzWXoLyjfjxT4urW1SgbPSGPHqdkz\"]},\"node_modules/@satlayer/contracts/src/SLAYRewardsV2.sol\":{\"keccak256\":\"0x2619608cdac830f1fa22e7c40f1e4e43b1d23c1a88b6c36ae8c00a2a04322da6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9aeee37002cf8a4d35c5262f82523458534c5e2813679082abc00ef2d9250447\",\"dweb:/ipfs/QmbWipdGA35cSS6feQnnpGWw6s5Bm5t1NXyz4s8HJbdT78\"]},\"node_modules/@satlayer/contracts/src/interface/ISLAYRewardsV2.sol\":{\"keccak256\":\"0x89f65258107bb504b36d4bc89511e667813f9f7c21bacff59ee44a84b4e36030\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cd83f14b1331eb43266c3616a6f49a8fff9ae461a1e4d929bc27d1da3974ba11\",\"dweb:/ipfs/QmVXVaqKeAcMgm18NdTyu1KHw6MSyDjhHAowzZQgyKHfzD\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.24+commit.e11b9ed9" },
    "language": "Solidity",
    "output": {
      "abi": [
        { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
        {
          "inputs": [{ "internalType": "address", "name": "target", "type": "address" }],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "provider", "type": "address" },
            { "internalType": "address", "name": "token", "type": "address" },
            { "internalType": "address", "name": "earner", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "type": "error",
          "name": "AmountAlreadyClaimed"
        },
        {
          "inputs": [{ "internalType": "address", "name": "implementation", "type": "address" }],
          "type": "error",
          "name": "ERC1967InvalidImplementation"
        },
        { "inputs": [], "type": "error", "name": "ERC1967NonPayable" },
        { "inputs": [], "type": "error", "name": "EnforcedPause" },
        { "inputs": [], "type": "error", "name": "ExpectedPause" },
        { "inputs": [], "type": "error", "name": "FailedCall" },
        {
          "inputs": [
            { "internalType": "address", "name": "provider", "type": "address" },
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "type": "error",
          "name": "InsufficientBalance"
        },
        { "inputs": [], "type": "error", "name": "InvalidInitialization" },
        { "inputs": [], "type": "error", "name": "InvalidMerkleProof" },
        {
          "inputs": [
            { "internalType": "address", "name": "provider", "type": "address" },
            { "internalType": "address", "name": "token", "type": "address" },
            { "internalType": "bytes32", "name": "merkleRoot", "type": "bytes32" }
          ],
          "type": "error",
          "name": "InvalidMerkleRoot"
        },
        { "inputs": [], "type": "error", "name": "InvalidProofLength" },
        { "inputs": [], "type": "error", "name": "NotInitializing" },
        {
          "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "value", "type": "uint256" },
            { "internalType": "uint256", "name": "length", "type": "uint256" }
          ],
          "type": "error",
          "name": "StringsInsufficientHexLength"
        },
        { "inputs": [], "type": "error", "name": "UUPSUnauthorizedCallContext" },
        {
          "inputs": [{ "internalType": "bytes32", "name": "slot", "type": "bytes32" }],
          "type": "error",
          "name": "UUPSUnsupportedProxiableUUID"
        },
        {
          "inputs": [{ "internalType": "uint64", "name": "version", "type": "uint64", "indexed": false }],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "previousOwner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "newOwner", "type": "address", "indexed": true }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "previousOwner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "newOwner", "type": "address", "indexed": true }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "address", "name": "account", "type": "address", "indexed": false }],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "provider", "type": "address", "indexed": true },
            { "internalType": "address", "name": "token", "type": "address", "indexed": true },
            { "internalType": "address", "name": "earner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "recipient", "type": "address", "indexed": false },
            { "internalType": "uint256", "name": "amount", "type": "uint256", "indexed": false },
            { "internalType": "bytes32", "name": "merkleRoot", "type": "bytes32", "indexed": false }
          ],
          "type": "event",
          "name": "RewardsClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "provider", "type": "address", "indexed": true },
            { "internalType": "address", "name": "token", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "amount", "type": "uint256", "indexed": false },
            { "internalType": "bytes32", "name": "merkleRoot", "type": "bytes32", "indexed": true }
          ],
          "type": "event",
          "name": "RewardsDistributed",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "address", "name": "account", "type": "address", "indexed": false }],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "address", "name": "implementation", "type": "address", "indexed": true }],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UPGRADE_INTERFACE_VERSION",
          "outputs": [{ "internalType": "string", "name": "", "type": "string" }]
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "acceptOwnership" },
        {
          "inputs": [
            {
              "internalType": "struct ISLAYRewardsV2.ClaimableRewardProof",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "provider", "type": "address" },
                { "internalType": "address", "name": "token", "type": "address" },
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "bytes32", "name": "merkleRoot", "type": "bytes32" },
                { "internalType": "bytes32[]", "name": "proof", "type": "bytes32[]" },
                { "internalType": "uint32", "name": "leafIndex", "type": "uint32" },
                { "internalType": "uint32", "name": "totalLeaves", "type": "uint32" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            { "internalType": "bytes32", "name": "merkleRoot", "type": "bytes32" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "distributeRewards"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "provider", "type": "address" },
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBalance",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "provider", "type": "address" },
            { "internalType": "address", "name": "token", "type": "address" },
            { "internalType": "address", "name": "earner", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimedRewards",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "provider", "type": "address" },
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDistributionRoots",
          "outputs": [
            {
              "internalType": "struct ISLAYRewardsV2.DistributionRoots",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "prevRoot", "type": "bytes32" },
                { "internalType": "bytes32", "name": "currentRoot", "type": "bytes32" }
              ]
            }
          ]
        },
        {
          "inputs": [{ "internalType": "address", "name": "initialOwner", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "pause" },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }]
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "renounceOwnership" },
        {
          "inputs": [{ "internalType": "address", "name": "newOwner", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "unpause" },
        {
          "inputs": [
            { "internalType": "address", "name": "newImplementation", "type": "address" },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": { "details": "The new owner accepts the ownership transfer." },
          "claimRewards((address,address,uint256,address,bytes32,bytes32[],uint32,uint32))": {
            "details": "The function checks the Merkle proof, updates the claimed rewards and send the tokens to the recipient.",
            "params": {
              "params": "The parameters containing provider, token, amount, recipient, merkleRoot, proof, leafIndex, and totalLeaves."
            }
          },
          "constructor": {
            "custom:oz-upgrades-unsafe-allow": "constructor",
            "details": "Cyclic parameters in the constructor are possible because an SLAYBase (initial base implementation) is used for the initial deployment, after which all contracts are upgraded to their respective implementations with immutable proxy addresses. This contract extends SLAYBase, which provides the initial owner and pause functionality. SLAYBase.initialize() is called to set the initial owner of the contract."
          },
          "distributeRewards(address,uint256,bytes32)": {
            "details": "Service needs to ensure proper allowance is made for the contract to transfer tokens. When the {amount} is 0, the function will essentially only update the Merkle root without any token transfer. This allows for patching of existing distributions.",
            "params": {
              "amount": "The amount of tokens to distribute.",
              "merkleRoot": "The Merkle root of the distribution.",
              "token": "The address of the token to distribute."
            }
          },
          "getBalance(address,address)": {
            "params": {
              "provider": "The address of the provider (e.g. service or operator).",
              "token": "The address of the token."
            },
            "returns": { "_0": "The balance of the provider for the specified token." }
          },
          "getClaimedRewards(address,address,address)": {
            "params": {
              "earner": "The address of the earner.",
              "provider": "The address of the provider (e.g. service or operator).",
              "token": "The address of the token."
            },
            "returns": { "_0": "The total amount of claimed rewards for the specified provider, token, and earner." }
          },
          "getDistributionRoots(address,address)": {
            "params": {
              "provider": "The address of the provider (e.g. service or operator).",
              "token": "The address of the token."
            },
            "returns": { "_0": "DistributionRoots containing the previous and current Merkle roots." }
          },
          "initialize(address)": {
            "details": "Initializes the contract and sets the initial owner. To reserve the proxy address for future immutable contract deployment. `__Pausable_init()` is also initialized here to ensure that the contract can be paused before upgrade.",
            "params": { "initialOwner": "The address to be set as the initial owner." }
          },
          "owner()": { "details": "Returns the address of the current owner." },
          "pause()": {
            "details": "Pauses the contract. The modifiers `whenNotPaused` and `whenPaused` are available for use in derived contracts. This allows the base contract to be paused before any upgrade to the actual implementation."
          },
          "paused()": { "details": "Returns true if the contract is paused, and false otherwise." },
          "pendingOwner()": { "details": "Returns the address of the pending owner." },
          "proxiableUUID()": {
            "details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."
          },
          "unpause()": {
            "details": "Unpauses the contract. This allows normal operations to resume after the contract has been paused. The modifiers `whenNotPaused` and `whenPaused` are available for use in derived contracts. Only the owner can unpause the contract."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claimRewards((address,address,uint256,address,bytes32,bytes32[],uint32,uint32))": {
            "notice": "Claims rewards for an earner for a specific provider and token using merkle proof."
          },
          "distributeRewards(address,uint256,bytes32)": {
            "notice": "Distributes rewards from a provider (service or operator) to earners using a Merkle tree. Although rewards are usually distributed by service or operator, anybody can distribute rewards. This is not limited to the service/operator itself to allow for flexibility in reward distribution."
          },
          "getBalance(address,address)": { "notice": "Returns the balance of a provider for a specific token." },
          "getClaimedRewards(address,address,address)": {
            "notice": "Returns the total claimed rewards for a specific provider, token, and earner."
          },
          "getDistributionRoots(address,address)": {
            "notice": "Returns the current and previous Merkle roots for a (provider,token) pair."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aave/=node_modules/@aave/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@openzeppelin/foundry-upgrades/=node_modules/@openzeppelin/foundry-upgrades/src/",
        "@satlayer/contracts/=node_modules/@satlayer/contracts/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "node_modules/@satlayer/contracts/src/SLAYRewardsV2.sol": "SLAYRewardsV2" },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0xe9570c90b688339474e80090b0cdf0b2c85c25aa28cc6044d489dda9efc2c716",
        "urls": [
          "bzz-raw://f358f7eab8cc53b784d5ff3f82073124d797638aee71487beca3543414a46a23",
          "dweb:/ipfs/QmWy153MjdHfUbqtCKELubAmMavjBEeRByTDv9MMoUVZN4"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
        "urls": [
          "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
          "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63",
        "urls": [
          "bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec",
          "dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
        "keccak256": "0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5",
        "urls": [
          "bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb",
          "dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d",
        "urls": [
          "bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100",
          "dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc",
        "urls": [
          "bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037",
          "dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5",
        "urls": [
          "bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c",
          "dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44",
        "urls": [
          "bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d",
          "dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b",
        "urls": [
          "bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422",
          "dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618",
        "urls": [
          "bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a",
          "dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b",
        "urls": [
          "bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d",
          "dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
        "urls": [
          "bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
          "dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
        "urls": [
          "bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
          "dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0",
        "urls": [
          "bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f",
          "dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Errors.sol": {
        "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
        "urls": [
          "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
          "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4",
        "urls": [
          "bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e",
          "dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c",
        "urls": [
          "bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617",
          "dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
        "urls": [
          "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
          "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
        "urls": [
          "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
          "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
        ],
        "license": "MIT"
      },
      "node_modules/@satlayer/contracts/src/MerkleProof.sol": {
        "keccak256": "0x2334c056ca384e72a8c1d6fb15b64dc5a6e4cb5478667dd8887c7801e3aaf195",
        "urls": [
          "bzz-raw://7a6df4b032bfa4786dffd99be22abfc4c28af7322c9e148a2e74de8be1884548",
          "dweb:/ipfs/QmWNwth1h6GQ5KCBK5XTMvYq4evDXn2ZinLx5o48VWdMvi"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/SLAYBase.sol": {
        "keccak256": "0xcb54991671c9d13a15852d791c6f3522bed7be17c57a66a51bfde4454aa4650b",
        "urls": [
          "bzz-raw://7018ccefd60a828d7baf02b74f517ab3845c87a9be80ff1d22391ff4751cb890",
          "dweb:/ipfs/QmU3CVxE3G4n2NYb5KzWXoLyjfjxT4urW1SgbPSGPHqdkz"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/SLAYRewardsV2.sol": {
        "keccak256": "0x2619608cdac830f1fa22e7c40f1e4e43b1d23c1a88b6c36ae8c00a2a04322da6",
        "urls": [
          "bzz-raw://9aeee37002cf8a4d35c5262f82523458534c5e2813679082abc00ef2d9250447",
          "dweb:/ipfs/QmbWipdGA35cSS6feQnnpGWw6s5Bm5t1NXyz4s8HJbdT78"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/interface/ISLAYRewardsV2.sol": {
        "keccak256": "0x89f65258107bb504b36d4bc89511e667813f9f7c21bacff59ee44a84b4e36030",
        "urls": [
          "bzz-raw://cd83f14b1331eb43266c3616a6f49a8fff9ae461a1e4d929bc27d1da3974ba11",
          "dweb:/ipfs/QmVXVaqKeAcMgm18NdTyu1KHw6MSyDjhHAowzZQgyKHfzD"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 24644,
        "contract": "node_modules/@satlayer/contracts/src/SLAYRewardsV2.sol:SLAYRewardsV2",
        "label": "_distributionRoots",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(DistributionRoots)28216_storage))"
      },
      {
        "astId": 24651,
        "contract": "node_modules/@satlayer/contracts/src/SLAYRewardsV2.sol:SLAYRewardsV2",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 24660,
        "contract": "node_modules/@satlayer/contracts/src/SLAYRewardsV2.sol:SLAYRewardsV2",
        "label": "_claimedRewards",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))"
      }
    ],
    "types": {
      "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
      "t_bytes32": { "encoding": "inplace", "label": "bytes32", "numberOfBytes": "32" },
      "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => mapping(address => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(DistributionRoots)28216_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct ISLAYRewardsV2.DistributionRoots))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(DistributionRoots)28216_storage)"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_struct(DistributionRoots)28216_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ISLAYRewardsV2.DistributionRoots)",
        "numberOfBytes": "32",
        "value": "t_struct(DistributionRoots)28216_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(DistributionRoots)28216_storage": {
        "encoding": "inplace",
        "label": "struct ISLAYRewardsV2.DistributionRoots",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 28212,
            "contract": "node_modules/@satlayer/contracts/src/SLAYRewardsV2.sol:SLAYRewardsV2",
            "label": "prevRoot",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 28215,
            "contract": "node_modules/@satlayer/contracts/src/SLAYRewardsV2.sol:SLAYRewardsV2",
            "label": "currentRoot",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ]
      },
      "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" }
    }
  },
  "ast": {
    "absolutePath": "node_modules/@satlayer/contracts/src/SLAYRewardsV2.sol",
    "id": 25105,
    "exportedSymbols": {
      "IERC20": [6631],
      "ISLAYRewardsV2": [28267],
      "MerkleProof": [22832],
      "SLAYBase": [23094],
      "SLAYRewardsV2": [25104],
      "SafeERC20": [7851],
      "Strings": [11058]
    },
    "nodeType": "SourceUnit",
    "src": "37:9078:76",
    "nodes": [
      {
        "id": 24615,
        "nodeType": "PragmaDirective",
        "src": "37:24:76",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".24"]
      },
      {
        "id": 24617,
        "nodeType": "ImportDirective",
        "src": "63:70:76",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25105,
        "sourceUnit": 6632,
        "symbolAliases": [
          {
            "foreign": {
              "id": 24616,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6631,
              "src": "71:6:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 24619,
        "nodeType": "ImportDirective",
        "src": "134:82:76",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25105,
        "sourceUnit": 7852,
        "symbolAliases": [
          {
            "foreign": {
              "id": 24618,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7851,
              "src": "142:9:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 24621,
        "nodeType": "ImportDirective",
        "src": "218:40:76",
        "nodes": [],
        "absolutePath": "node_modules/@satlayer/contracts/src/SLAYBase.sol",
        "file": "./SLAYBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25105,
        "sourceUnit": 23095,
        "symbolAliases": [
          {
            "foreign": {
              "id": 24620,
              "name": "SLAYBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23094,
              "src": "226:8:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 24623,
        "nodeType": "ImportDirective",
        "src": "259:46:76",
        "nodes": [],
        "absolutePath": "node_modules/@satlayer/contracts/src/MerkleProof.sol",
        "file": "./MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25105,
        "sourceUnit": 22833,
        "symbolAliases": [
          {
            "foreign": {
              "id": 24622,
              "name": "MerkleProof",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22832,
              "src": "267:11:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 24625,
        "nodeType": "ImportDirective",
        "src": "306:62:76",
        "nodes": [],
        "absolutePath": "node_modules/@satlayer/contracts/src/interface/ISLAYRewardsV2.sol",
        "file": "./interface/ISLAYRewardsV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25105,
        "sourceUnit": 28268,
        "symbolAliases": [
          {
            "foreign": {
              "id": 24624,
              "name": "ISLAYRewardsV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28267,
              "src": "314:14:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 24627,
        "nodeType": "ImportDirective",
        "src": "369:66:76",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25105,
        "sourceUnit": 11059,
        "symbolAliases": [
          {
            "foreign": {
              "id": 24626,
              "name": "Strings",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11058,
              "src": "377:7:76",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25104,
        "nodeType": "ContractDefinition",
        "src": "616:8498:76",
        "nodes": [
          {
            "id": 24636,
            "nodeType": "UsingForDirective",
            "src": "673:27:76",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 24633,
              "name": "SafeERC20",
              "nameLocations": ["679:9:76"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7851,
              "src": "679:9:76"
            },
            "typeName": {
              "id": 24635,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24634,
                "name": "IERC20",
                "nameLocations": ["693:6:76"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6631,
                "src": "693:6:76"
              },
              "referencedDeclaration": 6631,
              "src": "693:6:76",
              "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$6631", "typeString": "contract IERC20" }
            }
          },
          {
            "id": 24644,
            "nodeType": "VariableDeclaration",
            "src": "936:111:76",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 24637,
              "nodeType": "StructuredDocumentation",
              "src": "706:225:76",
              "text": " @dev Stores the merkle roots (previous and current) for each (provider,token)'s distribution.\n This is to prevent race conditions in the case of concurrent calls to distributeRewards and claimRewards."
            },
            "mutability": "mutable",
            "name": "_distributionRoots",
            "nameLocation": "1029:18:76",
            "scope": 25104,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_DistributionRoots_$28216_storage_$_$",
              "typeString": "mapping(address => mapping(address => struct ISLAYRewardsV2.DistributionRoots))"
            },
            "typeName": {
              "id": 24643,
              "keyName": "provider",
              "keyNameLocation": "952:8:76",
              "keyType": {
                "id": 24638,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "944:7:76",
                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
              },
              "nodeType": "Mapping",
              "src": "936:84:76",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_DistributionRoots_$28216_storage_$_$",
                "typeString": "mapping(address => mapping(address => struct ISLAYRewardsV2.DistributionRoots))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 24642,
                "keyName": "token",
                "keyNameLocation": "980:5:76",
                "keyType": {
                  "id": 24639,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "972:7:76",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                },
                "nodeType": "Mapping",
                "src": "964:55:76",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DistributionRoots_$28216_storage_$",
                  "typeString": "mapping(address => struct ISLAYRewardsV2.DistributionRoots)"
                },
                "valueName": "merkleRoots",
                "valueNameLocation": "1007:11:76",
                "valueType": {
                  "id": 24641,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 24640,
                    "name": "DistributionRoots",
                    "nameLocations": ["989:17:76"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 28216,
                    "src": "989:17:76"
                  },
                  "referencedDeclaration": 28216,
                  "src": "989:17:76",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DistributionRoots_$28216_storage_ptr",
                    "typeString": "struct ISLAYRewardsV2.DistributionRoots"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 24651,
            "nodeType": "VariableDeclaration",
            "src": "1182:88:76",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 24645,
              "nodeType": "StructuredDocumentation",
              "src": "1054:123:76",
              "text": " @dev Stores the rewards balances for each provider and token received from {distributeRewards} function."
            },
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1261:9:76",
            "scope": 25104,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 24650,
              "keyName": "provider",
              "keyNameLocation": "1198:8:76",
              "keyType": {
                "id": 24646,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1190:7:76",
                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
              },
              "nodeType": "Mapping",
              "src": "1182:70:76",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 24649,
                "keyName": "token",
                "keyNameLocation": "1226:5:76",
                "keyType": {
                  "id": 24647,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1218:7:76",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                },
                "nodeType": "Mapping",
                "src": "1210:41:76",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "balance",
                "valueNameLocation": "1243:7:76",
                "valueType": {
                  "id": 24648,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1235:7:76",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 24660,
            "nodeType": "VariableDeclaration",
            "src": "1389:134:76",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 24652,
              "nodeType": "StructuredDocumentation",
              "src": "1277:107:76",
              "text": " @dev Stores the total claimed rewards for each earner for a specific provider and token."
            },
            "mutability": "mutable",
            "name": "_claimedRewards",
            "nameLocation": "1508:15:76",
            "scope": 25104,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
              "typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
            },
            "typeName": {
              "id": 24659,
              "keyName": "provider",
              "keyNameLocation": "1405:8:76",
              "keyType": {
                "id": 24653,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1397:7:76",
                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
              },
              "nodeType": "Mapping",
              "src": "1389:102:76",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
                "typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 24658,
                "keyName": "token",
                "keyNameLocation": "1433:5:76",
                "keyType": {
                  "id": 24654,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1425:7:76",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                },
                "nodeType": "Mapping",
                "src": "1417:73:76",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                  "typeString": "mapping(address => mapping(address => uint256))"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 24657,
                  "keyName": "earner",
                  "keyNameLocation": "1458:6:76",
                  "keyType": {
                    "id": 24655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1450:7:76",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "nodeType": "Mapping",
                  "src": "1442:47:76",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueName": "totalClaimed",
                  "valueNameLocation": "1476:12:76",
                  "valueType": {
                    "id": 24656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1468:7:76",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 24668,
            "nodeType": "FunctionDefinition",
            "src": "2059:53:76",
            "nodes": [],
            "body": {
              "id": 24667,
              "nodeType": "Block",
              "src": "2073:39:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 24664,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1753,
                      "src": "2083:20:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 24665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2083:22:76",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 24666,
                  "nodeType": "ExpressionStatement",
                  "src": "2083:22:76"
                }
              ]
            },
            "documentation": {
              "id": 24661,
              "nodeType": "StructuredDocumentation",
              "src": "1530:524:76",
              "text": " @dev Cyclic parameters in the constructor are possible because an SLAYBase (initial base implementation)\n is used for the initial deployment, after which all contracts are upgraded to their respective\n implementations with immutable proxy addresses.\n This contract extends SLAYBase, which provides the initial owner and pause functionality.\n SLAYBase.initialize() is called to set the initial owner of the contract.\n @custom:oz-upgrades-unsafe-allow constructor"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": { "id": 24662, "nodeType": "ParameterList", "parameters": [], "src": "2070:2:76" },
            "returnParameters": { "id": 24663, "nodeType": "ParameterList", "parameters": [], "src": "2073:0:76" },
            "scope": 25104,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24686,
            "nodeType": "FunctionDefinition",
            "src": "2153:171:76",
            "nodes": [],
            "body": {
              "id": 24685,
              "nodeType": "Block",
              "src": "2265:59:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 24679,
                        "name": "_distributionRoots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24644,
                        "src": "2282:18:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_DistributionRoots_$28216_storage_$_$",
                          "typeString": "mapping(address => mapping(address => struct ISLAYRewardsV2.DistributionRoots storage ref))"
                        }
                      },
                      "id": 24681,
                      "indexExpression": {
                        "id": 24680,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24671,
                        "src": "2301:8:76",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2282:28:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DistributionRoots_$28216_storage_$",
                        "typeString": "mapping(address => struct ISLAYRewardsV2.DistributionRoots storage ref)"
                      }
                    },
                    "id": 24683,
                    "indexExpression": {
                      "id": 24682,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24673,
                      "src": "2311:5:76",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2282:35:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DistributionRoots_$28216_storage",
                      "typeString": "struct ISLAYRewardsV2.DistributionRoots storage ref"
                    }
                  },
                  "functionReturnParameters": 24678,
                  "id": 24684,
                  "nodeType": "Return",
                  "src": "2275:42:76"
                }
              ]
            },
            "baseFunctions": [28227],
            "documentation": {
              "id": 24669,
              "nodeType": "StructuredDocumentation",
              "src": "2118:30:76",
              "text": "@inheritdoc ISLAYRewardsV2"
            },
            "functionSelector": "5e04f87e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDistributionRoots",
            "nameLocation": "2162:20:76",
            "parameters": {
              "id": 24674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24671,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "2191:8:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 24686,
                  "src": "2183:16:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 24670,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2183:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24673,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2209:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 24686,
                  "src": "2201:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 24672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2201:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2182:33:76"
            },
            "returnParameters": {
              "id": 24678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24677,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24686,
                  "src": "2239:24:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DistributionRoots_$28216_memory_ptr",
                    "typeString": "struct ISLAYRewardsV2.DistributionRoots"
                  },
                  "typeName": {
                    "id": 24676,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24675,
                      "name": "DistributionRoots",
                      "nameLocations": ["2239:17:76"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28216,
                      "src": "2239:17:76"
                    },
                    "referencedDeclaration": 28216,
                    "src": "2239:17:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DistributionRoots_$28216_storage_ptr",
                      "typeString": "struct ISLAYRewardsV2.DistributionRoots"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2238:26:76"
            },
            "scope": 25104,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24703,
            "nodeType": "FunctionDefinition",
            "src": "2365:135:76",
            "nodes": [],
            "body": {
              "id": 24702,
              "nodeType": "Block",
              "src": "2450:50:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 24696,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24651,
                        "src": "2467:9:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 24698,
                      "indexExpression": {
                        "id": 24697,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24689,
                        "src": "2477:8:76",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2467:19:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 24700,
                    "indexExpression": {
                      "id": 24699,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24691,
                      "src": "2487:5:76",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2467:26:76",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "functionReturnParameters": 24695,
                  "id": 24701,
                  "nodeType": "Return",
                  "src": "2460:33:76"
                }
              ]
            },
            "baseFunctions": [28237],
            "documentation": {
              "id": 24687,
              "nodeType": "StructuredDocumentation",
              "src": "2330:30:76",
              "text": "@inheritdoc ISLAYRewardsV2"
            },
            "functionSelector": "d4fac45d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "2374:10:76",
            "parameters": {
              "id": 24692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24689,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "2393:8:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 24703,
                  "src": "2385:16:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 24688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2385:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24691,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2411:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 24703,
                  "src": "2403:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 24690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2384:33:76"
            },
            "returnParameters": {
              "id": 24695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24694,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24703,
                  "src": "2441:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 24693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2441:7:76",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2440:9:76"
            },
            "scope": 25104,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24724,
            "nodeType": "FunctionDefinition",
            "src": "2541:172:76",
            "nodes": [],
            "body": {
              "id": 24723,
              "nodeType": "Block",
              "src": "2649:64:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 24715,
                          "name": "_claimedRewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24660,
                          "src": "2666:15:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
                            "typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
                          }
                        },
                        "id": 24717,
                        "indexExpression": {
                          "id": 24716,
                          "name": "provider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24706,
                          "src": "2682:8:76",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2666:25:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 24719,
                      "indexExpression": {
                        "id": 24718,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24708,
                        "src": "2692:5:76",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2666:32:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 24721,
                    "indexExpression": {
                      "id": 24720,
                      "name": "earner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24710,
                      "src": "2699:6:76",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2666:40:76",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "functionReturnParameters": 24714,
                  "id": 24722,
                  "nodeType": "Return",
                  "src": "2659:47:76"
                }
              ]
            },
            "baseFunctions": [28249],
            "documentation": {
              "id": 24704,
              "nodeType": "StructuredDocumentation",
              "src": "2506:30:76",
              "text": "@inheritdoc ISLAYRewardsV2"
            },
            "functionSelector": "7733369c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimedRewards",
            "nameLocation": "2550:17:76",
            "parameters": {
              "id": 24711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24706,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "2576:8:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 24724,
                  "src": "2568:16:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 24705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2568:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24708,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2594:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 24724,
                  "src": "2586:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 24707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2586:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24710,
                  "mutability": "mutable",
                  "name": "earner",
                  "nameLocation": "2609:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 24724,
                  "src": "2601:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 24709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2601:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2567:49:76"
            },
            "returnParameters": {
              "id": 24714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24713,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24724,
                  "src": "2640:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 24712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2640:7:76",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2639:9:76"
            },
            "scope": 25104,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24819,
            "nodeType": "FunctionDefinition",
            "src": "2754:1357:76",
            "nodes": [],
            "body": {
              "id": 24818,
              "nodeType": "Block",
              "src": "2864:1247:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                        "id": 24743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24738,
                          "name": "merkleRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24731,
                          "src": "2882:10:76",
                          "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 24741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2904:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }],
                            "id": 24740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2896:7:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 24739,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2896:7:76",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2896:10:76",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                        },
                        "src": "2882:24:76",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "4d65726b6c6520726f6f742063616e6e6f7420626520656d707479",
                        "id": 24744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2908:29:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dfdb2949e2b78b465c5449488c7bce590eeb4c8f4f2a43304f9bfbddc23a1aeb",
                          "typeString": "literal_string \"Merkle root cannot be empty\""
                        },
                        "value": "Merkle root cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_dfdb2949e2b78b465c5449488c7bce590eeb4c8f4f2a43304f9bfbddc23a1aeb",
                          "typeString": "literal_string \"Merkle root cannot be empty\""
                        }
                      ],
                      "id": 24737,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2874:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2874:64:76",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 24746,
                  "nodeType": "ExpressionStatement",
                  "src": "2874:64:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                        "id": 24753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24748,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24727,
                          "src": "2956:5:76",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 24751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2973:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }],
                            "id": 24750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2965:7:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24749,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2965:7:76",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2965:10:76",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "src": "2956:19:76",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "546f6b656e20616464726573732063616e6e6f74206265207a65726f",
                        "id": 24754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2977:30:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
                          "typeString": "literal_string \"Token address cannot be zero\""
                        },
                        "value": "Token address cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
                          "typeString": "literal_string \"Token address cannot be zero\""
                        }
                      ],
                      "id": 24747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2948:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2948:60:76",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 24756,
                  "nodeType": "ExpressionStatement",
                  "src": "2948:60:76"
                },
                {
                  "assignments": [24758],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24758,
                      "mutability": "mutable",
                      "name": "provider",
                      "nameLocation": "3027:8:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 24818,
                      "src": "3019:16:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                      "typeName": {
                        "id": 24757,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3019:7:76",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24761,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 24759,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3547,
                      "src": "3038:10:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 24760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3038:12:76",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3019:31:76"
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 24764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24762,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24729,
                      "src": "3159:6:76",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 24763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3168:1:76",
                      "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                      "value": "0"
                    },
                    "src": "3159:10:76",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 24788,
                  "nodeType": "IfStatement",
                  "src": "3155:680:76",
                  "trueBody": {
                    "id": 24787,
                    "nodeType": "Block",
                    "src": "3171:664:76",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 24769,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24727,
                                  "src": "3553:5:76",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                                "id": 24768,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6631,
                                "src": "3546:6:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$6631_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 24770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3546:13:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$6631",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 24771,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24758,
                              "src": "3561:8:76",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 24774,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3579:4:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SLAYRewardsV2_$25104",
                                    "typeString": "contract SLAYRewardsV2"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SLAYRewardsV2_$25104",
                                    "typeString": "contract SLAYRewardsV2"
                                  }
                                ],
                                "id": 24773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3571:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 24772,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3571:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 24775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3571:13:76",
                              "tryCall": false,
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "id": 24776,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24729,
                              "src": "3586:6:76",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_contract$_IERC20_$6631", "typeString": "contract IERC20" },
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            ],
                            "expression": {
                              "id": 24765,
                              "name": "SafeERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7851,
                              "src": "3519:9:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeERC20_$7851_$",
                                "typeString": "type(library SafeERC20)"
                              }
                            },
                            "id": 24767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3529:16:76",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7459,
                            "src": "3519:26:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$6631_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 24777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3519:74:76",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 24778,
                        "nodeType": "ExpressionStatement",
                        "src": "3519:74:76"
                      },
                      {
                        "expression": {
                          "id": 24785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 24779,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24651,
                                "src": "3788:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 24782,
                              "indexExpression": {
                                "id": 24780,
                                "name": "provider",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24758,
                                "src": "3798:8:76",
                                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3788:19:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 24783,
                            "indexExpression": {
                              "id": 24781,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24727,
                              "src": "3808:5:76",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3788:26:76",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 24784,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24729,
                            "src": "3818:6:76",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "src": "3788:36:76",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "id": 24786,
                        "nodeType": "ExpressionStatement",
                        "src": "3788:36:76"
                      }
                    ]
                  }
                },
                {
                  "assignments": [24791],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24791,
                      "mutability": "mutable",
                      "name": "roots",
                      "nameLocation": "3906:5:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 24818,
                      "src": "3880:31:76",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DistributionRoots_$28216_storage_ptr",
                        "typeString": "struct ISLAYRewardsV2.DistributionRoots"
                      },
                      "typeName": {
                        "id": 24790,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24789,
                          "name": "DistributionRoots",
                          "nameLocations": ["3880:17:76"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28216,
                          "src": "3880:17:76"
                        },
                        "referencedDeclaration": 28216,
                        "src": "3880:17:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DistributionRoots_$28216_storage_ptr",
                          "typeString": "struct ISLAYRewardsV2.DistributionRoots"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24797,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 24792,
                        "name": "_distributionRoots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24644,
                        "src": "3914:18:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_DistributionRoots_$28216_storage_$_$",
                          "typeString": "mapping(address => mapping(address => struct ISLAYRewardsV2.DistributionRoots storage ref))"
                        }
                      },
                      "id": 24794,
                      "indexExpression": {
                        "id": 24793,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24758,
                        "src": "3933:8:76",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3914:28:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DistributionRoots_$28216_storage_$",
                        "typeString": "mapping(address => struct ISLAYRewardsV2.DistributionRoots storage ref)"
                      }
                    },
                    "id": 24796,
                    "indexExpression": {
                      "id": 24795,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24727,
                      "src": "3943:5:76",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3914:35:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DistributionRoots_$28216_storage",
                      "typeString": "struct ISLAYRewardsV2.DistributionRoots storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3880:69:76"
                },
                {
                  "expression": {
                    "id": 24803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 24798,
                        "name": "roots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24791,
                        "src": "3959:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DistributionRoots_$28216_storage_ptr",
                          "typeString": "struct ISLAYRewardsV2.DistributionRoots storage pointer"
                        }
                      },
                      "id": 24800,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3965:8:76",
                      "memberName": "prevRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28212,
                      "src": "3959:14:76",
                      "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 24801,
                        "name": "roots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24791,
                        "src": "3976:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DistributionRoots_$28216_storage_ptr",
                          "typeString": "struct ISLAYRewardsV2.DistributionRoots storage pointer"
                        }
                      },
                      "id": 24802,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3982:11:76",
                      "memberName": "currentRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28215,
                      "src": "3976:17:76",
                      "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                    },
                    "src": "3959:34:76",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "id": 24804,
                  "nodeType": "ExpressionStatement",
                  "src": "3959:34:76"
                },
                {
                  "expression": {
                    "id": 24809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 24805,
                        "name": "roots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24791,
                        "src": "4003:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DistributionRoots_$28216_storage_ptr",
                          "typeString": "struct ISLAYRewardsV2.DistributionRoots storage pointer"
                        }
                      },
                      "id": 24807,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4009:11:76",
                      "memberName": "currentRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28215,
                      "src": "4003:17:76",
                      "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24808,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24731,
                      "src": "4023:10:76",
                      "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                    },
                    "src": "4003:30:76",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "id": 24810,
                  "nodeType": "ExpressionStatement",
                  "src": "4003:30:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 24812,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24758,
                        "src": "4068:8:76",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 24813,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24727,
                        "src": "4078:5:76",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 24814,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24729,
                        "src": "4085:6:76",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 24815,
                        "name": "merkleRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24731,
                        "src": "4093:10:76",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      ],
                      "id": 24811,
                      "name": "RewardsDistributed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28166,
                      "src": "4049:18:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes32)"
                      }
                    },
                    "id": 24816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4049:55:76",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 24817,
                  "nodeType": "EmitStatement",
                  "src": "4044:60:76"
                }
              ]
            },
            "baseFunctions": [28259],
            "documentation": {
              "id": 24725,
              "nodeType": "StructuredDocumentation",
              "src": "2719:30:76",
              "text": "@inheritdoc ISLAYRewardsV2"
            },
            "functionSelector": "40b3a4bf",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24735,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24734,
                  "name": "whenNotPaused",
                  "nameLocations": ["2850:13:76"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3726,
                  "src": "2850:13:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "2850:13:76"
              }
            ],
            "name": "distributeRewards",
            "nameLocation": "2763:17:76",
            "overrides": { "id": 24733, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2841:8:76" },
            "parameters": {
              "id": 24732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24727,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2789:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 24819,
                  "src": "2781:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 24726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2781:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24729,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2804:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 24819,
                  "src": "2796:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 24728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2796:7:76",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24731,
                  "mutability": "mutable",
                  "name": "merkleRoot",
                  "nameLocation": "2820:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 24819,
                  "src": "2812:18:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 24730,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2812:7:76",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2780:51:76"
            },
            "returnParameters": { "id": 24736, "nodeType": "ParameterList", "parameters": [], "src": "2864:0:76" },
            "scope": 25104,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25029,
            "nodeType": "FunctionDefinition",
            "src": "4152:2595:76",
            "nodes": [],
            "body": {
              "id": 25028,
              "nodeType": "Block",
              "src": "4244:2503:76",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                        "id": 24836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 24830,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24823,
                            "src": "4262:6:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                              "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                            }
                          },
                          "id": 24831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4269:5:76",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28188,
                          "src": "4262:12:76",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 24834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4286:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }],
                            "id": 24833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4278:7:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 24832,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4278:7:76",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4278:10:76",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "src": "4262:26:76",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "546f6b656e20616464726573732063616e6e6f74206265207a65726f",
                        "id": 24837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4290:30:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
                          "typeString": "literal_string \"Token address cannot be zero\""
                        },
                        "value": "Token address cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_b97bd570dfa893d59e1d678b816146ae67b2a118c113568426b5f20389e7d682",
                          "typeString": "literal_string \"Token address cannot be zero\""
                        }
                      ],
                      "id": 24829,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4254:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4254:67:76",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 24839,
                  "nodeType": "ExpressionStatement",
                  "src": "4254:67:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "id": 24844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 24841,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24823,
                            "src": "4339:6:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                              "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                            }
                          },
                          "id": 24842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4346:6:76",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28191,
                          "src": "4339:13:76",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 24843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4355:1:76",
                          "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                          "value": "0"
                        },
                        "src": "4339:17:76",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                        "id": 24845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4358:34:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                          "typeString": "literal_string \"Amount must be greater than zero\""
                        },
                        "value": "Amount must be greater than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                          "typeString": "literal_string \"Amount must be greater than zero\""
                        }
                      ],
                      "id": 24840,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4331:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4331:62:76",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 24847,
                  "nodeType": "ExpressionStatement",
                  "src": "4331:62:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                        "id": 24855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 24849,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24823,
                            "src": "4411:6:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                              "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                            }
                          },
                          "id": 24850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4418:10:76",
                          "memberName": "merkleRoot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28197,
                          "src": "4411:17:76",
                          "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 24853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4440:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }],
                            "id": 24852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4432:7:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 24851,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4432:7:76",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 24854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4432:10:76",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                        },
                        "src": "4411:31:76",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "4d65726b6c6520726f6f742063616e6e6f7420626520656d707479",
                        "id": 24856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4444:29:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dfdb2949e2b78b465c5449488c7bce590eeb4c8f4f2a43304f9bfbddc23a1aeb",
                          "typeString": "literal_string \"Merkle root cannot be empty\""
                        },
                        "value": "Merkle root cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_dfdb2949e2b78b465c5449488c7bce590eeb4c8f4f2a43304f9bfbddc23a1aeb",
                          "typeString": "literal_string \"Merkle root cannot be empty\""
                        }
                      ],
                      "id": 24848,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "4403:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4403:71:76",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 24858,
                  "nodeType": "ExpressionStatement",
                  "src": "4403:71:76"
                },
                {
                  "assignments": [24861],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24861,
                      "mutability": "mutable",
                      "name": "roots",
                      "nameLocation": "4604:5:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 25028,
                      "src": "4578:31:76",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DistributionRoots_$28216_storage_ptr",
                        "typeString": "struct ISLAYRewardsV2.DistributionRoots"
                      },
                      "typeName": {
                        "id": 24860,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24859,
                          "name": "DistributionRoots",
                          "nameLocations": ["4578:17:76"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 28216,
                          "src": "4578:17:76"
                        },
                        "referencedDeclaration": 28216,
                        "src": "4578:17:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DistributionRoots_$28216_storage_ptr",
                          "typeString": "struct ISLAYRewardsV2.DistributionRoots"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24869,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 24862,
                        "name": "_distributionRoots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24644,
                        "src": "4612:18:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_DistributionRoots_$28216_storage_$_$",
                          "typeString": "mapping(address => mapping(address => struct ISLAYRewardsV2.DistributionRoots storage ref))"
                        }
                      },
                      "id": 24865,
                      "indexExpression": {
                        "expression": {
                          "id": 24863,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24823,
                          "src": "4631:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                            "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                          }
                        },
                        "id": 24864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4638:8:76",
                        "memberName": "provider",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28185,
                        "src": "4631:15:76",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4612:35:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DistributionRoots_$28216_storage_$",
                        "typeString": "mapping(address => struct ISLAYRewardsV2.DistributionRoots storage ref)"
                      }
                    },
                    "id": 24868,
                    "indexExpression": {
                      "expression": {
                        "id": 24866,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24823,
                        "src": "4648:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                          "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                        }
                      },
                      "id": 24867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4655:5:76",
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28188,
                      "src": "4648:12:76",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4612:49:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DistributionRoots_$28216_storage",
                      "typeString": "struct ISLAYRewardsV2.DistributionRoots storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4578:83:76"
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" },
                    "id": 24880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                      "id": 24874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 24870,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24823,
                          "src": "4675:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                            "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                          }
                        },
                        "id": 24871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4682:10:76",
                        "memberName": "merkleRoot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28197,
                        "src": "4675:17:76",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 24872,
                          "name": "roots",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24861,
                          "src": "4696:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DistributionRoots_$28216_storage_ptr",
                            "typeString": "struct ISLAYRewardsV2.DistributionRoots storage pointer"
                          }
                        },
                        "id": 24873,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4702:11:76",
                        "memberName": "currentRoot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28215,
                        "src": "4696:17:76",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      },
                      "src": "4675:38:76",
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                      "id": 24879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 24875,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24823,
                          "src": "4717:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                            "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                          }
                        },
                        "id": 24876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4724:10:76",
                        "memberName": "merkleRoot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28197,
                        "src": "4717:17:76",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 24877,
                          "name": "roots",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24861,
                          "src": "4738:5:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DistributionRoots_$28216_storage_ptr",
                            "typeString": "struct ISLAYRewardsV2.DistributionRoots storage pointer"
                          }
                        },
                        "id": 24878,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4744:8:76",
                        "memberName": "prevRoot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28212,
                        "src": "4738:14:76",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      },
                      "src": "4717:35:76",
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    },
                    "src": "4675:77:76",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 24891,
                  "nodeType": "IfStatement",
                  "src": "4671:182:76",
                  "trueBody": {
                    "id": 24890,
                    "nodeType": "Block",
                    "src": "4754:99:76",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 24882,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24823,
                                "src": "4793:6:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                                  "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                                }
                              },
                              "id": 24883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4800:8:76",
                              "memberName": "provider",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28185,
                              "src": "4793:15:76",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "expression": {
                                "id": 24884,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24823,
                                "src": "4810:6:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                                  "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                                }
                              },
                              "id": 24885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4817:5:76",
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28188,
                              "src": "4810:12:76",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "expression": {
                                "id": 24886,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24823,
                                "src": "4824:6:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                                  "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                                }
                              },
                              "id": 24887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4831:10:76",
                              "memberName": "merkleRoot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28197,
                              "src": "4824:17:76",
                              "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                            ],
                            "id": 24881,
                            "name": "InvalidMerkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28134,
                            "src": "4775:17:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,address,bytes32) pure"
                            }
                          },
                          "id": 24888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4775:67:76",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 24889,
                        "nodeType": "RevertStatement",
                        "src": "4768:74:76"
                      }
                    ]
                  }
                },
                {
                  "assignments": [24893],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24893,
                      "mutability": "mutable",
                      "name": "earner",
                      "nameLocation": "4871:6:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 25028,
                      "src": "4863:14:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                      "typeName": {
                        "id": 24892,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4863:7:76",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24896,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 24894,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3547,
                      "src": "4880:10:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 24895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4880:12:76",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4863:29:76"
                },
                {
                  "assignments": [24898],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24898,
                      "mutability": "mutable",
                      "name": "claimedAmount",
                      "nameLocation": "4911:13:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 25028,
                      "src": "4903:21:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 24897,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4903:7:76",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24908,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 24899,
                          "name": "_claimedRewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24660,
                          "src": "4927:15:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
                            "typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
                          }
                        },
                        "id": 24902,
                        "indexExpression": {
                          "expression": {
                            "id": 24900,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24823,
                            "src": "4943:6:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                              "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                            }
                          },
                          "id": 24901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4950:8:76",
                          "memberName": "provider",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28185,
                          "src": "4943:15:76",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4927:32:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 24905,
                      "indexExpression": {
                        "expression": {
                          "id": 24903,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24823,
                          "src": "4960:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                            "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                          }
                        },
                        "id": 24904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4967:5:76",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28188,
                        "src": "4960:12:76",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4927:46:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 24907,
                    "indexExpression": {
                      "id": 24906,
                      "name": "earner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24893,
                      "src": "4974:6:76",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4927:54:76",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4903:78:76"
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 24912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 24909,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24823,
                        "src": "5053:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                          "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                        }
                      },
                      "id": 24910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5060:6:76",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28191,
                      "src": "5053:13:76",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 24911,
                      "name": "claimedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24898,
                      "src": "5070:13:76",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "5053:30:76",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 24924,
                  "nodeType": "IfStatement",
                  "src": "5049:142:76",
                  "trueBody": {
                    "id": 24923,
                    "nodeType": "Block",
                    "src": "5085:106:76",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 24914,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24823,
                                "src": "5127:6:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                                  "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                                }
                              },
                              "id": 24915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5134:8:76",
                              "memberName": "provider",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28185,
                              "src": "5127:15:76",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "expression": {
                                "id": 24916,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24823,
                                "src": "5144:6:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                                  "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                                }
                              },
                              "id": 24917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5151:5:76",
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28188,
                              "src": "5144:12:76",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "id": 24918,
                              "name": "earner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24893,
                              "src": "5158:6:76",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "expression": {
                                "id": 24919,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24823,
                                "src": "5166:6:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                                  "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                                }
                              },
                              "id": 24920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5173:6:76",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28191,
                              "src": "5166:13:76",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            ],
                            "id": 24913,
                            "name": "AmountAlreadyClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28145,
                            "src": "5106:20:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256) pure"
                            }
                          },
                          "id": 24921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5106:74:76",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 24922,
                        "nodeType": "RevertStatement",
                        "src": "5099:81:76"
                      }
                    ]
                  }
                },
                {
                  "assignments": [24926],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24926,
                      "mutability": "mutable",
                      "name": "amountToClaim",
                      "nameLocation": "5209:13:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 25028,
                      "src": "5201:21:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 24925,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5201:7:76",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24927,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5201:21:76"
                },
                {
                  "id": 24935,
                  "nodeType": "UncheckedBlock",
                  "src": "5337:80:76",
                  "statements": [
                    {
                      "expression": {
                        "id": 24933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 24928,
                          "name": "amountToClaim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24926,
                          "src": "5361:13:76",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                          "id": 24932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 24929,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24823,
                              "src": "5377:6:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                                "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                              }
                            },
                            "id": 24930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5384:6:76",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28191,
                            "src": "5377:13:76",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 24931,
                            "name": "claimedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24898,
                            "src": "5393:13:76",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "src": "5377:29:76",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "src": "5361:45:76",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "id": 24934,
                      "nodeType": "ExpressionStatement",
                      "src": "5361:45:76"
                    }
                  ]
                },
                {
                  "assignments": [24937],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24937,
                      "mutability": "mutable",
                      "name": "providerBalance",
                      "nameLocation": "5506:15:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 25028,
                      "src": "5498:23:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 24936,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5498:7:76",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24945,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 24938,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24651,
                        "src": "5524:9:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 24941,
                      "indexExpression": {
                        "expression": {
                          "id": 24939,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24823,
                          "src": "5534:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                            "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                          }
                        },
                        "id": 24940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5541:8:76",
                        "memberName": "provider",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28185,
                        "src": "5534:15:76",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5524:26:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 24944,
                    "indexExpression": {
                      "expression": {
                        "id": 24942,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24823,
                        "src": "5551:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                          "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                        }
                      },
                      "id": 24943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5558:5:76",
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28188,
                      "src": "5551:12:76",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5524:40:76",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5498:66:76"
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 24948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24946,
                      "name": "providerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24937,
                      "src": "5578:15:76",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 24947,
                      "name": "amountToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24926,
                      "src": "5596:13:76",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "5578:31:76",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 24957,
                  "nodeType": "IfStatement",
                  "src": "5574:138:76",
                  "trueBody": {
                    "id": 24956,
                    "nodeType": "Block",
                    "src": "5611:101:76",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 24950,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24823,
                                "src": "5663:6:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                                  "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                                }
                              },
                              "id": 24951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5670:8:76",
                              "memberName": "provider",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28185,
                              "src": "5663:15:76",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "expression": {
                                "id": 24952,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24823,
                                "src": "5687:6:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                                  "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                                }
                              },
                              "id": 24953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5694:5:76",
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28188,
                              "src": "5687:12:76",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" }
                            ],
                            "id": 24949,
                            "name": "InsufficientBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28155,
                            "src": "5632:19:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) pure"
                            }
                          },
                          "id": 24954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": ["5653:8:76", "5680:5:76"],
                          "names": ["provider", "token"],
                          "nodeType": "FunctionCall",
                          "src": "5632:69:76",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 24955,
                        "nodeType": "RevertStatement",
                        "src": "5625:76:76"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 24971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5774:143:76",
                    "subExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 24959,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24823,
                            "src": "5811:6:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                              "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                            }
                          },
                          "id": 24960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5818:5:76",
                          "memberName": "proof",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28201,
                          "src": "5811:12:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                            "typeString": "bytes32[] calldata"
                          }
                        },
                        {
                          "expression": {
                            "id": 24961,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24823,
                            "src": "5825:6:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                              "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                            }
                          },
                          "id": 24962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5832:10:76",
                          "memberName": "merkleRoot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28197,
                          "src": "5825:17:76",
                          "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                        },
                        {
                          "expression": {
                            "id": 24963,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24823,
                            "src": "5844:6:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                              "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                            }
                          },
                          "id": 24964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5851:9:76",
                          "memberName": "leafIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28204,
                          "src": "5844:16:76",
                          "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" }
                        },
                        {
                          "expression": {
                            "id": 24965,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24823,
                            "src": "5862:6:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                              "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                            }
                          },
                          "id": 24966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5869:11:76",
                          "memberName": "totalLeaves",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28207,
                          "src": "5862:18:76",
                          "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" }
                        },
                        {
                          "id": 24967,
                          "name": "earner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24893,
                          "src": "5882:6:76",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "expression": {
                            "id": 24968,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24823,
                            "src": "5890:6:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                              "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                            }
                          },
                          "id": 24969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5897:6:76",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28191,
                          "src": "5890:13:76",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                            "typeString": "bytes32[] calldata"
                          },
                          { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                          { "typeIdentifier": "t_uint32", "typeString": "uint32" },
                          { "typeIdentifier": "t_uint32", "typeString": "uint32" },
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        ],
                        "id": 24958,
                        "name": "_verifyMerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25065,
                        "src": "5775:18:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (bytes32[] memory,bytes32,uint256,uint256,address,uint256) pure returns (bool)"
                        }
                      },
                      "id": 24970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5775:142:76",
                      "tryCall": false,
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    },
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 24976,
                  "nodeType": "IfStatement",
                  "src": "5757:223:76",
                  "trueBody": {
                    "id": 24975,
                    "nodeType": "Block",
                    "src": "5928:52:76",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24972,
                            "name": "InvalidMerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28148,
                            "src": "5949:18:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5949:20:76",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 24974,
                        "nodeType": "RevertStatement",
                        "src": "5942:27:76"
                      }
                    ]
                  }
                },
                {
                  "id": 24989,
                  "nodeType": "UncheckedBlock",
                  "src": "6052:157:76",
                  "statements": [
                    {
                      "expression": {
                        "id": 24987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 24977,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24651,
                              "src": "6124:9:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 24982,
                            "indexExpression": {
                              "expression": {
                                "id": 24978,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24823,
                                "src": "6134:6:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                                  "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                                }
                              },
                              "id": 24979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6141:8:76",
                              "memberName": "provider",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28185,
                              "src": "6134:15:76",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6124:26:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 24983,
                          "indexExpression": {
                            "expression": {
                              "id": 24980,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24823,
                              "src": "6151:6:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                                "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                              }
                            },
                            "id": 24981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6158:5:76",
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28188,
                            "src": "6151:12:76",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6124:40:76",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                          "id": 24986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 24984,
                            "name": "providerBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24937,
                            "src": "6167:15:76",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 24985,
                            "name": "amountToClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24926,
                            "src": "6185:13:76",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "src": "6167:31:76",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "src": "6124:74:76",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "id": 24988,
                      "nodeType": "ExpressionStatement",
                      "src": "6124:74:76"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 25001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 24990,
                            "name": "_claimedRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24660,
                            "src": "6313:15:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
                              "typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
                            }
                          },
                          "id": 24996,
                          "indexExpression": {
                            "expression": {
                              "id": 24991,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24823,
                              "src": "6329:6:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                                "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                              }
                            },
                            "id": 24992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6336:8:76",
                            "memberName": "provider",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28185,
                            "src": "6329:15:76",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6313:32:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 24997,
                        "indexExpression": {
                          "expression": {
                            "id": 24993,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24823,
                            "src": "6346:6:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                              "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                            }
                          },
                          "id": 24994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6353:5:76",
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28188,
                          "src": "6346:12:76",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6313:46:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 24998,
                      "indexExpression": {
                        "id": 24995,
                        "name": "earner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24893,
                        "src": "6360:6:76",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6313:54:76",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 24999,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24823,
                        "src": "6370:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                          "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                        }
                      },
                      "id": 25000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6377:6:76",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28191,
                      "src": "6370:13:76",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "6313:70:76",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "id": 25002,
                  "nodeType": "ExpressionStatement",
                  "src": "6313:70:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 25007,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24823,
                              "src": "6572:6:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                                "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                              }
                            },
                            "id": 25008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6579:5:76",
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28188,
                            "src": "6572:12:76",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "id": 25006,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6631,
                          "src": "6565:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$6631_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 25009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6565:20:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6631",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 25010,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24823,
                          "src": "6587:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                            "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                          }
                        },
                        "id": 25011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6594:9:76",
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28194,
                        "src": "6587:16:76",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 25012,
                        "name": "amountToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24926,
                        "src": "6605:13:76",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_contract$_IERC20_$6631", "typeString": "contract IERC20" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 25003,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7851,
                        "src": "6542:9:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$7851_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 25005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6552:12:76",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7432,
                      "src": "6542:22:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$6631_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 25013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6542:77:76",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 25014,
                  "nodeType": "ExpressionStatement",
                  "src": "6542:77:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25016,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24823,
                          "src": "6650:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                            "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                          }
                        },
                        "id": 25017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6657:8:76",
                        "memberName": "provider",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28185,
                        "src": "6650:15:76",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "expression": {
                          "id": 25018,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24823,
                          "src": "6667:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                            "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                          }
                        },
                        "id": 25019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6674:5:76",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28188,
                        "src": "6667:12:76",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 25020,
                        "name": "earner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24893,
                        "src": "6681:6:76",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "expression": {
                          "id": 25021,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24823,
                          "src": "6689:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                            "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                          }
                        },
                        "id": 25022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6696:9:76",
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28194,
                        "src": "6689:16:76",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 25023,
                        "name": "amountToClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24926,
                        "src": "6707:13:76",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "expression": {
                          "id": 25024,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24823,
                          "src": "6722:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                            "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof calldata"
                          }
                        },
                        "id": 25025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6729:10:76",
                        "memberName": "merkleRoot",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28197,
                        "src": "6722:17:76",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      ],
                      "id": 25015,
                      "name": "RewardsClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28181,
                      "src": "6635:14:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes32)"
                      }
                    },
                    "id": 25026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6635:105:76",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 25027,
                  "nodeType": "EmitStatement",
                  "src": "6630:110:76"
                }
              ]
            },
            "baseFunctions": [28266],
            "documentation": {
              "id": 24820,
              "nodeType": "StructuredDocumentation",
              "src": "4117:30:76",
              "text": "@inheritdoc ISLAYRewardsV2"
            },
            "functionSelector": "6fdaf166",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24827,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24826,
                  "name": "whenNotPaused",
                  "nameLocations": ["4230:13:76"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3726,
                  "src": "4230:13:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "4230:13:76"
              }
            ],
            "name": "claimRewards",
            "nameLocation": "4161:12:76",
            "overrides": { "id": 24825, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4221:8:76" },
            "parameters": {
              "id": 24824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24823,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "4204:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 25029,
                  "src": "4174:36:76",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                    "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof"
                  },
                  "typeName": {
                    "id": 24822,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24821,
                      "name": "ClaimableRewardProof",
                      "nameLocations": ["4174:20:76"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28208,
                      "src": "4174:20:76"
                    },
                    "referencedDeclaration": 28208,
                    "src": "4174:20:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_storage_ptr",
                      "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4173:38:76"
            },
            "returnParameters": { "id": 24828, "nodeType": "ParameterList", "parameters": [], "src": "4244:0:76" },
            "scope": 25104,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 25065,
            "nodeType": "FunctionDefinition",
            "src": "7232:348:76",
            "nodes": [],
            "body": {
              "id": 25064,
              "nodeType": "Block",
              "src": "7449:131:76",
              "nodes": [],
              "statements": [
                {
                  "assignments": [25049],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25049,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "7467:4:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 25064,
                      "src": "7459:12:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                      "typeName": {
                        "id": 25048,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7459:7:76",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25054,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25051,
                        "name": "earner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25041,
                        "src": "7484:6:76",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 25052,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25043,
                        "src": "7492:6:76",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "id": 25050,
                      "name": "_leafHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25103,
                      "src": "7474:9:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (address,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 25053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7474:25:76",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7459:40:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25057,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25033,
                        "src": "7535:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 25058,
                        "name": "root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25035,
                        "src": "7542:4:76",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      },
                      {
                        "id": 25059,
                        "name": "leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25049,
                        "src": "7548:4:76",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      },
                      {
                        "id": 25060,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25037,
                        "src": "7554:5:76",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 25061,
                        "name": "totalLeaves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25039,
                        "src": "7561:11:76",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr", "typeString": "bytes32[] memory" },
                        { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                        { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 25055,
                        "name": "MerkleProof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22832,
                        "src": "7516:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MerkleProof_$22832_$",
                          "typeString": "type(library MerkleProof)"
                        }
                      },
                      "id": 25056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7528:6:76",
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22768,
                      "src": "7516:18:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (bytes32[] memory,bytes32,bytes32,uint256,uint256) pure returns (bool)"
                      }
                    },
                    "id": 25062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7516:57:76",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "functionReturnParameters": 25047,
                  "id": 25063,
                  "nodeType": "Return",
                  "src": "7509:64:76"
                }
              ]
            },
            "documentation": {
              "id": 25030,
              "nodeType": "StructuredDocumentation",
              "src": "6753:474:76",
              "text": " @dev Internal function to verify the Merkle proof.\n @param proof The Merkle proof to verify.\n @param root The Merkle root to verify against.\n @param index The index of the leaf in the Merkle tree.\n @param totalLeaves The total number of leaves in the Merkle tree.\n @param earner The address of the earner.\n @param amount The amount associated with the earner.\n @return True if the proof is valid, false otherwise."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyMerkleProof",
            "nameLocation": "7241:18:76",
            "parameters": {
              "id": 25044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25033,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "7286:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 25065,
                  "src": "7269:22:76",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 25031,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7269:7:76",
                      "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                    },
                    "id": 25032,
                    "nodeType": "ArrayTypeName",
                    "src": "7269:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25035,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "7309:4:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 25065,
                  "src": "7301:12:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 25034,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7301:7:76",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25037,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "7331:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 25065,
                  "src": "7323:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 25036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7323:7:76",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25039,
                  "mutability": "mutable",
                  "name": "totalLeaves",
                  "nameLocation": "7354:11:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 25065,
                  "src": "7346:19:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 25038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7346:7:76",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25041,
                  "mutability": "mutable",
                  "name": "earner",
                  "nameLocation": "7383:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 25065,
                  "src": "7375:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 25040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7375:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25043,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7407:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 25065,
                  "src": "7399:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 25042,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7399:7:76",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7259:160:76"
            },
            "returnParameters": {
              "id": 25047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25046,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25065,
                  "src": "7443:4:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                  "typeName": {
                    "id": 25045,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7443:4:76",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7442:6:76"
            },
            "scope": 25104,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 25103,
            "nodeType": "FunctionDefinition",
            "src": "8473:639:76",
            "nodes": [],
            "body": {
              "id": 25102,
              "nodeType": "Block",
              "src": "8556:556:76",
              "nodes": [],
              "statements": [
                {
                  "assignments": [25076],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25076,
                      "mutability": "mutable",
                      "name": "earnerStringBytes",
                      "nameLocation": "8580:17:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 25102,
                      "src": "8566:31:76",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                      "typeName": {
                        "id": 25075,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "8566:6:76",
                        "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25081,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25079,
                        "name": "earner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25068,
                        "src": "8628:6:76",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 25077,
                        "name": "Strings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11058,
                        "src": "8600:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Strings_$11058_$",
                          "typeString": "type(library Strings)"
                        }
                      },
                      "id": 25078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8608:19:76",
                      "memberName": "toChecksumHexString",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9984,
                      "src": "8600:27:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (address) pure returns (string memory)"
                      }
                    },
                    "id": 25080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8600:35:76",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8566:69:76"
                },
                {
                  "assignments": [25083],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25083,
                      "mutability": "mutable",
                      "name": "amountStringBytes",
                      "nameLocation": "8659:17:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 25102,
                      "src": "8645:31:76",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                      "typeName": {
                        "id": 25082,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "8645:6:76",
                        "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25088,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25086,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25070,
                        "src": "8696:6:76",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }],
                      "expression": {
                        "id": 25084,
                        "name": "Strings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11058,
                        "src": "8679:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Strings_$11058_$",
                          "typeString": "type(library Strings)"
                        }
                      },
                      "id": 25085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8687:8:76",
                      "memberName": "toString",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9770,
                      "src": "8679:16:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory)"
                      }
                    },
                    "id": 25087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8679:24:76",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8645:58:76"
                },
                {
                  "documentation": "We don't use inline assembly for keccak256 for this hashing function,\n due to the minimal gas savings and it doesn't fit into scratch space.\n It's better to maintain readability and security of the code.\n forge-lint: disable-start(asm-keccak256)",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 25095,
                                    "name": "earnerStringBytes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25076,
                                    "src": "9065:17:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "id": 25096,
                                    "name": "amountStringBytes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25083,
                                    "src": "9084:17:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" },
                                    { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                                  ],
                                  "expression": {
                                    "id": 25093,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "9048:3:76",
                                    "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" }
                                  },
                                  "id": 25094,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "9052:12:76",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "9048:16:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 25097,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9048:54:76",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                              ],
                              "id": 25092,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "9038:9:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 25098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9038:65:76",
                            "tryCall": false,
                            "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_bytes32", "typeString": "bytes32" }],
                          "expression": {
                            "id": 25090,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9021:3:76",
                            "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" }
                          },
                          "id": 25091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "9025:12:76",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "9021:16:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 25099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9021:83:76",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }],
                      "id": 25089,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9011:9:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 25100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9011:94:76",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "functionReturnParameters": 25074,
                  "id": 25101,
                  "nodeType": "Return",
                  "src": "9004:101:76"
                }
              ]
            },
            "documentation": {
              "id": 25066,
              "nodeType": "StructuredDocumentation",
              "src": "7586:882:76",
              "text": " @dev Internal function to hash the leaf node.\n The leaf is a hash of the earner's address and the amount.\n This is done to ensure that the leaf is unique for each (earner, amount) pair.\n The leaf is hashed using double keccak256.\n The earner and amount are converted to strings and then hashed to ensure that it conform with the tree generation code that is protocol-agnostic.\n This will also allow future expansion into multi control plane claiming, where the earner might not be an evm address.\n The earner is represented as a checksum hex string to ensure that the address is in a consistent format with the rewards distribution file submitted by the provider.\n @param earner The address of the earner.\n @param amount The amount associated with the earner.\n @return The hash of the leaf node."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_leafHash",
            "nameLocation": "8482:9:76",
            "parameters": {
              "id": 25071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25068,
                  "mutability": "mutable",
                  "name": "earner",
                  "nameLocation": "8500:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 25103,
                  "src": "8492:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 25067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8492:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25070,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8516:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 25103,
                  "src": "8508:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 25069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8508:7:76",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8491:32:76"
            },
            "returnParameters": {
              "id": 25074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25073,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25103,
                  "src": "8547:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 25072,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8547:7:76",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8546:9:76"
            },
            "scope": 25104,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24629,
              "name": "SLAYBase",
              "nameLocations": ["642:8:76"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23094,
              "src": "642:8:76"
            },
            "id": 24630,
            "nodeType": "InheritanceSpecifier",
            "src": "642:8:76"
          },
          {
            "baseName": {
              "id": 24631,
              "name": "ISLAYRewardsV2",
              "nameLocations": ["652:14:76"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28267,
              "src": "652:14:76"
            },
            "id": 24632,
            "nodeType": "InheritanceSpecifier",
            "src": "652:14:76"
          }
        ],
        "canonicalName": "SLAYRewardsV2",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 24628,
          "nodeType": "StructuredDocumentation",
          "src": "437:178:76",
          "text": " @title Rewards contract\n @dev This contract serves as a contract for distributing rewards and claiming them.\n @custom:oz-upgrades-from src/SLAYBase.sol:SLAYBase"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [25104, 28267, 23094, 3836, 1336, 1531, 3565, 1981, 5193, 1799],
        "name": "SLAYRewardsV2",
        "nameLocation": "625:13:76",
        "scope": 25105,
        "usedErrors": [
          1367, 1372, 1548, 1551, 1826, 1831, 3715, 3718, 5388, 5401, 7399, 7861, 9164, 9716, 22741, 28134, 28145,
          28148, 28155
        ],
        "usedEvents": [1231, 1378, 1556, 3707, 3712, 4971, 28166, 28181]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 76
}
