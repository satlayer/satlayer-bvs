{
  "abi": [
    {
      "type": "function",
      "name": "BASE",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract MockERC20" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "DEBT",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract MockERC20" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "IS_TEST",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "adapter",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract MockBorrowVenueAdapter" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "alice",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "baseImpl",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "cg",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract ConversionGateway" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "debtConn",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract ExternalVaultConnector" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "excludeArtifacts",
      "inputs": [],
      "outputs": [{ "name": "excludedArtifacts_", "type": "string[]", "internalType": "string[]" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "excludeContracts",
      "inputs": [],
      "outputs": [{ "name": "excludedContracts_", "type": "address[]", "internalType": "address[]" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "excludeSelectors",
      "inputs": [],
      "outputs": [
        {
          "name": "excludedSelectors_",
          "type": "tuple[]",
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "components": [
            { "name": "addr", "type": "address", "internalType": "address" },
            { "name": "selectors", "type": "bytes4[]", "internalType": "bytes4[]" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "excludeSenders",
      "inputs": [],
      "outputs": [{ "name": "excludedSenders_", "type": "address[]", "internalType": "address[]" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "failed",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "gov",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "operator",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "oracle",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract MockOracle" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pl",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract PositionLocker" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "registry",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract SLAYRegistryV2" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "rewards",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract SLAYRewardsV2" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "router",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract SLAYRouterV2" }],
      "stateMutability": "view"
    },
    { "type": "function", "name": "setUp", "inputs": [], "outputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "targetArtifactSelectors",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]",
          "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
          "components": [
            { "name": "artifact", "type": "string", "internalType": "string" },
            { "name": "selectors", "type": "bytes4[]", "internalType": "bytes4[]" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetArtifacts",
      "inputs": [],
      "outputs": [{ "name": "targetedArtifacts_", "type": "string[]", "internalType": "string[]" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetContracts",
      "inputs": [],
      "outputs": [{ "name": "targetedContracts_", "type": "address[]", "internalType": "address[]" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetInterfaces",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedInterfaces_",
          "type": "tuple[]",
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "components": [
            { "name": "addr", "type": "address", "internalType": "address" },
            { "name": "artifacts", "type": "string[]", "internalType": "string[]" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetSelectors",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedSelectors_",
          "type": "tuple[]",
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "components": [
            { "name": "addr", "type": "address", "internalType": "address" },
            { "name": "selectors", "type": "bytes4[]", "internalType": "bytes4[]" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetSenders",
      "inputs": [],
      "outputs": [{ "name": "targetedSenders_", "type": "address[]", "internalType": "address[]" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "test_Borrow_FullFlow",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "vault",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract SLAYVaultV2" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "vaultFactory",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract SLAYVaultFactoryV2" }],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "log",
      "inputs": [{ "name": "", "type": "string", "indexed": false, "internalType": "string" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_address",
      "inputs": [{ "name": "", "type": "address", "indexed": false, "internalType": "address" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_array",
      "inputs": [{ "name": "val", "type": "uint256[]", "indexed": false, "internalType": "uint256[]" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_array",
      "inputs": [{ "name": "val", "type": "int256[]", "indexed": false, "internalType": "int256[]" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_array",
      "inputs": [{ "name": "val", "type": "address[]", "indexed": false, "internalType": "address[]" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_bytes",
      "inputs": [{ "name": "", "type": "bytes", "indexed": false, "internalType": "bytes" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_bytes32",
      "inputs": [{ "name": "", "type": "bytes32", "indexed": false, "internalType": "bytes32" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_int",
      "inputs": [{ "name": "", "type": "int256", "indexed": false, "internalType": "int256" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_address",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "address", "indexed": false, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_array",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "uint256[]", "indexed": false, "internalType": "uint256[]" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_array",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "int256[]", "indexed": false, "internalType": "int256[]" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_array",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "address[]", "indexed": false, "internalType": "address[]" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_bytes",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "bytes", "indexed": false, "internalType": "bytes" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_bytes32",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "bytes32", "indexed": false, "internalType": "bytes32" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_decimal_int",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "int256", "indexed": false, "internalType": "int256" },
        { "name": "decimals", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_decimal_uint",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "decimals", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_int",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "int256", "indexed": false, "internalType": "int256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_string",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "string", "indexed": false, "internalType": "string" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_uint",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_string",
      "inputs": [{ "name": "", "type": "string", "indexed": false, "internalType": "string" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_uint",
      "inputs": [{ "name": "", "type": "uint256", "indexed": false, "internalType": "uint256" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "logs",
      "inputs": [{ "name": "", "type": "bytes", "indexed": false, "internalType": "bytes" }],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "0x60806040819052600c8054600160ff199182168117909255601f8054909116909117905563d5bee9f560e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063d5bee9f5906084906020906004815f875af115801562000066573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200008c919062000328565b601f60016101000a8154816001600160a01b0302191690836001600160a01b03160217905550604051620000c0906200031a565b604051809103905ff080158015620000da573d5f803e3d5ffd5b5060205f6101000a8154816001600160a01b0302191690836001600160a01b031602179055506200012c6040518060400160405280600381526020016233b7bb60e91b815250620001f060201b60201c565b602580546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600881526737b832b930ba37b960c11b60208201526200017690620001f0565b602680546001600160a01b0319166001600160a01b0392909216919091179055604080518082019091526005815264616c69636560d81b6020820152620001bd90620001f0565b602780546001600160a01b0319166001600160a01b0392909216919091179055348015620001e9575f80fd5b50620003db565b5f620001fc8262000203565b5092915050565b5f80826040516020016200021891906200037b565b60408051808303601f190181529082905280516020909101206001625e79b760e01b03198252600482018190529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa15801562000282573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620002a8919062000328565b6040516318caf8e360e31b8152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890620002e6908590879060040162000398565b5f604051808303815f87803b158015620002fe575f80fd5b505af115801562000311573d5f803e3d5ffd5b50505050915091565b610dd1806201e87283390190565b5f6020828403121562000339575f80fd5b81516001600160a01b038116811462000350575f80fd5b9392505050565b5f5b838110156200037357818101518382015260200162000359565b50505f910152565b5f82516200038e81846020870162000357565b9190910192915050565b60018060a01b0383168152604060208201525f8251806040840152620003c681606085016020870162000357565b601f01601f1916919091016060019392505050565b6201e48880620003ea5f395ff3fe608060405234801562000010575f80fd5b506004361062000204575f3560e01c806390e1437c116200011f578063d8a06f7311620000ab578063f887ea401162000077578063f887ea401462000422578063fa7626d41462000436578063fb47e3a21462000444578063fbfa77cf1462000458575f80fd5b8063d8a06f7314620003dc578063dd5bd2c014620003f0578063e20c9f711462000404578063ec342ad0146200040e575f80fd5b8063b0464fdc11620000eb578063b0464fdc1462000399578063b215a87914620003a3578063b5508aa914620003b7578063ba414fa614620003c1575f80fd5b806390e1437c1462000344578063916a17c614620003585780639df8e15514620003715780639ec5a8941462000385575f80fd5b80633e5e3c23116200019f5780637b103999116200016b5780637b10399914620002ea5780637dc0d1d014620002fe57806385226c8114620003125780638da5cb5b146200032b575f80fd5b80633e5e3c2314620002a95780633f7286f414620002b3578063570ca73514620002bd57806366d9a9a014620002d1575f80fd5b80631b98504911620001df5780631b98504914620002595780631ed7831c146200026357806320c61c89146200027c5780632ade38801462000290575f80fd5b806303eadcfc14620002085780630a9254e4146200023957806312d43a511462000245575b5f80fd5b602e546200021c906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b620002436200046c565b005b6025546200021c906001600160a01b031681565b62000243620014d1565b6200026d62001e57565b6040516200023091906200351e565b6029546200021c906001600160a01b031681565b6200029a62001eb9565b604051620002309190620035bd565b6200026d62002001565b6200026d62002061565b6026546200021c906001600160a01b031681565b620002db620020c1565b604051620002309190620036c6565b6022546200021c906001600160a01b031681565b602a546200021c906001600160a01b031681565b6200031c62002231565b60405162000230919062003751565b601f546200021c9061010090046001600160a01b031681565b602c546200021c906001600160a01b031681565b6200036262002306565b604051620002309190620037b7565b602f546200021c906001600160a01b031681565b6024546200021c906001600160a01b031681565b62000362620023eb565b602d546200021c906001600160a01b031681565b6200031c620024d0565b620003cb620025a5565b604051901515815260200162000230565b6023546200021c906001600160a01b031681565b6020546200021c906001600160a01b031681565b6200026d62002643565b6028546200021c906001600160a01b031681565b6021546200021c906001600160a01b031681565b601f54620003cb9060ff1681565b6027546200021c906001600160a01b031681565b602b546200021c906001600160a01b031681565b60086040516200047c9062003397565b6060808252600b908201526a577261707065642042544360a81b608082015260a060208201819052600490820152635742544360e01b60c082015260ff909116604082015260e001604051809103905ff080158015620004de573d5f803e3d5ffd5b50602880546001600160a01b0319166001600160a01b0392909216919091179055604051600690620005109062003397565b6060808252600890820152672aa9a21021b7b4b760c11b608082015260a060208201819052600490820152635553444360e01b60c082015260ff909116604082015260e001604051809103905ff0801580156200056f573d5f803e3d5ffd5b50602980546001600160a01b0319166001600160a01b03929092169190911790556200059a620026a3565b60265460405163ca669fa760e01b81526001600160a01b0390911660048201525f805160206201e3ec8339815191529063ca669fa7906024015f604051808303815f87803b158015620005eb575f80fd5b505af1158015620005fe573d5f803e3d5ffd5b50506022546040805163891a081f60e01b81526004810191909152601360448201527268747470733a2f2f6578616d706c652e636f6d60681b606482015260806024820152600a6084820152694f70657261746f72205960b01b60a48201526001600160a01b03909116925063891a081f915060c4015f604051808303815f87803b1580156200068c575f80fd5b505af11580156200069f573d5f803e3d5ffd5b505060265460405163ca669fa760e01b81526001600160a01b0390911660048201525f805160206201e3ec833981519152925063ca669fa791506024015f604051808303815f87803b158015620006f4575f80fd5b505af115801562000707573d5f803e3d5ffd5b5050602354602854604051633cb6ac1b60e11b81526001600160a01b03918216600480830191909152606060248301526064820152631d195cdd60e21b608482015260a06044820152600160a4820152601560fa1b60c48201529116925063796d5836915060e4016020604051808303815f875af11580156200078c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620007b2919062003842565b602b80546001600160a01b0319166001600160a01b03929092169182179055604080516367c6dc3160e11b8152905162000848929163cf8db8629160048083019260209291908290030181865afa15801562000810573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000836919062003842565b6026546001600160a01b031662002a28565b601f5460405163ca669fa760e01b81526101009091046001600160a01b031660048201525f805160206201e3ec8339815191529063ca669fa7906024015f604051808303815f87803b1580156200089d575f80fd5b505af1158015620008b0573d5f803e3d5ffd5b5050602154602b54604051633302a6a160e01b81526001600160a01b0391821660048201526001602482015291169250633302a6a191506044015f604051808303815f87803b15801562000902575f80fd5b505af115801562000915573d5f803e3d5ffd5b5050602b546040516001600160a01b039091169250620009369150620033a5565b6001600160a01b039091168152602001604051809103905ff08015801562000960573d5f803e3d5ffd5b50602c80546001600160a01b0319166001600160a01b03929092169190911790556040516200098f90620033b3565b604051809103905ff080158015620009a9573d5f803e3d5ffd5b50602a80546001600160a01b0319166001600160a01b03928316908117909155602854604051630704bb0560e31b81529216600483015265048c27395000602483015290633825d828906044015f604051808303815f87803b15801562000a0e575f80fd5b505af115801562000a21573d5f803e3d5ffd5b5050602a54602954604051630704bb0560e31b81526001600160a01b0391821660048201526305f5e100602482015291169250633825d82891506044015f604051808303815f87803b15801562000a76575f80fd5b505af115801562000a89573d5f803e3d5ffd5b5050602554602654602c54602a546028546040516001600160a01b039586169750938516955085949283169391831692169062000ac690620033c1565b6001600160a01b0396871681529486166020860152928516604085015290841660608401528316608083015290911660a082015260c001604051809103905ff08015801562000b17573d5f803e3d5ffd5b50602d80546001600160a01b0319166001600160a01b0392831617905560285460295460405191831692169062000b4e90620033cf565b6001600160a01b03928316815291166020820152604001604051809103905ff08015801562000b7f573d5f803e3d5ffd5b50602e80546001600160a01b0319166001600160a01b03928316179055602554602d54602954604051928416939182169291169062000bbe90620033dd565b6001600160a01b03909116815260606020820181905260089082015267195e1d081919589d60c21b608082015260a06040820181905260079082015266195e1d1111509560ca1b60c082015260e001604051809103905ff08015801562000c27573d5f803e3d5ffd5b5060405162000c3690620033eb565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103905ff08015801562000c70573d5f803e3d5ffd5b50602f80546001600160a01b0319166001600160a01b03929092169190911790556040805160e081018252603280825260208201526105dc918101919091526104b060608201525f608082015261012c60a0820181905260c082015262000cd6620033f9565b600281819052506040805160a081018252602e546001600160a01b03908116825260295481166020830152602f54811682840152611b5860608301526080820185905283830191909152602554915163ca669fa760e01b8152911660048201525f805160206201e3ec8339815191529063ca669fa7906024015f604051808303815f87803b15801562000d67575f80fd5b505af115801562000d7a573d5f803e3d5ffd5b5050602d546040516303e9260f60e31b81526001600160a01b039091169250631f493078915062000dc0905f805160206201e43383398151915290859060040162003860565b5f604051808303815f87803b15801562000dd8575f80fd5b505af115801562000deb573d5f803e3d5ffd5b505060265460405163ca669fa760e01b81526001600160a01b0390911660048201525f805160206201e3ec833981519152925063ca669fa791506024015f604051808303815f87803b15801562000e40575f80fd5b505af115801562000e53573d5f803e3d5ffd5b5050602c546040516347cf47ab60e01b8152611388600482018190526024820181905260448201526201518060648201526001600160a01b0390911692506347cf47ab91506084015f604051808303815f87803b15801562000eb3575f80fd5b505af115801562000ec6573d5f803e3d5ffd5b505060265460405163ca669fa760e01b81526001600160a01b0390911660048201525f805160206201e3ec833981519152925063ca669fa791506024015f604051808303815f87803b15801562000f1b575f80fd5b505af115801562000f2e573d5f803e3d5ffd5b5050602c54602d546040516314c97c1b60e21b81526001600160a01b03918216600482015291169250635325f06c91506024015f604051808303815f87803b15801562000f79575f80fd5b505af115801562000f8c573d5f803e3d5ffd5b505060265460405163ca669fa760e01b81526001600160a01b0390911660048201525f805160206201e3ec833981519152925063ca669fa791506024015f604051808303815f87803b15801562000fe1575f80fd5b505af115801562000ff4573d5f803e3d5ffd5b5050602c54604051624868df60e41b81525f805160206201e4338339815191526004820152600160248201526001600160a01b0390911692506304868df091506044015f604051808303815f87803b1580156200104f575f80fd5b505af115801562001062573d5f803e3d5ffd5b505060265460405163ca669fa760e01b81526001600160a01b0390911660048201525f805160206201e3ec833981519152925063ca669fa791506024015f604051808303815f87803b158015620010b7575f80fd5b505af1158015620010ca573d5f803e3d5ffd5b5050602c546040516305b0e2cf60e21b81525f60048201526001600160a01b0390911692506316c38b3c91506024015f604051808303815f87803b15801562001111575f80fd5b505af115801562001124573d5f803e3d5ffd5b5050602b54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600960448201526814d3105655985d5b1d60ba1b60648201525f805160206201e3ec833981519152925063c657c71891506084015f604051808303815f87803b15801562001198575f80fd5b505af1158015620011ab573d5f803e3d5ffd5b5050602c54604080516318caf8e360e31b81526001600160a01b03909216600483015260248201526002604482015261141360f21b60648201525f805160206201e3ec833981519152925063c657c71891506084015f604051808303815f87803b15801562001218575f80fd5b505af11580156200122b573d5f803e3d5ffd5b5050602d54604080516318caf8e360e31b81526001600160a01b03909216600483015260248201526002604482015261434760f01b60648201525f805160206201e3ec833981519152925063c657c71891506084015f604051808303815f87803b15801562001298575f80fd5b505af1158015620012ab573d5f803e3d5ffd5b5050602e54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600760448201526620b230b83a32b960c91b60648201525f805160206201e3ec833981519152925063c657c71891506084015f604051808303815f87803b1580156200131d575f80fd5b505af115801562001330573d5f803e3d5ffd5b5050602f54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600d60448201526c2232b13a21b7b73732b1ba37b960991b60648201525f805160206201e3ec833981519152925063c657c71891506084015f604051808303815f87803b158015620013a8575f80fd5b505af1158015620013bb573d5f803e3d5ffd5b5050602854604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152634241534560e01b60648201525f805160206201e3ec833981519152925063c657c71891506084015f604051808303815f87803b1580156200142f575f80fd5b505af115801562001442573d5f803e3d5ffd5b5050602954604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152631111509560e21b60648201525f805160206201e3ec833981519152925063c657c71891506084015f604051808303815f87803b158015620014b6575f80fd5b505af1158015620014c9573d5f803e3d5ffd5b505050505050565b60275464174876e800905f9062001501906001600160a01b0316835f805160206201e43383398151915262002a8f565b90505f62001511600283620039a1565b6026546040516303223eab60e11b81526001600160a01b0390911660048201529091505f805160206201e3ec833981519152906306447d56906024015f604051808303815f87803b15801562001565575f80fd5b505af115801562001578573d5f803e3d5ffd5b5050602c5460275460405163771de8f560e11b81526001600160a01b039182166004820152602481018690525f805160206201e43383398151915260448201525f94509116915063ee3bd1ea906064016020604051808303815f875af1158015620015e5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200160b9190620039c1565b90505f805160206201e3ec8339815191526001600160a01b03166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562001654575f80fd5b505af115801562001667573d5f803e3d5ffd5b505050506200167962093a8062002d8a565b60408051602080820183525f8083528351808301855281815293519093620016aa93611388939092869101620039d9565b60408051808303601f190181529082905260265463ca669fa760e01b83526001600160a01b0316600483015291505f805160206201e3ec8339815191529063ca669fa7906024015f604051808303815f87803b15801562001709575f80fd5b505af11580156200171c573d5f803e3d5ffd5b5050602c54604051637bc76ca160e01b81525f93506001600160a01b039091169150637bc76ca19062001756908690869060040162003a1d565b6020604051808303815f875af115801562001773573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620017999190620039c1565b9050620017d0815f6040518060400160405280601081526020016f0636c61696d65642062617365203e20360841b81525062002e9e565b602e54602854604051630286fca160e61b81526001600160a01b0391821660048201526200187b92919091169063a1bf284090602401602060405180830381865afa15801562001822573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620018489190620039c1565b8260405180604001604052806013815260200172636f6c6c61746572616c2061742076656e756560681b81525062002eff565b602f546027546040516302c62fa160e41b81526001600160a01b0391821660048201525f929190911690632c62fa1090602401602060405180830381865afa158015620018ca573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620018f09190620039c1565b905062001934815f6040518060400160405280601981526020017f75736572206465627420656e7469746c656d656e74203e20300000000000000081525062002e9e565b60265460405163ca669fa760e01b81526001600160a01b03909116600482015281906001905f805160206201e3ec8339815191529063ca669fa7906024015f604051808303815f87803b1580156200198a575f80fd5b505af11580156200199d573d5f803e3d5ffd5b5050602d54602754604080516020810182525f80825291516361dd0c9360e01b815291955085945084936001600160a01b03908116936361dd0c939362001a039392909116915f805160206201e433833981519152915f19918b918d9060040162003a37565b6060604051808303815f875af115801562001a20573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001a46919062003a7e565b602f546027546040516302c62fa160e41b81526001600160a01b03918216600482015294975092955090935062001af892911690632c62fa1090602401602060405180830381865afa15801562001a9f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001ac59190620039c1565b5f60405180604001604052806013815260200172195b9d1a5d1b195b595b9d0818db19585c9959606a1b81525062002eff565b62001b27825f6040518060400160405280600a8152602001690726570616964203e20360b41b81525062002e9e565b602e546029546040516311005b0760e01b81526001600160a01b03918216600482015262001bd19291909116906311005b0790602401602060405180830381865afa15801562001b79573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001b9f9190620039c1565b5f604051806040016040528060128152602001711d995b9d59481919589d0818db19585c995960721b81525062002eff565b62001c03835f6040518060400160405280600d81526020016c7769746864726577206261736560981b81525062002e9e565b602c546027546040516320e1427760e11b81526001600160a01b0391821660048201525f805160206201e43383398151915260248201525f9291909116906341c284ee90604401602060405180830381865afa15801562001c66573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001c8c9190620039c1565b602c5460275460405163385c9e7d60e01b81526001600160a01b0391821660048201529293505f9291169063385c9e7d90602401608060405180830381865afa15801562001cdc573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001d02919062003aaa565b505050905062001d2d82826040518060600160405280602781526020016201e40c6027913962002eff565b6040805160018082528183019092525f91602080830190803683370190505090505f805160206201e433833981519152815f8151811062001d725762001d7262003af2565b602090810291909101015260275460405163ca669fa760e01b81526001600160a01b0390911660048201525f805160206201e3ec8339815191529063ca669fa7906024015f604051808303815f87803b15801562001dce575f80fd5b505af115801562001de1573d5f803e3d5ffd5b5050602c546040516303f98b5960e51b81526001600160a01b039091169250637f316b20915062001e1790849060040162003b06565b5f604051808303815f87803b15801562001e2f575f80fd5b505af115801562001e42573d5f803e3d5ffd5b50505050505050505050505050505050505050565b6060601680548060200260200160405190810160405280929190818152602001828054801562001eaf57602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831162001e90575b5050505050905090565b6060601e805480602002602001604051908101604052809291908181526020015f905b8282101562001ff8575f84815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562001fe0578382905f5260205f2001805462001f4e9062003b3f565b80601f016020809104026020016040519081016040528092919081815260200182805462001f7c9062003b3f565b801562001fcb5780601f1062001fa15761010080835404028352916020019162001fcb565b820191905f5260205f20905b81548152906001019060200180831162001fad57829003601f168201915b50505050508152602001906001019062001f2e565b50505050815250508152602001906001019062001edc565b50505050905090565b6060601880548060200260200160405190810160405280929190818152602001828054801562001eaf57602002820191905f5260205f209081546001600160a01b0316815260019091019060200180831162001e90575050505050905090565b6060601780548060200260200160405190810160405280929190818152602001828054801562001eaf57602002820191905f5260205f209081546001600160a01b0316815260019091019060200180831162001e90575050505050905090565b6060601b805480602002602001604051908101604052809291908181526020015f905b8282101562001ff8578382905f5260205f2090600202016040518060400160405290815f82018054620021179062003b3f565b80601f0160208091040260200160405190810160405280929190818152602001828054620021459062003b3f565b8015620021945780601f106200216a5761010080835404028352916020019162002194565b820191905f5260205f20905b8154815290600101906020018083116200217657829003601f168201915b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156200221857602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620021d95790505b50505050508152505081526020019060010190620020e4565b6060601a805480602002602001604051908101604052809291908181526020015f905b8282101562001ff8578382905f5260205f20018054620022749062003b3f565b80601f0160208091040260200160405190810160405280929190818152602001828054620022a29062003b3f565b8015620022f15780601f10620022c757610100808354040283529160200191620022f1565b820191905f5260205f20905b815481529060010190602001808311620022d357829003601f168201915b50505050508152602001906001019062002254565b6060601d805480602002602001604051908101604052809291908181526020015f905b8282101562001ff8575f8481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620023d257602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620023935790505b5050505050815250508152602001906001019062002329565b6060601c805480602002602001604051908101604052809291908181526020015f905b8282101562001ff8575f8481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620024b757602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620024785790505b505050505081525050815260200190600101906200240e565b60606019805480602002602001604051908101604052809291908181526020015f905b8282101562001ff8578382905f5260205f20018054620025139062003b3f565b80601f0160208091040260200160405190810160405280929190818152602001828054620025419062003b3f565b8015620025905780601f10620025665761010080835404028352916020019162002590565b820191905f5260205f20905b8154815290600101906020018083116200257257829003601f168201915b505050505081526020019060010190620024f3565b6008545f9060ff1615620025bd575060085460ff1690565b604051630667f9d760e41b81525f805160206201e3ec833981519152600482018190526519985a5b195960d21b60248301525f9163667f9d7090604401602060405180830381865afa15801562002616573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200263c9190620039c1565b1415905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562001eaf57602002820191905f5260205f209081546001600160a01b0316815260019091019060200180831162001e90575050505050905090565b601f546040516101009091046001600160a01b031660248201525f9060440160408051601f19818403018152919052602080820180516001600160e01b031663189acdbd60e31b1790525490915062002706906001600160a01b03168262002f36565b602180546001600160a01b0319166001600160a01b039283161790556020546200273291168262002f36565b602280546001600160a01b0319166001600160a01b039283161790556020546200275e91168262002f36565b602380546001600160a01b0319166001600160a01b039283161790556020546200278a91168262002f36565b602480546001600160a01b0319166001600160a01b039283161790556021546022546040515f93928316929190911690620027c590620034bc565b6001600160a01b03928316815291166020820152604001604051809103905ff080158015620027f6573d5f803e3d5ffd5b5090505f6200281b82601f60019054906101000a90046001600160a01b031662002f78565b601f546040516303223eab60e11b81526101009091046001600160a01b031660048201529091505f805160206201e3ec833981519152906306447d56906024015f604051808303815f87803b15801562002873575f80fd5b505af115801562002886573d5f803e3d5ffd5b50506021546022546040516200290c94506001600160a01b039283169350911690620028b290620034ca565b6001600160a01b039091168152602001604051809103905ff080158015620028dc573d5f803e3d5ffd5b506040805160048152602481019091526020810180516001600160e01b03166308e557ed60e31b17905262002fa6565b60225460215460405162002933926001600160a01b03908116921690620028b290620034d8565b602354602254604051620029a5926001600160a01b039081169285929116906200295d90620034e6565b6001600160a01b039283168152911660208201526040015b604051809103905ff0801580156200298f573d5f803e3d5ffd5b5060405180602001604052805f81525062002fa6565b602454604051620029c5916001600160a01b0316906200297590620034f4565b5f805160206201e3ec8339815191526001600160a01b03166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562002a0c575f80fd5b505af115801562002a1f573d5f803e3d5ffd5b50505050505050565b6040516328a9b0fb60e11b81526001600160a01b038084166004830152821660248201525f805160206201e3ec8339815191529063515361f6906044015f6040518083038186803b15801562002a7c575f80fd5b505afa158015620014c9573d5f803e3d5ffd5b6028546040516340c10f1960e01b81526001600160a01b038581166004830152602482018590525f9216906340c10f19906044015f604051808303815f87803b15801562002adb575f80fd5b505af115801562002aee573d5f803e3d5ffd5b50506040516303223eab60e11b81526001600160a01b03871660048201525f805160206201e3ec83398151915292506306447d5691506024015f604051808303815f87803b15801562002b3f575f80fd5b505af115801562002b52573d5f803e3d5ffd5b5050602854602b5460405163095ea7b360e01b81526001600160a01b0391821660048201525f1960248201529116925063095ea7b391506044016020604051808303815f875af115801562002ba9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002bcf919062003b79565b50602b54604051636e553f6560e01b8152600481018590526001600160a01b03868116602483015290911690636e553f65906044016020604051808303815f875af115801562002c21573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002c479190620039c1565b602b54602c5460405163095ea7b360e01b81526001600160a01b0391821660048201525f196024820152929350169063095ea7b3906044016020604051808303815f875af115801562002c9c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002cc2919062003b79565b50602c5460405163aad83e3560e01b815260048101839052602481018490526001600160a01b039091169063aad83e35906044015f604051808303815f87803b15801562002d0e575f80fd5b505af115801562002d21573d5f803e3d5ffd5b505050505f805160206201e3ec8339815191526001600160a01b03166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562002d6c575f80fd5b505af115801562002d7f573d5f803e3d5ffd5b505050509392505050565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c6001600160a01b031663e5d6bf02827f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c6001600160a01b031663796b89b96040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002e1b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002e419190620039c1565b62002e4d919062003b9a565b6040518263ffffffff1660e01b815260040162002e6c91815260200190565b5f604051808303815f87803b15801562002e84575f80fd5b505af115801562002e97573d5f803e3d5ffd5b5050505050565b604051636cd1e26960e11b81525f805160206201e3ec8339815191529063d9a3c4d29062002ed59086908690869060040162003bba565b5f6040518083038186803b15801562002eec575f80fd5b505afa15801562002a1f573d5f803e3d5ffd5b6040516388b44c8560e01b81525f805160206201e3ec833981519152906388b44c859062002ed59086908690869060040162003bba565b5f828260405162002f479062003502565b62002f5492919062003be3565b604051809103905ff08015801562002f6e573d5f803e3d5ffd5b5090505b92915050565b5f828260405162002f899062003510565b6001600160a01b0392831681529116602082015260400162002f54565b62002fb383838362002fb8565b505050565b604051630667f9d760e41b81526001600160a01b03841660048201527fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360248201525f805160206201e3ec833981519152905f90829063667f9d7090604401602060405180830381865afa15801562003033573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620030599190620039c1565b90508062003178575f6200306d866200329b565b9050620030a1604051806040016040528060058152602001640352e302e360dc1b815250826200337090919063ffffffff16565b80620030ad57505f8451115b15620031185760405163278f794360e11b81526001600160a01b03871690634f1ef28690620030e3908890889060040162003be3565b5f604051808303815f87803b158015620030fb575f80fd5b505af11580156200310e573d5f803e3d5ffd5b5050505062003171565b604051631b2ce7f360e11b81526001600160a01b038681166004830152871690633659cfe6906024015f604051808303815f87803b15801562003159575f80fd5b505af11580156200316c573d5f803e3d5ffd5b505050505b5062002e97565b805f62003185826200329b565b9050620031b9604051806040016040528060058152602001640352e302e360dc1b815250826200337090919063ffffffff16565b80620031c557505f8551115b156200323257604051639623609d60e01b81526001600160a01b03831690639623609d90620031fd908a908a908a9060040162003c08565b5f604051808303815f87803b15801562003215575f80fd5b505af115801562003228573d5f803e3d5ffd5b5050505062002a1f565b60405163266a23b160e21b81526001600160a01b03888116600483015287811660248301528316906399a88ec4906044015f604051808303815f87803b1580156200327b575f80fd5b505af11580156200328e573d5f803e3d5ffd5b5050505050505050505050565b60408051600481526024810182526020810180516001600160e01b0316632b4f2c7360e21b17905290516060915f9182916001600160a01b03861691620032e3919062003c35565b5f60405180830381855afa9150503d805f81146200331d576040519150601f19603f3d011682016040523d82523d5f602084013e62003322565b606091505b509150915081801562003336575060208151115b156200335a578080602001905181019062003352919062003c52565b949350505050565b505060408051602081019091525f815292915050565b5f8151835114801562003390575081805190602001208380519060200120145b9392505050565b610a798062003d0783390190565b6134f3806200478083390190565b61017d8062007c7383390190565b6154bc8062007df083390190565b6109de806200d2ac83390190565b611644806200dc8a83390190565b61127d806200f2ce83390190565b6040805160608101909152805f81526020016200345060408051606080820183525f8083526020808401829052845160a0810186528281529081018290528085018290529182018190526080820152909182015290565b8152602001620034b76040805160a080820183525f80835260208084018290528385018290526060808501839052855160e081018752838152918201839052948101829052938401819052608084810182905291840181905260c084015290919082015290565b905290565b612d8c806201054b83390190565b61353b80620132d783390190565b613700806201681283390190565b611cac8062019f1283390190565b61201e806201bbbe83390190565b6103ef806201dbdc83390190565b610421806201dfcb83390190565b602080825282518282018190525f9190848201906040850190845b81811015620035605783516001600160a01b03168352928401929184019160010162003539565b50909695505050505050565b5f5b83811015620035885781810151838201526020016200356e565b50505f910152565b5f8151808452620035a98160208601602086016200356c565b601f01601f19169290920160200192915050565b602080825282518282018190525f919060409081850190600581811b87018401888601875b848110156200367157603f198a8403018652815180516001600160a01b03168452880151888401889052805188850181905290890190606081871b8601810191908601905f5b818110156200365a57605f198885030183526200364784865162003590565b948d01949350918c019160010162003628565b5050509689019693505090870190600101620035e2565b50909998505050505050505050565b5f815180845260208085019450602084015f5b83811015620036bb5781516001600160e01b0319168752958201959082019060010162003693565b509495945050505050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b838110156200374357888303603f1901855281518051878552620037148886018262003590565b91890151858303868b01529190506200372e818362003680565b968901969450505090860190600101620036ed565b509098975050505050505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b82811015620037aa57603f198886030184526200379785835162003590565b9450928501929085019060010162003778565b5092979650505050505050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b838110156200374357888303603f19018552815180516001600160a01b03168452870151878401879052620038168785018262003680565b9588019593505090860190600101620037de565b6001600160a01b03811681146200383f575f80fd5b50565b5f6020828403121562003853575f80fd5b815162003390816200382a565b8281528151610280820190600381106200388857634e487b7160e01b5f52602160045260245ffd5b80602084015250602083015160018060a01b03808251166040850152806020830151166060850152506040810151905061ffff8082511660808501528060208301511660a08501526040820151151560c08501528060608301511660e085015280608083015116610100850152505060408301516200399961012084018260018060a01b0380825116835280602083015116602084015280604083015116604084015250606081015161ffff8082166060850152608083015191508082511660808501528060208301511660a0850152604082015160c0850152606082015160e0850152608082015115156101008501528060a0830151166101208501528060c08301511661014085015250505050565b509392505050565b5f82620039bc57634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215620039d2575f80fd5b5051919050565b61ffff85168152608060208201525f620039f7608083018662003590565b828103604084015262003a0b818662003590565b91505082606083015295945050505050565b828152604060208201525f62003352604083018462003590565b60018060a01b038716815285602082015284604082015283606082015260c060808201525f62003a6b60c083018562003590565b90508260a0830152979650505050505050565b5f805f6060848603121562003a91575f80fd5b8351925060208401519150604084015190509250925092565b5f805f806080858703121562003abe575f80fd5b505082516020840151604085015160609095015191969095509092509050565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b602080825282518282018190525f9190848201906040850190845b81811015620035605783518352928401929184019160010162003b21565b600181811c9082168062003b5457607f821691505b60208210810362003b7357634e487b7160e01b5f52602260045260245ffd5b50919050565b5f6020828403121562003b8a575f80fd5b8151801515811462003390575f80fd5b8082018082111562002f7257634e487b7160e01b5f52601160045260245ffd5b838152826020820152606060408201525f62003bda606083018462003590565b95945050505050565b6001600160a01b03831681526040602082018190525f90620033529083018462003590565b6001600160a01b038481168252831660208201526060604082018190525f9062003bda9083018462003590565b5f825162003c488184602087016200356c565b9190910192915050565b5f6020828403121562003c63575f80fd5b815167ffffffffffffffff8082111562003c7b575f80fd5b818401915084601f83011262003c8f575f80fd5b81518181111562003ca45762003ca462003ade565b604051601f8201601f19908116603f0116810190838211818310171562003ccf5762003ccf62003ade565b8160405282815287602084870101111562003ce8575f80fd5b62003cfb8360208301602088016200356c565b97965050505050505056fe608060405234801562000010575f80fd5b5060405162000a7938038062000a79833981016040819052620000339162000134565b828260036200004383826200023d565b5060046200005282826200023d565b50506005805460ff191660ff93909316929092179091555062000309915050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011262000097575f80fd5b81516001600160401b0380821115620000b457620000b462000073565b604051601f8301601f19908116603f01168101908282118183101715620000df57620000df62000073565b8160405283815260209250866020858801011115620000fc575f80fd5b5f91505b838210156200011f578582018301518183018401529082019062000100565b5f602085830101528094505050505092915050565b5f805f6060848603121562000147575f80fd5b83516001600160401b03808211156200015e575f80fd5b6200016c8783880162000087565b9450602086015191508082111562000182575f80fd5b50620001918682870162000087565b925050604084015160ff81168114620001a8575f80fd5b809150509250925092565b600181811c90821680620001c857607f821691505b602082108103620001e757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200023857805f5260205f20601f840160051c81016020851015620002145750805b601f840160051c820191505b8181101562000235575f815560010162000220565b50505b505050565b81516001600160401b0381111562000259576200025962000073565b62000271816200026a8454620001b3565b84620001ed565b602080601f831160018114620002a7575f84156200028f5750858301515b5f19600386901b1c1916600185901b17855562000301565b5f85815260208120601f198616915b82811015620002d757888601518255948401946001909101908401620002b6565b5085821015620002f557878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b61076280620003175f395ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c806340c10f191161006357806340c10f191461011a57806370a082311461012f57806395d89b4114610157578063a9059cbb1461015f578063dd62ed3e14610172575f80fd5b806306fdde031461009f578063095ea7b3146100bd57806318160ddd146100e057806323b872dd146100f2578063313ce56714610105575b5f80fd5b6100a76101aa565b6040516100b491906105bc565b60405180910390f35b6100d06100cb366004610623565b61023a565b60405190151581526020016100b4565b6002545b6040519081526020016100b4565b6100d061010036600461064b565b610253565b60055460405160ff90911681526020016100b4565b61012d610128366004610623565b610276565b005b6100e461013d366004610684565b6001600160a01b03165f9081526020819052604090205490565b6100a7610284565b6100d061016d366004610623565b610293565b6100e46101803660046106a4565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101b9906106d5565b80601f01602080910402602001604051908101604052809291908181526020018280546101e5906106d5565b80156102305780601f1061020757610100808354040283529160200191610230565b820191905f5260205f20905b81548152906001019060200180831161021357829003601f168201915b5050505050905090565b5f336102478185856102a0565b60019150505b92915050565b5f336102608582856102b2565b61026b858585610333565b506001949350505050565b6102808282610390565b5050565b6060600480546101b9906106d5565b5f33610247818585610333565b6102ad83838360016103c4565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981101561032d578181101561031f57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61032d84848484035f6103c4565b50505050565b6001600160a01b03831661035c57604051634b637e8f60e11b81525f6004820152602401610316565b6001600160a01b0382166103855760405163ec442f0560e01b81525f6004820152602401610316565b6102ad838383610496565b6001600160a01b0382166103b95760405163ec442f0560e01b81525f6004820152602401610316565b6102805f8383610496565b6001600160a01b0384166103ed5760405163e602df0560e01b81525f6004820152602401610316565b6001600160a01b03831661041657604051634a1406b160e11b81525f6004820152602401610316565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561032d57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161048891815260200190565b60405180910390a350505050565b6001600160a01b0383166104c0578060025f8282546104b5919061070d565b909155506105309050565b6001600160a01b0383165f90815260208190526040902054818110156105125760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610316565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661054c5760028054829003905561056a565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105af91815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b818110156105e8578581018301518582016040015282016105cc565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461061e575f80fd5b919050565b5f8060408385031215610634575f80fd5b61063d83610608565b946020939093013593505050565b5f805f6060848603121561065d575f80fd5b61066684610608565b925061067460208501610608565b9150604084013590509250925092565b5f60208284031215610694575f80fd5b61069d82610608565b9392505050565b5f80604083850312156106b5575f80fd5b6106be83610608565b91506106cc60208401610608565b90509250929050565b600181811c908216806106e957607f821691505b60208210810361070757634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561024d57634e487b7160e01b5f52601160045260245ffdfea26469706673582212206067df3effa80f6cfd878bb3a653b0a8e6307cb018f56f38af6dd1f4e9a9157564736f6c6343000818003360c0604052600c805461ffff19908116603217909155600e805490911660641790553480156200002d575f80fd5b50604051620034f3380380620034f38339810160408190526200005091620005a9565b600180556001600160a01b0381166200009d5760405162461bcd60e51b815260206004820152600a6024820152695641554c545f5a45524f60b01b60448201526064015b60405180910390fd5b6001600160a01b0381166080819052604080516338d52e0f60e01b815290516338d52e0f916004808201926020929091908290030181865afa158015620000e6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200010c9190620005a9565b6001600160a01b031660a05260028054643e81f4017760ab1b65ffffffffffff60a81b199091161790556003805465ffffffffffff19166201518017905542600455620001586200015f565b50620005ce565b5f6080516001600160a01b031663cf8db8626040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200019f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620001c59190620005a9565b90506001600160a01b0381166200020d5760405162461bcd60e51b815260206004820152600b60248201526a2727afa7a822a920aa27a960a91b604482015260640162000094565b6002546001600160a01b0361010090910481169082168190036200022f575050565b6001600160a01b038116156200028d57620002595f80516020620034b3833981519152826200034c565b620002735f8051602062003493833981519152826200034c565b6200028d5f80516020620034d3833981519152826200034c565b60028054610100600160a81b0319166101006001600160a01b03851602179055620002c75f80516020620034b3833981519152836200037a565b50620002e25f8051602062003493833981519152836200037a565b50620002fd5f80516020620034d3833981519152836200037a565b506200030862000426565b816001600160a01b0316816001600160a01b03167ffd0fa76bc4b7eb1dbcfb7fc92cf74a82b38612a288b2ab10d968c34396be1a6c60405160405180910390a35050565b5f82815260208190526040902060010154620003688162000483565b62000374838362000492565b50505050565b5f828152602081815260408083206001600160a01b038516845290915281205460ff166200041d575f838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055620003d43390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600162000420565b505f5b92915050565b6200043062000515565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258620004663390565b6040516001600160a01b03909116815260200160405180910390a1565b6200048f81336200053c565b50565b5f828152602081815260408083206001600160a01b038516845290915281205460ff16156200041d575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a450600162000420565b60025460ff16156200053a5760405163d93c066560e01b815260040160405180910390fd5b565b5f828152602081815260408083206001600160a01b038516845290915290205460ff16620005905760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440162000094565b5050565b6001600160a01b03811681146200048f575f80fd5b5f60208284031215620005ba575f80fd5b8151620005c78162000594565b9392505050565b60805160a051612e3a620006595f395f81816104a1015281816109b401526109e901525f81816107b801528181610a0b01528181610a4c01528181610d6f015281816111b60152818161168101528181611795015281816118ff01528181611cab01528181611d4c01528181611de601528181611fd701528181612020015261243a0152612e3a5ff3fe608060405234801561000f575f80fd5b50600436106102e5575f3560e01c8063641151d411610195578063aad83e35116100e4578063d547741f1161009e578063e8462e8f11610079578063e8462e8f14610797578063ee3bd1ea146107a0578063fbfa77cf146107b3578063fec16939146107da575f80fd5b8063d547741f1461075d578063d80eff2014610770578063e80cf5c314610784575f80fd5b8063aad83e35146106ed578063b047eb0214610700578063b159833d14610714578063b3ce425314610729578063c37b63371461073c578063c7576bc21461074a575f80fd5b806381d12c581161014f578063948779581161012a5780639487795814610682578063955932de14610695578063a217fddf146106d1578063a3db5335146106d8575f80fd5b806381d12c58146105f3578063895ec75f1461065b57806391d148541461066f575f80fd5b8063641151d41461057157806377a8ce97146105845780637bc76ca1146105ac5780637eb92f17146105bf5780637ec09504146105cd5780637f316b20146105e0575f80fd5b80632f2ff15d1161025157806347cf47ab1161020b5780635325f06c116101e65780635325f06c14610512578063570ca7351461052557806357d775f81461053d5780635c975abb14610566575f80fd5b806347cf47ab146104ee578063487e5958146105015780635317dd4d14610509575f80fd5b80632f2ff15d146103fa5780633011ae2b1461040d57806336568abe1461042f578063385c9e7d1461044257806338d52e0f1461049c57806341c284ee146104db575f80fd5b806316c38b3c116102a257806316c38b3c1461038357806322b67b5c14610396578063248a9ca3146103a957806325870fc7146103cb57806327f49b56146103de5780632d88af4a146103e7575f80fd5b806301ffc9a7146102e957806304868df01461031157806305238c9f1461032657806307c7ac1b1461035357806308df8c041461036757806315e5a1e51461037a575b5f80fd5b6102fc6102f7366004612844565b6107f9565b60405190151581526020015b60405180910390f35b61032461031f366004612886565b61082f565b005b6103456103343660046128b0565b5f908152600d602052604090205490565b604051908152602001610308565b6103455f80516020612dc583398151915281565b6103246103753660046128d8565b61089d565b61034560045481565b6103246103913660046128f9565b61091e565b6103456103a4366004612926565b61094f565b6103456103b73660046128b0565b5f9081526020819052604090206001015490565b6103246103d9366004612958565b610c4c565b61034560055481565b6103246103f5366004612958565b610c7f565b610324610408366004612973565b610cad565b6102fc61041b3660046128b0565b60086020525f908152604090205460ff1681565b61032461043d366004612973565b610cd7565b61047c610450366004612958565b6001600160a01b0381165f90815260096020526040902080546001909101546004546005549193509193565b604080519485526020850193909352918301526060820152608001610308565b6104c37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610308565b6103456104e93660046129a1565b610d0a565b6103246104fc3660046129cb565b610e36565b610324610f6f565b61034560065481565b610324610520366004612958565b610f79565b6002546104c39061010090046001600160a01b031681565b60035461054f9065ffffffffffff1681565b60405165ffffffffffff9091168152602001610308565b60025460ff166102fc565b61032461057f3660046129a1565b61103a565b60025461059990600160a81b900461ffff1681565b60405161ffff9091168152602001610308565b6103456105ba366004612a6d565b6110d7565b600e546105999061ffff1681565b6103246105db366004612ab5565b6113d2565b6103246105ee366004612ade565b611545565b6106316106013660046128b0565b600a6020525f908152604090208054600182015460028301546003909301546001600160a01b0390921692909184565b604080516001600160a01b0390951685526020850193909352918301526060820152608001610308565b6103455f80516020612d8583398151915281565b6102fc61067d366004612973565b6116eb565b6007546104c3906001600160a01b031681565b6103456106a33660046129a1565b6001600160a01b03919091165f90815260096020908152604080832093835260029384019091529020015490565b6103455f81565b60025461059990600160c81b900461ffff1681565b6103246106fb366004612b4d565b611713565b6103455f80516020612de583398151915281565b60025461059990600160b81b900461ffff1681565b610324610737366004612b4d565b611849565b600c546105999061ffff1681565b610324610758366004612b6d565b611959565b61032461076b366004612973565b611afd565b6103455f80516020612da583398151915281565b610324610792366004612bd1565b611b21565b610345600b5481565b6103456107ae366004612926565b611b96565b6104c37f000000000000000000000000000000000000000000000000000000000000000081565b6103456107e83660046128b0565b600d6020525f908152604090205481565b5f6001600160e01b03198216637965db0b60e01b148061082957506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f80516020612da583398151915261084681612187565b5f83815260086020908152604091829020805460ff1916851515908117909155915191825284917f050c0a54e09bba81960cf8c4ab488c6e1afe8f819c1c47e42cdd7c795da438ea910160405180910390a2505050565b5f80516020612da58339815191526108b481612187565b6103e88261ffff1611156109005760405162461bcd60e51b815260206004820152600e60248201526d4255464645525f544f4f5f42494760901b60448201526064015b60405180910390fd5b50600b91909155600c805461ffff191661ffff909216919091179055565b5f80516020612de583398151915261093581612187565b811561094757610943612194565b5050565b6109436121ee565b5f5f80516020612dc583398151915261096781612187565b61096f612227565b5f84116109a75760405162461bcd60e51b81526004016108f7906020808252600490820152635a45524f60e01b604082015260600190565b6109dc6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333087612251565b610a306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000866122b8565b604051636e553f6560e01b8152600481018590523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636e553f65906044016020604051808303815f875af1158015610a9a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610abe9190612bea565b6001600160a01b0386165f908152600960209081526040808320878452600280820190935292209081015492945090918610610afa575f610b0a565b858160020154610b0a9190612c15565b600282015560018101548610610b20575f610b30565b858160010154610b309190612c15565b816001018190555085826001015411610b49575f610b59565b858260010154610b599190612c15565b60018301556006548610610b6d575f610b7b565b85600654610b7b9190612c15565b6006558154849083905f90610b91908490612c28565b90915550508054849082905f90610ba9908490612c28565b90915550505f858152600d60205260409020548610610bc8575f610be1565b5f858152600d6020526040902054610be1908790612c15565b5f868152600d602090815260409182902092909255805188815291820186905286916001600160a01b038a16917f4b7c5528758ab16b9f741575f647190b766f607dd83603dead37c925c6f682a0910160405180910390a35050610c4460018055565b509392505050565b5f80516020612da5833981519152610c6381612187565b610c7a5f80516020612d858339815191528361233f565b505050565b5f80516020612da5833981519152610c9681612187565b610c7a5f80516020612de58339815191528361233f565b5f82815260208190526040902060010154610cc781612187565b610cd1838361233f565b50505050565b6001600160a01b0381163314610d005760405163334bd91960e11b815260040160405180910390fd5b610c7a82826123ce565b6001600160a01b0382165f908152600960209081526040808320848452600280820190935290832091820154600b549192918111610d4557505f5b805f03610d5757505491506108299050565b6040516363737ac960e11b8152600481018290525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c6e6f59290602401602060405180830381865afa158015610dbc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610de09190612bea565b600c5490915061271090610df89061ffff1683612c3b565b610e029190612c52565b610e0c9082612c28565b905080835f015411610e1e575f610e2b565b8254610e2b908290612c15565b979650505050505050565b5f80516020612da5833981519152610e4d81612187565b6127108561ffff1611158015610e6957506127108461ffff1611155b8015610e7b57506127108361ffff1611155b610eb35760405162461bcd60e51b81526020600482015260096024820152684250535f52414e474560b81b60448201526064016108f7565b6002805463ffffffff60a81b1916600160a81b61ffff88811691820261ffff60b81b191692909217600160b81b8884169081029190911761ffff60c81b1916600160c81b938816938402179093556003805465ffffffffffff191665ffffffffffff87169081179091556040805192835260208301949094529281019190915260608101919091527f42429be9f3bc6715e9df9ec3dd71bf592030a177cb34dea9d2aef15d91cdaa609060800160405180910390a15050505050565b610f77612437565b565b5f80516020612da5833981519152610f9081612187565b6001600160a01b038216610fd05760405162461bcd60e51b815260206004820152600760248201526643475f5a45524f60c81b60448201526064016108f7565b600780546001600160a01b0319166001600160a01b0384161790556110025f80516020612dc58339815191528361233f565b506040516001600160a01b038316907f58878e8c0a44d9101d84b254dfa6bf22980dbb1ad1fe5ccd5e8c410a9891b403905f90a25050565b5f80516020612dc583398151915261105181612187565b6001600160a01b0383165f908152600960209081526040808320858452600280820190935292209081015415611088575f60028201555b6001810154156110d057600180820180545f9182905591840180548392906110b1908490612c15565b925050819055508060065f8282546110c99190612c15565b9091555050505b5050505050565b5f5f80516020612d858339815191526110ef81612187565b6110f7612227565b6110ff612627565b5f858152600a6020908152604091829020825160808101845281546001600160a01b03168082526001830154938201939093526002820154938101939093526003015460608301526111815760405162461bcd60e51b815260206004820152600b60248201526a2922a8afaaa725a727aba760a91b60448201526064016108f7565b6040818101516007549151635d043b2960e11b815260048101919091526001600160a01b0391821660248201523060448201527f00000000000000000000000000000000000000000000000000000000000000009091169063ba087652906064016020604051808303815f875af11580156111fe573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112229190612bea565b5f878152600a6020908152604080832080546001600160a01b0319168155600181018490556002808201859055600390910184905585516001600160a01b0316845260098352818420868401518552808201909352908320908101805494975091939092879291611294908490612c28565b9250508190555084816001015f8282546112ae9190612c28565b9250508190555084826001015f8282546112c89190612c28565b925050819055508460065f8282546112e09190612c28565b90915550506020808401515f908152600d909152604081208054879290611308908490612c28565b925050819055508260200151835f01516001600160a01b0316897f6931959cae9642a3a72e6bd1acdf02c6286e80d77523d209c78cc34b4d42bf4f8860405161135391815260200190565b60405180910390a46007548351602085015160405163476b4c1d60e01b81526001600160a01b039093169263476b4c1d926113999290918a91908d908d90600401612c99565b5f604051808303815f87803b1580156113b0575f80fd5b505af11580156113c2573d5f803e3d5ffd5b50505050505050610c4460018055565b6113da612227565b6113e2612627565b5f8381526008602052604090205460ff1661140f5760405162461bcd60e51b81526004016108f790612cc6565b60075460405163023c91c360e01b8152600481018590525f916001600160a01b03169063023c91c390602401602060405180830381865afa158015611456573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061147a9190612cee565b905060ff8116158061148f575060ff81166001145b6114ce5760405162461bcd60e51b815260206004820152601060248201526f1393d517d1115413d4d25517d2d2539160821b60448201526064016108f7565b6007546040516312b6f7c560e01b81523360048201526024810186905260448101859052606481018490526001600160a01b03909116906312b6f7c5906084015f604051808303815f87803b158015611525575f80fd5b505af1158015611537573d5f803e3d5ffd5b5050505050610c7a60018055565b61154d612227565b335f90815260096020526040812090805b838110156115b8575f836002015f87878581811061157e5761157e612d0e565b9050602002013581526020019081526020015f20600201549050600b548111156115af576115ac8184612c28565b92505b5060010161155e565b5080156115fa5760405162461bcd60e51b815260206004820152601060248201526f13d55514d5105391125391d7d111509560821b60448201526064016108f7565b8154806116355760405162461bcd60e51b81526020600482015260096024820152684e4f5f53484152455360b81b60448201526064016108f7565b5f5b84811015611678575f846002015f88888581811061165757611657612d0e565b602090810292909201358352508101919091526040015f2055600101611637565b505f83556116a77f0000000000000000000000000000000000000000000000000000000000000000338361264b565b6040518181525f9033907f0fb379154341b4f891bcfefa4a5fc0dd7deef978b97cce616bbeb915cc8a257e906020015b60405180910390a350505061094360018055565b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61171b612227565b611723612627565b5f821161175b5760405162461bcd60e51b81526004016108f7906020808252600490820152635a45524f60e01b604082015260600190565b5f8181526008602052604090205460ff166117885760405162461bcd60e51b81526004016108f790612cc6565b6117bd6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085612251565b335f9081526009602052604081208054909184918391906117df908490612c28565b90915550505f82815260028201602052604081208054859290611803908490612c28565b9091555050604051838152829033907f71dd024b6e25e8f24d8ba096487beda468da7e59447dd391d52b336ee4aa5adf9060200160405180910390a35061094360018055565b611851612227565b5f61185c3383610d0a565b90505f8311801561186d5750808311155b6118aa5760405162461bcd60e51b815260206004820152600e60248201526d1313d0d2d15117d09657d111509560921b60448201526064016108f7565b335f908152600960209081526040808320858452600281019092528220805491929091869183916118dc908490612c15565b90915550508154859083905f906118f4908490612c15565b9091555061192590507f0000000000000000000000000000000000000000000000000000000000000000338761264b565b604051858152849033907f0fb379154341b4f891bcfefa4a5fc0dd7deef978b97cce616bbeb915cc8a257e906020016116d7565b611961612227565b611969612627565b5f8681526008602052604090205460ff166119965760405162461bcd60e51b81526004016108f790612cc6565b5f85116119d05760405162461bcd60e51b81526020600482015260086024820152675a45524f5f52455160c01b60448201526064016108f7565b60075460405163023c91c360e01b8152600481018890525f916001600160a01b03169063023c91c390602401602060405180830381865afa158015611a17573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a3b9190612cee565b905060ff8116600214611a825760405162461bcd60e51b815260206004820152600f60248201526e1393d517d093d49493d5d7d2d25391608a1b60448201526064016108f7565b6007546040516361dd0c9360e01b81526001600160a01b03909116906361dd0c9390611abe9033908b908b908b908b908b908b90600401612d22565b5f604051808303815f87803b158015611ad5575f80fd5b505af1158015611ae7573d5f803e3d5ffd5b5050505050611af560018055565b505050505050565b5f82815260208190526040902060010154611b1781612187565b610cd183836123ce565b5f80516020612da5833981519152611b3881612187565b6103e88261ffff161115611b7d5760405162461bcd60e51b815260206004820152600c60248201526b48454144524f4f4d5f42494760a01b60448201526064016108f7565b50600e805461ffff191661ffff92909216919091179055565b5f5f80516020612d85833981519152611bae81612187565b611bb6612227565b611bbe612627565b5f8381526008602052604090205460ff16611beb5760405162461bcd60e51b81526004016108f790612cc6565b6007546001600160a01b0316611c305760405162461bcd60e51b815260206004820152600a60248201526910d1d7d393d517d4d15560b21b60448201526064016108f7565b6001600160a01b0385165f908152600960209081526040808320868452600281019092529091208515801590611c67575080548611155b611ca05760405162461bcd60e51b815260206004820152600a60248201526929a420a922a9afa7a7a160b11b60448201526064016108f7565b611ca861267c565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d05573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d299190612bea565b6040516303d1689d60e11b8152600481018990529091505f906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906307a2d13a90602401602060405180830381865afa158015611d91573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611db59190612bea565b60025485546040516303d1689d60e11b815260048101919091529192505f9161271091600160a81b900461ffff16907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906307a2d13a90602401602060405180830381865afa158015611e33573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e579190612bea565b611e619190612c3b565b611e6b9190612c52565b905080828660010154611e7e9190612c28565b1115611ebb5760405162461bcd60e51b815260206004820152600c60248201526b05045525f555345525f4341560a41b60448201526064016108f7565b6002545f9061271090611ed990600160b81b900461ffff1686612c3b565b611ee39190612c52565b90508083600654611ef49190612c28565b1115611f2f5760405162461bcd60e51b815260206004820152600a6024820152690474c4f42414c5f4341560b41b60448201526064016108f7565b6002545f9061271090611f4d90600160c81b900461ffff1687612c3b565b611f579190612c52565b90508084600554611f689190612c28565b1115611fa25760405162461bcd60e51b8152602060048201526009602482015268045504f43485f4341560bc1b60448201526064016108f7565b8a865f015f828254611fb49190612c15565b909155505086548b9088905f90611fcc908490612c15565b90915550611ffd90507f0000000000000000000000000000000000000000000000000000000000000000808d6122b8565b604051633ea0e43760e11b8152600481018c9052306024820181905260448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637d41c86e906064016020604051808303815f875af115801561206e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120929190612bea565b985060405180608001604052808d6001600160a01b031681526020018b81526020018c815260200142815250600a5f8b81526020019081526020015f205f820151815f015f6101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020155606082015181600301559050508360055f82825461212b9190612c28565b9250508190555089898d6001600160a01b03167f8dd64b29aee989b23200580e70f50a29c6b89ad7d0793cdbd65123f9190475228e60405161216f91815260200190565b60405180910390a450505050505050610c4460018055565b61219181336126a4565b50565b61219c612627565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586121d13390565b6040516001600160a01b03909116815260200160405180910390a1565b6121f66126dd565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336121d1565b60026001540361224a57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6040516001600160a01b038481166024830152838116604483015260648201839052610cd19186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050612700565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301525f919085169063dd62ed3e90604401602060405180830381865afa158015612305573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123299190612bea565b9050610cd1848461233a8585612c28565b61276c565b5f61234a83836116eb565b6123c7575f838152602081815260408083206001600160a01b03861684529091529020805460ff1916600117905561237f3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610829565b505f610829565b5f6123d983836116eb565b156123c7575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610829565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cf8db8626040518163ffffffff1660e01b8152600401602060405180830381865afa158015612494573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906124b89190612d69565b90506001600160a01b0381166124fe5760405162461bcd60e51b815260206004820152600b60248201526a2727afa7a822a920aa27a960a91b60448201526064016108f7565b6002546001600160a01b03610100909104811690821681900361251f575050565b6001600160a01b03811615612573576125455f80516020612da583398151915282611afd565b61255c5f80516020612d8583398151915282611afd565b6125735f80516020612de583398151915282611afd565b60028054610100600160a81b0319166101006001600160a01b038516021790556125aa5f80516020612da58339815191528361233f565b506125c25f80516020612d858339815191528361233f565b506125da5f80516020612de58339815191528361233f565b506125e3612194565b816001600160a01b0316816001600160a01b03167ffd0fa76bc4b7eb1dbcfb7fc92cf74a82b38612a288b2ab10d968c34396be1a6c60405160405180910390a35050565b60025460ff1615610f775760405163d93c066560e01b815260040160405180910390fd5b6040516001600160a01b03838116602483015260448201839052610c7a91859182169063a9059cbb90606401612286565b6003546004546126949165ffffffffffff1690612c28565b4210610f7757426004555f600555565b6126ae82826116eb565b6109435760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016108f7565b60025460ff16610f7757604051638dfc202b60e01b815260040160405180910390fd5b5f8060205f8451602086015f885af18061271f576040513d5f823e3d81fd5b50505f513d91508115612736578060011415612743565b6001600160a01b0384163b155b15610cd157604051635274afe760e01b81526001600160a01b03851660048201526024016108f7565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526127bd84826127fb565b610cd1576040516001600160a01b0384811660248301525f60448301526127f191869182169063095ea7b390606401612286565b610cd18482612700565b5f805f8060205f8651602088015f8a5af192503d91505f51905082801561283a5750811561282c578060011461283a565b5f866001600160a01b03163b115b9695505050505050565b5f60208284031215612854575f80fd5b81356001600160e01b03198116811461286b575f80fd5b9392505050565b80358015158114612881575f80fd5b919050565b5f8060408385031215612897575f80fd5b823591506128a760208401612872565b90509250929050565b5f602082840312156128c0575f80fd5b5035919050565b803561ffff81168114612881575f80fd5b5f80604083850312156128e9575f80fd5b823591506128a7602084016128c7565b5f60208284031215612909575f80fd5b61286b82612872565b6001600160a01b0381168114612191575f80fd5b5f805f60608486031215612938575f80fd5b833561294381612912565b95602085013595506040909401359392505050565b5f60208284031215612968575f80fd5b813561286b81612912565b5f8060408385031215612984575f80fd5b82359150602083013561299681612912565b809150509250929050565b5f80604083850312156129b2575f80fd5b82356129bd81612912565b946020939093013593505050565b5f805f80608085870312156129de575f80fd5b6129e7856128c7565b93506129f5602086016128c7565b9250612a03604086016128c7565b9150606085013565ffffffffffff81168114612a1d575f80fd5b939692955090935050565b5f8083601f840112612a38575f80fd5b50813567ffffffffffffffff811115612a4f575f80fd5b602083019150836020828501011115612a66575f80fd5b9250929050565b5f805f60408486031215612a7f575f80fd5b83359250602084013567ffffffffffffffff811115612a9c575f80fd5b612aa886828701612a28565b9497909650939450505050565b5f805f60608486031215612ac7575f80fd5b505081359360208301359350604090920135919050565b5f8060208385031215612aef575f80fd5b823567ffffffffffffffff80821115612b06575f80fd5b818501915085601f830112612b19575f80fd5b813581811115612b27575f80fd5b8660208260051b8501011115612b3b575f80fd5b60209290920196919550909350505050565b5f8060408385031215612b5e575f80fd5b50508035926020909101359150565b5f805f805f8060a08789031215612b82575f80fd5b863595506020870135945060408701359350606087013567ffffffffffffffff811115612bad575f80fd5b612bb989828a01612a28565b979a9699509497949695608090950135949350505050565b5f60208284031215612be1575f80fd5b61286b826128c7565b5f60208284031215612bfa575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561082957610829612c01565b8082018082111561082957610829612c01565b808202811582820484141761082957610829612c01565b5f82612c6c57634e487b7160e01b5f52601260045260245ffd5b500490565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b60018060a01b0386168152846020820152836040820152608060608201525f610e2b608083018486612c71565b6020808252600e908201526d14d514905517d11254d05093115160921b604082015260600190565b5f60208284031215612cfe575f80fd5b815160ff8116811461286b575f80fd5b634e487b7160e01b5f52603260045260245ffd5b60018060a01b038816815286602082015285604082015284606082015260c060808201525f612d5560c083018587612c71565b90508260a083015298975050505050505050565b5f60208284031215612d79575f80fd5b815161286b8161291256fe061671c5d9c2848c4e78f3cfd7efc04c5d793e746efab769b3416aa5bbfb40ccdf058f017018cec776721a5a8df2a193f80faf9c7b8bbf29a37c17b2cf0a7a6a1b2039bf446bda677d0fc3090b979eb8ac19c564e1d7bf26d59219a9c244afb0372d55e37651a7c6e1940a3fb8628e4b6122a3c1a8b2b70aee13e07228604567a2646970667358221220c476a68520a35201c33e27fb0011372845803ced1ac5046e1006a8ba499b663264736f6c63430008180033061671c5d9c2848c4e78f3cfd7efc04c5d793e746efab769b3416aa5bbfb40ccdf058f017018cec776721a5a8df2a193f80faf9c7b8bbf29a37c17b2cf0a7a6a372d55e37651a7c6e1940a3fb8628e4b6122a3c1a8b2b70aee13e07228604567608060405234801561000f575f80fd5b506101608061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80633825d82814610043578063aea910781461006e578063d8674dab146100a8575b5f80fd5b61006c6100513660046100e2565b6001600160a01b039091165f90815260208190526040902055565b005b61009661007c36600461010a565b6001600160a01b03165f9081526020819052604090205490565b60405190815260200160405180910390f35b6100966100b636600461010a565b5f6020819052908152604090205481565b80356001600160a01b03811681146100dd575f80fd5b919050565b5f80604083850312156100f3575f80fd5b6100fc836100c7565b946020939093013593505050565b5f6020828403121561011a575f80fd5b610123826100c7565b939250505056fea26469706673582212203ddc45ff0baf3b0263be730e9caea87f8fcad02e7df00132d445139de5a9ae6d64736f6c6343000818003360c060405234801562000010575f80fd5b50604051620054bc380380620054bc83398101604081905262000033916200024c565b600180556001600160a01b038116158015906200005857506001600160a01b03831615155b620000955760405162461bcd60e51b81526020600482015260096024820152682d22a927afa0a2222960b91b604482015260640160405180910390fd5b6001600160a01b0381811660805283811660a052600280546001600160a01b031916918416919091179055620000ec7fdf058f017018cec776721a5a8df2a193f80faf9c7b8bbf29a37c17b2cf0a7a6a8762000188565b50620001197f061671c5d9c2848c4e78f3cfd7efc04c5d793e746efab769b3416aa5bbfb40cc8662000188565b50620001467f372d55e37651a7c6e1940a3fb8628e4b6122a3c1a8b2b70aee13e072286045678562000188565b506200017b7faa7928cf07feced9a83ea7cfbed4c4d0a65fcdd513fad1d88617046db8c3710460a0516200018860201b60201c565b50505050505050620002dc565b5f828152602081815260408083206001600160a01b038516845290915281205460ff166200022b575f838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055620001e23390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016200022e565b505f5b92915050565b6001600160a01b038116811462000249575f80fd5b50565b5f805f805f8060c0878903121562000262575f80fd5b86516200026f8162000234565b6020880151909650620002828162000234565b6040880151909550620002958162000234565b6060880151909450620002a88162000234565b6080880151909350620002bb8162000234565b60a0880151909250620002ce8162000234565b809150509295509295509295565b60805160a051615139620003835f395f8181610596015281816118a10152818161192301528181611a17015281816120b80152818161212501526122b001525f81816106240152818161086101528181610af8015281816118740152818161208b01528181612d3901528181612dc001528181612f0d0152818161303d01528181613a5601528181613b9a01528181613ca601528181613d490152613df101526151395ff3fe608060405234801561000f575f80fd5b50600436106101dc575f3560e01c80636bc84c33116101095780639a5eecb91161009e578063d547741f1161006e578063d547741f14610646578063d80eff2014610659578063e0eb70991461066d578063fd2881c01461068f575f80fd5b80639a5eecb9146105de578063a217fddf146105f1578063b047eb02146105f8578063cdf456e11461061f575f80fd5b8063895ec75f116100d9578063895ec75f1461057d57806390e1437c1461059157806391d14854146105b857806394793bf9146105cb575f80fd5b80636bc84c33146105195780637adbf9731461052c5780637dc0d1d01461053f578063820216351461056a575f80fd5b80632f2ff15d1161017f5780633ff34eb91161014f5780633ff34eb9146103555780634700bcbe146104ac578063476b4c1d146104d857806361dd0c93146104eb575f80fd5b80632f2ff15d14610309578063346cc2c01461031c57806336568abe1461032f5780633d07e8fb14610342575f80fd5b806322aa0e5a116101ba57806322aa0e5a1461023f578063248a9ca3146102c157806325870fc7146102e35780632d88af4a146102f6575f80fd5b806301ffc9a7146101e05780631c8c4c02146102085780631f4930781461022a575b5f80fd5b6101f36101ee36600461428e565b610728565b60405190151581526020015b60405180910390f35b61021c5f805160206150e483398151915281565b6040519081526020016101ff565b61023d6102383660046142bc565b61075e565b005b61028c61024d3660046142f3565b60066020525f908152604090205461ffff8082169162010000810482169160ff600160201b83041691600160281b8104821691600160381b9091041685565b6040805161ffff968716815294861660208601529215159284019290925283166060830152909116608082015260a0016101ff565b61021c6102cf3660046142f3565b5f9081526020819052604090206001015490565b61023d6102f136600461431e565b6110ef565b61023d61030436600461431e565b611122565b61023d610317366004614339565b611163565b61023d61032a366004614367565b61118d565b61023d61033d366004614339565b611ad1565b61023d6103503660046143a6565b611b04565b61049d6103633660046142f3565b600460208181525f928352604092839020805484516060808201875260018401546001600160a01b0390811683526002850154811683870152875160a08082018a52600387015461ffff8082168452620100008083048216858c015260ff600160201b840481161515868f0152600160281b8404831686890152600160381b9093048216608080870191909152888e01959095528c518085018e529b8a015486168c5260058a015486168c8c015260068a01549586168c8e0152600160a01b90950481168b8701528b5160e081018d5260078a015480831682529590950481169985019990995260088801549a84019a909a52600987015493830193909352600a909501548089161515828701526101008104871692820192909252630100000090910490941660c0850152918401929092529216919083565b6040516101ff939291906143fd565b6104bf6104ba3660046145e8565b611b79565b60408051921515835260ff9091166020830152016101ff565b61023d6104e6366004614676565b611c84565b6104fe6104f93660046146db565b611ecf565b604080519384526020840192909252908201526060016101ff565b61023d6105273660046143a6565b612391565b61023d61053a36600461431e565b6123fa565b600254610552906001600160a01b031681565b6040516001600160a01b0390911681526020016101ff565b61023d610578366004614751565b612434565b61021c5f805160206150a483398151915281565b6105527f000000000000000000000000000000000000000000000000000000000000000081565b6101f36105c6366004614339565b6124ea565b6101f36105d93660046142f3565b612512565b61023d6105ec3660046147b5565b612842565b61021c5f81565b61021c7f372d55e37651a7c6e1940a3fb8628e4b6122a3c1a8b2b70aee13e0722860456781565b6105527f000000000000000000000000000000000000000000000000000000000000000081565b61023d610654366004614339565b612915565b61021c5f805160206150c483398151915281565b6101f361067b36600461431e565b60056020525f908152604090205460ff1681565b6106e861069d3660046142f3565b600360208190525f9182526040909120805460018201546002830154929093015461ffff80831694620100009093048116939160ff8116916101008204811691630100000090041687565b6040805161ffff98891681529688166020880152860194909452606085019290925215156080840152831660a083015290911660c082015260e0016101ff565b5f6001600160e01b03198216637965db0b60e01b148061075857506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f805160206150c483398151915261077581612939565b5f6107836020840184614837565b6002811115610794576107946143c9565b03610a0f575f6107aa604084016020850161431e565b6001600160a01b0316146107f85760405162461bcd60e51b815260206004820152601060248201526f24a222a72a2fa727afaba920a82822a960811b60448201526064015b60405180910390fd5b5f610809606084016040850161431e565b6001600160a01b0316036108575760405162461bcd60e51b815260206004820152601560248201527424a222a72a2fa722a2a229afa1a7a72722a1aa27a960591b60448201526064016107ef565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610891606084016040850161431e565b6001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108cc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108f09190614852565b6001600160a01b0316146109465760405162461bcd60e51b815260206004820152601a60248201527f434f4e4e4543544f525f4e454544535f424153455f415353455400000000000060448201526064016107ef565b61096061095b3684900384016060850161486d565b612946565b5f6109736101208401610100850161431e565b6001600160a01b03161480156109a257505f6109976101408401610120850161431e565b6001600160a01b0316145b80156109c757505f6109bc6101608401610140850161431e565b6001600160a01b0316145b610a0a5760405162461bcd60e51b8152602060048201526014602482015273424f52524f575f4346475f4e4f545f454d50545960601b60448201526064016107ef565b61102f565b6001610a1e6020840184614837565b6002811115610a2f57610a2f6143c9565b03610d0f575f610a45604084016020850161431e565b6001600160a01b031603610a905760405162461bcd60e51b81526020600482015260126024820152712ba920a82fa722a2a229afaba920a82822a960711b60448201526064016107ef565b5f610aa1606084016040850161431e565b6001600160a01b031603610aee5760405162461bcd60e51b81526020600482015260146024820152732ba920a82fa722a2a229afa1a7a72722a1aa27a960611b60448201526064016107ef565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610b28604084016020850161431e565b6001600160a01b0316635001f3b56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b63573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b879190614852565b6001600160a01b031614610bd25760405162461bcd60e51b81526020600482015260126024820152710aea482a0be8482a68abe9a92a69a82a886960731b60448201526064016107ef565b610be2604083016020840161431e565b6001600160a01b03166350e70d486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c1d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c419190614852565b6001600160a01b0316610c5a606084016040850161431e565b6001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c95573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cb99190614852565b6001600160a01b0316146109465760405162461bcd60e51b815260206004820152601860248201527f434f4e4e4543544f525f41535345545f4d49534d41544348000000000000000060448201526064016107ef565b6002610d1e6020840184614837565b6002811115610d2f57610d2f6143c9565b03610ff8575f610d476101208401610100850161431e565b6001600160a01b031603610d945760405162461bcd60e51b81526020600482015260146024820152732127a92927abafa722a2a229afa0a220a82a22a960611b60448201526064016107ef565b5f610da76101408401610120850161431e565b6001600160a01b031603610dfd5760405162461bcd60e51b815260206004820152601760248201527f424f52524f575f4e454544535f444542545f415353455400000000000000000060448201526064016107ef565b5f610e106101608401610140850161431e565b6001600160a01b031603610e5f5760405162461bcd60e51b81526020600482015260166024820152752127a92927abafa722a2a229afa1a7a72722a1aa27a960511b60448201526064016107ef565b610e716101408301610120840161431e565b6001600160a01b0316610e8c6101608401610140850161431e565b6001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ec7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eeb9190614852565b6001600160a01b031614610f415760405162461bcd60e51b815260206004820152601b60248201527f434f4e4e4543544f525f626f72726f7765645f4d49534d41544348000000000060448201526064016107ef565b610f5b610f5661018084016101608501614903565b612974565b610f76610f71368490038401610180850161491e565b6129b5565b5f610f87604084016020850161431e565b6001600160a01b0316148015610fb457505f610fa9606084016040850161431e565b6001600160a01b0316145b610a0a5760405162461bcd60e51b81526020600482015260156024820152744445504f5349545f4346475f4e4f545f454d50545960581b60448201526064016107ef565b60405162461bcd60e51b815260206004820152600c60248201526b155392d393d5d397d2d2539160a21b60448201526064016107ef565b5f83815260046020526040902082906110488282614ab1565b508390507f632829a877476ba0498e8f4a1ca7697b2f82a7494e01e709aba7f5422a0016b561107a6020850185614837565b61108a604086016020870161431e565b61109a606087016040880161431e565b6110ac6101208801610100890161431e565b6110be61014089016101208a0161431e565b6110d06101608a016101408b0161431e565b6040516110e296959493929190614bf3565b60405180910390a2505050565b5f805160206150c483398151915261110681612939565b61111d5f805160206150a4833981519152836129e7565b505050565b5f805160206150c483398151915261113981612939565b61111d7f372d55e37651a7c6e1940a3fb8628e4b6122a3c1a8b2b70aee13e07228604567836129e7565b5f8281526020819052604090206001015461117d81612939565b61118783836129e7565b50505050565b611195612a76565b6111ac5f805160206150a4833981519152336124ea565b806111c957506111c95f805160206150e4833981519152336124ea565b6112095760405162461bcd60e51b815260206004820152601160248201527013d393164812d1515411548813d4881413607a1b60448201526064016107ef565b5f828152600460205260408082208151606081019092528054829060ff166002811115611238576112386143c9565b6002811115611249576112496143c9565b8152604080516060808201835260018501546001600160a01b03908116835260028601548116602084810191909152845160a08082018752600389015461ffff80821684526201000080830482168587015260ff600160201b840481161515868c0152600160281b84048316868a0152600160381b9093048216608080870191909152898b0195909552858b019890985288518084018a5260048c01548716815260058c015487168187015260068c0154968716818b0152600160a01b909604811686880152885160e081018a5260078c015480831682529890980481168886015260088b0154888a015260098b015496880196909652600a909901549889161515868301526101008904851690860152630100000090970490921660c0840152948501919091529181019290925282015101519091505f82516002811115611394576113946143c9565b14806113b257506001825160028111156113b0576113b06143c9565b145b6113f15760405162461bcd60e51b815260206004820152601060248201526f1393d517d1115413d4d25517d2d2539160821b60448201526064016107ef565b60208083015101516001600160a01b031661141e5760405162461bcd60e51b81526004016107ef90614c3a565b60208281015101516040516302c62fa160e41b81526001600160a01b0387811660048301525f921690632c62fa1090602401602060405180830381865afa15801561146b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061148f9190614c62565b90505f81116114d15760405162461bcd60e51b815260206004820152600e60248201526d1393d7d15395125513115351539560921b60448201526064016107ef565b5f5f1985146114ee57818511156114e857816114f0565b846114f0565b815b90505f81116115355760405162461bcd60e51b81526020600482015260116024820152704e4f5448494e475f544f5f52454445454d60781b60448201526064016107ef565b5f836040015161154657835161154c565b83606001515b90505f61271061155c8382614c8d565b61156a9061ffff1685614caf565b6115749190614cc6565b90505f8660200151602001516001600160a01b031663b426b8258b86856040518463ffffffff1660e01b81526004016115af93929190614ce5565b60408051808303815f875af11580156115ca573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115ee9190614d06565b509050818110156116345760405162461bcd60e51b815260206004820152601060248201526f14915111515357d4d213d4951190531360821b60448201526064016107ef565b8060018851600281111561164a5761164a6143c9565b0361185d576020880151516001600160a01b03811661169a5760405162461bcd60e51b815260206004820152600c60248201526b15d4905417d393d517d4d15560a21b60448201526064016107ef565b5f816001600160a01b03166350e70d486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116d7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116fb9190614852565b60405163095ea7b360e01b81529091506001600160a01b0382169063095ea7b39061172c9085908890600401614d28565b6020604051808303815f875af1158015611748573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061176c9190614d41565b505f8960400151611781578960200151611787565b89608001515b90505f61271061179b61ffff841688614caf565b6117a59190614cc6565b604051636f074d1f60e11b8152600481018890529091505f906001600160a01b0386169063de0e9a3e906024016020604051808303815f875af11580156117ee573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118129190614c62565b9050818110156118565760405162461bcd60e51b815260206004820152600f60248201526e554e575241505f534c49505041474560881b60448201526064016107ef565b9450505050505b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906118cb907f0000000000000000000000000000000000000000000000000000000000000000908590600401614d28565b6020604051808303815f875af11580156118e7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061190b9190614d41565b506040516308ad9ed760e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906322b67b5c9061195c908e9085908f90600401614ce5565b5f604051808303815f87803b158015611973575f80fd5b505af1158015611985573d5f803e3d5ffd5b5050506020808a015101516040516302c62fa160e41b81526001600160a01b038e811660048301529091169150632c62fa1090602401602060405180830381865afa1580156119d6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119fa9190614c62565b5f03611a7c57604051631904547560e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063641151d490611a4e908e908e90600401614d28565b5f604051808303815f87803b158015611a65575f80fd5b505af1158015611a77573d5f803e3d5ffd5b505050505b898b6001600160a01b03167f490bf3846dd347fe2c06e6ab3cec012b6777612fe7312cd0d26e9d51d3f171ce83604051611ab891815260200190565b60405180910390a3505050505050505061111d60018055565b6001600160a01b0381163314611afa5760405163334bd91960e11b815260040160405180910390fd5b61111d8282612aa0565b5f805160206150c4833981519152611b1b81612939565b5f83815260046020526040908190206003018054841515600160201b0264ff00000000199091161790555183907f1a00eac50c4add93371fbba51ce853d0514d5e93b8ef82d494f783a74f33fe34906110e290851515815260200190565b5f80846080015115611b9057505f90506001611c7c565b60405163f80b656560e01b81526001600160a01b0384811660048301525f9182918291829189169063f80b656590602401608060405180830381865afa158015611bdc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c009190614d5c565b93509350935093505f8960400151118015611c185750835b8015611c275750886040015183115b15611c3c575f60029550955050505050611c7c565b5f8960600151118015611c4c5750815b8015611c5b5750886060015181105b15611c70575f60039550955050505050611c7c565b60015f95509550505050505b935093915050565b611c8c612a76565b5f805160206150e4833981519152611ca381612939565b5f848152600460205260408082208151606081019092528054829060ff166002811115611cd257611cd26143c9565b6002811115611ce357611ce36143c9565b8152604080516060808201835260018501546001600160a01b03908116835260028601548116602084810191909152845160a08082018752600389015461ffff80821684526201000080830482168587015260ff600160201b840481161515868c0152600160281b84048316868a0152600160381b9093048216608080870191909152898b0195909552858b019890985288518084018a5260048c01548716815260058c015487168187015260068c0154968716818b0152600160a01b909604811686880152885160e081018a5260078c015480831682529890980481169488019490945260088a01548789015260098a015495870195909552600a909801549384161515858201526101008404821697850197909752630100000090920490911660c083015293840152015290505f81516002811115611e2657611e266143c9565b1480611e445750600181516002811115611e4257611e426143c9565b145b15611e5957611e54878787612b09565b611ebd565b600281516002811115611e6e57611e6e6143c9565b03611e8057611e548787878787613285565b60405162461bcd60e51b8152602060048201526012602482015271155392d393d5d397d4d514905517d2d2539160721b60448201526064016107ef565b5050611ec860018055565b5050505050565b5f805f611eda612a76565b611ef15f805160206150a4833981519152336124ea565b80611f0e5750611f0e5f805160206150e4833981519152336124ea565b611f4e5760405162461bcd60e51b815260206004820152601160248201527013d393164812d1515411548813d4881413607a1b60448201526064016107ef565b5f8981526004602052604090206002815460ff166002811115611f7357611f736143c9565b14611fad5760405162461bcd60e51b815260206004820152600a60248201526914d514905517d2d2539160b21b60448201526064016107ef565b6004810180546001600160a01b031615801590611fd6575060018101546001600160a01b031615155b8015611fee575060028101546001600160a01b031615155b6120285760405162461bcd60e51b815260206004820152600b60248201526a4346475f4d495353494e4760a81b60448201526064016107ef565b6120348c828c8961351e565b815460018301549194505f916001600160a01b03918216911661205a8282888e8e6137e2565b909750925061207191508390508a8a84898f613a3d565b60405163095ea7b360e01b81529096506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906120e2907f0000000000000000000000000000000000000000000000000000000000000000908a90600401614d28565b6020604051808303815f875af11580156120fe573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121229190614d41565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166322b67b5c8e888f6040518463ffffffff1660e01b815260040161217393929190614ce5565b5f604051808303815f87803b15801561218a575f80fd5b505af115801561219c573d5f803e3d5ffd5b50505050816002015f9054906101000a90046001600160a01b03166001600160a01b0316632c62fa108e6040518263ffffffff1660e01b81526004016121f191906001600160a01b0391909116815260200190565b602060405180830381865afa15801561220c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122309190614c62565b1580156122a95750815460018301546040516311005b0760e01b81526001600160a01b0391821660048201529116906311005b0790602401602060405180830381865afa158015612283573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122a79190614c62565b155b1561232a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663641151d48e8e6040518363ffffffff1660e01b81526004016122fc929190614d28565b5f604051808303815f87803b158015612313575f80fd5b505af1158015612325573d5f803e3d5ffd5b505050505b60408051858152602081018790529081018790528c906001600160a01b038f16907f0a1db12eec413a7ba2a35d944ede0ba6ce93d10359f00307d8b83d476241170c9060600160405180910390a350505061238460018055565b9750975097945050505050565b5f805160206150c48339815191526123a881612939565b5f83815260046020908152604091829020600a01805460ff1916851515908117909155915191825284917fd751460dfa37a649939ce06a0850c35d37260e33cb88cf09361d891bb7ab87f091016110e2565b5f805160206150c483398151915261241181612939565b50600280546001600160a01b0319166001600160a01b0392909216919091179055565b5f805160206150c483398151915261244b81612939565b5f86815260046020908152604091829020600301805461ffff868116600160381b0261ffff60381b19898316600160281b021668ffffffff0000000000198b841662010000810263ffffffff19909616948e169485179590951716171783558451908152928301529188917f82ea984af33e4323de9425a623c76267c0030ef8d8ede50f189c6ee4639988cb910160405180910390a250505050505050565b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b5f818152600360208181526040808420815160e081018352815461ffff80821683526201000090910481169482019490945260018201549281018390526002820154606082015293015460ff8116151560808501526101008104831660a08501526301000000900490911660c083015215801561259157506060810151155b1561259e57505f92915050565b5f838152600460205260408082208151606081019092528054829060ff1660028111156125cd576125cd6143c9565b60028111156125de576125de6143c9565b8152604080516060808201835260018501546001600160a01b03908116835260028601548116602084810191909152845160a08082018752600389015461ffff80821684526201000080830482168587015260ff600160201b840481161515868c0152600160281b84048316868a0152600160381b9093048216608080870191909152898b0195909552858b019890985288518084018a5260048c01548716815260058c015487168187015260068c0154968716818b0152600160a01b909604811686880152885160e081018a5260078c015480831682529890980481169488019490945260088a01548789015260098a015495870195909552600a909801549384161515858201526101008404821697850197909752630100000090920490911660c0830152938401529081019190915281810151519084015191925090156127b157604082810151602001519051631faf920160e11b81526001600160a01b03918216600482015290821690633f5f240290602401602060405180830381865afa92505050801561278e575060408051601f3d908101601f1916820190925261278b91810190614da2565b60015b156127b15783604001518161ffff1611156127af5750600195945050505050565b505b60608301511561283857806001600160a01b03166349f47b916040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612815575060408051601f3d908101601f1916820190925261281291810190614da2565b60015b156128385783606001518161ffff1610156128365750600195945050505050565b505b505f949350505050565b5f805160206150c483398151915261285981612939565b5f8881526004602090815260409182902060078101805461ffff8c811663ffffffff199092168217620100008d8316908102919091178455600885018c9055600985018b9055600a909401805464ffffffff0019166101008b84160264ffff0000001916176301000000928a1692909202919091179055845190815292830191909152918a917f4d81643471296ec367e6beb7d3d4c022b6b72e9aa116b960013c7bfdec423135910160405180910390a2505050505050505050565b5f8281526020819052604090206001015461292f81612939565b6111878383612aa0565b6129438133613c5e565b50565b805161295190612974565b61295e8160200151612974565b61296b8160600151612974565b61294381608001515b61271061ffff821611156129435760405162461bcd60e51b81526020600482015260086024820152674250533e3130302560c01b60448201526064016107ef565b80516129c090612974565b6129cd8160200151612974565b6129da8160a00151612974565b6129438160c00151612974565b5f6129f283836124ea565b612a6f575f838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055612a273390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610758565b505f610758565b600260015403612a9957604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b5f612aab83836124ea565b15612a6f575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610758565b6001600160a01b03831615801590612b2057505f82115b612b575760405162461bcd60e51b81526020600482015260086024820152674241445f4152475360c01b60448201526064016107ef565b5f818152600460205260408082208151606081019092528054829060ff166002811115612b8657612b866143c9565b6002811115612b9757612b976143c9565b8152604080516060808201835260018501546001600160a01b03908116835260028601548116602084810191909152845160a08082018752600389015461ffff80821684526201000080830482168587015260ff600160201b840481161515868c0152600160281b84048316868a0152600160381b9093048216608080870191909152898b0195909552858b019890985288518084018a5260048c01548716815260058c015487168187015260068c0154968716818b0152600160a01b909604811686880152885160e081018a5260078c015480831682529890980481169488019490945260088a01548789015260098a015495870195909552600a909801549384161515858201526101008404821697850197909752630100000090920490911660c083015293840152015290505f81516002811115612cda57612cda6143c9565b1480612cf85750600181516002811115612cf657612cf66143c9565b145b612d375760405162461bcd60e51b815260206004820152601060248201526f1393d517d1115413d4d25517d2d2539160821b60448201526064016107ef565b7f000000000000000000000000000000000000000000000000000000000000000083600183516002811115612d6e57612d6e6143c9565b0361303b576020830151516001600160a01b038116612dbe5760405162461bcd60e51b815260206004820152600c60248201526b15d4905417d393d517d4d15560a21b60448201526064016107ef565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316635001f3b56040518163ffffffff1660e01b8152600401602060405180830381865afa158015612e24573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e489190614852565b6001600160a01b031614612e935760405162461bcd60e51b81526020600482015260126024820152710aea482a0be8482a68abe9a92a69a82a886960731b60448201526064016107ef565b806001600160a01b03166350e70d486040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ecf573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ef39190614852565b60405163095ea7b360e01b81529093506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390612f449084908a90600401614d28565b6020604051808303815f875af1158015612f60573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612f849190614d41565b50604051630ea598cb60e41b8152600481018790525f906001600160a01b0383169063ea598cb0906024016020604051808303815f875af1158015612fcb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612fef9190614c62565b90508681146130325760405162461bcd60e51b815260206004820152600f60248201526e575241505f4e4f545f315f544f5f3160881b60448201526064016107ef565b915061305f9050565b7f000000000000000000000000000000000000000000000000000000000000000091505b60208084015101516001600160a01b031661308c5760405162461bcd60e51b81526004016107ef90614c3a565b816001600160a01b03168360200151602001516001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156130da573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906130fe9190614852565b6001600160a01b03161461314a5760405162461bcd60e51b81526020600482015260136024820152720869e9c9cbe82a6a68aa8be9a92a69a82a8869606b1b60448201526064016107ef565b602080840151015160405163095ea7b360e01b81526001600160a01b0384169163095ea7b39161317f91908590600401614d28565b6020604051808303815f875af115801561319b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906131bf9190614d41565b508260200151602001516001600160a01b0316632f4f21e287836040518363ffffffff1660e01b81526004016131f6929190614d28565b6020604051808303815f875af1158015613212573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906132369190614c62565b50604080518681526020810183905285916001600160a01b038916917f392a03d846f1f19b33118acaf0453b883b9248cd04040e3893089bcbfc4524f0910160405180910390a3505050505050565b6001600160a01b0385161580159061329c57505f84115b6132d35760405162461bcd60e51b81526020600482015260086024820152674241445f4152475360c01b60448201526064016107ef565b5f8381526004602052604090206002815460ff1660028111156132f8576132f86143c9565b146133325760405162461bcd60e51b815260206004820152600a60248201526914d514905517d2d2539160b21b60448201526064016107ef565b60048101546040805160e081018252600784015461ffff8082168352620100009091048116602083015260088501549282019290925260098401546060820152600a84015460ff8116151560808301526101008104831660a08301526301000000900490911660c082015260058301546001600160a01b03928316925f9283926133be92869116611b79565b91509150816134005760405162461bcd60e51b815260206004820152600e60248201526d1093d49493d5d7d09313d0d2d15160921b60448201526064016107ef565b6004840180546001600160a01b031615801590613429575060018101546001600160a01b031615155b6134635760405162461bcd60e51b815260206004820152600b60248201526a4346475f4d495353494e4760a81b60448201526064016107ef565b5f61347087890189614e46565b5050915050613480828b83613c8d565b505f8080613490898b018b614e46565b9350505091506134a2848d8484613da7565b92505f91508190506134b6898b018b614e46565b5092509250506134c9848e858585613e99565b5050604080518b8152602081018390528a916001600160a01b038e16917f0c19a869705042e48abbca264b5462f933047c983dcf445d5d52bd14275eb1cc910160405180910390a35050505050505050505050565b6040805160e081018252600385015461ffff8082168352620100009091048116602083015260048601549282019290925260058501546060820152600685015460ff8116151560808301526101008104831660a08301526301000000900490911660c082015260028401545f91906001600160a01b03166135b15760405162461bcd60e51b81526004016107ef90614c3a565b60028501546040516302c62fa160e41b81526001600160a01b0388811660048301525f921690632c62fa1090602401602060405180830381865afa1580156135fb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061361f9190614c62565b90505f81116136615760405162461bcd60e51b815260206004820152600e60248201526d1393d7d15395125513115351539560921b60448201526064016107ef565b5f5f19861461367e57818611156136785781613680565b85613680565b815b90505f81116136c05760405162461bcd60e51b815260206004820152600c60248201526b16915493d7d49154555154d560a21b60448201526064016107ef565b5f83608001516136d15783516136d7565b8360a001515b90505f6127106136e78382614c8d565b6136f59061ffff1685614caf565b6136ff9190614cc6565b90505f81881161370f5781613711565b875b60028b015460405163b426b82560e01b81529192505f916001600160a01b039091169063b426b8259061374c908f9089908790600401614ce5565b60408051808303815f875af1158015613767573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061378b9190614d06565b509050818110156137d15760405162461bcd60e51b815260206004820152601060248201526f14915111515357d4d213d4951190531360821b60448201526064016107ef565b96505050505050505b949350505050565b6040516311005b0760e01b81526001600160a01b0385811660048301525f9182918816906311005b0790602401602060405180830381865afa15801561382a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061384e9190614c62565b60405163095ea7b360e01b81529091506001600160a01b0387169063095ea7b39061387f908a908990600401614d28565b6020604051808303815f875af115801561389b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906138bf9190614d41565b506040516343528c8f60e11b81526001600160a01b038816906386a5191e906138f2908990899089908990600401614ebf565b6020604051808303815f875af115801561390e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906139329190614c62565b91505f82116139705760405162461bcd60e51b815260206004820152600a60248201526952455041595f5a45524f60b01b60448201526064016107ef565b6040516311005b0760e01b81526001600160a01b0387811660048301525f91908916906311005b0790602401602060405180830381865afa1580156139b7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906139db9190614c62565b90508082101580156139f65750826139f38284614f06565b10155b613a325760405162461bcd60e51b815260206004820152600d60248201526c0888a84a8be9a92a69a82a8869609b1b60448201526064016107ef565b509550959350505050565b8554604051630286fca160e61b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f9216908290829063a1bf284090602401602060405180830381865afa158015613aa8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613acc9190614c62565b90505f8615613aef5786613ae08784614caf565b613aea9190614cc6565b613af1565b5f5b60038b015490915062010000900461ffff168015613b3157612710613b1a61ffff831684614caf565b613b249190614cc6565b613b2e9083614f06565b91505b5f8211613b765760405162461bcd60e51b81526020600482015260136024820152724e4f5448494e475f544f5f574954484452415760681b60448201526064016107ef565b604051636a987c6960e01b81526001600160a01b03851690636a987c6990613bc8907f00000000000000000000000000000000000000000000000000000000000000009086908f908f90600401614ebf565b6020604051808303815f875af1158015613be4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613c089190614c62565b945085851015613c505760405162461bcd60e51b8152602060048201526013602482015272434f4c4c41544552414c5f534c49505041474560681b60448201526064016107ef565b505050509695505050505050565b613c6882826124ea565b613c8957808260405163e2517d3f60e01b81526004016107ef929190614d28565b5050565b825460405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263095ea7b392613ce19291909116908690600401614d28565b6020604051808303815f875af1158015613cfd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613d219190614d41565b50825460405163016f1aa360e41b81526001600160a01b03909116906316f1aa3090613d75907f00000000000000000000000000000000000000000000000000000000000000009086908690600401614f19565b5f604051808303815f87803b158015613d8c575f80fd5b505af1158015613d9e573d5f803e3d5ffd5b50505050505050565b5f805f8461ffff16118015613dce5750600286015461ffff600160a01b9091048116908516105b613de7576002860154600160a01b900461ffff16613de9565b835b90505f613e167f000000000000000000000000000000000000000000000000000000000000000087614046565b90505f612710613e2a61ffff851684614caf565b613e349190614cc6565b6001890154909150613e4f906001600160a01b031682614168565b935084841015613e8e5760405162461bcd60e51b815260206004820152600a6024820152692127a92927abafa6a4a760b11b60448201526064016107ef565b505050949350505050565b8215611ec85784546001860154604051636e2246a760e01b81526001600160a01b0392831692636e2246a792613ed89291169087908790600401614f19565b5f604051808303815f87803b158015613eef575f80fd5b505af1158015613f01573d5f803e3d5ffd5b5050505060028501546001600160a01b03161561400d576001850154600286015460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392613f52929116908790600401614d28565b6020604051808303815f875af1158015613f6e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613f929190614d41565b5060028501546040516317a790f160e11b81526001600160a01b0390911690632f4f21e290613fc79087908790600401614d28565b6020604051808303815f875af1158015613fe3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906140079190614c62565b50611ec8565b60405162461bcd60e51b815260206004820152600e60248201526d1393d7d093d49493d5d7d11154d560921b60448201526064016107ef565b5f815f0361405557505f610758565b6002546040516315d5220f60e31b81526001600160a01b0385811660048301525f92169063aea9107890602401602060405180830381865afa15801561409d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906140c19190614c62565b90505f846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015614100573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906141249190614f7c565b90506305f5e100614136826012614f9c565b61414190600a615095565b61414b8487614caf565b6141559190614caf565b61415f9190614cc6565b95945050505050565b5f815f0361417757505f610758565b6002546040516315d5220f60e31b81526001600160a01b0385811660048301525f92169063aea9107890602401602060405180830381865afa1580156141bf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906141e39190614c62565b90505f846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015614222573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906142469190614f7c565b90505f826142586305f5e10087614caf565b6142629190614cc6565b905061426f826012614f9c565b61427a90600a615095565b6142849082614cc6565b9695505050505050565b5f6020828403121561429e575f80fd5b81356001600160e01b0319811681146142b5575f80fd5b9392505050565b5f808284036102808112156142cf575f80fd5b83359250610260601f19820112156142e5575f80fd5b506020830190509250929050565b5f60208284031215614303575f80fd5b5035919050565b6001600160a01b0381168114612943575f80fd5b5f6020828403121561432e575f80fd5b81356142b58161430a565b5f806040838503121561434a575f80fd5b82359150602083013561435c8161430a565b809150509250929050565b5f805f60608486031215614379575f80fd5b83356143848161430a565b95602085013595506040909401359392505050565b8015158114612943575f80fd5b5f80604083850312156143b7575f80fd5b82359150602083013561435c81614399565b634e487b7160e01b5f52602160045260245ffd5b600381106143f957634e487b7160e01b5f52602160045260245ffd5b9052565b610260810161440c82866143dd565b60018060a01b0380855116602084015280602086015116604084015250604084015161ffff8082511660608501528060208301511660808501526040820151151560a08501528060608301511660c08501528060808301511660e085015250506137da61010083018460018060a01b0380825116835280602083015116602084015280604083015116604084015250606081015161ffff8082166060850152608083015191508082511660808501528060208301511660a0850152604082015160c0850152606082015160e0850152608082015115156101008501528060a0830151166101208501528060c08301511661014085015250505050565b634e487b7160e01b5f52604160045260245ffd5b61ffff81168114612943575f80fd5b80356145368161451c565b919050565b5f60e0828403121561454b575f80fd5b60405160e0810181811067ffffffffffffffff8211171561456e5761456e614508565b604052905080823561457f8161451c565b8152602083013561458f8161451c565b80602083015250604083013560408201526060830135606082015260808301356145b881614399565b608082015260a08301356145cb8161451c565b60a08201526145dc60c0840161452b565b60c08201525092915050565b5f805f61012084860312156145fb575f80fd5b614605858561453b565b925060e08401356146158161430a565b91506101008401356146268161430a565b809150509250925092565b5f8083601f840112614641575f80fd5b50813567ffffffffffffffff811115614658575f80fd5b60208301915083602082850101111561466f575f80fd5b9250929050565b5f805f805f6080868803121561468a575f80fd5b85356146958161430a565b94506020860135935060408601359250606086013567ffffffffffffffff8111156146be575f80fd5b6146ca88828901614631565b969995985093965092949392505050565b5f805f805f805f60c0888a0312156146f1575f80fd5b87356146fc8161430a565b9650602088013595506040880135945060608801359350608088013567ffffffffffffffff81111561472c575f80fd5b6147388a828b01614631565b989b979a5095989497959660a090950135949350505050565b5f805f805f60a08688031215614765575f80fd5b8535945060208601356147778161451c565b935060408601356147878161451c565b925060608601356147978161451c565b915060808601356147a78161451c565b809150509295509295909350565b5f805f805f805f60e0888a0312156147cb575f80fd5b8735965060208801356147dd8161451c565b955060408801356147ed8161451c565b9450606088013593506080880135925060a088013561480b8161451c565b915060c088013561481b8161451c565b8091505092959891949750929550565b60038110612943575f80fd5b5f60208284031215614847575f80fd5b81356142b58161482b565b5f60208284031215614862575f80fd5b81516142b58161430a565b5f60a0828403121561487d575f80fd5b60405160a0810181811067ffffffffffffffff821117156148a0576148a0614508565b60405282356148ae8161451c565b815260208301356148be8161451c565b602082015260408301356148d181614399565b604082015260608301356148e48161451c565b606082015260808301356148f78161451c565b60808201529392505050565b5f60208284031215614913575f80fd5b81356142b58161451c565b5f60e0828403121561492e575f80fd5b6142b5838361453b565b80546001600160a01b0319166001600160a01b0392909216919091179055565b5f81356107588161451c565b813561496f8161430a565b6149798183614938565b5060208201356149888161430a565b6149958160018401614938565b506002810160408301356149a88161430a565b6149b28183614938565b5060608301356149c18161451c565b815461ffff60a01b191660a09190911b61ffff60a01b161790556003810160808301356149ed8161451c565b815461ffff191661ffff82161782555060a0830135614a0b8161451c565b815463ffff00001916601082901b63ffff000016178255505060c0820135600482015560e0820135600582015560068101610100830135614a4b81614399565b815490151560ff1660ff1991909116178155614a85614a6d6101208501614958565b825462ffff00191660089190911b62ffff0016178255565b61111d614a956101408501614958565b825464ffff000000191660189190911b64ffff00000016178255565b8135614abc8161482b565b60038110614ad857634e487b7160e01b5f52602160045260245ffd5b60ff1982541660ff82168117835550506020820135614af68161430a565b614b038160018401614938565b506040820135614b128161430a565b614b1f8160028401614938565b50600381016060830135614b328161451c565b815461ffff191661ffff8216178255506080830135614b508161451c565b815463ffff00001916601082901b63ffff0000161782555060a0830135614b7681614399565b815460c0850135614b868161451c565b66ffff00000000008160281b1664ff0000000084151560201b1666ffffff0000000019841617178455505050614be1614bc160e08501614958565b825461ffff60381b191660389190911b68ffff0000000000000016178255565b50613c89610100830160048301614964565b60c08101614c0182896143dd565b6001600160a01b03968716602083015294861660408201529285166060840152908416608083015290921660a090920191909152919050565b6020808252600e908201526d434f4e4e4543544f525f5a45524f60901b604082015260600190565b5f60208284031215614c72575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b61ffff828116828216039080821115614ca857614ca8614c79565b5092915050565b808202811582820484141761075857610758614c79565b5f82614ce057634e487b7160e01b5f52601260045260245ffd5b500490565b6001600160a01b039390931683526020830191909152604082015260600190565b5f8060408385031215614d17575f80fd5b505080516020909101519092909150565b6001600160a01b03929092168252602082015260400190565b5f60208284031215614d51575f80fd5b81516142b581614399565b5f805f8060808587031215614d6f575f80fd5b8451614d7a81614399565b602086015160408701519195509350614d9281614399565b6060959095015193969295505050565b5f60208284031215614db2575f80fd5b81516142b58161451c565b5f82601f830112614dcc575f80fd5b813567ffffffffffffffff80821115614de757614de7614508565b604051601f8301601f19908116603f01168101908282118183101715614e0f57614e0f614508565b81604052838152866020858801011115614e27575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f8060808587031215614e59575f80fd5b8435614e648161451c565b9350602085013567ffffffffffffffff80821115614e80575f80fd5b614e8c88838901614dbd565b94506040870135915080821115614ea1575f80fd5b50614eae87828801614dbd565b949793965093946060013593505050565b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301375f818301608090810191909152601f909201601f191601019392505050565b8181038181111561075857610758614c79565b60018060a01b03841681525f60208460208401526060604084015283518060608501525f5b81811015614f5a57858101830151858201608001528201614f3e565b505f608082860101526080601f19601f83011685010192505050949350505050565b5f60208284031215614f8c575f80fd5b815160ff811681146142b5575f80fd5b60ff828116828216039081111561075857610758614c79565b600181815b80851115614fef57815f1904821115614fd557614fd5614c79565b80851615614fe257918102915b93841c9390800290614fba565b509250929050565b5f8261500557506001610758565b8161501157505f610758565b816001811461502757600281146150315761504d565b6001915050610758565b60ff84111561504257615042614c79565b50506001821b610758565b5060208310610133831016604e8410600b8410161715615070575081810a610758565b61507a8383614fb5565b805f190482111561508d5761508d614c79565b029392505050565b5f6142b560ff841683614ff756fe061671c5d9c2848c4e78f3cfd7efc04c5d793e746efab769b3416aa5bbfb40ccdf058f017018cec776721a5a8df2a193f80faf9c7b8bbf29a37c17b2cf0a7a6aaa7928cf07feced9a83ea7cfbed4c4d0a65fcdd513fad1d88617046db8c37104a2646970667358221220d164a88174f26e045a3dc46525c3017358f0ef0019d2d631ed29dcbd9b8a828e64736f6c6343000818003360c060405234801561000f575f80fd5b506040516109de3803806109de83398101604081905261002e91610060565b6001600160a01b039182166080521660a052610091565b80516001600160a01b038116811461005b575f80fd5b919050565b5f8060408385031215610071575f80fd5b61007a83610045565b915061008860208401610045565b90509250929050565b60805160a0516108e76100f75f395f818161017d015281816101ec015281816104dc0152818161057c015281816105e4015261068f01525f818160ea01528181610267015281816102f5015281816103860152818161045e015261072501526108e75ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c806386a5191e1161006e57806386a5191e1461014a57806393efd8921461015d578063a1bf284014610165578063a919802d14610178578063d3d780ac1461019f578063f80b6565146101a8575f80fd5b806311005b07146100aa57806316f1aa30146100d05780635001f3b5146100e55780636a987c69146101245780636e2246a714610137575b5f80fd5b6100bd6100b83660046107b2565b6101e9565b6040519081526020015b60405180910390f35b6100e36100de3660046107d2565b610265565b005b61010c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c7565b6100bd6101323660046107d2565b610383565b6100e36101453660046107d2565b6104da565b6100bd6101583660046107d2565b6105e1565b6100bd5f5481565b6100bd6101733660046107b2565b610722565b61010c7f000000000000000000000000000000000000000000000000000000000000000081565b6100bd60015481565b6101c16101b63660046107b2565b5f8080809193509193565b60408051941515855260208501939093529015159183019190915260608201526080016100c7565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161461025d5760405162461bcd60e51b815260206004820152600a6024820152691919589d0bd85cdcd95d60b21b60448201526064015b60405180910390fd5b505060015490565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316146102d35760405162461bcd60e51b815260206004820152600a60248201526918dbdb1b0bd85cdcd95d60b21b6044820152606401610254565b6040516323b872dd60e01b8152336004820152306024820152604481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303815f875af1158015610343573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103679190610852565b50825f808282546103789190610885565b909155505050505050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316146103f05760405162461bcd60e51b81526020600482015260086024820152671dd90bd85cdcd95d60c21b6044820152606401610254565b5f5484111561042d5760405162461bcd60e51b815260206004820152600960248201526877642f65786365737360b81b6044820152606401610254565b835f8082825461043d919061089e565b909155505060405163a9059cbb60e01b8152336004820152602481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303815f875af11580156104ac573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104d09190610852565b5092949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161461054a5760405162461bcd60e51b815260206004820152600c60248201526b189bdc9c9bddcbd85cdcd95d60a21b6044820152606401610254565b8260015f82825461055b9190610885565b90915550506040516340c10f1960e01b8152336004820152602481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f19906044015f604051808303815f87803b1580156105c5575f80fd5b505af11580156105d7573d5f803e3d5ffd5b5050505050505050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316146106515760405162461bcd60e51b815260206004820152600b60248201526a1c995c185e4bd85cdcd95d60aa1b6044820152606401610254565b5f60015485116106615784610665565b6001545b90508015610719576040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303815f875af11580156106dd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107019190610852565b508060015f828254610713919061089e565b90915550505b95945050505050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316146107905760405162461bcd60e51b815260206004820152600960248201526818985b0bd85cdcd95d60ba1b6044820152606401610254565b50505f5490565b80356001600160a01b03811681146107ad575f80fd5b919050565b5f602082840312156107c2575f80fd5b6107cb82610797565b9392505050565b5f805f80606085870312156107e5575f80fd5b6107ee85610797565b935060208501359250604085013567ffffffffffffffff80821115610811575f80fd5b818701915087601f830112610824575f80fd5b813581811115610832575f80fd5b886020828501011115610843575f80fd5b95989497505060200194505050565b5f60208284031215610862575f80fd5b815180151581146107cb575f80fd5b634e487b7160e01b5f52601160045260245ffd5b8082018082111561089857610898610871565b92915050565b818103818111156108985761089861087156fea26469706673582212205857161e1d18d6607c1970be85618469bf4e19b36cb490cd71ffa20c9974e85664736f6c6343000818003360e060405234801562000010575f80fd5b5060405162001644380380620016448339810160408190526200003391620002ac565b8282826003620000448382620003ba565b506004620000538282620003ba565b5050505f8062000069836200010760201b60201c565b91509150816200007b5760126200007d565b805b60ff1660a05250506001600160a01b039081166080526040805163313ce56760e01b815290519185169163313ce567916004808201926020929091908290030181865afa158015620000d1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620000f7919062000486565b60ff1660c05250620004e4915050565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290515f918291829182916001600160a01b038716916200014f91620004af565b5f60405180830381855afa9150503d805f811462000189576040519150601f19603f3d011682016040523d82523d5f602084013e6200018e565b606091505b5091509150818015620001a357506020815110155b15620001da575f81806020019051810190620001c09190620004cc565b905060ff8111620001d8576001969095509350505050565b505b505f9485945092505050565b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101562000216578181015183820152602001620001fc565b50505f910152565b5f82601f8301126200022e575f80fd5b81516001600160401b03808211156200024b576200024b620001e6565b604051601f8301601f19908116603f01168101908282118183101715620002765762000276620001e6565b816040528381528660208588010111156200028f575f80fd5b620002a2846020830160208901620001fa565b9695505050505050565b5f805f60608486031215620002bf575f80fd5b83516001600160a01b0381168114620002d6575f80fd5b60208501519093506001600160401b0380821115620002f3575f80fd5b62000301878388016200021e565b9350604086015191508082111562000317575f80fd5b5062000326868287016200021e565b9150509250925092565b600181811c908216806200034557607f821691505b6020821081036200036457634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620003b557805f5260205f20601f840160051c81016020851015620003915750805b601f840160051c820191505b81811015620003b2575f81556001016200039d565b50505b505050565b81516001600160401b03811115620003d657620003d6620001e6565b620003ee81620003e7845462000330565b846200036a565b602080601f83116001811462000424575f84156200040c5750858301515b5f19600386901b1c1916600185901b1785556200047e565b5f85815260208120601f198616915b82811015620004545788860151825594840194600190910190840162000433565b50858210156200047257878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f6020828403121562000497575f80fd5b815160ff81168114620004a8575f80fd5b9392505050565b5f8251620004c2818460208701620001fa565b9190910192915050565b5f60208284031215620004dd575f80fd5b5051919050565b60805160a05160c051611123620005215f395f61020c01525f50505f818161024301528181610397015281816107b1015261087101526111235ff3fe608060405234801561000f575f80fd5b506004361061016d575f3560e01c806370a08231116100d9578063ba08765211610093578063ce96cb771161006e578063ce96cb7714610336578063d905777e14610349578063dd62ed3e1461035c578063ef8b30f714610323575f80fd5b8063ba08765214610310578063c63d75b61461026d578063c6e6f59214610323575f80fd5b806370a082311461029457806394bf804d146102bc57806395d89b41146102cf578063a9059cbb146102d7578063b3d7f6b9146102ea578063b460af94146102fd575f80fd5b806323b872dd1161012a57806323b872dd146101f2578063313ce5671461020557806338d52e0f14610236578063402d267d1461026d5780634cdad506146101a15780636e553f6514610281575f80fd5b806301e1d1141461017157806306fdde031461018c57806307a2d13a146101a1578063095ea7b3146101b45780630a28a477146101d757806318160ddd146101ea575b5f80fd5b610179610394565b6040519081526020015b60405180910390f35b610194610423565b6040516101839190610d90565b6101796101af366004610ddc565b6104b3565b6101c76101c2366004610e0e565b6104c4565b6040519015158152602001610183565b6101796101e5366004610ddc565b6104db565b600254610179565b6101c7610200366004610e36565b6104e7565b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610183565b6040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152602001610183565b61017961027b366004610e6f565b505f1990565b61017961028f366004610e88565b61050c565b6101796102a2366004610e6f565b6001600160a01b03165f9081526020819052604090205490565b6101796102ca366004610e88565b61053d565b610194610558565b6101c76102e5366004610e0e565b610567565b6101796102f8366004610ddc565b610574565b61017961030b366004610eb2565b610580565b61017961031e366004610eb2565b6105d6565b610179610331366004610ddc565b610623565b610179610344366004610e6f565b61062e565b610179610357366004610e6f565b610650565b61017961036a366004610eeb565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b5f7f00000000000000000000000000000000000000000000000000000000000000006040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156103fa573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061041e9190610f13565b905090565b60606003805461043290610f2a565b80601f016020809104026020016040519081016040528092919081815260200182805461045e90610f2a565b80156104a95780601f10610480576101008083540402835291602001916104a9565b820191905f5260205f20905b81548152906001019060200180831161048c57829003601f168201915b5050505050905090565b5f6104be825f61066d565b92915050565b5f336104d18185856106a5565b5060019392505050565b5f6104be8260016106b7565b5f336104f48582856106e6565b6104ff85858561074f565b60019150505b9392505050565b5f5f1961051d565b60405180910390fd5b5f61052785610623565b9050610535338587846107ac565b949350505050565b5f5f195f61054a85610574565b9050610535338583886107ac565b60606004805461043290610f2a565b5f336104d181858561074f565b5f6104be82600161066d565b5f8061058b8361062e565b9050808511156105b457828582604051633fa733bb60e21b815260040161051493929190610f62565b5f6105be866104db565b90506105cd338686898561083e565b95945050505050565b5f806105e183610650565b90508085111561060a57828582604051632e52afbb60e21b815260040161051493929190610f62565b5f610614866104b3565b90506105cd338686848a61083e565b5f6104be825f6106b7565b6001600160a01b0381165f908152602081905260408120546104be905f61066d565b6001600160a01b0381165f908152602081905260408120546104be565b5f610505610679610394565b610684906001610f97565b61068f5f600a61108a565b60025461069c9190610f97565b859190856108fe565b6106b28383836001610940565b505050565b5f6105056106c682600a61108a565b6002546106d39190610f97565b6106db610394565b61069c906001610f97565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610749578181101561073b57828183604051637dc7a0d960e11b815260040161051493929190610f62565b61074984848484035f610940565b50505050565b6001600160a01b03831661077857604051634b637e8f60e11b81525f6004820152602401610514565b6001600160a01b0382166107a15760405163ec442f0560e01b81525f6004820152602401610514565b6106b2838383610a04565b6107d87f0000000000000000000000000000000000000000000000000000000000000000853085610b17565b6107e28382610b7e565b826001600160a01b0316846001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78484604051610830929190918252602082015260400190565b60405180910390a350505050565b826001600160a01b0316856001600160a01b031614610862576108628386836106e6565b61086c8382610bb6565b6108977f00000000000000000000000000000000000000000000000000000000000000008584610bea565b826001600160a01b0316846001600160a01b0316866001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db85856040516108ef929190918252602082015260400190565b60405180910390a45050505050565b5f61092b61090b83610c1b565b801561092657505f848061092157610921611098565b868809115b151590565b610936868686610c47565b6105cd9190610f97565b6001600160a01b0384166109695760405163e602df0560e01b81525f6004820152602401610514565b6001600160a01b03831661099257604051634a1406b160e11b81525f6004820152602401610514565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561074957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161083091815260200190565b6001600160a01b038316610a2e578060025f828254610a239190610f97565b90915550610a8b9050565b6001600160a01b0383165f9081526020819052604090205481811015610a6d5783818360405163391434e360e21b815260040161051493929190610f62565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610aa757600280548290039055610ac5565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b0a91815260200190565b60405180910390a3505050565b6040516001600160a01b0384811660248301528381166044830152606482018390526107499186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610cf7565b6001600160a01b038216610ba75760405163ec442f0560e01b81525f6004820152602401610514565b610bb25f8383610a04565b5050565b6001600160a01b038216610bdf57604051634b637e8f60e11b81525f6004820152602401610514565b610bb2825f83610a04565b6040516001600160a01b038381166024830152604482018390526106b291859182169063a9059cbb90606401610b4c565b5f6002826003811115610c3057610c306110ac565b610c3a91906110c0565b60ff166001149050919050565b5f805f610c548686610d63565b91509150815f03610c7857838181610c6e57610c6e611098565b0492505050610505565b818411610c8f57610c8f6003851502601118610d7f565b5f848688095f868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010185841190960395909502919093039390930492909217029150509392505050565b5f8060205f8451602086015f885af180610d16576040513d5f823e3d81fd5b50505f513d91508115610d2d578060011415610d3a565b6001600160a01b0384163b155b1561074957604051635274afe760e01b81526001600160a01b0385166004820152602401610514565b5f805f1983850993909202808410938190039390930393915050565b634e487b715f52806020526024601cfd5b5f602080835283518060208501525f5b81811015610dbc57858101830151858201604001528201610da0565b505f604082860101526040601f19601f8301168501019250505092915050565b5f60208284031215610dec575f80fd5b5035919050565b80356001600160a01b0381168114610e09575f80fd5b919050565b5f8060408385031215610e1f575f80fd5b610e2883610df3565b946020939093013593505050565b5f805f60608486031215610e48575f80fd5b610e5184610df3565b9250610e5f60208501610df3565b9150604084013590509250925092565b5f60208284031215610e7f575f80fd5b61050582610df3565b5f8060408385031215610e99575f80fd5b82359150610ea960208401610df3565b90509250929050565b5f805f60608486031215610ec4575f80fd5b83359250610ed460208501610df3565b9150610ee260408501610df3565b90509250925092565b5f8060408385031215610efc575f80fd5b610f0583610df3565b9150610ea960208401610df3565b5f60208284031215610f23575f80fd5b5051919050565b600181811c90821680610f3e57607f821691505b602082108103610f5c57634e487b7160e01b5f52602260045260245ffd5b50919050565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b808201808211156104be576104be610f83565b600181815b80851115610fe457815f1904821115610fca57610fca610f83565b80851615610fd757918102915b93841c9390800290610faf565b509250929050565b5f82610ffa575060016104be565b8161100657505f6104be565b816001811461101c576002811461102657611042565b60019150506104be565b60ff84111561103757611037610f83565b50506001821b6104be565b5060208310610133831016604e8410600b8410161715611065575081810a6104be565b61106f8383610faa565b805f190482111561108257611082610f83565b029392505050565b5f61050560ff841683610fec565b634e487b7160e01b5f52601260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b5f60ff8316806110de57634e487b7160e01b5f52601260045260245ffd5b8060ff8416069150509291505056fea2646970667358221220437346fa5f403ef105a61095c79c0b6e718e7a3dfa5871860b3bc48a621662da64736f6c6343000818003360a060405234801562000010575f80fd5b506040516200127d3803806200127d83398101604081905262000033916200028c565b600180556001600160a01b038316158015906200005857506001600160a01b03821615155b620000965760405162461bcd60e51b81526020600482015260096024820152682d22a927afa0a2222960b91b60448201526064015b60405180910390fd5b6001600160a01b038116620000db5760405162461bcd60e51b815260206004820152600a6024820152695641554c545f5a45524f60b01b60448201526064016200008d565b600280546001600160a01b0319166001600160a01b038316908117909155604080516338d52e0f60e01b815290516338d52e0f916004808201926020929091908290030181865afa15801562000133573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620001599190620002dd565b6001600160a01b0316608052620001917fb058f49d6462f3b1a3b260356aa683712ff15e590972bfac826dd6f0ac9f69cc84620001c8565b50620001be7f14d709f3f05686e62c95aa969cf0a78b04a197162d2e5b7a0b48f3c77bb2512483620001c8565b5050505062000302565b5f828152602081815260408083206001600160a01b038516845290915281205460ff166200026b575f838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055620002223390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016200026e565b505f5b92915050565b6001600160a01b038116811462000289575f80fd5b50565b5f805f606084860312156200029f575f80fd5b8351620002ac8162000274565b6020850151909350620002bf8162000274565b6040850151909250620002d28162000274565b809150509250925092565b5f60208284031215620002ee575f80fd5b8151620002fb8162000274565b9392505050565b608051610f4d620003305f395f818161021b015281816104700152818161054a0152610b120152610f4d5ff3fe608060405234801561000f575f80fd5b5060043610610111575f3560e01c806338d52e0f1161009e578063a217fddf1161006e578063a217fddf14610260578063a515ace314610267578063b426b8251461028e578063d547741f146102b6578063de69b3aa146102c9575f80fd5b806338d52e0f146102165780633cd4f53e1461023d5780636bdee1f41461024557806391d148541461024d575f80fd5b8063248a9ca3116100e4578063248a9ca3146101a65780632c62fa10146101c85780632f2ff15d146101db5780632f4f21e2146101f057806336568abe14610203575f80fd5b806301ffc9a714610115578063049947121461013d57806307c7ac1b146101545780631f92db451461017b575b5f80fd5b610128610123366004610dac565b6102e8565b60405190151581526020015b60405180910390f35b61014660045481565b604051908152602001610134565b6101467f14d709f3f05686e62c95aa969cf0a78b04a197162d2e5b7a0b48f3c77bb2512481565b60025461018e906001600160a01b031681565b6040516001600160a01b039091168152602001610134565b6101466101b4366004610dda565b5f9081526020819052604090206001015490565b6101466101d6366004610e0c565b61031e565b6101ee6101e9366004610e25565b61039e565b005b6101466101fe366004610e4f565b6103c8565b6101ee610211366004610e25565b610700565b61018e7f000000000000000000000000000000000000000000000000000000000000000081565b610146610738565b610146610818565b61012861025b366004610e25565b610887565b6101465f81565b6101467fb058f49d6462f3b1a3b260356aa683712ff15e590972bfac826dd6f0ac9f69cc81565b6102a161029c366004610e77565b6108af565b60408051928352602083019190915201610134565b6101ee6102c4366004610e25565b610c1c565b6101466102d7366004610e0c565b60036020525f908152604090205481565b5f6001600160e01b03198216637965db0b60e01b148061031857506301ffc9a760e01b6001600160e01b03198316145b92915050565b6002546001600160a01b038281165f908152600360205260408082205490516303d1689d60e11b81526004810191909152909291909116906307a2d13a90602401602060405180830381865afa15801561037a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103189190610ea7565b5f828152602081905260409020600101546103b881610c40565b6103c28383610c4d565b50505050565b5f7f14d709f3f05686e62c95aa969cf0a78b04a197162d2e5b7a0b48f3c77bb251246103f381610c40565b6103fb610cdc565b6001600160a01b0384161580159061041257505f83115b61044e5760405162461bcd60e51b81526020600482015260086024820152674241445f4152475360c01b60448201526064015b60405180910390fd5b6040516323b872dd60e01b8152336004820152306024820152604481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303815f875af11580156104be573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104e29190610ebe565b6105215760405162461bcd60e51b815260206004820152601060248201526f1514905394d1915497d25397d190525360821b6044820152606401610445565b60025460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590527f00000000000000000000000000000000000000000000000000000000000000009091169063095ea7b3906044016020604051808303815f875af1158015610592573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b69190610ebe565b6105f15760405162461bcd60e51b815260206004820152600c60248201526b1054141493d59157d190525360a21b6044820152606401610445565b600254604051636e553f6560e01b8152600481018590523060248201526001600160a01b0390911690636e553f65906044016020604051808303815f875af115801561063f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106639190610ea7565b6001600160a01b0385165f9081526003602052604081208054929450849290919061068f908490610ef1565b925050819055508160045f8282546106a79190610ef1565b909155505060408051848152602081018490526001600160a01b038616917f73a19dd210f1a7f902193214c0ee91dd35ee5b4d920cba8d519eca65a7b488ca910160405180910390a26106f960018055565b5092915050565b6001600160a01b03811633146107295760405163334bd91960e11b815260040160405180910390fd5b6107338282610d06565b505050565b6002546040516370a0823160e01b81523060048201525f9182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610782573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a69190610ea7565b6002546040516303d1689d60e11b8152600481018390529192506001600160a01b0316906307a2d13a90602401602060405180830381865afa1580156107ee573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108129190610ea7565b91505090565b6002546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa15801561085e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108829190610ea7565b905090565b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b5f807f14d709f3f05686e62c95aa969cf0a78b04a197162d2e5b7a0b48f3c77bb251246108db81610c40565b6108e3610cdc565b6001600160a01b038616158015906108fa57505f85115b6109315760405162461bcd60e51b81526020600482015260086024820152674241445f4152475360c01b6044820152606401610445565b6002546040516363737ac960e11b8152600481018790525f916001600160a01b03169063c6e6f59290602401602060405180830381865afa158015610978573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061099c9190610ea7565b6001600160a01b0388165f90815260036020526040902054909150808211156109c3578091505b5f82116109ff5760405162461bcd60e51b815260206004820152600a6024820152694e4f5f42414c414e434560b01b6044820152606401610445565b600254604051635d043b2960e11b815260048101849052306024820181905260448201526001600160a01b039091169063ba087652906064016020604051808303815f875af1158015610a54573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a789190610ea7565b945085851015610ab55760405162461bcd60e51b8152602060048201526008602482015267534c49505041474560c01b6044820152606401610445565b610abf8282610f04565b6001600160a01b0389165f9081526003602052604081209190915560048054849290610aec908490610f04565b909155505060405163a9059cbb60e01b81523360048201526024810186905291935083917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303815f875af1158015610b60573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b849190610ebe565b610bc45760405162461bcd60e51b81526020600482015260116024820152701514905394d1915497d3d55517d1905253607a1b6044820152606401610445565b60408051868152602081018490526001600160a01b038a16917ff3a670cd3af7d64b488926880889d08a8585a138ff455227af6737339a1ec262910160405180910390a25050610c1360018055565b50935093915050565b5f82815260208190526040902060010154610c3681610c40565b6103c28383610d06565b610c4a8133610d6f565b50565b5f610c588383610887565b610cd5575f838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055610c8d3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610318565b505f610318565b600260015403610cff57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b5f610d118383610887565b15610cd5575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610318565b610d798282610887565b610da85760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610445565b5050565b5f60208284031215610dbc575f80fd5b81356001600160e01b031981168114610dd3575f80fd5b9392505050565b5f60208284031215610dea575f80fd5b5035919050565b80356001600160a01b0381168114610e07575f80fd5b919050565b5f60208284031215610e1c575f80fd5b610dd382610df1565b5f8060408385031215610e36575f80fd5b82359150610e4660208401610df1565b90509250929050565b5f8060408385031215610e60575f80fd5b610e6983610df1565b946020939093013593505050565b5f805f60608486031215610e89575f80fd5b610e9284610df1565b95602085013595506040909401359392505050565b5f60208284031215610eb7575f80fd5b5051919050565b5f60208284031215610ece575f80fd5b81518015158114610dd3575f80fd5b634e487b7160e01b5f52601160045260245ffd5b8082018082111561031857610318610edd565b8181038181111561031857610318610edd56fea264697066735822122031e1740672aba3fa947a152e7090f67e55b07412b022e20284ae0227334d3c1964736f6c6343000818003360c060405234801562000010575f80fd5b5060405162002d8c38038062002d8c833981016040819052620000339162000121565b6001600160a01b03808316608052811660a0526200005062000058565b50506200015e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000a95760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001095780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6001600160a01b038116811462000109575f80fd5b5f806040838503121562000133575f80fd5b825162000140816200010c565b602084015190925062000153816200010c565b809150509250929050565b60805160a051612be2620001aa5f395f81816102b9015281816107030152610c8901525f818161039c01528181611386015281816113d9015281816116a4015261214b0152612be25ff3fe608060405234801561000f575f80fd5b5060043610610255575f3560e01c80637ecebe0011610140578063c6e6f592116100bf578063dd62ed3e11610084578063dd62ed3e1461055a578063dff81f7d1461056d578063e49d123214610580578063eaed1d0714610588578063ef8b30f7146104fe578063f5a23d8d1461059b575f80fd5b8063c6e6f592146104fe578063ce96cb7714610511578063cf8db86214610524578063d505accf14610534578063d905777e14610547575f80fd5b8063b3d7f6b911610105578063b3d7f6b91461048a578063b460af941461049d578063b6363cf2146104b0578063ba087652146104eb578063c63d75b6146103ce575f80fd5b80637ecebe001461042e57806384b0196e1461044157806394bf804d1461045c57806395d89b411461046f578063a9059cbb14610477575f80fd5b806323b872dd116101d7578063402d267d1161019c578063402d267d146103ce5780634cdad5061461032e578063558a7297146103e25780636e553f65146103f557806370a08231146104085780637d41c86e1461041b575f80fd5b806323b872dd1461036a578063313ce5671461037d57806332fe7b26146103975780633644e515146103be57806338d52e0f146103c6575f80fd5b806307a2d13a1161021d57806307a2d13a14610308578063095ea7b31461031b5780630a28a4771461032e57806318160ddd146103415780632016a0d214610355575f80fd5b806301e1d1141461025957806301ffc9a714610274578063031609401461029757806306433b1b146102b457806306fdde03146102f3575b5f80fd5b6102616105ae565b6040519081526020015b60405180910390f35b6102876102823660046123db565b610624565b604051901515815260200161026b565b61029f6106e1565b60405163ffffffff909116815260200161026b565b6102db7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161026b565b6102fb61076e565b60405161026b919061244f565b610261610316366004612461565b610813565b61028761032936600461248c565b61081e565b61026161033c366004612461565b610835565b5f80516020612b6d83398151915254610261565b610368610363366004612553565b61084f565b005b6102876103783660046125d7565b6109d3565b6103856109f8565b60405160ff909116815260200161026b565b6102db7f000000000000000000000000000000000000000000000000000000000000000081565b610261610a01565b6102db610a0a565b6102616103dc366004612615565b505f1990565b6102876103f036600461263d565b610a38565b610261610403366004612674565b610b06565b610261610416366004612615565b610b29565b610261610429366004612697565b610b59565b61026161043c366004612615565b610d6f565b610449610d79565b60405161026b97969594939291906126d6565b61026161046a366004612674565b610e22565b6102fb610e3d565b61028761048536600461248c565b610e7b565b610261610498366004612461565b610e88565b6102616104ab366004612697565b610e94565b6102876104be36600461276d565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b6102616104f9366004612697565b610ff1565b61026161050c366004612461565b61114a565b61026161051f366004612615565b611155565b5f546001600160a01b03166102db565b610368610542366004612799565b61119f565b610261610555366004612615565b6112f4565b61026161056836600461276d565b611332565b61036861057b366004612461565b61137b565b610261611434565b610261610596366004612674565b611457565b6102616105a9366004612674565b611498565b5f6105b7610a0a565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156105fb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061061f919061280a565b905090565b5f6001600160e01b031982166336372b0760e01b148061065457506001600160e01b0319821663a219a02560e01b145b8061066f57506001600160e01b0319821663043eff2d60e51b145b8061068a57506001600160e01b03198216631883ba3960e21b145b806106a557506001600160e01b0319821663e3bc4e6560e01b145b806106c057506001600160e01b0319821663f7febc6d60e01b145b806106db57506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f805460405163b1e5082960e01b81526001600160a01b0391821660048201527f00000000000000000000000000000000000000000000000000000000000000009091169063b1e5082990602401602060405180830381865afa15801561074a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061061f9190612821565b60605f5f80516020612b4d8339815191525b905080600301805461079190612844565b80601f01602080910402602001604051908101604052809291908181526020018280546107bd90612844565b80156108085780601f106107df57610100808354040283529160200191610808565b820191905f5260205f20905b8154815290600101906020018083116107eb57829003601f168201915b505050505091505090565b5f6106db825f6114c3565b5f3361082b818585611507565b5060019392505050565b5f60405163468ed21160e11b815260040160405180910390fd5b5f610858611519565b805490915060ff600160401b820416159067ffffffffffffffff165f8115801561087f5750825b90505f8267ffffffffffffffff16600114801561089b5750303b155b9050811580156108a9575080155b156108c75760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156108f157845460ff60401b1916600160401b1785555b6001600160a01b03881661094c5760405162461bcd60e51b815260206004820181905260248201527f44656c656761746564206973206e6f7420612076616c6964206163636f756e7460448201526064015b60405180910390fd5b6109568787611541565b61095f89611557565b6109688761156b565b5f80546001600160a01b0319166001600160a01b038a1617905583156109c857845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b5f336109e0858285611596565b6109eb8585856115fa565b60019150505b9392505050565b5f61061f611657565b5f61061f611699565b7f0773e532dfede91f04b12a73d3d2acd361424f41f76b4fb79f090161e36b4e00546001600160a01b031690565b5f610a416116a2565b6001600160a01b038316610a975760405162461bcd60e51b815260206004820152601f60248201527f4f70657261746f72206973206e6f7420612076616c6964206163636f756e74006044820152606401610943565b335f8181526001602090815260408083206001600160a01b03881680855290835292819020805460ff19168715159081179091558151908152905184927fceb576d9f15e4e200fdb5096d64d5dfd667e16def20c1eefd14256d8e3faa267928290030190a35060019392505050565b5f5f195f610b138561114a565b9050610b2133858784611742565b949350505050565b5f805f80516020612b4d8339815191525b6001600160a01b039093165f9081526020939093525050604090205490565b5f33848203610b7b57604051631f2a200560e01b815260040160405180910390fd5b806001600160a01b0316836001600160a01b031614158015610bc257506001600160a01b038084165f9081526001602090815260408083209385168352929052205460ff16155b15610bd257610bd2838287611596565b806001600160a01b0316846001600160a01b031614158015610c1957506001600160a01b038085165f9081526001602090815260408083209385168352929052205460ff16155b15610c3757604051635c645bcf60e11b815260040160405180910390fd5b6001600160a01b0384165f908152600260205260408120805490918791839190610c62908490612890565b90915550505f805460405163b1e5082960e01b81526001600160a01b0391821660048201527f00000000000000000000000000000000000000000000000000000000000000009091169063b1e5082990602401602060405180830381865afa158015610cd0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cf49190612821565b9050610d0663ffffffff821642612890565b6001830155610d168530896115fa565b604080516001600160a01b038581168252602082018a90525f9281891692918a16917f1fdc681a13d8c5da54e301c7ce6542dcde4581e4725043fdab2db12ddc574506910160405180910390a4505f9695505050505050565b5f6106db826117bb565b5f60608082808083815f80516020612b8d8339815191528054909150158015610da457506001810154155b610de85760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606401610943565b610df06117e3565b610df8611821565b604080515f80825260208201909252600f60f81b9c939b5091995046985030975095509350915050565b5f5f195f610e2f85610e88565b9050610b2133858388611742565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f80516020612b4d8339815191529161079190612844565b5f3361082b8185856115fa565b5f6106db8260016114c3565b5f81336001600160a01b0382168114801590610ed557506001600160a01b038083165f9081526001602090815260408083209385168352929052205460ff16155b15610ef357604051635c645bcf60e11b815260040160405180910390fd5b855f03610f1357604051631f2a200560e01b815260040160405180910390fd5b6001600160a01b0384165f908152600260209081526040808320815180830190925280548252600101549181018290529103610f6257604051632bb8b38560e11b815260040160405180910390fd5b4281602001511115610f87576040516318c16a9360e31b815260040160405180910390fd5b805193505f610f9585610813565b905080881015610fb857604051631de8e6e360e31b815260040160405180910390fd5b80881115610fd957604051632bb3283960e11b815260040160405180910390fd5b610fe63388888489611837565b505050509392505050565b5f81336001600160a01b038216811480159061103257506001600160a01b038083165f9081526001602090815260408083209385168352929052205460ff16155b1561105057604051635c645bcf60e11b815260040160405180910390fd5b855f0361107057604051631f2a200560e01b815260040160405180910390fd5b6001600160a01b0384165f9081526002602090815260408083208151808301909252805482526001015491810182905291036110bf57604051632bb8b38560e11b815260040160405180910390fd5b42816020015111156110e4576040516318c16a9360e31b815260040160405180910390fd5b805187101561110657604051631de8e6e360e31b815260040160405180910390fd5b805187111561112857604051632bb3283960e11b815260040160405180910390fd5b61113187610813565b9350611140338787878b611837565b5050509392505050565b5f6106db825f6118d8565b6001600160a01b0381165f908152600260209081526040808320815180830190925280548252600101549181018290529042106111975780516109f190610813565b505f92915050565b834211156111c35760405163313c898160e11b815260048101859052602401610943565b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861122d8c6001600160a01b03165f9081527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090505f61128782611913565b90505f6112968287878761193f565b9050896001600160a01b0316816001600160a01b0316146112dd576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610943565b6112e88a8a8a611507565b50505050505050505050565b6001600160a01b0381165f90815260026020908152604080832081518083019092528054825260010154918101829052904210611197575192915050565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b6113836116a2565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146113cc57604051639165520160e01b815260040160405180910390fd5b6113fe6113d7610a0a565b7f00000000000000000000000000000000000000000000000000000000000000008361196b565b6040518181527f4126d2da817d1aa12a3c086bf2fa8957ff31629479134de6ca77c014162c77329060200160405180910390a150565b5f61143e30610b29565b5f80516020612b6d8339815191525461061f91906128a3565b6001600160a01b0381165f908152600260205260408120600181015442108015906114825750805415155b1561148f575490506106db565b505f9392505050565b6001600160a01b0381165f908152600260205260408120600181015442101561148f575490506106db565b5f6109f16114cf6105ae565b6114da906001612890565b6114e55f600a612996565b5f80516020612b6d833981519152546114fe9190612890565b859190856119ca565b6115148383836001611a15565b505050565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006106db565b611549611af9565b6115538282611b1e565b5050565b61155f611af9565b61156881611b6e565b50565b611573611af9565b61156881604051806040016040528060018152602001603160f81b815250611bf1565b5f6115a18484611332565b90505f198110156115f457818110156115e657604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610943565b6115f484848484035f611a15565b50505050565b6001600160a01b03831661162357604051634b637e8f60e11b81525f6004820152602401610943565b6001600160a01b03821661164c5760405163ec442f0560e01b81525f6004820152602401610943565b611514838383611c50565b5f807f0773e532dfede91f04b12a73d3d2acd361424f41f76b4fb79f090161e36b4e0090505f81546116939190600160a01b900460ff166129a4565b91505090565b5f61061f611c6b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116fe573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061172291906129bd565b156117405760405163d93c066560e01b815260040160405180910390fd5b565b61175561174d610a0a565b853085611cde565b61175f8382611d17565b826001600160a01b0316846001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d784846040516117ad929190918252602082015260400190565b60405180910390a350505050565b5f807f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00610b3a565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10280546060915f80516020612b8d8339815191529161079190612844565b60605f5f80516020612b8d833981519152610780565b6001600160a01b0383165f9081526002602052604081208181556001015561185f3082611d4b565b61187161186a610a0a565b858461196b565b826001600160a01b0316846001600160a01b0316866001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db85856040516118c9929190918252602082015260400190565b60405180910390a45050505050565b5f6109f16118e782600a612996565b5f80516020612b6d833981519152546119009190612890565b6119086105ae565b6114fe906001612890565b5f6106db61191f611699565b8360405161190160f01b8152600281019290925260228201526042902090565b5f805f8061194f88888888611d7f565b92509250925061195f8282611e47565b50909695505050505050565b6040516001600160a01b0383811660248301526044820183905261151491859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611eff565b5f6119f76119d783611f6b565b80156119f257505f84806119ed576119ed6129d8565b868809115b151590565b611a02868686611f97565b611a0c9190612890565b95945050505050565b5f80516020612b4d8339815191526001600160a01b038516611a4c5760405163e602df0560e01b81525f6004820152602401610943565b6001600160a01b038416611a7557604051634a1406b160e11b81525f6004820152602401610943565b6001600160a01b038086165f90815260018301602090815260408083209388168352929052208390558115611af257836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611ae991815260200190565b60405180910390a35b5050505050565b611b01612047565b61174057604051631afcd79f60e31b815260040160405180910390fd5b611b26611af9565b5f80516020612b4d8339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03611b5f8482612a30565b50600481016115f48382612a30565b611b76611af9565b7f0773e532dfede91f04b12a73d3d2acd361424f41f76b4fb79f090161e36b4e005f80611ba284612060565b9150915081611bb2576012611bb4565b805b83546001600160a81b031916600160a01b60ff92909216919091026001600160a01b031916176001600160a01b0394909416939093179091555050565b611bf9611af9565b5f80516020612b8d8339815191527fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102611c328482612a30565b5060038101611c418382612a30565b505f8082556001909101555050565b611c586116a2565b611c60612136565b6115148383836121d9565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611c95612304565b611c9d61236c565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6040516001600160a01b0384811660248301528381166044830152606482018390526115f49186918216906323b872dd90608401611998565b6001600160a01b038216611d405760405163ec442f0560e01b81525f6004820152602401610943565b6115535f8383611c50565b6001600160a01b038216611d7457604051634b637e8f60e11b81525f6004820152602401610943565b611553825f83611c50565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611db857505f91506003905082611e3d565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611e09573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116611e3457505f925060019150829050611e3d565b92505f91508190505b9450945094915050565b5f826003811115611e5a57611e5a612af0565b03611e63575050565b6001826003811115611e7757611e77612af0565b03611e955760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611ea957611ea9612af0565b03611eca5760405163fce698f760e01b815260048101829052602401610943565b6003826003811115611ede57611ede612af0565b03611553576040516335e2f38360e21b815260048101829052602401610943565b5f8060205f8451602086015f885af180611f1e576040513d5f823e3d81fd5b50505f513d91508115611f35578060011415611f42565b6001600160a01b0384163b155b156115f457604051635274afe760e01b81526001600160a01b0385166004820152602401610943565b5f6002826003811115611f8057611f80612af0565b611f8a9190612b04565b60ff166001149050919050565b5f805f611fa486866123ae565b91509150815f03611fc857838181611fbe57611fbe6129d8565b04925050506109f1565b818411611fdf57611fdf60038515026011186123ca565b5f848688095f868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010185841190960395909502919093039390930492909217029150509392505050565b5f612050611519565b54600160401b900460ff16919050565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290515f918291829182916001600160a01b038716916120a691612b31565b5f60405180830381855afa9150503d805f81146120de576040519150601f19603f3d011682016040523d82523d5f602084013e6120e3565b606091505b50915091508180156120f757506020815110155b1561212a575f81806020019051810190612111919061280a565b905060ff8111612128576001969095509350505050565b505b505f9485945092505050565b60405163016406e960e71b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b203748090602401602060405180830381865afa158015612198573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121bc91906129bd565b6117405760405163c987100f60e01b815260040160405180910390fd5b5f80516020612b4d8339815191526001600160a01b0384166122135781816002015f8282546122089190612890565b909155506122839050565b6001600160a01b0384165f90815260208290526040902054828110156122655760405163391434e360e21b81526001600160a01b03861660048201526024810182905260448101849052606401610943565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b0383166122a15760028101805483900390556122bf565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117ad91815260200190565b5f5f80516020612b8d8339815191528161231c6117e3565b80519091501561233457805160209091012092915050565b81548015612343579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b5f5f80516020612b8d83398151915281612384611821565b80519091501561239c57805160209091012092915050565b60018201548015612343579392505050565b5f805f1983850993909202808410938190039390930393915050565b634e487b715f52806020526024601cfd5b5f602082840312156123eb575f80fd5b81356001600160e01b0319811681146109f1575f80fd5b5f5b8381101561241c578181015183820152602001612404565b50505f910152565b5f815180845261243b816020860160208601612402565b601f01601f19169290920160200192915050565b602081525f6109f16020830184612424565b5f60208284031215612471575f80fd5b5035919050565b6001600160a01b0381168114611568575f80fd5b5f806040838503121561249d575f80fd5b82356124a881612478565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126124d9575f80fd5b813567ffffffffffffffff808211156124f4576124f46124b6565b604051601f8301601f19908116603f0116810190828211818310171561251c5761251c6124b6565b81604052838152866020858801011115612534575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f8060808587031215612566575f80fd5b843561257181612478565b9350602085013561258181612478565b9250604085013567ffffffffffffffff8082111561259d575f80fd5b6125a9888389016124ca565b935060608701359150808211156125be575f80fd5b506125cb878288016124ca565b91505092959194509250565b5f805f606084860312156125e9575f80fd5b83356125f481612478565b9250602084013561260481612478565b929592945050506040919091013590565b5f60208284031215612625575f80fd5b81356109f181612478565b8015158114611568575f80fd5b5f806040838503121561264e575f80fd5b823561265981612478565b9150602083013561266981612630565b809150509250929050565b5f8060408385031215612685575f80fd5b82359150602083013561266981612478565b5f805f606084860312156126a9575f80fd5b8335925060208401356126bb81612478565b915060408401356126cb81612478565b809150509250925092565b60ff60f81b881681525f602060e060208401526126f660e084018a612424565b8381036040850152612708818a612424565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825260208088019350909101905f5b8181101561275b5783518352928401929184019160010161273f565b50909c9b505050505050505050505050565b5f806040838503121561277e575f80fd5b823561278981612478565b9150602083013561266981612478565b5f805f805f805f60e0888a0312156127af575f80fd5b87356127ba81612478565b965060208801356127ca81612478565b95506040880135945060608801359350608088013560ff811681146127ed575f80fd5b9699959850939692959460a0840135945060c09093013592915050565b5f6020828403121561281a575f80fd5b5051919050565b5f60208284031215612831575f80fd5b815163ffffffff811681146109f1575f80fd5b600181811c9082168061285857607f821691505b60208210810361287657634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156106db576106db61287c565b818103818111156106db576106db61287c565b600181815b808511156128f057815f19048211156128d6576128d661287c565b808516156128e357918102915b93841c93908002906128bb565b509250929050565b5f82612906575060016106db565b8161291257505f6106db565b816001811461292857600281146129325761294e565b60019150506106db565b60ff8411156129435761294361287c565b50506001821b6106db565b5060208310610133831016604e8410600b8410161715612971575081810a6106db565b61297b83836128b6565b805f190482111561298e5761298e61287c565b029392505050565b5f6109f160ff8416836128f8565b60ff81811683821601908111156106db576106db61287c565b5f602082840312156129cd575f80fd5b81516109f181612630565b634e487b7160e01b5f52601260045260245ffd5b601f82111561151457805f5260205f20601f840160051c81016020851015612a115750805b601f840160051c820191505b81811015611af2575f8155600101612a1d565b815167ffffffffffffffff811115612a4a57612a4a6124b6565b612a5e81612a588454612844565b846129ec565b602080601f831160018114612a91575f8415612a7a5750858301515b5f19600386901b1c1916600185901b178555612ae8565b5f85815260208120601f198616915b82811015612abf57888601518255948401946001909101908401612aa0565b5085821015612adc57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52602160045260245ffd5b5f60ff831680612b2257634e487b7160e01b5f52601260045260245ffd5b8060ff84160691505092915050565b5f8251612b42818460208701612402565b919091019291505056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100a26469706673582212203444a917955f95a1b79da153a7fa4a1d6c9ecb65bdd3fa737a5951d1b4e030bd64736f6c6343000818003360c06040523060805234801562000014575f80fd5b506040516200353b3803806200353b833981016040819052620000379162000113565b620000416200005f565b6001600160a01b03811660a052620000586200005f565b5062000142565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000b05760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001105780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b5f6020828403121562000124575f80fd5b81516001600160a01b03811681146200013b575f80fd5b9392505050565b60805160a051613398620001a35f395f81816102160152818161075001528181610adf01528181610c7f01528181610dc001528181611635015281816117c50152611f0501525f81816124600152818161248901526125c801526133985ff3fe6080604052600436106101cf575f3560e01c8063715018a6116100fd578063ad3cb1cc11610092578063dd71764411610062578063dd7176441461056e578063deec65bc1461059a578063e30c3978146105b9578063f2fde38b146105cd575f80fd5b8063ad3cb1cc146104bc578063b2037480146104f9578063b4867fe414610530578063c4d66de81461054f575f80fd5b80638da5cb5b116100cd5780638da5cb5b1461043d57806397da0056146104515780639916fa0214610472578063acfad62814610491575f80fd5b8063715018a6146103e257806379ba5097146103f65780638456cb591461040a5780638651060d1461041e575f80fd5b806333410dc4116101735780634f1ef286116101435780634f1ef2861461036d57806352d1902d1461038057806353dd91f5146103945780635c975abb146103b3575f80fd5b806333410dc4146103075780633f4ba83a14610326578063472abf681461033a5780634eb30bc91461034e575f80fd5b806314d7e25b116101ae57806314d7e25b1461027c57806317afb65b146102a85780631838efe5146102c95780633302a6a1146102e8575f80fd5b80622cf9a4146101d357806306433b1b146102055780630b78623b14610250575b5f80fd5b3480156101de575f80fd5b506101f26101ed366004612c71565b6105ec565b6040519081526020015b60405180910390f35b348015610210575f80fd5b506102387f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101fc565b34801561025b575f80fd5b5061026f61026a366004612c71565b610618565b6040516101fc9190612d8a565b348015610287575f80fd5b5061029b610296366004612d99565b610705565b6040516101fc9190612db4565b3480156102b3575f80fd5b506102c76102c2366004612e00565b610728565b005b3480156102d4575f80fd5b506101f26102e3366004612e17565b610abe565b3480156102f3575f80fd5b506102c7610302366004612e5b565b61128e565b348015610312575f80fd5b506102c7610321366004612d99565b611465565b348015610331575f80fd5b506102c7611526565b348015610345575f80fd5b506102c7611538565b348015610359575f80fd5b506102c7610368366004612e00565b61160d565b6102c761037b366004612ecc565b6119e1565b34801561038b575f80fd5b506101f26119fc565b34801561039f575f80fd5b5061026f6103ae366004612e00565b611a17565b3480156103be575f80fd5b505f805160206133238339815191525460ff165b60405190151581526020016101fc565b3480156103ed575f80fd5b506102c7611ad9565b348015610401575f80fd5b506102c7611aea565b348015610415575f80fd5b506102c7611b32565b348015610429575f80fd5b506102c7610438366004612f6e565b611b42565b348015610448575f80fd5b50610238611bef565b34801561045c575f80fd5b5060015460405160ff90911681526020016101fc565b34801561047d575f80fd5b506102c761048c366004612d99565b611c23565b34801561049c575f80fd5b506104a762093a8081565b60405163ffffffff90911681526020016101fc565b3480156104c7575f80fd5b506104ec604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101fc9190612fb0565b348015610504575f80fd5b506103d2610513366004612d99565b6001600160a01b03165f9081526020819052604090205460ff1690565b34801561053b575f80fd5b506102c761054a366004612fe2565b611c34565b34801561055a575f80fd5b506102c7610569366004612d99565b611d48565b348015610579575f80fd5b5061058d610588366004612e00565b611e59565b6040516101fc9190613005565b3480156105a5575f80fd5b506102c76105b4366004612e00565b611edd565b3480156105c4575f80fd5b50610238612075565b3480156105d8575f80fd5b506102c76105e7366004612d99565b61209d565b6001600160a01b038083165f908152600360209081526040808320938516835292905220545b92915050565b610620612bd6565b6001600160a01b038084165f9081526003602081815260408084209487168452938152838320548084526004909152918390208351610100810190945280549293929091839160ff169081111561067957610679612ca8565b600381111561068a5761068a612ca8565b815281546001600160a01b0361010082048116602084015262ffffff600160a81b830416604084015263ffffffff600160c01b80840482166060860152600160e01b9093048116608085015260019094015490811660a0840152600160a01b8104841660c08401520490911660e09091015291505092915050565b6001600160a01b0381165f90815260026020526040902060609061061290612122565b610730612135565b3360405163e9d8dbfd60e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063e9d8dbfd90602401602060405180830381865afa158015610795573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107b9919061305c565b6107e65760405163b536580760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6107ee612165565b5f82815260046020526040902080546001600160a01b0361010090910416331461082a576040516282b42960e81b815260040160405180910390fd5b5f815460ff16600381111561084157610841612ca8565b1461085f576040516307a92f1960e51b815260040160405180910390fd5b600181015463ffffffff428116600160c01b909204161015610894576040516331e24a9f60e01b815260040160405180910390fd5b600181015463ffffffff428116600160a01b9092041611156108c957604051631e55c18f60e21b815260040160405180910390fd5b805460ff1916600190811782558101546001600160a01b03165f908152600260205260408120906108f98261219c565b90505f5b81811015610a5c575f61091084836121a5565b90505f8190505f610991826001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa158015610956573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061097a9190613077565b8854600160a81b900462ffffff16629896806121b0565b90508015610a515760405163dff81f7d60e01b8152600481018290526001600160a01b0383169063dff81f7d906024015f604051808303815f87803b1580156109d8575f80fd5b505af11580156109ea573d5f803e3d5ffd5b5050505f8a815260056020908152604080832081518083019092528582526001600160a01b03888116838501908152825460018082018555938752949095209251600290940290920192835592519190920180546001600160a01b03191691909216179055505b5050506001016108fd565b506001830154835460405187926001600160a01b0390811692610100900416907f6e141be0670106fb9241fc2d132fa5597d7decd0184d366414050b782c76ddda905f90a4505050610aba60015f8051602061334383398151915255565b5050565b5f3360405163e9d8dbfd60e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063e9d8dbfd90602401602060405180830381865afa158015610b24573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b48919061305c565b610b705760405163b536580760e01b81526001600160a01b03821660048201526024016107dd565b610b78612135565b60fa610b87606085018561308e565b90501115610bc95760405162461bcd60e51b815260206004820152600f60248201526e726561736f6e20746f6f206c6f6e6760881b60448201526064016107dd565b5f610bda60408501602086016130e8565b62ffffff1611610c205760405162461bcd60e51b815260206004820152601160248201527006d62697073206d757374206265203e203607c1b60448201526064016107dd565b42610c316060850160408601613114565b63ffffffff161115610c7b5760405162461bcd60e51b815260206004820152601360248201527274696d657374616d7020696e2066757475726560681b60448201526064016107dd565b335f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166397c459c483610cba6020890189612d99565b610cca60608a0160408b01613114565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015263ffffffff166044820152606401606060405180830381865afa158015610d20573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d44919061312f565b9050806020015162ffffff16856020016020810190610d6391906130e8565b62ffffff161115610db65760405162461bcd60e51b815260206004820152601960248201527f6d626970732065786365656473206d617820616c6c6f7765640000000000000060448201526064016107dd565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663b1e50829610df26020880188612d99565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610e34573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e58919061319f565b610e689063ffffffff16426131ce565b610e786060870160408801613114565b63ffffffff1611610ebf5760405162461bcd60e51b81526020600482015260116024820152701d1a5b595cdd185b5c081d1bdbc81bdb19607a1b60448201526064016107dd565b6001600160a01b0382165f9081526003602090815260408220908290610ee790890189612d99565b6001600160a01b0316815260208101919091526040015f205490508015610ff5575f8181526004602052604090206001815460ff166003811115610f2d57610f2d612ca8565b03610f4a5760405162461bcd60e51b81526004016107dd906131e1565b5f815460ff166003811115610f6157610f61612ca8565b03610ff357600181015463ffffffff428116600160c01b909204161115610f9a5760405162461bcd60e51b81526004016107dd906131e1565b805460ff1916600317815581610fb36020890189612d99565b6001600160a01b0316856001600160a01b03167fe3884525a2d5f483253428531619e78f11f1af8cbd2d28311259fd31ef46018a60405160405180910390a45b505b5f8260400151426110069190613232565b90505f6040518061010001604052805f600381111561102757611027612ca8565b8152602001866001600160a01b0316815260200189602001602081019061104e91906130e8565b62ffffff16815260200161106860608b0160408c01613114565b63ffffffff1681526020014263ffffffff168152602001895f0160208101906110919190612d99565b6001600160a01b0316815263ffffffff841660208201526040016110b862093a8085613232565b63ffffffff16905290506110cb81612273565b6001600160a01b0386165f9081526003602090815260408220929550859291906110f7908c018c612d99565b6001600160a01b0316815260208082019290925260409081015f90812093909355858352600490915290208151815483929190829060ff1916600183600381111561114457611144612ca8565b0217905550602082810151825460408501516060860151608087015163ffffffff908116600160e01b026001600160e01b03928216600160c01b908102939093166001600160c01b0362ffffff909516600160a81b0262ffffff60a81b196001600160a01b039889166101000216610100600160c01b03199097169690961795909517939093169390931791909117855560a08601516001909501805460c088015160e090980151841690920296909216600160a01b026001600160c01b031990911694909216939093171763ffffffff60c01b1916929092179055839061122e908a018a612d99565b6001600160a01b039081169087167f1928f55cc7948e65b5fd8b65349e79b0970a639acc7f5f308bcd1808e0ecdb8e8461126b60608e018e61308e565b60405161127a9392919061324f565b60405180910390a450909695505050505050565b61129661230d565b6001600160a01b0382165f9081526020819052604090205481151560ff9091161515036113055760405162461bcd60e51b815260206004820152601e60248201527f5661756c7420616c726561647920696e2064657369726564207374617465000060448201526064016107dd565b5f826001600160a01b031663cf8db8626040518163ffffffff1660e01b8152600401602060405180830381865afa158015611342573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113669190613290565b6001600160a01b0381165f90815260026020526040902090915082156113f25760015460ff166113958261219c565b106113e25760405162461bcd60e51b815260206004820152601f60248201527f45786365656473206d6178207661756c747320706572206f70657261746f720060448201526064016107dd565b6113ec818561233f565b506113fe565b6113fc8185612353565b505b6001600160a01b038481165f8181526020818152604091829020805460ff1916881515908117909155825193845290830152918416917f2ffaf20674bccc4ab0c9dd20b627f4ed9a43dc5232ed18a32410ad4207fc176b910160405180910390a250505050565b61146d61230d565b6001600160a01b0381166114cd5760405162461bcd60e51b815260206004820152602160248201527f47756172647261696c20616464726573732063616e6e6f7420626520656d70746044820152607960f81b60648201526084016107dd565b600180546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907fe48a815386a6ba32bdcfe3b82f31e254f5e3e0549da4cddc175ff7d296ad5a5a905f90a35050565b61152e61230d565b611536612367565b565b60025f6115436123c6565b8054909150600160401b900460ff168061156b5750805467ffffffffffffffff808416911610155b156115895760405163f92ee8a960e01b815260040160405180910390fd5b805468ffffffffffffffffff191667ffffffffffffffff831617600160401b1781556115b36123ee565b6001805460ff1916600a179055805460ff60401b1916815560405167ffffffffffffffff831681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2906020015b60405180910390a15050565b611615612135565b3360405163e9d8dbfd60e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063e9d8dbfd90602401602060405180830381865afa15801561167a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061169e919061305c565b6116c65760405163b536580760e01b81526001600160a01b03821660048201526024016107dd565b6116ce612165565b5f82815260046020526040902080546001600160a01b0361010090910416331461170a576040516282b42960e81b815260040160405180910390fd5b6001815460ff16600381111561172257611722612ca8565b14611740576040516307a92f1960e51b815260040160405180910390fd5b5f8381526006602052604090205460ff16600114611771576040516305694d1d60e01b815260040160405180910390fd5b805460ff191660021780825560018201546040516325f1167160e21b81526001600160a01b03610100840481166004830152918216602482015263ffffffff600160c01b9093049290921660448301525f917f0000000000000000000000000000000000000000000000000000000000000000909116906397c459c490606401606060405180830381865afa15801561180c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611830919061312f565b5f8581526005602052604081209192505b8154811015611937575f82828154811061185d5761185d6132ab565b5f91825260209091206002909102016001810154815485549293506001600160a01b0390911691859085908110611896576118966132ab565b5f91825260208083206002909202909101918255600190910180546001600160a01b0319169055604080516338d52e0f60e01b8152905161192c926001600160a01b038616926338d52e0f92600480830193928290030181865afa158015611900573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119249190613290565b8751836123fe565b505050600101611841565b505f85815260056020526040812061194e91612c1a565b82546001600160a01b036101009182900481165f9081526003602090815260408083206001890180548616855290835281842093909355915487548751935193851684528a959185169491900416917f82a1d74d3c1a7982ea75f5e68c0964c3309fc5ddfc6e1f1d2fb6b10eacce91e6910160405180910390a4505050610aba60015f8051602061334383398151915255565b6119e9612455565b6119f2826124f9565b610aba8282612501565b5f611a056125bd565b505f8051602061330383398151915290565b611a1f612bd6565b5f8281526004602052604090819020815161010081019092528054829060ff166003811115611a5057611a50612ca8565b6003811115611a6157611a61612ca8565b815281546001600160a01b0361010082048116602084015262ffffff600160a81b830416604084015263ffffffff600160c01b80840482166060860152600160e01b9093048116608085015260019094015490811660a0840152600160a01b8104841660c08401520490911660e09091015292915050565b611ae161230d565b6115365f612606565b3380611af4612075565b6001600160a01b031614611b265760405163118cdaa760e01b81526001600160a01b03821660048201526024016107dd565b611b2f81612606565b50565b611b3a61230d565b61153661263e565b611b4a61230d565b60015460ff9081169082168110611ba35760405162461bcd60e51b815260206004820152601c60248201527f4d7573742062652067726561746572207468616e2063757272656e740000000060448201526064016107dd565b6001805460ff191660ff84811691821790925560408051928416835260208301919091527f7f272733435a5c1171c60918325413034d8465dddd58e7830c74d20840f5a0c09101611601565b5f807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b611c2c81611d48565b611b2f611538565b611c3c612135565b60015461010090046001600160a01b0316336001600160a01b031614611c74576040516282b42960e81b815260040160405180910390fd5b5f828152600460205260409020805461010090046001600160a01b0316611cae5760405163c191eff960e01b815260040160405180910390fd5b5f8381526006602052604090205460ff1615611cdd576040516393579aa360e01b815260040160405180910390fd5b81611ce9576002611cec565b60015b5f84815260066020908152604091829020805460ff191660ff949094169390931790925551831515815284917f098a812d9d10a266b1a99ac5ec25f2cbf779f49d2cacf9c58eb35edea7df6842910160405180910390a2505050565b5f611d516123c6565b805490915060ff600160401b820416159067ffffffffffffffff165f81158015611d785750825b90505f8267ffffffffffffffff166001148015611d945750303b155b905081158015611da2575080155b15611dc05760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315611dea57845460ff60401b1916600160401b1785555b611df386612686565b611dfb612697565b611e03612697565b611e0b612697565b8315611e5157845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b606060055f8381526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015611ed2575f8481526020908190206040805180820190915260028502909101805482526001908101546001600160a01b0316828401529083529092019101611e8b565b505050509050919050565b611ee5612135565b3360405163e9d8dbfd60e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063e9d8dbfd90602401602060405180830381865afa158015611f4a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f6e919061305c565b611f965760405163b536580760e01b81526001600160a01b03821660048201526024016107dd565b5f828152600460205260409020805433919061010090046001600160a01b03168214611fd4576040516282b42960e81b815260040160405180910390fd5b5f815460ff166003811115611feb57611feb612ca8565b14612009576040516307a92f1960e51b815260040160405180910390fd5b805460ff1916600390811782556001600160a01b038381165f81815260209384526040808220600187018054861684529552808220829055935493518894909316927fe3884525a2d5f483253428531619e78f11f1af8cbd2d28311259fd31ef46018a9190a450505050565b5f807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00611c13565b6120a561230d565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b03831690811782556120e9611bef565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b60605f61212e8361269f565b9392505050565b5f805160206133238339815191525460ff16156115365760405163d93c066560e01b815260040160405180910390fd5b5f8051602061334383398151915280546001190161219657604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b5f610612825490565b5f61212e83836126f8565b5f805f6121bd868661271e565b91509150815f036121e1578381816121d7576121d76132bf565b049250505061212e565b8184116121f8576121f8600385150260111861273a565b5f848688095f868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010185841190960395909502919093039390930492909217029150509392505050565b60015f8051602061334383398151915255565b6020808201516040808401516060850151608086015160a087015160c088015160e089015195515f986122f0989791016001600160a01b03978816815262ffffff96909616602087015263ffffffff948516604087015292841660608601529416608084015292811660a08301529190911660c082015260e00190565b604051602081830303815290604052805190602001209050919050565b33612316611bef565b6001600160a01b0316146115365760405163118cdaa760e01b81523360048201526024016107dd565b5f61212e836001600160a01b03841661274b565b5f61212e836001600160a01b038416612797565b61236f612881565b5f80516020613323833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610612565b6123f66128b0565b6115366128d5565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526124509084906128dd565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806124db57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166124cf5f80516020613303833981519152546001600160a01b031690565b6001600160a01b031614155b156115365760405163703e46dd60e11b815260040160405180910390fd5b611b2f61230d565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561255b575060408051601f3d908101601f1916820190925261255891810190613077565b60015b61258357604051634c9c8ce360e01b81526001600160a01b03831660048201526024016107dd565b5f8051602061330383398151915281146125b357604051632a87526960e21b8152600481018290526024016107dd565b612450838361294f565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115365760405163703e46dd60e11b815260040160405180910390fd5b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155610aba826129a4565b612646612135565b5f80516020613323833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336123a8565b61268e6128b0565b611b2f81612a14565b6115366128b0565b6060815f018054806020026020016040519081016040528092919081815260200182805480156126ec57602002820191905f5260205f20905b8154815260200190600101908083116126d8575b50505050509050919050565b5f825f01828154811061270d5761270d6132ab565b905f5260205f200154905092915050565b5f805f1983850993909202808410938190039390930393915050565b634e487b715f52806020526024601cfd5b5f81815260018301602052604081205461279057508154600181810184555f848152602080822090930184905584548482528286019093526040902091909155610612565b505f610612565b5f8181526001830160205260408120548015612871575f6127b96001836131ce565b85549091505f906127cc906001906131ce565b905080821461282b575f865f0182815481106127ea576127ea6132ab565b905f5260205f200154905080875f01848154811061280a5761280a6132ab565b5f918252602080832090910192909255918252600188019052604090208390555b855486908061283c5761283c6132d3565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f905560019350505050610612565b5f915050610612565b5092915050565b5f805160206133238339815191525460ff1661153657604051638dfc202b60e01b815260040160405180910390fd5b6128b8612a45565b61153657604051631afcd79f60e31b815260040160405180910390fd5b6122606128b0565b5f8060205f8451602086015f885af1806128fc576040513d5f823e3d81fd5b50505f513d91508115612913578060011415612920565b6001600160a01b0384163b155b1561294957604051635274afe760e01b81526001600160a01b03851660048201526024016107dd565b50505050565b61295882612a5e565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561299c576124508282612ac1565b610aba612b33565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b612a1c6128b0565b6001600160a01b038116611b2657604051631e4fbdf760e01b81525f60048201526024016107dd565b5f612a4e6123c6565b54600160401b900460ff16919050565b806001600160a01b03163b5f03612a9357604051634c9c8ce360e01b81526001600160a01b03821660048201526024016107dd565b5f8051602061330383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051612add91906132e7565b5f60405180830381855af49150503d805f8114612b15576040519150601f19603f3d011682016040523d82523d5f602084013e612b1a565b606091505b5091509150612b2a858383612b52565b95945050505050565b34156115365760405163b398979f60e01b815260040160405180910390fd5b606082612b6757612b6282612bae565b61212e565b8151158015612b7e57506001600160a01b0384163b155b15612ba757604051639996b31560e01b81526001600160a01b03851660048201526024016107dd565b508061212e565b805115612bbd57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b604080516101008101909152805f81525f6020820181905260408201819052606082018190526080820181905260a0820181905260c0820181905260e09091015290565b5080545f8255600202905f5260205f2090810190611b2f91905b80821115612c59575f81556001810180546001600160a01b0319169055600201612c34565b5090565b6001600160a01b0381168114611b2f575f80fd5b5f8060408385031215612c82575f80fd5b8235612c8d81612c5d565b91506020830135612c9d81612c5d565b809150509250929050565b634e487b7160e01b5f52602160045260245ffd5b805160048110612cda57634e487b7160e01b5f52602160045260245ffd5b808352506020810151612cf860208401826001600160a01b03169052565b506040810151612d0f604084018262ffffff169052565b506060810151612d27606084018263ffffffff169052565b506080810151612d3f608084018263ffffffff169052565b5060a0810151612d5a60a08401826001600160a01b03169052565b5060c0810151612d7260c084018263ffffffff169052565b5060e081015161245060e084018263ffffffff169052565b61010081016106128284612cbc565b5f60208284031215612da9575f80fd5b813561212e81612c5d565b602080825282518282018190525f9190848201906040850190845b81811015612df45783516001600160a01b031683529284019291840191600101612dcf565b50909695505050505050565b5f60208284031215612e10575f80fd5b5035919050565b5f60208284031215612e27575f80fd5b813567ffffffffffffffff811115612e3d575f80fd5b82016080818503121561212e575f80fd5b8015158114611b2f575f80fd5b5f8060408385031215612e6c575f80fd5b8235612e7781612c5d565b91506020830135612c9d81612e4e565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612ec457612ec4612e87565b604052919050565b5f8060408385031215612edd575f80fd5b8235612ee881612c5d565b915060208381013567ffffffffffffffff80821115612f05575f80fd5b818601915086601f830112612f18575f80fd5b813581811115612f2a57612f2a612e87565b612f3c601f8201601f19168501612e9b565b91508082528784828501011115612f51575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f60208284031215612f7e575f80fd5b813560ff8116811461212e575f80fd5b5f5b83811015612fa8578181015183820152602001612f90565b50505f910152565b602081525f8251806020840152612fce816040850160208701612f8e565b601f01601f19169190910160400192915050565b5f8060408385031215612ff3575f80fd5b823591506020830135612c9d81612e4e565b602080825282518282018190525f919060409081850190868401855b8281101561304f578151805185528601516001600160a01b0316868501529284019290850190600101613021565b5091979650505050505050565b5f6020828403121561306c575f80fd5b815161212e81612e4e565b5f60208284031215613087575f80fd5b5051919050565b5f808335601e198436030181126130a3575f80fd5b83018035915067ffffffffffffffff8211156130bd575f80fd5b6020019150368190038213156130d1575f80fd5b9250929050565b62ffffff81168114611b2f575f80fd5b5f602082840312156130f8575f80fd5b813561212e816130d8565b63ffffffff81168114611b2f575f80fd5b5f60208284031215613124575f80fd5b813561212e81613103565b5f6060828403121561313f575f80fd5b6040516060810181811067ffffffffffffffff8211171561316257613162612e87565b604052825161317081612c5d565b81526020830151613180816130d8565b6020820152604083015161319381613103565b60408201529392505050565b5f602082840312156131af575f80fd5b815161212e81613103565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610612576106126131ba565b60208082526031908201527f50726576696f757320736c617368696e672072657175657374206c696665637960408201527018db19481b9bdd0818dbdb5c1b195d1959607a1b606082015260800190565b63ffffffff81811683821601908082111561287a5761287a6131ba565b5f61012061325d8387612cbc565b806101008401528381840152506101408385828501375f838501820152601f909301601f19169091019091019392505050565b5f602082840312156132a0575f80fd5b815161212e81612c5d565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601260045260245ffd5b634e487b7160e01b5f52603160045260245ffd5b5f82516132f8818460208701612f8e565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a26469706673582212200ff39bb3417e829e8482ad67c9fd8c267353d3d1fef088b713b75b552adcd60f64736f6c6343000818003360c06040523060805234801562000014575f80fd5b506040516200370038038062003700833981016040819052620000379162000113565b620000416200005f565b6001600160a01b03811660a052620000586200005f565b5062000142565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000b05760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001105780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b5f6020828403121562000124575f80fd5b81516001600160a01b03811681146200013b575f80fd5b9392505050565b60805160a05161358e620001725f395f61027f01525f818161225f0152818161228801526123cc015261358e5ff3fe608060405260043610610249575f3560e01c80638e61af1211610134578063ca41e40c116100b3578063dcef440311610078578063dcef440314610773578063ddcf017d14610792578063e30c3978146107ae578063e9d8dbfd146107c2578063f2fde38b146107f9578063fd864e5e14610818575f80fd5b8063ca41e40c146106a9578063d12a833c146106c8578063d1b9d6e2146106e7578063d2cad27114610713578063dcc4605c14610754575f80fd5b8063b1ad5743116100f9578063b1ad5743146105d9578063b1e50829146105f8578063bcac0a021461064c578063be7327211461066b578063c4d66de81461068a575f80fd5b80638e61af121461052057806397c459c41461053f5780639e2d5ce81461055e578063ab06f67e1461057d578063ad3cb1cc1461059c575f80fd5b80635c975abb116101cb57806379ba50971161019057806379ba50971461049257806381d18842146104a6578063832025f9146104c55780638456cb59146104d9578063891a081f146104ed5780638da5cb5b1461050c575f80fd5b80635c975abb146103cd578063621e0299146103fc5780636d70f7ae14610428578063715018a61461045f5780637218c6a714610473575f80fd5b80634ad88989116102115780634ad889891461033b5780634f1ef2861461035a57806352d1902d1461036d57806356ce0e6c1461038f57806358715e3b146103ae575f80fd5b80630793ae7b1461024d57806332fe7b261461026e5780633f4ba83a146102be578063472abf68146102d257806348694118146102e6575b5f80fd5b348015610258575f80fd5b5061026c610267366004612f6b565b610836565b005b348015610279575f80fd5b506102a17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102c9575f80fd5b5061026c610ac4565b3480156102dd575f80fd5b5061026c610ad6565b3480156102f1575f80fd5b50610305610300366004612f95565b610bb1565b6040805182516001600160a01b0316815260208084015162ffffff16908201529181015163ffffffff16908201526060016102b5565b348015610346575f80fd5b5061026c610355366004612fc1565b610c9d565b61026c610368366004612ff0565b610eb2565b348015610378575f80fd5b50610381610ed1565b6040519081526020016102b5565b34801561039a575f80fd5b5061026c6103a93660046130f3565b610eec565b3480156103b9575f80fd5b5061026c6103c8366004612fc1565b610fa4565b3480156103d8575f80fd5b505f805160206135398339815191525460ff165b60405190151581526020016102b5565b348015610407575f80fd5b5061041b61041636600461315a565b6111ed565b6040516102b591906131c5565b348015610433575f80fd5b506103ec610442366004612f95565b6001600160a01b03165f9081526001602052604090205460ff1690565b34801561046a575f80fd5b5061026c611204565b34801561047e575f80fd5b5061026c61048d366004612f95565b611215565b34801561049d575f80fd5b5061026c611356565b3480156104b1575f80fd5b5061026c6104c03660046131d3565b61139e565b3480156104d0575f80fd5b5061026c611451565b3480156104e4575f80fd5b5061026c6114f3565b3480156104f8575f80fd5b5061026c6105073660046130f3565b611503565b348015610517575f80fd5b506102a161160e565b34801561052b575f80fd5b5061026c61053a366004612f95565b611642565b34801561054a575f80fd5b506103056105593660046131f3565b611753565b348015610569575f80fd5b5061026c6105783660046131d3565b61183d565b348015610588575f80fd5b50610381610597366004612f95565b6118f1565b3480156105a7575f80fd5b506105cc604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516102b5919061325d565b3480156105e4575f80fd5b5061041b6105f33660046131f3565b611911565b348015610603575f80fd5b50610637610612366004612f95565b6001600160a01b03165f90815260016020526040902054610100900463ffffffff1690565b60405163ffffffff90911681526020016102b5565b348015610657575f80fd5b5061026c610666366004612f95565b611928565b348015610676575f80fd5b50610381610685366004612f95565b611b19565b348015610695575f80fd5b5061026c6106a4366004612f95565b611b39565b3480156106b4575f80fd5b5061026c6106c3366004612f95565b611c4a565b3480156106d3575f80fd5b5061026c6106e23660046130f3565b611dfd565b3480156106f2575f80fd5b50600654600160201b900460ff165b60405160ff90911681526020016102b5565b34801561071e575f80fd5b5061063761072d366004612f95565b6001600160a01b03165f90815260208190526040902054600160281b900463ffffffff1690565b34801561075f575f80fd5b5061026c61076e366004612fc1565b611ed7565b34801561077e575f80fd5b5061026c61078d366004612f95565b611fa7565b34801561079d575f80fd5b506006546106379063ffffffff1681565b3480156107b9575f80fd5b506102a16120aa565b3480156107cd575f80fd5b506103ec6107dc366004612f95565b6001600160a01b03165f9081526020819052604090205460ff1690565b348015610804575f80fd5b5061026c610813366004612f95565b6120d2565b348015610823575f80fd5b50600654600160281b900460ff16610701565b335f8181526020819052604090205460ff166108755760405163b536580760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b61087d612157565b5f61088b6020840184612f95565b6001600160a01b0316036108d25760405162461bcd60e51b815260206004820152600e60248201526d064657374696e6174696f6e213d360941b604482015260640161086c565b629896806108e6604084016020850161329f565b62ffffff16111561092f5760405162461bcd60e51b815260206004820152601360248201527206d61784d62697073213d3e313030303030303606c1b604482015260640161086c565b5f610940604084016020850161329f565b62ffffff16116109805760405162461bcd60e51b815260206004820152600b60248201526a06d61784d62697073213d360ac1b604482015260640161086c565b60025463ffffffff8111156109c25760405162461bcd60e51b81526020600482015260086024820152674f766572666c6f7760c01b604482015260640161086c565b600280546001810182555f9190915283907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace016109ff82826132ba565b50505f610a093390565b6001600160a01b0381165f81815260208181526040909120805464ffffffff00191661010063ffffffff8816021781559293507ff83560c52fae7525e369b176773b2388c82c3538dea009c1c5fca741d5d613a090610a6a90880188612f95565b610a7a6040890160208a0161329f565b610a8a60608a0160408b01612fc1565b604080516001600160a01b03909416845262ffffff909216602084015263ffffffff16908201526060015b60405180910390a25050505050565b610acc612187565b610ad46121b9565b565b60025f610ae1612218565b8054909150600160401b900460ff1680610b095750805467ffffffffffffffff808416911610155b15610b275760405163f92ee8a960e01b815260040160405180910390fd5b8054600160401b67ffffffffffffffff841668ffffffffffffffffff1990921682171782556002805460010181555f526006805465ffffffffffff191665050500093a80179055815460ff60401b191682556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2906020015b60405180910390a15050565b604080516060810182525f80825260208083018290528284018290526001600160a01b03851682528190529190912054610100900463ffffffff1680610c305760405162461bcd60e51b815260206004820152601460248201527314db185cda1a5b99c81b9bdd08195b98589b195960621b604482015260640161086c565b60028163ffffffff1681548110610c4957610c49613347565b5f9182526020918290206040805160608101825291909201546001600160a01b038116825262ffffff600160a01b8204169382019390935263ffffffff600160b81b90930492909216908201529392505050565b610ca5612157565b335f8181526020819052604090205460ff16610cdf5760405163b536580760e01b81526001600160a01b038216600482015260240161086c565b5f8263ffffffff1611610d345760405162461bcd60e51b815260206004820152601960248201527f44656c6179206d757374206265206d6f7265207468616e203000000000000000604482015260640161086c565b335f81815260056020526040812090610d4c82612240565b90505f5b81811015610e47578563ffffffff1660015f610d75848761224990919063ffffffff16565b6001600160a01b0316815260208101919091526040015f2054610100900463ffffffff161015610e3f5760405162461bcd60e51b815260206004820152606360248201527f536572766963652773206d696e696d756d207769746864726177616c2064656c60448201527f6179206d757374206265206c657373207468616e206f7220657175616c20746f60648201527f20616374697665206f70657261746f722773207769746864726177616c2064656084820152626c617960e81b60a482015260c40161086c565b600101610d50565b506001600160a01b0383165f8181526020818152604091829020805468ffffffff00000000001916600160281b63ffffffff8b169081029190911790915591519182527f12cae11e6575143dc91be041916646a29e4e9af609b96be54454d8ca825b16449101610ab5565b610eba612254565b610ec3826122f8565b610ecd8282612300565b5050565b5f610eda6123c1565b505f8051602061351983398151915290565b610ef4612157565b335f8181526020819052604090205460ff1680610f2857506001600160a01b0381165f9081526001602052604090205460ff165b610f655760405162461bcd60e51b815260206004820152600e60248201526d139bdd081c9959da5cdd195c995960921b604482015260640161086c565b806001600160a01b03167f6c1850fce35387a891e82ca88e975790ab6f0709e9ed6842e01397f296012a7e86868686604051610ab59493929190613383565b610fac612157565b335f8181526001602052604090205460ff16610fe65760405163a3a66a1760e01b81526001600160a01b038216600482015260240161086c565b60065463ffffffff90811690831610156110745760405162461bcd60e51b815260206004820152604360248201527f44656c6179206d757374206265206174206c65617374206d6f7265207468616e60448201527f206f7220657175616c20746f2064656661756c745769746864726177616c44656064820152626c617960e81b608482015260a40161086c565b335f8181526004602052604081209061108c82612240565b90505f5b81811015611186578563ffffffff165f806110b4848761224990919063ffffffff16565b6001600160a01b0316815260208101919091526040015f2054600160281b900463ffffffff16111561117e5760405162461bcd60e51b815260206004820152606160248201527f4f70657261746f72207769746864726177616c2064656c6179206d757374206260448201527f65206d6f7265207468616e206f7220657175616c20746f20616374697665207360648201527f6572766963652773206d696e696d756d207769746864726177616c2064656c616084820152607960f81b60a482015260c40161086c565b600101611090565b506001600160a01b0383165f81815260016020908152604091829020805464ffffffff00191661010063ffffffff8b169081029190911790915591519182527f8accf516e9dcf834aa25a580b9beb0b2444e5a35b3162fc21cfd49565bed0a4a9101610ab5565b5f806111f9848461240a565b519150505b92915050565b61120c612187565b610ad45f61244f565b335f8181526001602052604090205460ff1661124f5760405163a3a66a1760e01b81526001600160a01b038216600482015260240161086c565b611257612157565b335f611263848361240a565b905060018151600381111561127a5761127a613191565b146112c75760405162461bcd60e51b815260206004820152601760248201527f52656c6174696f6e73686970206e6f7420616374697665000000000000000000604482015260640161086c565b6001600160a01b0384165f90815260208181526040909120549082015163ffffffff6101009092048216911681036113385760405162461bcd60e51b815260206004820152601460248201527314db185cda1a5b99c81b9bdd081d5c19185d195960621b604482015260640161086c565b63ffffffff8116602083015261134f858484612487565b5050505050565b33806113606120aa565b6001600160a01b0316146113925760405163118cdaa760e01b81526001600160a01b038216600482015260240161086c565b61139b8161244f565b50565b6113a6612187565b5f8160ff16116113c85760405162461bcd60e51b815260040161086c906133b4565b60065460ff600160201b909104811690821681106113f85760405162461bcd60e51b815260040161086c90613403565b6006805464ff000000001916600160201b60ff8581169182029290921790925560408051918416825260208201929092527f9970a620521c7aa30265e01b9d490c9e9802074a8b9015fed1af3665bbc083aa9101610ba5565b335f8181526020819052604090205460ff1661148b5760405163b536580760e01b81526001600160a01b038216600482015260240161086c565b611493612157565b335f81815260208181526040808320805464ffffffff00191681558151848152928301849052828201939093525183917ff83560c52fae7525e369b176773b2388c82c3538dea009c1c5fca741d5d613a0919081900360600190a2505050565b6114fb612187565b610ad4612670565b61150b612157565b335f818152600160205260409020805460ff16156115605760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b604482015260640161086c565b805460ff1981166001908117835560065463ffffffff166101000264ffffffffff19909216919091171781556040516001600160a01b038316907f4d0eb1f4bac8744fd2be119845e23b3befc88094b42bcda1204c65694a00f9e5905f90a2816001600160a01b03167f6c1850fce35387a891e82ca88e975790ab6f0709e9ed6842e01397f296012a7e878787876040516115fe9493929190613383565b60405180910390a2505050505050565b5f807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b335f8181526020819052604090205460ff1661167c5760405163b536580760e01b81526001600160a01b038216600482015260240161086c565b6001600160a01b0382165f90815260016020526040902054829060ff166116c15760405163a3a66a1760e01b81526001600160a01b038216600482015260240161086c565b335f6116cd828661240a565b90505f815160038111156116e3576116e3613191565b036117235760405162461bcd60e51b815260206004820152601060248201526f416c726561647920696e61637469766560801b604482015260640161086c565b61134f828660405180604001604052805f600381111561174557611745613191565b81525f602090910152612487565b604080516060810182525f808252602082018190529181018290529061177a8585856126b8565b6020015190505f8163ffffffff16116117cc5760405162461bcd60e51b815260206004820152601460248201527314db185cda1a5b99c81b9bdd08195b98589b195960621b604482015260640161086c565b60028163ffffffff16815481106117e5576117e5613347565b5f9182526020918290206040805160608101825291909201546001600160a01b038116825262ffffff600160a01b8204169382019390935263ffffffff600160b81b90930492909216908201529150505b9392505050565b611845612187565b5f8160ff16116118675760405162461bcd60e51b815260040161086c906133b4565b60065460ff600160281b909104811690821681106118975760405162461bcd60e51b815260040161086c90613403565b6006805465ff00000000001916600160281b60ff8581169182029290921790925560408051918416825260208201929092527f4e2399155205fd27a6de74fcaa614db3a3bc3edaf989234fb34032f0920f39cd9101610ba5565b6001600160a01b0381165f9081526005602052604081206111fe90612240565b5f8061191e8585856126b8565b5195945050505050565b335f8181526020819052604090205460ff166119625760405163b536580760e01b81526001600160a01b038216600482015260240161086c565b6001600160a01b0382165f90815260016020526040902054829060ff166119a75760405163a3a66a1760e01b81526001600160a01b038216600482015260240161086c565b335f6119b3828661240a565b90506001815160038111156119ca576119ca613191565b03611a085760405162461bcd60e51b815260206004820152600e60248201526d416c72656164792061637469766560901b604482015260640161086c565b600381516003811115611a1d57611a1d613191565b03611a5e5760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e481a5b9a5d1a585d1959607a1b604482015260640161086c565b5f81516003811115611a7257611a72613191565b03611a805760038152611b0e565b600281516003811115611a9557611a95613191565b03611ad557600181526001600160a01b0382165f9081526020818152604090912054610100900463ffffffff1690820152611ad082866126ff565b611b0e565b60405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642073746174757360901b604482015260640161086c565b61134f828683612487565b6001600160a01b0381165f9081526004602052604081206111fe90612240565b5f611b42612218565b805490915060ff600160401b820416159067ffffffffffffffff165f81158015611b695750825b90505f8267ffffffffffffffff166001148015611b855750303b155b905081158015611b93575080155b15611bb15760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315611bdb57845460ff60401b1916600160401b1785555b611be48661278c565b611bec61279d565b611bf461279d565b611bfc61279d565b8315611c4257845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b335f8181526001602052604090205460ff16611c845760405163a3a66a1760e01b81526001600160a01b038216600482015260240161086c565b6001600160a01b0382165f90815260208190526040902054829060ff16611cc95760405163b536580760e01b81526001600160a01b038216600482015260240161086c565b335f611cd5858361240a565b9050600181516003811115611cec57611cec613191565b03611d2a5760405162461bcd60e51b815260206004820152600e60248201526d416c72656164792061637469766560901b604482015260640161086c565b600281516003811115611d3f57611d3f613191565b03611d805760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e481a5b9a5d1a585d1959607a1b604482015260640161086c565b5f81516003811115611d9457611d94613191565b03611da25760028152611df2565b600381516003811115611db757611db7613191565b03611ad557600181526001600160a01b0385165f9081526020818152604090912054610100900463ffffffff1690820152611df285836126ff565b61134f858383612487565b611e05612157565b335f818152602081905260409020805460ff1615611e5a5760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b604482015260640161086c565b805460ff191660011781556040516001600160a01b038316907f2fa31fbaacf5eaf61d648ea7528ada6efb69bfb06d2c3bd35ce511a820fce53e905f90a2816001600160a01b03167f6c1850fce35387a891e82ca88e975790ab6f0709e9ed6842e01397f296012a7e878787876040516115fe9493929190613383565b611edf612187565b620151808163ffffffff161015611f535760405162461bcd60e51b815260206004820152603260248201527f44656c6179206d757374206265206174206c65617374206d6f7265207468616e604482015271206f7220657175616c20746f20312064617960701b606482015260840161086c565b6006805463ffffffff83811663ffffffff1983168117909355604080519190921680825260208201939093527f7d96978277a4acf1fa8af376bc53af1059e1b5e52b97732645e8bf570bd852fd9101610ba5565b335f8181526001602052604090205460ff16611fe15760405163a3a66a1760e01b81526001600160a01b038216600482015260240161086c565b6001600160a01b0382165f90815260208190526040902054829060ff166120265760405163b536580760e01b81526001600160a01b038216600482015260240161086c565b335f612032858361240a565b90505f8151600381111561204857612048613191565b036120885760405162461bcd60e51b815260206004820152601060248201526f416c726561647920696e61637469766560801b604482015260640161086c565b61134f858360405180604001604052805f600381111561174557611745613191565b5f807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00611632565b6120da612187565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b038316908117825561211e61160e565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b5f805160206135398339815191525460ff1615610ad45760405163d93c066560e01b815260040160405180910390fd5b3361219061160e565b6001600160a01b031614610ad45760405163118cdaa760e01b815233600482015260240161086c565b6121c16127a5565b5f80516020613539833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006111fe565b5f6111fe825490565b5f61183683836127d4565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806122da57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166122ce5f80516020613519833981519152546001600160a01b031690565b6001600160a01b031614155b15610ad45760405163703e46dd60e11b815260040160405180910390fd5b61139b612187565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561235a575060408051601f3d908101601f1916820190925261235791810190613458565b60015b61238257604051634c9c8ce360e01b81526001600160a01b038316600482015260240161086c565b5f8051602061351983398151915281146123b257604051632a87526960e21b81526004810182905260240161086c565b6123bc83836127fa565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ad45760405163703e46dd60e11b815260040160405180910390fd5b604080518082019091525f8082526020820152606083811b5f9081529083901b60145260288120808252600360205260409091206124479061284f565b949350505050565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155610ecd82612877565b61248f612157565b606083811b5f9081529083901b60145260288120808252600360205260409091206124bb9042846128e7565b6001825160038111156124d0576124d0613191565b036125b8576006546001600160a01b0384165f908152600460205260409020600160281b90910460ff169061250490612240565b106125225760405163bd9b74ad60e01b815260040160405180910390fd5b6006546001600160a01b0385165f908152600560205260409020600160201b90910460ff169061255190612240565b1061256f5760405163ba11b6e760e01b815260040160405180910390fd5b6001600160a01b0383165f9081526004602052604090206125909085612906565b506001600160a01b0384165f9081526005602052604090206125b29084612906565b50612616565b5f825160038111156125cc576125cc613191565b03612616576001600160a01b0383165f9081526004602052604090206125f2908561291a565b506001600160a01b0384165f908152600560205260409020612614908461291a565b505b826001600160a01b0316846001600160a01b03167f21765f04287d7845df78e83515630836500dd5e89d866d34751b5177a96da4c6845f0151856020015160405161266292919061346f565b60405180910390a350505050565b612678612157565b5f80516020613539833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336121fa565b604080518082019091525f8082526020820152606084811b5f9081529084901b60145260288120808252600360205260409091206126f6908461292e565b95945050505050565b6001600160a01b038082165f9081526001602090815260408083205493861683529082905290205463ffffffff610100909204821691600160281b90910416808210156127865760405163650a1a9160e01b81526001600160a01b0380861660048301528416602482015263ffffffff80841660448301528216606482015260840161086c565b50505050565b612794612957565b61139b8161297c565b610ad4612957565b5f805160206135398339815191525460ff16610ad457604051638dfc202b60e01b815260040160405180910390fd5b5f825f0182815481106127e9576127e9613347565b905f5260205f200154905092915050565b612803826129ad565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115612847576123bc8282612a10565b610ecd612a79565b604080518082019091525f80825260208201525f61286c83612a98565b905061183681612adc565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f6128f9825f01518360200151612b55565b9050611c42848483612b84565b5f611836836001600160a01b038416612b9e565b5f611836836001600160a01b038416612bea565b604080518082019091525f80825260208201525f61294c8484612ccd565b905061244781612adc565b61295f612d15565b610ad457604051631afcd79f60e31b815260040160405180910390fd5b612984612957565b6001600160a01b03811661139257604051631e4fbdf760e01b81525f600482015260240161086c565b806001600160a01b03163b5f036129e257604051634c9c8ce360e01b81526001600160a01b038216600482015260240161086c565b5f8051602061351983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051612a2c9190613490565b5f60405180830381855af49150503d805f8114612a64576040519150601f19603f3d011682016040523d82523d5f602084013e612a69565b606091505b50915091506126f6858383612d2e565b3415610ad45760405163b398979f60e01b815260040160405180910390fd5b80545f908015612ad457612abe83612ab16001846134bf565b5f91825260209091200190565b54600160201b90046001600160e01b0316611836565b5f9392505050565b604080518082019091525f8082526020820152604080518082019091525f80825260208201528260ff166003811115612b1757612b17613191565b81906003811115612b2a57612b2a613191565b90816003811115612b3d57612b3d613191565b90525060089290921c63ffffffff1660208301525090565b5f80836003811115612b6957612b69613191565b60ff1660089390931b64ffffffff0016929092179392505050565b5f80612b91858585612d8a565b915091505b935093915050565b5f818152600183016020526040812054612be357508154600181810184555f8481526020808220909301849055845484825282860190935260409020919091556111fe565b505f6111fe565b5f8181526001830160205260408120548015612cc4575f612c0c6001836134bf565b85549091505f90612c1f906001906134bf565b9050808214612c7e575f865f018281548110612c3d57612c3d613347565b905f5260205f200154905080875f018481548110612c5d57612c5d613347565b5f918252602080832090910192909255918252600188019052604090208390555b8554869080612c8f57612c8f6134d2565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f9055600193505050506111fe565b5f9150506111fe565b81545f9081612cde85858385612ece565b90508015612d0b57612cf585612ab16001846134bf565b54600160201b90046001600160e01b03166126f6565b505f949350505050565b5f612d1e612218565b54600160401b900460ff16919050565b606082612d4357612d3e82612f29565b611836565b8151158015612d5a57506001600160a01b0384163b155b15612d8357604051639996b31560e01b81526001600160a01b038516600482015260240161086c565b5080611836565b82545f9081908015612e76575f612da687612ab16001856134bf565b805490915063ffffffff80821691600160201b90046001600160e01b0316908816821115612de757604051632520601d60e01b815260040160405180910390fd5b8763ffffffff168263ffffffff1603612e1a57825463ffffffff16600160201b6001600160e01b03891602178355612e68565b6040805180820190915263ffffffff808a1682526001600160e01b03808a1660208085019182528d54600181018f555f8f81529190912094519151909216600160201b029216919091179101555b9450859350612b9692505050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a555f8a815291822095519251909316600160201b029190931617920191909155905081612b96565b5f5b81831015612f21575f612ee38484612f51565b5f8781526020902090915063ffffffff86169082015463ffffffff161115612f0d57809250612f1b565b612f188160016134e6565b93505b50612ed0565b509392505050565b805115612f3857805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b5f612f5f60028484186134f9565b611836908484166134e6565b5f60608284031215612f7b575f80fd5b50919050565b6001600160a01b038116811461139b575f80fd5b5f60208284031215612fa5575f80fd5b813561183681612f81565b63ffffffff8116811461139b575f80fd5b5f60208284031215612fd1575f80fd5b813561183681612fb0565b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215613001575f80fd5b823561300c81612f81565b9150602083013567ffffffffffffffff80821115613028575f80fd5b818501915085601f83011261303b575f80fd5b81358181111561304d5761304d612fdc565b604051601f8201601f19908116603f0116810190838211818310171561307557613075612fdc565b8160405282815288602084870101111561308d575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f8083601f8401126130be575f80fd5b50813567ffffffffffffffff8111156130d5575f80fd5b6020830191508360208285010111156130ec575f80fd5b9250929050565b5f805f8060408587031215613106575f80fd5b843567ffffffffffffffff8082111561311d575f80fd5b613129888389016130ae565b90965094506020870135915080821115613141575f80fd5b5061314e878288016130ae565b95989497509550505050565b5f806040838503121561316b575f80fd5b823561317681612f81565b9150602083013561318681612f81565b809150509250929050565b634e487b7160e01b5f52602160045260245ffd5b600481106131c157634e487b7160e01b5f52602160045260245ffd5b9052565b602081016111fe82846131a5565b5f602082840312156131e3575f80fd5b813560ff81168114611836575f80fd5b5f805f60608486031215613205575f80fd5b833561321081612f81565b9250602084013561322081612f81565b9150604084013561323081612fb0565b809150509250925092565b5f5b8381101561325557818101518382015260200161323d565b50505f910152565b602081525f825180602084015261327b81604085016020870161323b565b601f01601f19169190910160400192915050565b62ffffff8116811461139b575f80fd5b5f602082840312156132af575f80fd5b81356118368161328f565b81356132c581612f81565b81546001600160a01b031981166001600160a01b0392909216918217835560208401356132f18161328f565b62ffffff60a01b60a09190911b166001600160b81b03198216831781178455604085013561331e81612fb0565b6001600160d81b0319929092169092179190911760b89190911b63ffffffff60b81b1617905550565b634e487b7160e01b5f52603260045260245ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b604081525f61339660408301868861335b565b82810360208401526133a981858761335b565b979650505050505050565b6020808252602f908201527f4d6178206163746976652072656c6174696f6e7368697073206d75737420626560408201526e02067726561746572207468616e203608c1b606082015260800190565b60208082526035908201527f4d6178206163746976652072656c6174696f6e7368697073206d7573742062656040820152740819dc99585d195c881d1a185b8818dd5c9c995b9d605a1b606082015260800190565b5f60208284031215613468575f80fd5b5051919050565b6040810161347d82856131a5565b63ffffffff831660208301529392505050565b5f82516134a181846020870161323b565b9190910192915050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156111fe576111fe6134ab565b634e487b7160e01b5f52603160045260245ffd5b808201808211156111fe576111fe6134ab565b5f8261351357634e487b7160e01b5f52601260045260245ffd5b50049056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220b3aa22cfd764d7ba3a1e2fc4c13799d0c104f4dce909d9df14e9f4ba0c315a1864736f6c6343000818003360e06040523060805234801562000014575f80fd5b5060405162001cac38038062001cac83398101604081905262000037916200012f565b6200004162000066565b6001600160a01b0380831660a052811660c0526200005e62000066565b50506200016c565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000b75760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001175780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6001600160a01b038116811462000117575f80fd5b5f806040838503121562000141575f80fd5b82516200014e816200011a565b602084015190925062000161816200011a565b809150509250929050565b60805160a05160c051611af2620001ba5f395f818161011a0152610bd701525f81816101850152818161054701526106a701525f8181610990015281816109ba0152610b0d0152611af25ff3fe60806040526004361062000103575f3560e01c806379ba50971162000092578063c3477e98116200005e578063c3477e9814620002d6578063c4d66de814620002fa578063e30c3978146200031e578063f2fde38b1462000335575f80fd5b806379ba509714620002505780638456cb5914620002675780638da5cb5b146200027e578063ad3cb1cc1462000295575f80fd5b806352d1902d11620000d257806352d1902d14620001be5780635c975abb14620001e4578063715018a61462000215578063796d5836146200022c575f80fd5b806306433b1b14620001075780633f4ba83a146200015957806349493a4d14620001725780634f1ef28614620001a7575b5f80fd5b34801562000113575f80fd5b506200013c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801562000165575f80fd5b506200017062000359565b005b3480156200017e575f80fd5b506200013c7f000000000000000000000000000000000000000000000000000000000000000081565b62000170620001b8366004620010b6565b6200036f565b348015620001ca575f80fd5b50620001d562000394565b60405190815260200162000150565b348015620001f0575f80fd5b505f8051602062001a9d8339815191525460ff16604051901515815260200162000150565b34801562000221575f80fd5b5062000170620003b2565b34801562000238575f80fd5b506200013c6200024a36600462001165565b620003c7565b3480156200025c575f80fd5b5062000170620005ab565b34801562000273575f80fd5b5062000170620005fd565b3480156200028a575f80fd5b506200013c62000611565b348015620002a1575f80fd5b50620002c7604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516200015091906200123c565b348015620002e2575f80fd5b506200013c620002f436600462001271565b62000645565b34801562000306575f80fd5b50620001706200031836600462001300565b62000707565b3480156200032a575f80fd5b506200013c6200083b565b34801562000341575f80fd5b50620001706200035336600462001300565b62000864565b62000363620008ed565b6200036d62000923565b565b6200037962000985565b620003848262000a2d565b62000390828262000a37565b5050565b5f6200039f62000b02565b505f8051602062001a7d83398151915290565b620003bc620008ed565b6200036d5f62000b4c565b5f620003d262000b86565b620003dd3362000bb8565b5f3390505f8686896001600160a01b03166306fdde036040518163ffffffff1660e01b81526004015f60405180830381865afa15801562000420573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526200044991908101906200131e565b6040516020016200045d9392919062001390565b60405160208183030381529060405290505f85858a6001600160a01b03166395d89b416040518163ffffffff1660e01b81526004015f60405180830381865afa158015620004ad573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052620004d691908101906200131e565b604051602001620004ea93929190620013d6565b60405160208183030381529060405290505f8984848460405160240162000515949392919062001417565b60408051601f198184030181529181526020820180516001600160e01b031663100b506960e11b179052519091505f907f0000000000000000000000000000000000000000000000000000000000000000908390620005749062000fe1565b6200058192919062001463565b604051809103905ff0801580156200059b573d5f803e3d5ffd5b509b9a5050505050505050505050565b3380620005b76200083b565b6001600160a01b031614620005ef5760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b620005fa8162000b4c565b50565b62000607620008ed565b6200036d62000c6d565b5f807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b5f62000650620008ed565b6200065b8462000bb8565b5f8585858560405160240162000675949392919062001417565b60408051601f198184030181529181526020820180516001600160e01b031663100b506960e11b179052519091505f907f0000000000000000000000000000000000000000000000000000000000000000908390620006d49062000fe1565b620006e192919062001463565b604051809103905ff080158015620006fb573d5f803e3d5ffd5b50979650505050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156200074d5750825b90505f8267ffffffffffffffff1660011480156200076a5750303b155b90508115801562000779575080155b15620007985760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315620007c357845460ff60401b1916600160401b1785555b620007ce8662000cb9565b620007d862000cce565b620007e262000cce565b620007ec62000cce565b83156200083357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b5f807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0062000635565b6200086e620008ed565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b0383169081178255620008b462000611565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b33620008f862000611565b6001600160a01b0316146200036d5760405163118cdaa760e01b8152336004820152602401620005e6565b6200092d62000cd8565b5f8051602062001a9d833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148062000a0e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662000a025f8051602062001a7d833981519152546001600160a01b031690565b6001600160a01b031614155b156200036d5760405163703e46dd60e11b815260040160405180910390fd5b620005fa620008ed565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801562000a94575060408051601f3d908101601f1916820190925262000a919181019062001490565b60015b62000abe57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401620005e6565b5f8051602062001a7d833981519152811462000af157604051632a87526960e21b815260048101829052602401620005e6565b62000afd838362000d09565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146200036d5760405163703e46dd60e11b815260040160405180910390fd5b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155620003908262000d65565b5f8051602062001a9d8339815191525460ff16156200036d5760405163d93c066560e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa15801562000c1d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000c439190620014a8565b620005fa57604051633b63649d60e11b81526001600160a01b0382166004820152602401620005e6565b62000c7762000b86565b5f8051602062001a9d833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583362000967565b62000cc362000dd5565b620005fa8162000e1f565b6200036d62000dd5565b5f8051602062001a9d8339815191525460ff166200036d57604051638dfc202b60e01b815260040160405180910390fd5b62000d148262000e54565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511562000d5b5762000afd828262000eba565b6200039062000f32565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166200036d57604051631afcd79f60e31b815260040160405180910390fd5b62000e2962000dd5565b6001600160a01b038116620005ef57604051631e4fbdf760e01b81525f6004820152602401620005e6565b806001600160a01b03163b5f0362000e8b57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401620005e6565b5f8051602062001a7d83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b03168460405162000ed89190620014c9565b5f60405180830381855af49150503d805f811462000f12576040519150601f19603f3d011682016040523d82523d5f602084013e62000f17565b606091505b509150915062000f2985838362000f52565b95945050505050565b34156200036d5760405163b398979f60e01b815260040160405180910390fd5b60608262000f6b5762000f658262000fb8565b62000fb1565b815115801562000f8357506001600160a01b0384163b155b1562000fae57604051639996b31560e01b81526001600160a01b0385166004820152602401620005e6565b50805b9392505050565b80511562000fc857805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b61059680620014e783390190565b6001600160a01b0381168114620005fa575f80fd5b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171562001044576200104462001004565b604052919050565b5f67ffffffffffffffff82111562001068576200106862001004565b50601f01601f191660200190565b5f6200108c62001086846200104c565b62001018565b9050828152838383011115620010a0575f80fd5b828260208301375f602084830101529392505050565b5f8060408385031215620010c8575f80fd5b8235620010d58162000fef565b9150602083013567ffffffffffffffff811115620010f1575f80fd5b8301601f8101851362001102575f80fd5b620011138582356020840162001076565b9150509250929050565b5f8083601f8401126200112e575f80fd5b50813567ffffffffffffffff81111562001146575f80fd5b6020830191508360208285010111156200115e575f80fd5b9250929050565b5f805f805f606086880312156200117a575f80fd5b8535620011878162000fef565b9450602086013567ffffffffffffffff80821115620011a4575f80fd5b620011b289838a016200111d565b90965094506040880135915080821115620011cb575f80fd5b50620011da888289016200111d565b969995985093965092949392505050565b5f5b8381101562001207578181015183820152602001620011ed565b50505f910152565b5f815180845262001228816020860160208601620011eb565b601f01601f19169290920160200192915050565b602081525f62000fb160208301846200120f565b5f82601f83011262001260575f80fd5b62000fb18383356020850162001076565b5f805f806080858703121562001285575f80fd5b8435620012928162000fef565b93506020850135620012a48162000fef565b9250604085013567ffffffffffffffff80821115620012c1575f80fd5b620012cf8883890162001250565b93506060870135915080821115620012e5575f80fd5b50620012f48782880162001250565b91505092959194509250565b5f6020828403121562001311575f80fd5b813562000fb18162000fef565b5f602082840312156200132f575f80fd5b815167ffffffffffffffff81111562001346575f80fd5b8201601f8101841362001357575f80fd5b80516200136862001086826200104c565b8181528560208385010111156200137d575f80fd5b62000f29826020830160208601620011eb565b6802932b9ba30b5b2b2160bd1b8152828460098301375f838201600160fd1b60098201528351620013c981600a840160208801620011eb565b01600a0195945050505050565b6339b0ba1760e11b8152828460048301375f838201601760f91b600482015283516200140a816005840160208801620011eb565b0160050195945050505050565b6001600160a01b038581168252841660208201526080604082018190525f9062001444908301856200120f565b82810360608401526200145881856200120f565b979650505050505050565b6001600160a01b03831681526040602082018190525f9062001488908301846200120f565b949350505050565b5f60208284031215620014a1575f80fd5b5051919050565b5f60208284031215620014b9575f80fd5b8151801515811462000fb1575f80fd5b5f8251620014dc818460208701620011eb565b919091019291505056fe60a060405260405161059638038061059683398101604081905261002291610375565b61002c828261003e565b506001600160a01b0316608052610464565b610047826100fb565b6040516001600160a01b038316907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e905f90a28051156100ef576100ea826001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100e49190610430565b82610209565b505050565b6100f761027c565b5050565b806001600160a01b03163b5f0361013557604051631933b43b60e21b81526001600160a01b03821660048201526024015b60405180910390fd5b807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392831617905560408051635c60da1b60e01b815290515f92841691635c60da1b9160048083019260209291908290030181865afa1580156101ae573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101d29190610430565b9050806001600160a01b03163b5f036100f757604051634c9c8ce360e01b81526001600160a01b038216600482015260240161012c565b60605f80846001600160a01b0316846040516102259190610449565b5f60405180830381855af49150503d805f811461025d576040519150601f19603f3d011682016040523d82523d5f602084013e610262565b606091505b50909250905061027385838361029d565b95945050505050565b341561029b5760405163b398979f60e01b815260040160405180910390fd5b565b6060826102b2576102ad826102fc565b6102f5565b81511580156102c957506001600160a01b0384163b155b156102f257604051639996b31560e01b81526001600160a01b038516600482015260240161012c565b50805b9392505050565b80511561030b57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b80516001600160a01b038116811461033a575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561036d578181015183820152602001610355565b50505f910152565b5f8060408385031215610386575f80fd5b61038f83610324565b60208401519092506001600160401b03808211156103ab575f80fd5b818501915085601f8301126103be575f80fd5b8151818111156103d0576103d061033f565b604051601f8201601f19908116603f011681019083821181831017156103f8576103f861033f565b81604052828152886020848701011115610410575f80fd5b610421836020830160208801610353565b80955050505050509250929050565b5f60208284031215610440575f80fd5b6102f582610324565b5f825161045a818460208701610353565b9190910192915050565b60805161011b61047b5f395f601d015261011b5ff3fe6080604052600a600c565b005b60186014601a565b609d565b565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156076573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906098919060ba565b905090565b365f80375f80365f845af43d5f803e80801560b6573d5ff35b3d5ffd5b5f6020828403121560c9575f80fd5b81516001600160a01b038116811460de575f80fd5b939250505056fea26469706673582212202f0906197967ccac7a412bcc4d0a64fbd96a9545518e318c31e125be1264a2af64736f6c63430008180033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a26469706673582212201da8b3f0f7b42ec16d951270fb3d52b5ec0bd4384ffe06f3090fef52839eb10264736f6c6343000818003360a06040523060805234801562000014575f80fd5b506200001f6200002f565b620000296200002f565b620000e3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000805760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000e05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051611f146200010a5f395f8181610f1901528181610f4201526110860152611f145ff3fe6080604052600436106100fa575f3560e01c80637733369c11610092578063ad3cb1cc11610062578063ad3cb1cc1461027b578063c4d66de8146102b8578063d4fac45d146102d7578063e30c39781461031b578063f2fde38b1461032f575f80fd5b80637733369c1461020857806379ba5097146102275780638456cb591461023b5780638da5cb5b1461024f575f80fd5b80635c975abb116100cd5780635c975abb1461016d5780635e04f87e1461019b5780636fdaf166146101d5578063715018a6146101f4575f80fd5b80633f4ba83a146100fe57806340b3a4bf146101145780634f1ef2861461013357806352d1902d14610146575b5f80fd5b348015610109575f80fd5b5061011261034e565b005b34801561011f575f80fd5b5061011261012e366004611add565b610360565b610112610141366004611b21565b6104cf565b348015610151575f80fd5b5061015a6104ee565b6040519081526020015b60405180910390f35b348015610178575f80fd5b505f80516020611ebf8339815191525460ff166040519015158152602001610164565b3480156101a6575f80fd5b506101ba6101b5366004611bdd565b610509565b60408051825181526020928301519281019290925201610164565b3480156101e0575f80fd5b506101126101ef366004611c0e565b610556565b3480156101ff575f80fd5b50610112610b4e565b348015610213575f80fd5b5061015a610222366004611c46565b610b5f565b348015610232575f80fd5b50610112610b96565b348015610246575f80fd5b50610112610bde565b34801561025a575f80fd5b50610263610bee565b6040516001600160a01b039091168152602001610164565b348015610286575f80fd5b506102ab604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101649190611ca8565b3480156102c3575f80fd5b506101126102d2366004611cda565b610c22565b3480156102e2575f80fd5b5061015a6102f1366004611bdd565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b348015610326575f80fd5b50610263610d33565b34801561033a575f80fd5b50610112610349366004611cda565b610d5b565b610356610de0565b61035e610e12565b565b610368610e71565b806103ba5760405162461bcd60e51b815260206004820152601b60248201527f4d65726b6c6520726f6f742063616e6e6f7420626520656d707479000000000060448201526064015b60405180910390fd5b6001600160a01b0383166104105760405162461bcd60e51b815260206004820152601c60248201527f546f6b656e20616464726573732063616e6e6f74206265207a65726f0000000060448201526064016103b1565b33821561045f5761042384823086610ea1565b6001600160a01b038082165f90815260016020908152604080832093881683529290529081208054859290610459908490611d07565b90915550505b6001600160a01b038181165f81815260208181526040808320948916808452948252918290206001810180548255879055915187815291938693909290917f9b7287e3e899d95da564c38a8d18e3c3d2135143b3d53bd6fa257cd8a961afd9910160405180910390a45050505050565b6104d7610f0e565b6104e082610fb2565b6104ea8282610fba565b5050565b5f6104f761107b565b505f80516020611e9f83398151915290565b6040805180820182525f80825260209182018190526001600160a01b0385811682528183528382209085168252825282902082518084019093528054835260010154908201525b92915050565b61055e610e71565b5f61056f6040830160208401611cda565b6001600160a01b0316036105c55760405162461bcd60e51b815260206004820152601c60248201527f546f6b656e20616464726573732063616e6e6f74206265207a65726f0000000060448201526064016103b1565b5f8160400135116106185760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016103b1565b60808101356106695760405162461bcd60e51b815260206004820152601b60248201527f4d65726b6c6520726f6f742063616e6e6f7420626520656d707479000000000060448201526064016103b1565b5f80806106796020850185611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f8360200160208101906106ac9190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f20905080600101548260800135141580156106ea57508054608083013514155b15610742576106fc6020830183611cda565b61070c6040840160208501611cda565b60405163c9f7e85160e01b81526001600160a01b03928316600482015291166024820152608083013560448201526064016103b1565b335f6002816107546020870187611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f8560200160208101906107879190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f836001600160a01b03166001600160a01b031681526020019081526020015f2054905080846040013511610831576107e26020850185611cda565b6107f26040860160208701611cda565b6040805163ed7deb9d60e01b81526001600160a01b039384166004820152918316602483015291841660448201529085013560648201526084016103b1565b60408401358190035f60018161084a6020890189611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f87602001602081019061087d9190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f20549050818110156108f0576108b46020870187611cda565b6108c46040880160208901611cda565b604051630a542ddd60e31b81526001600160a01b039283166004820152911660248201526044016103b1565b61096d61090060a0880188611d1a565b808060200260200160405190810160405280939291908181526020018383602002808284375f92019190915250505050608088013561094560e08a0160c08b01611d67565b63ffffffff1661095c6101008b0160e08c01611d67565b63ffffffff16888b604001356110c4565b61098a5760405163582f497d60e11b815260040160405180910390fd5b81810360015f61099d60208a018a611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f8860200160208101906109d09190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f2081905550856040013560025f885f016020810190610a0d9190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f886020016020810190610a409190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f866001600160a01b03166001600160a01b031681526020019081526020015f2081905550610ab0866020016020810190610a9a9190611cda565b610aaa6080890160608a01611cda565b846110eb565b6001600160a01b038416610aca6040880160208901611cda565b6001600160a01b0316610ae06020890189611cda565b6001600160a01b03167f4ba395584971ca8c6ff7586af6bcfddf50b5c3cb179dd2be9cf9316578e24a16610b1a60808b0160608c01611cda565b604080516001600160a01b0390921682526020820188905260808c01359082015260600160405180910390a4505050505050565b610b56610de0565b61035e5f61111c565b6001600160a01b038084165f90815260026020908152604080832086851684528252808320938516835292905220545b9392505050565b3380610ba0610d33565b6001600160a01b031614610bd25760405163118cdaa760e01b81526001600160a01b03821660048201526024016103b1565b610bdb8161111c565b50565b610be6610de0565b61035e611154565b5f807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b5f610c2b61119c565b805490915060ff600160401b820416159067ffffffffffffffff165f81158015610c525750825b90505f8267ffffffffffffffff166001148015610c6e5750303b155b905081158015610c7c575080155b15610c9a5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610cc457845460ff60401b1916600160401b1785555b610ccd866111c4565b610cd56111d5565b610cdd6111d5565b610ce56111d5565b8315610d2b57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b5f807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00610c12565b610d63610de0565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b0383169081178255610da7610bee565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b33610de9610bee565b6001600160a01b03161461035e5760405163118cdaa760e01b81523360048201526024016103b1565b610e1a6111dd565b5f80516020611ebf833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b5f80516020611ebf8339815191525460ff161561035e5760405163d93c066560e01b815260040160405180910390fd5b6040516001600160a01b038481166024830152838116604483015260648201839052610f089186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061120c565b50505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610f9457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610f885f80516020611e9f833981519152546001600160a01b031690565b6001600160a01b031614155b1561035e5760405163703e46dd60e11b815260040160405180910390fd5b610bdb610de0565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611014575060408051601f3d908101601f1916820190925261101191810190611d8a565b60015b61103c57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016103b1565b5f80516020611e9f833981519152811461106c57604051632a87526960e21b8152600481018290526024016103b1565b6110768383611278565b505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461035e5760405163703e46dd60e11b815260040160405180910390fd5b5f806110d084846112cd565b90506110df8888838989611336565b98975050505050505050565b6040516001600160a01b0383811660248301526044820183905261107691859182169063a9059cbb90606401610ed6565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b03191681556104ea8261134f565b61115c610e71565b5f80516020611ebf833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610e53565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610550565b6111cc6113bf565b610bdb816113e4565b61035e6113bf565b5f80516020611ebf8339815191525460ff1661035e57604051638dfc202b60e01b815260040160405180910390fd5b5f8060205f8451602086015f885af18061122b576040513d5f823e3d81fd5b50505f513d9150811561124257806001141561124f565b6001600160a01b0384163b155b15610f0857604051635274afe760e01b81526001600160a01b03851660048201526024016103b1565b61128182611415565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156112c5576110768282611478565b6104ea6114ea565b5f806112d884611509565b90505f6112e4846115b7565b905081816040516020016112f9929190611da1565b60408051601f1981840301815282825280516020918201209083015201604051602081830303815290604052805190602001209250505092915050565b5f8461134487868686611647565b149695505050505050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6113c76116e9565b61035e57604051631afcd79f60e31b815260040160405180910390fd5b6113ec6113bf565b6001600160a01b038116610bd257604051631e4fbdf760e01b81525f60048201526024016103b1565b806001600160a01b03163b5f0361144a57604051634c9c8ce360e01b81526001600160a01b03821660048201526024016103b1565b5f80516020611e9f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516114949190611dcf565b5f60405180830381855af49150503d805f81146114cc576040519150601f19603f3d011682016040523d82523d5f602084013e6114d1565b606091505b50915091506114e1858383611702565b95945050505050565b341561035e5760405163b398979f60e01b815260040160405180910390fd5b60605f6115158361175e565b6028602282012090915060601c60295b60018111156115ae57600782600f1611801561155a5750606083828151811061155057611550611dea565b016020015160f81c115b1561159757602060f81b83828151811061157657611576611dea565b0160200180516001600160f81b0319908116909218909116905f82901a9053505b60049190911c906115a781611dfe565b9050611525565b50909392505050565b60605f6115c383611774565b60010190505f8167ffffffffffffffff8111156115e2576115e2611b0d565b6040519080825280601f01601f19166020018201604052801561160c576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461161657509392505050565b5f8061165483600161184b565b905085518114611677576040516313717da960e21b815260040160405180910390fd5b8460015b875181116116de5761168e600287611e27565b5f036116b257815f526020810288015160205260405f2091506002860495506116cc565b602081028801515f528160205260405f2091506002860495505b806116d681611e3a565b91505061167b565b509695505050505050565b5f6116f261119c565b54600160401b900460ff16919050565b60608261171757611712826118f4565b610b8f565b815115801561172e57506001600160a01b0384163b155b1561175757604051639996b31560e01b81526001600160a01b03851660048201526024016103b1565b5080610b8f565b60606105506001600160a01b038316601461191c565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106117b25772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106117de576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106117fc57662386f26fc10000830492506010015b6305f5e1008310611814576305f5e100830492506008015b612710831061182857612710830492506004015b6064831061183a576064830492506002015b600a83106105505760010192915050565b5f806118ca845f60076fffffffffffffffffffffffffffffffff8311901b9050600667ffffffffffffffff83831c11901b17600563ffffffff83831c11901b17600461ffff83831c11901b17600360ff83831c11901b176002600f83831c116d010102020202030303030303030360801b911b9190911791821c1a1790565b90506118ec6118d884611a96565b80156118e7575084826001901b105b151590565b019392505050565b80511561190357805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b6060825f61192b846002611e52565b611936906002611d07565b67ffffffffffffffff81111561194e5761194e611b0d565b6040519080825280601f01601f191660200182016040528015611978576020820181803683370190505b509050600360fc1b815f8151811061199257611992611dea565b60200101906001600160f81b03191690815f1a905350600f60fb1b816001815181106119c0576119c0611dea565b60200101906001600160f81b03191690815f1a9053505f6119e2856002611e52565b6119ed906001611d07565b90505b6001811115611a64576f181899199a1a9b1b9c1cb0b131b232b360811b83600f1660108110611a2157611a21611dea565b1a60f81b828281518110611a3757611a37611dea565b60200101906001600160f81b03191690815f1a90535060049290921c91611a5d81611dfe565b90506119f0565b508115611a8e5760405163e22e27eb60e01b815260048101869052602481018590526044016103b1565b949350505050565b5f6002826003811115611aab57611aab611e69565b611ab59190611e7d565b60ff166001149050919050565b80356001600160a01b0381168114611ad8575f80fd5b919050565b5f805f60608486031215611aef575f80fd5b611af884611ac2565b95602085013595506040909401359392505050565b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215611b32575f80fd5b611b3b83611ac2565b9150602083013567ffffffffffffffff80821115611b57575f80fd5b818501915085601f830112611b6a575f80fd5b813581811115611b7c57611b7c611b0d565b604051601f8201601f19908116603f01168101908382118183101715611ba457611ba4611b0d565b81604052828152886020848701011115611bbc575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f8060408385031215611bee575f80fd5b611bf783611ac2565b9150611c0560208401611ac2565b90509250929050565b5f60208284031215611c1e575f80fd5b813567ffffffffffffffff811115611c34575f80fd5b82016101008185031215610b8f575f80fd5b5f805f60608486031215611c58575f80fd5b611c6184611ac2565b9250611c6f60208501611ac2565b9150611c7d60408501611ac2565b90509250925092565b5f5b83811015611ca0578181015183820152602001611c88565b50505f910152565b602081525f8251806020840152611cc6816040850160208701611c86565b601f01601f19169190910160400192915050565b5f60208284031215611cea575f80fd5b610b8f82611ac2565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561055057610550611cf3565b5f808335601e19843603018112611d2f575f80fd5b83018035915067ffffffffffffffff821115611d49575f80fd5b6020019150600581901b3603821315611d60575f80fd5b9250929050565b5f60208284031215611d77575f80fd5b813563ffffffff81168114610b8f575f80fd5b5f60208284031215611d9a575f80fd5b5051919050565b5f8351611db2818460208801611c86565b835190830190611dc6818360208801611c86565b01949350505050565b5f8251611de0818460208701611c86565b9190910192915050565b634e487b7160e01b5f52603260045260245ffd5b5f81611e0c57611e0c611cf3565b505f190190565b634e487b7160e01b5f52601260045260245ffd5b5f82611e3557611e35611e13565b500690565b5f60018201611e4b57611e4b611cf3565b5060010190565b808202811582820484141761055057610550611cf3565b634e487b7160e01b5f52602160045260245ffd5b5f60ff831680611e8f57611e8f611e13565b8060ff8416069150509291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a26469706673582212206a3ed852be7c0498a8e77e04bac3d43824a29f7bd0d71d11ee89e0297c0d205e64736f6c6343000818003360806040526040516103ef3803806103ef8339810160408190526100229161025d565b61002c8282610033565b5050610340565b61003c82610091565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561008557610080828261010c565b505050565b61008d61017f565b5050565b806001600160a01b03163b5f036100cb57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516101289190610325565b5f60405180830381855af49150503d805f8114610160576040519150601f19603f3d011682016040523d82523d5f602084013e610165565b606091505b5090925090506101768583836101a0565b95945050505050565b341561019e5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101b5576101b0826101ff565b6101f8565b81511580156101cc57506001600160a01b0384163b155b156101f557604051639996b31560e01b81526001600160a01b03851660048201526024016100c2565b50805b9392505050565b80511561020e57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561025557818101518382015260200161023d565b50505f910152565b5f806040838503121561026e575f80fd5b82516001600160a01b0381168114610284575f80fd5b60208401519092506001600160401b03808211156102a0575f80fd5b818501915085601f8301126102b3575f80fd5b8151818111156102c5576102c5610227565b604051601f8201601f19908116603f011681019083821181831017156102ed576102ed610227565b81604052828152886020848701011115610305575f80fd5b61031683602083016020880161023b565b80955050505050509250929050565b5f825161033681846020870161023b565b9190910192915050565b60a38061034c5f395ff3fe6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f80375f80365f845af43d5f803e8080156069573d5ff35b3d5ffdfea2646970667358221220879fca8cef9be854e2d08226444d0e225b29a6332367166082c352309ecac5ef64736f6c63430008180033608060405234801561000f575f80fd5b5060405161042138038061042183398101604081905261002e9161015f565b806001600160a01b03811661005d57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61006681610077565b50610070826100c6565b5050610190565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806001600160a01b03163b5f036100fb5760405163211eb15960e21b81526001600160a01b0382166004820152602401610054565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b80516001600160a01b038116811461015a575f80fd5b919050565b5f8060408385031215610170575f80fd5b61017983610144565b915061018760208401610144565b90509250929050565b6102848061019d5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80633659cfe6146100595780635c60da1b1461006e578063715018a6146100975780638da5cb5b1461009f578063f2fde38b146100af575b5f80fd5b61006c610067366004610221565b6100c2565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006c6100d6565b5f546001600160a01b031661007b565b61006c6100bd366004610221565b6100e9565b6100ca610128565b6100d381610154565b50565b6100de610128565b6100e75f6101d2565b565b6100f1610128565b6001600160a01b03811661011f57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100d3816101d2565b5f546001600160a01b031633146100e75760405163118cdaa760e01b8152336004820152602401610116565b806001600160a01b03163b5f036101895760405163211eb15960e21b81526001600160a01b0382166004820152602401610116565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f60208284031215610231575f80fd5b81356001600160a01b0381168114610247575f80fd5b939250505056fea26469706673582212203c232c460712e9535730678d47997a9d43475dd95a99257d6f0a8c7dd13a216364736f6c634300081800330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d616c6c2073686172657320756e6c6f636b61626c652061667465722066756c6c20756e77696e643e074ab914832eac7ed4f8b75017e824903d0ca7a254387fde9b09f3e0822e6fa26469706673582212208dfeb75c9eaf2cc7662c8364d1524296677ba6d419be0608787ca35646eed13864736f6c6343000818003360a060405230608052348015610013575f80fd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051610cd86100f95f395f818161057b015281816105a401526106e80152610cd85ff3fe6080604052600436106100a5575f3560e01c80638456cb59116100625780638456cb591461014f5780638da5cb5b14610163578063ad3cb1cc1461018f578063c4d66de8146101cc578063e30c3978146101eb578063f2fde38b146101ff575f80fd5b80633f4ba83a146100a95780634f1ef286146100bf57806352d1902d146100d25780635c975abb146100f9578063715018a61461012757806379ba50971461013b575b5f80fd5b3480156100b4575f80fd5b506100bd61021e565b005b6100bd6100cd366004610b07565b610230565b3480156100dd575f80fd5b506100e661024f565b6040519081526020015b60405180910390f35b348015610104575f80fd5b505f80516020610c838339815191525460ff1660405190151581526020016100f0565b348015610132575f80fd5b506100bd61026a565b348015610146575f80fd5b506100bd61027b565b34801561015a575f80fd5b506100bd6102c8565b34801561016e575f80fd5b506101776102d8565b6040516001600160a01b0390911681526020016100f0565b34801561019a575f80fd5b506101bf604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516100f09190610be5565b3480156101d7575f80fd5b506100bd6101e6366004610c17565b61030c565b3480156101f6575f80fd5b50610177610432565b34801561020a575f80fd5b506100bd610219366004610c17565b61045a565b6102266104df565b61022e610511565b565b610238610570565b61024182610614565b61024b828261061c565b5050565b5f6102586106dd565b505f80516020610c6383398151915290565b6102726104df565b61022e5f610726565b3380610285610432565b6001600160a01b0316146102bc5760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6102c581610726565b50565b6102d06104df565b61022e61075e565b5f807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156103515750825b90505f8267ffffffffffffffff16600114801561036d5750303b155b90508115801561037b575080155b156103995760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156103c357845460ff60401b1916600160401b1785555b6103cc866107a6565b6103d46107b7565b6103dc6107b7565b6103e46107b7565b831561042a57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b5f807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c006102fc565b6104626104df565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b03831690811782556104a66102d8565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b336104e86102d8565b6001600160a01b03161461022e5760405163118cdaa760e01b81523360048201526024016102b3565b6105196107bf565b5f80516020610c83833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806105f657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105ea5f80516020610c63833981519152546001600160a01b031690565b6001600160a01b031614155b1561022e5760405163703e46dd60e11b815260040160405180910390fd5b6102c56104df565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610676575060408051601f3d908101601f1916820190925261067391810190610c30565b60015b61069e57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016102b3565b5f80516020610c6383398151915281146106ce57604051632a87526960e21b8152600481018290526024016102b3565b6106d883836107ee565b505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461022e5760405163703e46dd60e11b815260040160405180910390fd5b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b031916815561024b82610843565b6107666108b3565b5f80516020610c83833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610552565b6107ae6108e3565b6102c58161092c565b61022e6108e3565b5f80516020610c838339815191525460ff1661022e57604051638dfc202b60e01b815260040160405180910390fd5b6107f78261095d565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561083b576106d882826109c0565b61024b610a32565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f80516020610c838339815191525460ff161561022e5760405163d93c066560e01b815260040160405180910390fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661022e57604051631afcd79f60e31b815260040160405180910390fd5b6109346108e3565b6001600160a01b0381166102bc57604051631e4fbdf760e01b81525f60048201526024016102b3565b806001600160a01b03163b5f0361099257604051634c9c8ce360e01b81526001600160a01b03821660048201526024016102b3565b5f80516020610c6383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516109dc9190610c47565b5f60405180830381855af49150503d805f8114610a14576040519150601f19603f3d011682016040523d82523d5f602084013e610a19565b606091505b5091509150610a29858383610a51565b95945050505050565b341561022e5760405163b398979f60e01b815260040160405180910390fd5b606082610a6657610a6182610ab0565b610aa9565b8151158015610a7d57506001600160a01b0384163b155b15610aa657604051639996b31560e01b81526001600160a01b03851660048201526024016102b3565b50805b9392505050565b805115610abf57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b80356001600160a01b0381168114610aee575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215610b18575f80fd5b610b2183610ad8565b9150602083013567ffffffffffffffff80821115610b3d575f80fd5b818501915085601f830112610b50575f80fd5b813581811115610b6257610b62610af3565b604051601f8201601f19908116603f01168101908382118183101715610b8a57610b8a610af3565b81604052828152886020848701011115610ba2575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f5b83811015610bdd578181015183820152602001610bc5565b50505f910152565b602081525f8251806020840152610c03816040850160208701610bc3565b601f01601f19169190910160400192915050565b5f60208284031215610c27575f80fd5b610aa982610ad8565b5f60208284031215610c40575f80fd5b5051919050565b5f8251610c58818460208701610bc3565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a26469706673582212209c111882e070af9e0c9d92977cbb7ed9c9d374e469010461729f671198d2b16364736f6c63430008180033",
    "sourceMap": "16215:7737:124:-:0;;;;;3126:44:93;;;3166:4;-1:-1:-1;;3126:44:93;;;;;;;;1065:26:104;;;;;;;;;;;-1:-1:-1;;;703:18:90;;336:42:91;;703:16:90;;:18;;;;;16215:7737:124;-1:-1:-1;336:42:91;703:18:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;680:41;;;;;;;-1:-1:-1;;;;;680:41:90;;;;;-1:-1:-1;;;;;680:41:90;;;;;;762:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;728:49;;;;;;;-1:-1:-1;;;;;728:49:90;;;;;-1:-1:-1;;;;;728:49:90;;;;;;16317:15:124;;;;;;;;;;;;;;-1:-1:-1;;;16317:15:124;;;:8;;;:15;;:::i;:::-;16291:41;;;-1:-1:-1;;;;;;16291:41:124;-1:-1:-1;;;;;16291:41:124;;;;;;;;;;16364:20;;;;;;;;;;;;-1:-1:-1;;;16364:20:124;;;;;;:8;:20::i;:::-;16338:46;;;-1:-1:-1;;;;;;16338:46:124;-1:-1:-1;;;;;16338:46:124;;;;;;;;;;16435:17;;;;;;;;;;;;-1:-1:-1;;;16435:17:124;;;;;;:8;:17::i;:::-;16409:43;;;-1:-1:-1;;;;;;16409:43:124;-1:-1:-1;;;;;16409:43:124;;;;;;;;;;16215:7737;;;;;;;;;;;;20760:125:94;20824:12;20858:20;20873:4;20858:14;:20::i;:::-;-1:-1:-1;20848:30:94;20760:125;-1:-1:-1;;20760:125:94:o;20479:242::-;20549:12;20563:18;20641:4;20624:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;20624:22:94;;;;;;;20614:33;;20624:22;20614:33;;;;-1:-1:-1;;;;;;20665:19:94;;;;;1004:25:125;;;20614:33:94;-1:-1:-1;20665:7:94;;;;977:18:125;;20665:19:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20694:20;;-1:-1:-1;;;20694:20:94;;20658:26;;-1:-1:-1;20694:8:94;;;;:20;;20658:26;;20709:4;;20694:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20479:242;;;:::o;16215:7737:124:-;;;;;;;;:::o;14:290:125:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:125;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:125:o;309:250::-;394:1;404:113;418:6;415:1;412:13;404:113;;;494:11;;;488:18;475:11;;;468:39;440:2;433:10;404:113;;;-1:-1:-1;;551:1:125;533:16;;526:27;309:250::o;564:289::-;695:3;733:6;727:13;749:66;808:6;803:3;796:4;788:6;784:17;749:66;:::i;:::-;831:16;;;;;564:289;-1:-1:-1;;564:289:125:o;1040:493::-;1246:1;1242;1237:3;1233:11;1229:19;1221:6;1217:32;1206:9;1199:51;1286:2;1281;1270:9;1266:18;1259:30;1180:4;1318:6;1312:13;1361:6;1356:2;1345:9;1341:18;1334:34;1377:79;1449:6;1444:2;1433:9;1429:18;1424:2;1416:6;1412:15;1377:79;:::i;:::-;1517:2;1496:15;-1:-1:-1;;1492:29:125;1477:45;;;;1524:2;1473:54;;1040:493;-1:-1:-1;;;1040:493:125:o;:::-;16215:7737:124;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801562000010575f80fd5b506004361062000204575f3560e01c806390e1437c116200011f578063d8a06f7311620000ab578063f887ea401162000077578063f887ea401462000422578063fa7626d41462000436578063fb47e3a21462000444578063fbfa77cf1462000458575f80fd5b8063d8a06f7314620003dc578063dd5bd2c014620003f0578063e20c9f711462000404578063ec342ad0146200040e575f80fd5b8063b0464fdc11620000eb578063b0464fdc1462000399578063b215a87914620003a3578063b5508aa914620003b7578063ba414fa614620003c1575f80fd5b806390e1437c1462000344578063916a17c614620003585780639df8e15514620003715780639ec5a8941462000385575f80fd5b80633e5e3c23116200019f5780637b103999116200016b5780637b10399914620002ea5780637dc0d1d014620002fe57806385226c8114620003125780638da5cb5b146200032b575f80fd5b80633e5e3c2314620002a95780633f7286f414620002b3578063570ca73514620002bd57806366d9a9a014620002d1575f80fd5b80631b98504911620001df5780631b98504914620002595780631ed7831c146200026357806320c61c89146200027c5780632ade38801462000290575f80fd5b806303eadcfc14620002085780630a9254e4146200023957806312d43a511462000245575b5f80fd5b602e546200021c906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b620002436200046c565b005b6025546200021c906001600160a01b031681565b62000243620014d1565b6200026d62001e57565b6040516200023091906200351e565b6029546200021c906001600160a01b031681565b6200029a62001eb9565b604051620002309190620035bd565b6200026d62002001565b6200026d62002061565b6026546200021c906001600160a01b031681565b620002db620020c1565b604051620002309190620036c6565b6022546200021c906001600160a01b031681565b602a546200021c906001600160a01b031681565b6200031c62002231565b60405162000230919062003751565b601f546200021c9061010090046001600160a01b031681565b602c546200021c906001600160a01b031681565b6200036262002306565b604051620002309190620037b7565b602f546200021c906001600160a01b031681565b6024546200021c906001600160a01b031681565b62000362620023eb565b602d546200021c906001600160a01b031681565b6200031c620024d0565b620003cb620025a5565b604051901515815260200162000230565b6023546200021c906001600160a01b031681565b6020546200021c906001600160a01b031681565b6200026d62002643565b6028546200021c906001600160a01b031681565b6021546200021c906001600160a01b031681565b601f54620003cb9060ff1681565b6027546200021c906001600160a01b031681565b602b546200021c906001600160a01b031681565b60086040516200047c9062003397565b6060808252600b908201526a577261707065642042544360a81b608082015260a060208201819052600490820152635742544360e01b60c082015260ff909116604082015260e001604051809103905ff080158015620004de573d5f803e3d5ffd5b50602880546001600160a01b0319166001600160a01b0392909216919091179055604051600690620005109062003397565b6060808252600890820152672aa9a21021b7b4b760c11b608082015260a060208201819052600490820152635553444360e01b60c082015260ff909116604082015260e001604051809103905ff0801580156200056f573d5f803e3d5ffd5b50602980546001600160a01b0319166001600160a01b03929092169190911790556200059a620026a3565b60265460405163ca669fa760e01b81526001600160a01b0390911660048201525f805160206201e3ec8339815191529063ca669fa7906024015f604051808303815f87803b158015620005eb575f80fd5b505af1158015620005fe573d5f803e3d5ffd5b50506022546040805163891a081f60e01b81526004810191909152601360448201527268747470733a2f2f6578616d706c652e636f6d60681b606482015260806024820152600a6084820152694f70657261746f72205960b01b60a48201526001600160a01b03909116925063891a081f915060c4015f604051808303815f87803b1580156200068c575f80fd5b505af11580156200069f573d5f803e3d5ffd5b505060265460405163ca669fa760e01b81526001600160a01b0390911660048201525f805160206201e3ec833981519152925063ca669fa791506024015f604051808303815f87803b158015620006f4575f80fd5b505af115801562000707573d5f803e3d5ffd5b5050602354602854604051633cb6ac1b60e11b81526001600160a01b03918216600480830191909152606060248301526064820152631d195cdd60e21b608482015260a06044820152600160a4820152601560fa1b60c48201529116925063796d5836915060e4016020604051808303815f875af11580156200078c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620007b2919062003842565b602b80546001600160a01b0319166001600160a01b03929092169182179055604080516367c6dc3160e11b8152905162000848929163cf8db8629160048083019260209291908290030181865afa15801562000810573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000836919062003842565b6026546001600160a01b031662002a28565b601f5460405163ca669fa760e01b81526101009091046001600160a01b031660048201525f805160206201e3ec8339815191529063ca669fa7906024015f604051808303815f87803b1580156200089d575f80fd5b505af1158015620008b0573d5f803e3d5ffd5b5050602154602b54604051633302a6a160e01b81526001600160a01b0391821660048201526001602482015291169250633302a6a191506044015f604051808303815f87803b15801562000902575f80fd5b505af115801562000915573d5f803e3d5ffd5b5050602b546040516001600160a01b039091169250620009369150620033a5565b6001600160a01b039091168152602001604051809103905ff08015801562000960573d5f803e3d5ffd5b50602c80546001600160a01b0319166001600160a01b03929092169190911790556040516200098f90620033b3565b604051809103905ff080158015620009a9573d5f803e3d5ffd5b50602a80546001600160a01b0319166001600160a01b03928316908117909155602854604051630704bb0560e31b81529216600483015265048c27395000602483015290633825d828906044015f604051808303815f87803b15801562000a0e575f80fd5b505af115801562000a21573d5f803e3d5ffd5b5050602a54602954604051630704bb0560e31b81526001600160a01b0391821660048201526305f5e100602482015291169250633825d82891506044015f604051808303815f87803b15801562000a76575f80fd5b505af115801562000a89573d5f803e3d5ffd5b5050602554602654602c54602a546028546040516001600160a01b039586169750938516955085949283169391831692169062000ac690620033c1565b6001600160a01b0396871681529486166020860152928516604085015290841660608401528316608083015290911660a082015260c001604051809103905ff08015801562000b17573d5f803e3d5ffd5b50602d80546001600160a01b0319166001600160a01b0392831617905560285460295460405191831692169062000b4e90620033cf565b6001600160a01b03928316815291166020820152604001604051809103905ff08015801562000b7f573d5f803e3d5ffd5b50602e80546001600160a01b0319166001600160a01b03928316179055602554602d54602954604051928416939182169291169062000bbe90620033dd565b6001600160a01b03909116815260606020820181905260089082015267195e1d081919589d60c21b608082015260a06040820181905260079082015266195e1d1111509560ca1b60c082015260e001604051809103905ff08015801562000c27573d5f803e3d5ffd5b5060405162000c3690620033eb565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103905ff08015801562000c70573d5f803e3d5ffd5b50602f80546001600160a01b0319166001600160a01b03929092169190911790556040805160e081018252603280825260208201526105dc918101919091526104b060608201525f608082015261012c60a0820181905260c082015262000cd6620033f9565b600281819052506040805160a081018252602e546001600160a01b03908116825260295481166020830152602f54811682840152611b5860608301526080820185905283830191909152602554915163ca669fa760e01b8152911660048201525f805160206201e3ec8339815191529063ca669fa7906024015f604051808303815f87803b15801562000d67575f80fd5b505af115801562000d7a573d5f803e3d5ffd5b5050602d546040516303e9260f60e31b81526001600160a01b039091169250631f493078915062000dc0905f805160206201e43383398151915290859060040162003860565b5f604051808303815f87803b15801562000dd8575f80fd5b505af115801562000deb573d5f803e3d5ffd5b505060265460405163ca669fa760e01b81526001600160a01b0390911660048201525f805160206201e3ec833981519152925063ca669fa791506024015f604051808303815f87803b15801562000e40575f80fd5b505af115801562000e53573d5f803e3d5ffd5b5050602c546040516347cf47ab60e01b8152611388600482018190526024820181905260448201526201518060648201526001600160a01b0390911692506347cf47ab91506084015f604051808303815f87803b15801562000eb3575f80fd5b505af115801562000ec6573d5f803e3d5ffd5b505060265460405163ca669fa760e01b81526001600160a01b0390911660048201525f805160206201e3ec833981519152925063ca669fa791506024015f604051808303815f87803b15801562000f1b575f80fd5b505af115801562000f2e573d5f803e3d5ffd5b5050602c54602d546040516314c97c1b60e21b81526001600160a01b03918216600482015291169250635325f06c91506024015f604051808303815f87803b15801562000f79575f80fd5b505af115801562000f8c573d5f803e3d5ffd5b505060265460405163ca669fa760e01b81526001600160a01b0390911660048201525f805160206201e3ec833981519152925063ca669fa791506024015f604051808303815f87803b15801562000fe1575f80fd5b505af115801562000ff4573d5f803e3d5ffd5b5050602c54604051624868df60e41b81525f805160206201e4338339815191526004820152600160248201526001600160a01b0390911692506304868df091506044015f604051808303815f87803b1580156200104f575f80fd5b505af115801562001062573d5f803e3d5ffd5b505060265460405163ca669fa760e01b81526001600160a01b0390911660048201525f805160206201e3ec833981519152925063ca669fa791506024015f604051808303815f87803b158015620010b7575f80fd5b505af1158015620010ca573d5f803e3d5ffd5b5050602c546040516305b0e2cf60e21b81525f60048201526001600160a01b0390911692506316c38b3c91506024015f604051808303815f87803b15801562001111575f80fd5b505af115801562001124573d5f803e3d5ffd5b5050602b54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600960448201526814d3105655985d5b1d60ba1b60648201525f805160206201e3ec833981519152925063c657c71891506084015f604051808303815f87803b15801562001198575f80fd5b505af1158015620011ab573d5f803e3d5ffd5b5050602c54604080516318caf8e360e31b81526001600160a01b03909216600483015260248201526002604482015261141360f21b60648201525f805160206201e3ec833981519152925063c657c71891506084015f604051808303815f87803b15801562001218575f80fd5b505af11580156200122b573d5f803e3d5ffd5b5050602d54604080516318caf8e360e31b81526001600160a01b03909216600483015260248201526002604482015261434760f01b60648201525f805160206201e3ec833981519152925063c657c71891506084015f604051808303815f87803b15801562001298575f80fd5b505af1158015620012ab573d5f803e3d5ffd5b5050602e54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600760448201526620b230b83a32b960c91b60648201525f805160206201e3ec833981519152925063c657c71891506084015f604051808303815f87803b1580156200131d575f80fd5b505af115801562001330573d5f803e3d5ffd5b5050602f54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600d60448201526c2232b13a21b7b73732b1ba37b960991b60648201525f805160206201e3ec833981519152925063c657c71891506084015f604051808303815f87803b158015620013a8575f80fd5b505af1158015620013bb573d5f803e3d5ffd5b5050602854604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152634241534560e01b60648201525f805160206201e3ec833981519152925063c657c71891506084015f604051808303815f87803b1580156200142f575f80fd5b505af115801562001442573d5f803e3d5ffd5b5050602954604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152631111509560e21b60648201525f805160206201e3ec833981519152925063c657c71891506084015f604051808303815f87803b158015620014b6575f80fd5b505af1158015620014c9573d5f803e3d5ffd5b505050505050565b60275464174876e800905f9062001501906001600160a01b0316835f805160206201e43383398151915262002a8f565b90505f62001511600283620039a1565b6026546040516303223eab60e11b81526001600160a01b0390911660048201529091505f805160206201e3ec833981519152906306447d56906024015f604051808303815f87803b15801562001565575f80fd5b505af115801562001578573d5f803e3d5ffd5b5050602c5460275460405163771de8f560e11b81526001600160a01b039182166004820152602481018690525f805160206201e43383398151915260448201525f94509116915063ee3bd1ea906064016020604051808303815f875af1158015620015e5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200160b9190620039c1565b90505f805160206201e3ec8339815191526001600160a01b03166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562001654575f80fd5b505af115801562001667573d5f803e3d5ffd5b505050506200167962093a8062002d8a565b60408051602080820183525f8083528351808301855281815293519093620016aa93611388939092869101620039d9565b60408051808303601f190181529082905260265463ca669fa760e01b83526001600160a01b0316600483015291505f805160206201e3ec8339815191529063ca669fa7906024015f604051808303815f87803b15801562001709575f80fd5b505af11580156200171c573d5f803e3d5ffd5b5050602c54604051637bc76ca160e01b81525f93506001600160a01b039091169150637bc76ca19062001756908690869060040162003a1d565b6020604051808303815f875af115801562001773573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620017999190620039c1565b9050620017d0815f6040518060400160405280601081526020016f0636c61696d65642062617365203e20360841b81525062002e9e565b602e54602854604051630286fca160e61b81526001600160a01b0391821660048201526200187b92919091169063a1bf284090602401602060405180830381865afa15801562001822573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620018489190620039c1565b8260405180604001604052806013815260200172636f6c6c61746572616c2061742076656e756560681b81525062002eff565b602f546027546040516302c62fa160e41b81526001600160a01b0391821660048201525f929190911690632c62fa1090602401602060405180830381865afa158015620018ca573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620018f09190620039c1565b905062001934815f6040518060400160405280601981526020017f75736572206465627420656e7469746c656d656e74203e20300000000000000081525062002e9e565b60265460405163ca669fa760e01b81526001600160a01b03909116600482015281906001905f805160206201e3ec8339815191529063ca669fa7906024015f604051808303815f87803b1580156200198a575f80fd5b505af11580156200199d573d5f803e3d5ffd5b5050602d54602754604080516020810182525f80825291516361dd0c9360e01b815291955085945084936001600160a01b03908116936361dd0c939362001a039392909116915f805160206201e433833981519152915f19918b918d9060040162003a37565b6060604051808303815f875af115801562001a20573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001a46919062003a7e565b602f546027546040516302c62fa160e41b81526001600160a01b03918216600482015294975092955090935062001af892911690632c62fa1090602401602060405180830381865afa15801562001a9f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001ac59190620039c1565b5f60405180604001604052806013815260200172195b9d1a5d1b195b595b9d0818db19585c9959606a1b81525062002eff565b62001b27825f6040518060400160405280600a8152602001690726570616964203e20360b41b81525062002e9e565b602e546029546040516311005b0760e01b81526001600160a01b03918216600482015262001bd19291909116906311005b0790602401602060405180830381865afa15801562001b79573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001b9f9190620039c1565b5f604051806040016040528060128152602001711d995b9d59481919589d0818db19585c995960721b81525062002eff565b62001c03835f6040518060400160405280600d81526020016c7769746864726577206261736560981b81525062002e9e565b602c546027546040516320e1427760e11b81526001600160a01b0391821660048201525f805160206201e43383398151915260248201525f9291909116906341c284ee90604401602060405180830381865afa15801562001c66573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001c8c9190620039c1565b602c5460275460405163385c9e7d60e01b81526001600160a01b0391821660048201529293505f9291169063385c9e7d90602401608060405180830381865afa15801562001cdc573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001d02919062003aaa565b505050905062001d2d82826040518060600160405280602781526020016201e40c6027913962002eff565b6040805160018082528183019092525f91602080830190803683370190505090505f805160206201e433833981519152815f8151811062001d725762001d7262003af2565b602090810291909101015260275460405163ca669fa760e01b81526001600160a01b0390911660048201525f805160206201e3ec8339815191529063ca669fa7906024015f604051808303815f87803b15801562001dce575f80fd5b505af115801562001de1573d5f803e3d5ffd5b5050602c546040516303f98b5960e51b81526001600160a01b039091169250637f316b20915062001e1790849060040162003b06565b5f604051808303815f87803b15801562001e2f575f80fd5b505af115801562001e42573d5f803e3d5ffd5b50505050505050505050505050505050505050565b6060601680548060200260200160405190810160405280929190818152602001828054801562001eaf57602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831162001e90575b5050505050905090565b6060601e805480602002602001604051908101604052809291908181526020015f905b8282101562001ff8575f84815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562001fe0578382905f5260205f2001805462001f4e9062003b3f565b80601f016020809104026020016040519081016040528092919081815260200182805462001f7c9062003b3f565b801562001fcb5780601f1062001fa15761010080835404028352916020019162001fcb565b820191905f5260205f20905b81548152906001019060200180831162001fad57829003601f168201915b50505050508152602001906001019062001f2e565b50505050815250508152602001906001019062001edc565b50505050905090565b6060601880548060200260200160405190810160405280929190818152602001828054801562001eaf57602002820191905f5260205f209081546001600160a01b0316815260019091019060200180831162001e90575050505050905090565b6060601780548060200260200160405190810160405280929190818152602001828054801562001eaf57602002820191905f5260205f209081546001600160a01b0316815260019091019060200180831162001e90575050505050905090565b6060601b805480602002602001604051908101604052809291908181526020015f905b8282101562001ff8578382905f5260205f2090600202016040518060400160405290815f82018054620021179062003b3f565b80601f0160208091040260200160405190810160405280929190818152602001828054620021459062003b3f565b8015620021945780601f106200216a5761010080835404028352916020019162002194565b820191905f5260205f20905b8154815290600101906020018083116200217657829003601f168201915b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156200221857602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620021d95790505b50505050508152505081526020019060010190620020e4565b6060601a805480602002602001604051908101604052809291908181526020015f905b8282101562001ff8578382905f5260205f20018054620022749062003b3f565b80601f0160208091040260200160405190810160405280929190818152602001828054620022a29062003b3f565b8015620022f15780601f10620022c757610100808354040283529160200191620022f1565b820191905f5260205f20905b815481529060010190602001808311620022d357829003601f168201915b50505050508152602001906001019062002254565b6060601d805480602002602001604051908101604052809291908181526020015f905b8282101562001ff8575f8481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620023d257602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620023935790505b5050505050815250508152602001906001019062002329565b6060601c805480602002602001604051908101604052809291908181526020015f905b8282101562001ff8575f8481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620024b757602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620024785790505b505050505081525050815260200190600101906200240e565b60606019805480602002602001604051908101604052809291908181526020015f905b8282101562001ff8578382905f5260205f20018054620025139062003b3f565b80601f0160208091040260200160405190810160405280929190818152602001828054620025419062003b3f565b8015620025905780601f10620025665761010080835404028352916020019162002590565b820191905f5260205f20905b8154815290600101906020018083116200257257829003601f168201915b505050505081526020019060010190620024f3565b6008545f9060ff1615620025bd575060085460ff1690565b604051630667f9d760e41b81525f805160206201e3ec833981519152600482018190526519985a5b195960d21b60248301525f9163667f9d7090604401602060405180830381865afa15801562002616573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200263c9190620039c1565b1415905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562001eaf57602002820191905f5260205f209081546001600160a01b0316815260019091019060200180831162001e90575050505050905090565b601f546040516101009091046001600160a01b031660248201525f9060440160408051601f19818403018152919052602080820180516001600160e01b031663189acdbd60e31b1790525490915062002706906001600160a01b03168262002f36565b602180546001600160a01b0319166001600160a01b039283161790556020546200273291168262002f36565b602280546001600160a01b0319166001600160a01b039283161790556020546200275e91168262002f36565b602380546001600160a01b0319166001600160a01b039283161790556020546200278a91168262002f36565b602480546001600160a01b0319166001600160a01b039283161790556021546022546040515f93928316929190911690620027c590620034bc565b6001600160a01b03928316815291166020820152604001604051809103905ff080158015620027f6573d5f803e3d5ffd5b5090505f6200281b82601f60019054906101000a90046001600160a01b031662002f78565b601f546040516303223eab60e11b81526101009091046001600160a01b031660048201529091505f805160206201e3ec833981519152906306447d56906024015f604051808303815f87803b15801562002873575f80fd5b505af115801562002886573d5f803e3d5ffd5b50506021546022546040516200290c94506001600160a01b039283169350911690620028b290620034ca565b6001600160a01b039091168152602001604051809103905ff080158015620028dc573d5f803e3d5ffd5b506040805160048152602481019091526020810180516001600160e01b03166308e557ed60e31b17905262002fa6565b60225460215460405162002933926001600160a01b03908116921690620028b290620034d8565b602354602254604051620029a5926001600160a01b039081169285929116906200295d90620034e6565b6001600160a01b039283168152911660208201526040015b604051809103905ff0801580156200298f573d5f803e3d5ffd5b5060405180602001604052805f81525062002fa6565b602454604051620029c5916001600160a01b0316906200297590620034f4565b5f805160206201e3ec8339815191526001600160a01b03166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562002a0c575f80fd5b505af115801562002a1f573d5f803e3d5ffd5b50505050505050565b6040516328a9b0fb60e11b81526001600160a01b038084166004830152821660248201525f805160206201e3ec8339815191529063515361f6906044015f6040518083038186803b15801562002a7c575f80fd5b505afa158015620014c9573d5f803e3d5ffd5b6028546040516340c10f1960e01b81526001600160a01b038581166004830152602482018590525f9216906340c10f19906044015f604051808303815f87803b15801562002adb575f80fd5b505af115801562002aee573d5f803e3d5ffd5b50506040516303223eab60e11b81526001600160a01b03871660048201525f805160206201e3ec83398151915292506306447d5691506024015f604051808303815f87803b15801562002b3f575f80fd5b505af115801562002b52573d5f803e3d5ffd5b5050602854602b5460405163095ea7b360e01b81526001600160a01b0391821660048201525f1960248201529116925063095ea7b391506044016020604051808303815f875af115801562002ba9573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002bcf919062003b79565b50602b54604051636e553f6560e01b8152600481018590526001600160a01b03868116602483015290911690636e553f65906044016020604051808303815f875af115801562002c21573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002c479190620039c1565b602b54602c5460405163095ea7b360e01b81526001600160a01b0391821660048201525f196024820152929350169063095ea7b3906044016020604051808303815f875af115801562002c9c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002cc2919062003b79565b50602c5460405163aad83e3560e01b815260048101839052602481018490526001600160a01b039091169063aad83e35906044015f604051808303815f87803b15801562002d0e575f80fd5b505af115801562002d21573d5f803e3d5ffd5b505050505f805160206201e3ec8339815191526001600160a01b03166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562002d6c575f80fd5b505af115801562002d7f573d5f803e3d5ffd5b505050509392505050565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c6001600160a01b031663e5d6bf02827f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d5f1c6001600160a01b031663796b89b96040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002e1b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002e419190620039c1565b62002e4d919062003b9a565b6040518263ffffffff1660e01b815260040162002e6c91815260200190565b5f604051808303815f87803b15801562002e84575f80fd5b505af115801562002e97573d5f803e3d5ffd5b5050505050565b604051636cd1e26960e11b81525f805160206201e3ec8339815191529063d9a3c4d29062002ed59086908690869060040162003bba565b5f6040518083038186803b15801562002eec575f80fd5b505afa15801562002a1f573d5f803e3d5ffd5b6040516388b44c8560e01b81525f805160206201e3ec833981519152906388b44c859062002ed59086908690869060040162003bba565b5f828260405162002f479062003502565b62002f5492919062003be3565b604051809103905ff08015801562002f6e573d5f803e3d5ffd5b5090505b92915050565b5f828260405162002f899062003510565b6001600160a01b0392831681529116602082015260400162002f54565b62002fb383838362002fb8565b505050565b604051630667f9d760e41b81526001600160a01b03841660048201527fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360248201525f805160206201e3ec833981519152905f90829063667f9d7090604401602060405180830381865afa15801562003033573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620030599190620039c1565b90508062003178575f6200306d866200329b565b9050620030a1604051806040016040528060058152602001640352e302e360dc1b815250826200337090919063ffffffff16565b80620030ad57505f8451115b15620031185760405163278f794360e11b81526001600160a01b03871690634f1ef28690620030e3908890889060040162003be3565b5f604051808303815f87803b158015620030fb575f80fd5b505af11580156200310e573d5f803e3d5ffd5b5050505062003171565b604051631b2ce7f360e11b81526001600160a01b038681166004830152871690633659cfe6906024015f604051808303815f87803b15801562003159575f80fd5b505af11580156200316c573d5f803e3d5ffd5b505050505b5062002e97565b805f62003185826200329b565b9050620031b9604051806040016040528060058152602001640352e302e360dc1b815250826200337090919063ffffffff16565b80620031c557505f8551115b156200323257604051639623609d60e01b81526001600160a01b03831690639623609d90620031fd908a908a908a9060040162003c08565b5f604051808303815f87803b15801562003215575f80fd5b505af115801562003228573d5f803e3d5ffd5b5050505062002a1f565b60405163266a23b160e21b81526001600160a01b03888116600483015287811660248301528316906399a88ec4906044015f604051808303815f87803b1580156200327b575f80fd5b505af11580156200328e573d5f803e3d5ffd5b5050505050505050505050565b60408051600481526024810182526020810180516001600160e01b0316632b4f2c7360e21b17905290516060915f9182916001600160a01b03861691620032e3919062003c35565b5f60405180830381855afa9150503d805f81146200331d576040519150601f19603f3d011682016040523d82523d5f602084013e62003322565b606091505b509150915081801562003336575060208151115b156200335a578080602001905181019062003352919062003c52565b949350505050565b505060408051602081019091525f815292915050565b5f8151835114801562003390575081805190602001208380519060200120145b9392505050565b610a798062003d0783390190565b6134f3806200478083390190565b61017d8062007c7383390190565b6154bc8062007df083390190565b6109de806200d2ac83390190565b611644806200dc8a83390190565b61127d806200f2ce83390190565b6040805160608101909152805f81526020016200345060408051606080820183525f8083526020808401829052845160a0810186528281529081018290528085018290529182018190526080820152909182015290565b8152602001620034b76040805160a080820183525f80835260208084018290528385018290526060808501839052855160e081018752838152918201839052948101829052938401819052608084810182905291840181905260c084015290919082015290565b905290565b612d8c806201054b83390190565b61353b80620132d783390190565b613700806201681283390190565b611cac8062019f1283390190565b61201e806201bbbe83390190565b6103ef806201dbdc83390190565b610421806201dfcb83390190565b602080825282518282018190525f9190848201906040850190845b81811015620035605783516001600160a01b03168352928401929184019160010162003539565b50909695505050505050565b5f5b83811015620035885781810151838201526020016200356e565b50505f910152565b5f8151808452620035a98160208601602086016200356c565b601f01601f19169290920160200192915050565b602080825282518282018190525f919060409081850190600581811b87018401888601875b848110156200367157603f198a8403018652815180516001600160a01b03168452880151888401889052805188850181905290890190606081871b8601810191908601905f5b818110156200365a57605f198885030183526200364784865162003590565b948d01949350918c019160010162003628565b5050509689019693505090870190600101620035e2565b50909998505050505050505050565b5f815180845260208085019450602084015f5b83811015620036bb5781516001600160e01b0319168752958201959082019060010162003693565b509495945050505050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b838110156200374357888303603f1901855281518051878552620037148886018262003590565b91890151858303868b01529190506200372e818362003680565b968901969450505090860190600101620036ed565b509098975050505050505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b82811015620037aa57603f198886030184526200379785835162003590565b9450928501929085019060010162003778565b5092979650505050505050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b838110156200374357888303603f19018552815180516001600160a01b03168452870151878401879052620038168785018262003680565b9588019593505090860190600101620037de565b6001600160a01b03811681146200383f575f80fd5b50565b5f6020828403121562003853575f80fd5b815162003390816200382a565b8281528151610280820190600381106200388857634e487b7160e01b5f52602160045260245ffd5b80602084015250602083015160018060a01b03808251166040850152806020830151166060850152506040810151905061ffff8082511660808501528060208301511660a08501526040820151151560c08501528060608301511660e085015280608083015116610100850152505060408301516200399961012084018260018060a01b0380825116835280602083015116602084015280604083015116604084015250606081015161ffff8082166060850152608083015191508082511660808501528060208301511660a0850152604082015160c0850152606082015160e0850152608082015115156101008501528060a0830151166101208501528060c08301511661014085015250505050565b509392505050565b5f82620039bc57634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215620039d2575f80fd5b5051919050565b61ffff85168152608060208201525f620039f7608083018662003590565b828103604084015262003a0b818662003590565b91505082606083015295945050505050565b828152604060208201525f62003352604083018462003590565b60018060a01b038716815285602082015284604082015283606082015260c060808201525f62003a6b60c083018562003590565b90508260a0830152979650505050505050565b5f805f6060848603121562003a91575f80fd5b8351925060208401519150604084015190509250925092565b5f805f806080858703121562003abe575f80fd5b505082516020840151604085015160609095015191969095509092509050565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b602080825282518282018190525f9190848201906040850190845b81811015620035605783518352928401929184019160010162003b21565b600181811c9082168062003b5457607f821691505b60208210810362003b7357634e487b7160e01b5f52602260045260245ffd5b50919050565b5f6020828403121562003b8a575f80fd5b8151801515811462003390575f80fd5b8082018082111562002f7257634e487b7160e01b5f52601160045260245ffd5b838152826020820152606060408201525f62003bda606083018462003590565b95945050505050565b6001600160a01b03831681526040602082018190525f90620033529083018462003590565b6001600160a01b038481168252831660208201526060604082018190525f9062003bda9083018462003590565b5f825162003c488184602087016200356c565b9190910192915050565b5f6020828403121562003c63575f80fd5b815167ffffffffffffffff8082111562003c7b575f80fd5b818401915084601f83011262003c8f575f80fd5b81518181111562003ca45762003ca462003ade565b604051601f8201601f19908116603f0116810190838211818310171562003ccf5762003ccf62003ade565b8160405282815287602084870101111562003ce8575f80fd5b62003cfb8360208301602088016200356c565b97965050505050505056fe608060405234801562000010575f80fd5b5060405162000a7938038062000a79833981016040819052620000339162000134565b828260036200004383826200023d565b5060046200005282826200023d565b50506005805460ff191660ff93909316929092179091555062000309915050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011262000097575f80fd5b81516001600160401b0380821115620000b457620000b462000073565b604051601f8301601f19908116603f01168101908282118183101715620000df57620000df62000073565b8160405283815260209250866020858801011115620000fc575f80fd5b5f91505b838210156200011f578582018301518183018401529082019062000100565b5f602085830101528094505050505092915050565b5f805f6060848603121562000147575f80fd5b83516001600160401b03808211156200015e575f80fd5b6200016c8783880162000087565b9450602086015191508082111562000182575f80fd5b50620001918682870162000087565b925050604084015160ff81168114620001a8575f80fd5b809150509250925092565b600181811c90821680620001c857607f821691505b602082108103620001e757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200023857805f5260205f20601f840160051c81016020851015620002145750805b601f840160051c820191505b8181101562000235575f815560010162000220565b50505b505050565b81516001600160401b0381111562000259576200025962000073565b62000271816200026a8454620001b3565b84620001ed565b602080601f831160018114620002a7575f84156200028f5750858301515b5f19600386901b1c1916600185901b17855562000301565b5f85815260208120601f198616915b82811015620002d757888601518255948401946001909101908401620002b6565b5085821015620002f557878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b61076280620003175f395ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c806340c10f191161006357806340c10f191461011a57806370a082311461012f57806395d89b4114610157578063a9059cbb1461015f578063dd62ed3e14610172575f80fd5b806306fdde031461009f578063095ea7b3146100bd57806318160ddd146100e057806323b872dd146100f2578063313ce56714610105575b5f80fd5b6100a76101aa565b6040516100b491906105bc565b60405180910390f35b6100d06100cb366004610623565b61023a565b60405190151581526020016100b4565b6002545b6040519081526020016100b4565b6100d061010036600461064b565b610253565b60055460405160ff90911681526020016100b4565b61012d610128366004610623565b610276565b005b6100e461013d366004610684565b6001600160a01b03165f9081526020819052604090205490565b6100a7610284565b6100d061016d366004610623565b610293565b6100e46101803660046106a4565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101b9906106d5565b80601f01602080910402602001604051908101604052809291908181526020018280546101e5906106d5565b80156102305780601f1061020757610100808354040283529160200191610230565b820191905f5260205f20905b81548152906001019060200180831161021357829003601f168201915b5050505050905090565b5f336102478185856102a0565b60019150505b92915050565b5f336102608582856102b2565b61026b858585610333565b506001949350505050565b6102808282610390565b5050565b6060600480546101b9906106d5565b5f33610247818585610333565b6102ad83838360016103c4565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981101561032d578181101561031f57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61032d84848484035f6103c4565b50505050565b6001600160a01b03831661035c57604051634b637e8f60e11b81525f6004820152602401610316565b6001600160a01b0382166103855760405163ec442f0560e01b81525f6004820152602401610316565b6102ad838383610496565b6001600160a01b0382166103b95760405163ec442f0560e01b81525f6004820152602401610316565b6102805f8383610496565b6001600160a01b0384166103ed5760405163e602df0560e01b81525f6004820152602401610316565b6001600160a01b03831661041657604051634a1406b160e11b81525f6004820152602401610316565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561032d57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161048891815260200190565b60405180910390a350505050565b6001600160a01b0383166104c0578060025f8282546104b5919061070d565b909155506105309050565b6001600160a01b0383165f90815260208190526040902054818110156105125760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610316565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661054c5760028054829003905561056a565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105af91815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b818110156105e8578581018301518582016040015282016105cc565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461061e575f80fd5b919050565b5f8060408385031215610634575f80fd5b61063d83610608565b946020939093013593505050565b5f805f6060848603121561065d575f80fd5b61066684610608565b925061067460208501610608565b9150604084013590509250925092565b5f60208284031215610694575f80fd5b61069d82610608565b9392505050565b5f80604083850312156106b5575f80fd5b6106be83610608565b91506106cc60208401610608565b90509250929050565b600181811c908216806106e957607f821691505b60208210810361070757634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561024d57634e487b7160e01b5f52601160045260245ffdfea26469706673582212206067df3effa80f6cfd878bb3a653b0a8e6307cb018f56f38af6dd1f4e9a9157564736f6c6343000818003360c0604052600c805461ffff19908116603217909155600e805490911660641790553480156200002d575f80fd5b50604051620034f3380380620034f38339810160408190526200005091620005a9565b600180556001600160a01b0381166200009d5760405162461bcd60e51b815260206004820152600a6024820152695641554c545f5a45524f60b01b60448201526064015b60405180910390fd5b6001600160a01b0381166080819052604080516338d52e0f60e01b815290516338d52e0f916004808201926020929091908290030181865afa158015620000e6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200010c9190620005a9565b6001600160a01b031660a05260028054643e81f4017760ab1b65ffffffffffff60a81b199091161790556003805465ffffffffffff19166201518017905542600455620001586200015f565b50620005ce565b5f6080516001600160a01b031663cf8db8626040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200019f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620001c59190620005a9565b90506001600160a01b0381166200020d5760405162461bcd60e51b815260206004820152600b60248201526a2727afa7a822a920aa27a960a91b604482015260640162000094565b6002546001600160a01b0361010090910481169082168190036200022f575050565b6001600160a01b038116156200028d57620002595f80516020620034b3833981519152826200034c565b620002735f8051602062003493833981519152826200034c565b6200028d5f80516020620034d3833981519152826200034c565b60028054610100600160a81b0319166101006001600160a01b03851602179055620002c75f80516020620034b3833981519152836200037a565b50620002e25f8051602062003493833981519152836200037a565b50620002fd5f80516020620034d3833981519152836200037a565b506200030862000426565b816001600160a01b0316816001600160a01b03167ffd0fa76bc4b7eb1dbcfb7fc92cf74a82b38612a288b2ab10d968c34396be1a6c60405160405180910390a35050565b5f82815260208190526040902060010154620003688162000483565b62000374838362000492565b50505050565b5f828152602081815260408083206001600160a01b038516845290915281205460ff166200041d575f838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055620003d43390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600162000420565b505f5b92915050565b6200043062000515565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258620004663390565b6040516001600160a01b03909116815260200160405180910390a1565b6200048f81336200053c565b50565b5f828152602081815260408083206001600160a01b038516845290915281205460ff16156200041d575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a450600162000420565b60025460ff16156200053a5760405163d93c066560e01b815260040160405180910390fd5b565b5f828152602081815260408083206001600160a01b038516845290915290205460ff16620005905760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440162000094565b5050565b6001600160a01b03811681146200048f575f80fd5b5f60208284031215620005ba575f80fd5b8151620005c78162000594565b9392505050565b60805160a051612e3a620006595f395f81816104a1015281816109b401526109e901525f81816107b801528181610a0b01528181610a4c01528181610d6f015281816111b60152818161168101528181611795015281816118ff01528181611cab01528181611d4c01528181611de601528181611fd701528181612020015261243a0152612e3a5ff3fe608060405234801561000f575f80fd5b50600436106102e5575f3560e01c8063641151d411610195578063aad83e35116100e4578063d547741f1161009e578063e8462e8f11610079578063e8462e8f14610797578063ee3bd1ea146107a0578063fbfa77cf146107b3578063fec16939146107da575f80fd5b8063d547741f1461075d578063d80eff2014610770578063e80cf5c314610784575f80fd5b8063aad83e35146106ed578063b047eb0214610700578063b159833d14610714578063b3ce425314610729578063c37b63371461073c578063c7576bc21461074a575f80fd5b806381d12c581161014f578063948779581161012a5780639487795814610682578063955932de14610695578063a217fddf146106d1578063a3db5335146106d8575f80fd5b806381d12c58146105f3578063895ec75f1461065b57806391d148541461066f575f80fd5b8063641151d41461057157806377a8ce97146105845780637bc76ca1146105ac5780637eb92f17146105bf5780637ec09504146105cd5780637f316b20146105e0575f80fd5b80632f2ff15d1161025157806347cf47ab1161020b5780635325f06c116101e65780635325f06c14610512578063570ca7351461052557806357d775f81461053d5780635c975abb14610566575f80fd5b806347cf47ab146104ee578063487e5958146105015780635317dd4d14610509575f80fd5b80632f2ff15d146103fa5780633011ae2b1461040d57806336568abe1461042f578063385c9e7d1461044257806338d52e0f1461049c57806341c284ee146104db575f80fd5b806316c38b3c116102a257806316c38b3c1461038357806322b67b5c14610396578063248a9ca3146103a957806325870fc7146103cb57806327f49b56146103de5780632d88af4a146103e7575f80fd5b806301ffc9a7146102e957806304868df01461031157806305238c9f1461032657806307c7ac1b1461035357806308df8c041461036757806315e5a1e51461037a575b5f80fd5b6102fc6102f7366004612844565b6107f9565b60405190151581526020015b60405180910390f35b61032461031f366004612886565b61082f565b005b6103456103343660046128b0565b5f908152600d602052604090205490565b604051908152602001610308565b6103455f80516020612dc583398151915281565b6103246103753660046128d8565b61089d565b61034560045481565b6103246103913660046128f9565b61091e565b6103456103a4366004612926565b61094f565b6103456103b73660046128b0565b5f9081526020819052604090206001015490565b6103246103d9366004612958565b610c4c565b61034560055481565b6103246103f5366004612958565b610c7f565b610324610408366004612973565b610cad565b6102fc61041b3660046128b0565b60086020525f908152604090205460ff1681565b61032461043d366004612973565b610cd7565b61047c610450366004612958565b6001600160a01b0381165f90815260096020526040902080546001909101546004546005549193509193565b604080519485526020850193909352918301526060820152608001610308565b6104c37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610308565b6103456104e93660046129a1565b610d0a565b6103246104fc3660046129cb565b610e36565b610324610f6f565b61034560065481565b610324610520366004612958565b610f79565b6002546104c39061010090046001600160a01b031681565b60035461054f9065ffffffffffff1681565b60405165ffffffffffff9091168152602001610308565b60025460ff166102fc565b61032461057f3660046129a1565b61103a565b60025461059990600160a81b900461ffff1681565b60405161ffff9091168152602001610308565b6103456105ba366004612a6d565b6110d7565b600e546105999061ffff1681565b6103246105db366004612ab5565b6113d2565b6103246105ee366004612ade565b611545565b6106316106013660046128b0565b600a6020525f908152604090208054600182015460028301546003909301546001600160a01b0390921692909184565b604080516001600160a01b0390951685526020850193909352918301526060820152608001610308565b6103455f80516020612d8583398151915281565b6102fc61067d366004612973565b6116eb565b6007546104c3906001600160a01b031681565b6103456106a33660046129a1565b6001600160a01b03919091165f90815260096020908152604080832093835260029384019091529020015490565b6103455f81565b60025461059990600160c81b900461ffff1681565b6103246106fb366004612b4d565b611713565b6103455f80516020612de583398151915281565b60025461059990600160b81b900461ffff1681565b610324610737366004612b4d565b611849565b600c546105999061ffff1681565b610324610758366004612b6d565b611959565b61032461076b366004612973565b611afd565b6103455f80516020612da583398151915281565b610324610792366004612bd1565b611b21565b610345600b5481565b6103456107ae366004612926565b611b96565b6104c37f000000000000000000000000000000000000000000000000000000000000000081565b6103456107e83660046128b0565b600d6020525f908152604090205481565b5f6001600160e01b03198216637965db0b60e01b148061082957506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f80516020612da583398151915261084681612187565b5f83815260086020908152604091829020805460ff1916851515908117909155915191825284917f050c0a54e09bba81960cf8c4ab488c6e1afe8f819c1c47e42cdd7c795da438ea910160405180910390a2505050565b5f80516020612da58339815191526108b481612187565b6103e88261ffff1611156109005760405162461bcd60e51b815260206004820152600e60248201526d4255464645525f544f4f5f42494760901b60448201526064015b60405180910390fd5b50600b91909155600c805461ffff191661ffff909216919091179055565b5f80516020612de583398151915261093581612187565b811561094757610943612194565b5050565b6109436121ee565b5f5f80516020612dc583398151915261096781612187565b61096f612227565b5f84116109a75760405162461bcd60e51b81526004016108f7906020808252600490820152635a45524f60e01b604082015260600190565b6109dc6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333087612251565b610a306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000866122b8565b604051636e553f6560e01b8152600481018590523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636e553f65906044016020604051808303815f875af1158015610a9a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610abe9190612bea565b6001600160a01b0386165f908152600960209081526040808320878452600280820190935292209081015492945090918610610afa575f610b0a565b858160020154610b0a9190612c15565b600282015560018101548610610b20575f610b30565b858160010154610b309190612c15565b816001018190555085826001015411610b49575f610b59565b858260010154610b599190612c15565b60018301556006548610610b6d575f610b7b565b85600654610b7b9190612c15565b6006558154849083905f90610b91908490612c28565b90915550508054849082905f90610ba9908490612c28565b90915550505f858152600d60205260409020548610610bc8575f610be1565b5f858152600d6020526040902054610be1908790612c15565b5f868152600d602090815260409182902092909255805188815291820186905286916001600160a01b038a16917f4b7c5528758ab16b9f741575f647190b766f607dd83603dead37c925c6f682a0910160405180910390a35050610c4460018055565b509392505050565b5f80516020612da5833981519152610c6381612187565b610c7a5f80516020612d858339815191528361233f565b505050565b5f80516020612da5833981519152610c9681612187565b610c7a5f80516020612de58339815191528361233f565b5f82815260208190526040902060010154610cc781612187565b610cd1838361233f565b50505050565b6001600160a01b0381163314610d005760405163334bd91960e11b815260040160405180910390fd5b610c7a82826123ce565b6001600160a01b0382165f908152600960209081526040808320848452600280820190935290832091820154600b549192918111610d4557505f5b805f03610d5757505491506108299050565b6040516363737ac960e11b8152600481018290525f907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c6e6f59290602401602060405180830381865afa158015610dbc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610de09190612bea565b600c5490915061271090610df89061ffff1683612c3b565b610e029190612c52565b610e0c9082612c28565b905080835f015411610e1e575f610e2b565b8254610e2b908290612c15565b979650505050505050565b5f80516020612da5833981519152610e4d81612187565b6127108561ffff1611158015610e6957506127108461ffff1611155b8015610e7b57506127108361ffff1611155b610eb35760405162461bcd60e51b81526020600482015260096024820152684250535f52414e474560b81b60448201526064016108f7565b6002805463ffffffff60a81b1916600160a81b61ffff88811691820261ffff60b81b191692909217600160b81b8884169081029190911761ffff60c81b1916600160c81b938816938402179093556003805465ffffffffffff191665ffffffffffff87169081179091556040805192835260208301949094529281019190915260608101919091527f42429be9f3bc6715e9df9ec3dd71bf592030a177cb34dea9d2aef15d91cdaa609060800160405180910390a15050505050565b610f77612437565b565b5f80516020612da5833981519152610f9081612187565b6001600160a01b038216610fd05760405162461bcd60e51b815260206004820152600760248201526643475f5a45524f60c81b60448201526064016108f7565b600780546001600160a01b0319166001600160a01b0384161790556110025f80516020612dc58339815191528361233f565b506040516001600160a01b038316907f58878e8c0a44d9101d84b254dfa6bf22980dbb1ad1fe5ccd5e8c410a9891b403905f90a25050565b5f80516020612dc583398151915261105181612187565b6001600160a01b0383165f908152600960209081526040808320858452600280820190935292209081015415611088575f60028201555b6001810154156110d057600180820180545f9182905591840180548392906110b1908490612c15565b925050819055508060065f8282546110c99190612c15565b9091555050505b5050505050565b5f5f80516020612d858339815191526110ef81612187565b6110f7612227565b6110ff612627565b5f858152600a6020908152604091829020825160808101845281546001600160a01b03168082526001830154938201939093526002820154938101939093526003015460608301526111815760405162461bcd60e51b815260206004820152600b60248201526a2922a8afaaa725a727aba760a91b60448201526064016108f7565b6040818101516007549151635d043b2960e11b815260048101919091526001600160a01b0391821660248201523060448201527f00000000000000000000000000000000000000000000000000000000000000009091169063ba087652906064016020604051808303815f875af11580156111fe573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112229190612bea565b5f878152600a6020908152604080832080546001600160a01b0319168155600181018490556002808201859055600390910184905585516001600160a01b0316845260098352818420868401518552808201909352908320908101805494975091939092879291611294908490612c28565b9250508190555084816001015f8282546112ae9190612c28565b9250508190555084826001015f8282546112c89190612c28565b925050819055508460065f8282546112e09190612c28565b90915550506020808401515f908152600d909152604081208054879290611308908490612c28565b925050819055508260200151835f01516001600160a01b0316897f6931959cae9642a3a72e6bd1acdf02c6286e80d77523d209c78cc34b4d42bf4f8860405161135391815260200190565b60405180910390a46007548351602085015160405163476b4c1d60e01b81526001600160a01b039093169263476b4c1d926113999290918a91908d908d90600401612c99565b5f604051808303815f87803b1580156113b0575f80fd5b505af11580156113c2573d5f803e3d5ffd5b50505050505050610c4460018055565b6113da612227565b6113e2612627565b5f8381526008602052604090205460ff1661140f5760405162461bcd60e51b81526004016108f790612cc6565b60075460405163023c91c360e01b8152600481018590525f916001600160a01b03169063023c91c390602401602060405180830381865afa158015611456573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061147a9190612cee565b905060ff8116158061148f575060ff81166001145b6114ce5760405162461bcd60e51b815260206004820152601060248201526f1393d517d1115413d4d25517d2d2539160821b60448201526064016108f7565b6007546040516312b6f7c560e01b81523360048201526024810186905260448101859052606481018490526001600160a01b03909116906312b6f7c5906084015f604051808303815f87803b158015611525575f80fd5b505af1158015611537573d5f803e3d5ffd5b5050505050610c7a60018055565b61154d612227565b335f90815260096020526040812090805b838110156115b8575f836002015f87878581811061157e5761157e612d0e565b9050602002013581526020019081526020015f20600201549050600b548111156115af576115ac8184612c28565b92505b5060010161155e565b5080156115fa5760405162461bcd60e51b815260206004820152601060248201526f13d55514d5105391125391d7d111509560821b60448201526064016108f7565b8154806116355760405162461bcd60e51b81526020600482015260096024820152684e4f5f53484152455360b81b60448201526064016108f7565b5f5b84811015611678575f846002015f88888581811061165757611657612d0e565b602090810292909201358352508101919091526040015f2055600101611637565b505f83556116a77f0000000000000000000000000000000000000000000000000000000000000000338361264b565b6040518181525f9033907f0fb379154341b4f891bcfefa4a5fc0dd7deef978b97cce616bbeb915cc8a257e906020015b60405180910390a350505061094360018055565b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61171b612227565b611723612627565b5f821161175b5760405162461bcd60e51b81526004016108f7906020808252600490820152635a45524f60e01b604082015260600190565b5f8181526008602052604090205460ff166117885760405162461bcd60e51b81526004016108f790612cc6565b6117bd6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333085612251565b335f9081526009602052604081208054909184918391906117df908490612c28565b90915550505f82815260028201602052604081208054859290611803908490612c28565b9091555050604051838152829033907f71dd024b6e25e8f24d8ba096487beda468da7e59447dd391d52b336ee4aa5adf9060200160405180910390a35061094360018055565b611851612227565b5f61185c3383610d0a565b90505f8311801561186d5750808311155b6118aa5760405162461bcd60e51b815260206004820152600e60248201526d1313d0d2d15117d09657d111509560921b60448201526064016108f7565b335f908152600960209081526040808320858452600281019092528220805491929091869183916118dc908490612c15565b90915550508154859083905f906118f4908490612c15565b9091555061192590507f0000000000000000000000000000000000000000000000000000000000000000338761264b565b604051858152849033907f0fb379154341b4f891bcfefa4a5fc0dd7deef978b97cce616bbeb915cc8a257e906020016116d7565b611961612227565b611969612627565b5f8681526008602052604090205460ff166119965760405162461bcd60e51b81526004016108f790612cc6565b5f85116119d05760405162461bcd60e51b81526020600482015260086024820152675a45524f5f52455160c01b60448201526064016108f7565b60075460405163023c91c360e01b8152600481018890525f916001600160a01b03169063023c91c390602401602060405180830381865afa158015611a17573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a3b9190612cee565b905060ff8116600214611a825760405162461bcd60e51b815260206004820152600f60248201526e1393d517d093d49493d5d7d2d25391608a1b60448201526064016108f7565b6007546040516361dd0c9360e01b81526001600160a01b03909116906361dd0c9390611abe9033908b908b908b908b908b908b90600401612d22565b5f604051808303815f87803b158015611ad5575f80fd5b505af1158015611ae7573d5f803e3d5ffd5b5050505050611af560018055565b505050505050565b5f82815260208190526040902060010154611b1781612187565b610cd183836123ce565b5f80516020612da5833981519152611b3881612187565b6103e88261ffff161115611b7d5760405162461bcd60e51b815260206004820152600c60248201526b48454144524f4f4d5f42494760a01b60448201526064016108f7565b50600e805461ffff191661ffff92909216919091179055565b5f5f80516020612d85833981519152611bae81612187565b611bb6612227565b611bbe612627565b5f8381526008602052604090205460ff16611beb5760405162461bcd60e51b81526004016108f790612cc6565b6007546001600160a01b0316611c305760405162461bcd60e51b815260206004820152600a60248201526910d1d7d393d517d4d15560b21b60448201526064016108f7565b6001600160a01b0385165f908152600960209081526040808320868452600281019092529091208515801590611c67575080548611155b611ca05760405162461bcd60e51b815260206004820152600a60248201526929a420a922a9afa7a7a160b11b60448201526064016108f7565b611ca861267c565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d05573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d299190612bea565b6040516303d1689d60e11b8152600481018990529091505f906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906307a2d13a90602401602060405180830381865afa158015611d91573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611db59190612bea565b60025485546040516303d1689d60e11b815260048101919091529192505f9161271091600160a81b900461ffff16907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906307a2d13a90602401602060405180830381865afa158015611e33573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e579190612bea565b611e619190612c3b565b611e6b9190612c52565b905080828660010154611e7e9190612c28565b1115611ebb5760405162461bcd60e51b815260206004820152600c60248201526b05045525f555345525f4341560a41b60448201526064016108f7565b6002545f9061271090611ed990600160b81b900461ffff1686612c3b565b611ee39190612c52565b90508083600654611ef49190612c28565b1115611f2f5760405162461bcd60e51b815260206004820152600a6024820152690474c4f42414c5f4341560b41b60448201526064016108f7565b6002545f9061271090611f4d90600160c81b900461ffff1687612c3b565b611f579190612c52565b90508084600554611f689190612c28565b1115611fa25760405162461bcd60e51b8152602060048201526009602482015268045504f43485f4341560bc1b60448201526064016108f7565b8a865f015f828254611fb49190612c15565b909155505086548b9088905f90611fcc908490612c15565b90915550611ffd90507f0000000000000000000000000000000000000000000000000000000000000000808d6122b8565b604051633ea0e43760e11b8152600481018c9052306024820181905260448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637d41c86e906064016020604051808303815f875af115801561206e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906120929190612bea565b985060405180608001604052808d6001600160a01b031681526020018b81526020018c815260200142815250600a5f8b81526020019081526020015f205f820151815f015f6101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020155606082015181600301559050508360055f82825461212b9190612c28565b9250508190555089898d6001600160a01b03167f8dd64b29aee989b23200580e70f50a29c6b89ad7d0793cdbd65123f9190475228e60405161216f91815260200190565b60405180910390a450505050505050610c4460018055565b61219181336126a4565b50565b61219c612627565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586121d13390565b6040516001600160a01b03909116815260200160405180910390a1565b6121f66126dd565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336121d1565b60026001540361224a57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6040516001600160a01b038481166024830152838116604483015260648201839052610cd19186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050612700565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301525f919085169063dd62ed3e90604401602060405180830381865afa158015612305573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123299190612bea565b9050610cd1848461233a8585612c28565b61276c565b5f61234a83836116eb565b6123c7575f838152602081815260408083206001600160a01b03861684529091529020805460ff1916600117905561237f3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610829565b505f610829565b5f6123d983836116eb565b156123c7575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610829565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663cf8db8626040518163ffffffff1660e01b8152600401602060405180830381865afa158015612494573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906124b89190612d69565b90506001600160a01b0381166124fe5760405162461bcd60e51b815260206004820152600b60248201526a2727afa7a822a920aa27a960a91b60448201526064016108f7565b6002546001600160a01b03610100909104811690821681900361251f575050565b6001600160a01b03811615612573576125455f80516020612da583398151915282611afd565b61255c5f80516020612d8583398151915282611afd565b6125735f80516020612de583398151915282611afd565b60028054610100600160a81b0319166101006001600160a01b038516021790556125aa5f80516020612da58339815191528361233f565b506125c25f80516020612d858339815191528361233f565b506125da5f80516020612de58339815191528361233f565b506125e3612194565b816001600160a01b0316816001600160a01b03167ffd0fa76bc4b7eb1dbcfb7fc92cf74a82b38612a288b2ab10d968c34396be1a6c60405160405180910390a35050565b60025460ff1615610f775760405163d93c066560e01b815260040160405180910390fd5b6040516001600160a01b03838116602483015260448201839052610c7a91859182169063a9059cbb90606401612286565b6003546004546126949165ffffffffffff1690612c28565b4210610f7757426004555f600555565b6126ae82826116eb565b6109435760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016108f7565b60025460ff16610f7757604051638dfc202b60e01b815260040160405180910390fd5b5f8060205f8451602086015f885af18061271f576040513d5f823e3d81fd5b50505f513d91508115612736578060011415612743565b6001600160a01b0384163b155b15610cd157604051635274afe760e01b81526001600160a01b03851660048201526024016108f7565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526127bd84826127fb565b610cd1576040516001600160a01b0384811660248301525f60448301526127f191869182169063095ea7b390606401612286565b610cd18482612700565b5f805f8060205f8651602088015f8a5af192503d91505f51905082801561283a5750811561282c578060011461283a565b5f866001600160a01b03163b115b9695505050505050565b5f60208284031215612854575f80fd5b81356001600160e01b03198116811461286b575f80fd5b9392505050565b80358015158114612881575f80fd5b919050565b5f8060408385031215612897575f80fd5b823591506128a760208401612872565b90509250929050565b5f602082840312156128c0575f80fd5b5035919050565b803561ffff81168114612881575f80fd5b5f80604083850312156128e9575f80fd5b823591506128a7602084016128c7565b5f60208284031215612909575f80fd5b61286b82612872565b6001600160a01b0381168114612191575f80fd5b5f805f60608486031215612938575f80fd5b833561294381612912565b95602085013595506040909401359392505050565b5f60208284031215612968575f80fd5b813561286b81612912565b5f8060408385031215612984575f80fd5b82359150602083013561299681612912565b809150509250929050565b5f80604083850312156129b2575f80fd5b82356129bd81612912565b946020939093013593505050565b5f805f80608085870312156129de575f80fd5b6129e7856128c7565b93506129f5602086016128c7565b9250612a03604086016128c7565b9150606085013565ffffffffffff81168114612a1d575f80fd5b939692955090935050565b5f8083601f840112612a38575f80fd5b50813567ffffffffffffffff811115612a4f575f80fd5b602083019150836020828501011115612a66575f80fd5b9250929050565b5f805f60408486031215612a7f575f80fd5b83359250602084013567ffffffffffffffff811115612a9c575f80fd5b612aa886828701612a28565b9497909650939450505050565b5f805f60608486031215612ac7575f80fd5b505081359360208301359350604090920135919050565b5f8060208385031215612aef575f80fd5b823567ffffffffffffffff80821115612b06575f80fd5b818501915085601f830112612b19575f80fd5b813581811115612b27575f80fd5b8660208260051b8501011115612b3b575f80fd5b60209290920196919550909350505050565b5f8060408385031215612b5e575f80fd5b50508035926020909101359150565b5f805f805f8060a08789031215612b82575f80fd5b863595506020870135945060408701359350606087013567ffffffffffffffff811115612bad575f80fd5b612bb989828a01612a28565b979a9699509497949695608090950135949350505050565b5f60208284031215612be1575f80fd5b61286b826128c7565b5f60208284031215612bfa575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561082957610829612c01565b8082018082111561082957610829612c01565b808202811582820484141761082957610829612c01565b5f82612c6c57634e487b7160e01b5f52601260045260245ffd5b500490565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b60018060a01b0386168152846020820152836040820152608060608201525f610e2b608083018486612c71565b6020808252600e908201526d14d514905517d11254d05093115160921b604082015260600190565b5f60208284031215612cfe575f80fd5b815160ff8116811461286b575f80fd5b634e487b7160e01b5f52603260045260245ffd5b60018060a01b038816815286602082015285604082015284606082015260c060808201525f612d5560c083018587612c71565b90508260a083015298975050505050505050565b5f60208284031215612d79575f80fd5b815161286b8161291256fe061671c5d9c2848c4e78f3cfd7efc04c5d793e746efab769b3416aa5bbfb40ccdf058f017018cec776721a5a8df2a193f80faf9c7b8bbf29a37c17b2cf0a7a6a1b2039bf446bda677d0fc3090b979eb8ac19c564e1d7bf26d59219a9c244afb0372d55e37651a7c6e1940a3fb8628e4b6122a3c1a8b2b70aee13e07228604567a2646970667358221220c476a68520a35201c33e27fb0011372845803ced1ac5046e1006a8ba499b663264736f6c63430008180033061671c5d9c2848c4e78f3cfd7efc04c5d793e746efab769b3416aa5bbfb40ccdf058f017018cec776721a5a8df2a193f80faf9c7b8bbf29a37c17b2cf0a7a6a372d55e37651a7c6e1940a3fb8628e4b6122a3c1a8b2b70aee13e07228604567608060405234801561000f575f80fd5b506101608061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80633825d82814610043578063aea910781461006e578063d8674dab146100a8575b5f80fd5b61006c6100513660046100e2565b6001600160a01b039091165f90815260208190526040902055565b005b61009661007c36600461010a565b6001600160a01b03165f9081526020819052604090205490565b60405190815260200160405180910390f35b6100966100b636600461010a565b5f6020819052908152604090205481565b80356001600160a01b03811681146100dd575f80fd5b919050565b5f80604083850312156100f3575f80fd5b6100fc836100c7565b946020939093013593505050565b5f6020828403121561011a575f80fd5b610123826100c7565b939250505056fea26469706673582212203ddc45ff0baf3b0263be730e9caea87f8fcad02e7df00132d445139de5a9ae6d64736f6c6343000818003360c060405234801562000010575f80fd5b50604051620054bc380380620054bc83398101604081905262000033916200024c565b600180556001600160a01b038116158015906200005857506001600160a01b03831615155b620000955760405162461bcd60e51b81526020600482015260096024820152682d22a927afa0a2222960b91b604482015260640160405180910390fd5b6001600160a01b0381811660805283811660a052600280546001600160a01b031916918416919091179055620000ec7fdf058f017018cec776721a5a8df2a193f80faf9c7b8bbf29a37c17b2cf0a7a6a8762000188565b50620001197f061671c5d9c2848c4e78f3cfd7efc04c5d793e746efab769b3416aa5bbfb40cc8662000188565b50620001467f372d55e37651a7c6e1940a3fb8628e4b6122a3c1a8b2b70aee13e072286045678562000188565b506200017b7faa7928cf07feced9a83ea7cfbed4c4d0a65fcdd513fad1d88617046db8c3710460a0516200018860201b60201c565b50505050505050620002dc565b5f828152602081815260408083206001600160a01b038516845290915281205460ff166200022b575f838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055620001e23390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016200022e565b505f5b92915050565b6001600160a01b038116811462000249575f80fd5b50565b5f805f805f8060c0878903121562000262575f80fd5b86516200026f8162000234565b6020880151909650620002828162000234565b6040880151909550620002958162000234565b6060880151909450620002a88162000234565b6080880151909350620002bb8162000234565b60a0880151909250620002ce8162000234565b809150509295509295509295565b60805160a051615139620003835f395f8181610596015281816118a10152818161192301528181611a17015281816120b80152818161212501526122b001525f81816106240152818161086101528181610af8015281816118740152818161208b01528181612d3901528181612dc001528181612f0d0152818161303d01528181613a5601528181613b9a01528181613ca601528181613d490152613df101526151395ff3fe608060405234801561000f575f80fd5b50600436106101dc575f3560e01c80636bc84c33116101095780639a5eecb91161009e578063d547741f1161006e578063d547741f14610646578063d80eff2014610659578063e0eb70991461066d578063fd2881c01461068f575f80fd5b80639a5eecb9146105de578063a217fddf146105f1578063b047eb02146105f8578063cdf456e11461061f575f80fd5b8063895ec75f116100d9578063895ec75f1461057d57806390e1437c1461059157806391d14854146105b857806394793bf9146105cb575f80fd5b80636bc84c33146105195780637adbf9731461052c5780637dc0d1d01461053f578063820216351461056a575f80fd5b80632f2ff15d1161017f5780633ff34eb91161014f5780633ff34eb9146103555780634700bcbe146104ac578063476b4c1d146104d857806361dd0c93146104eb575f80fd5b80632f2ff15d14610309578063346cc2c01461031c57806336568abe1461032f5780633d07e8fb14610342575f80fd5b806322aa0e5a116101ba57806322aa0e5a1461023f578063248a9ca3146102c157806325870fc7146102e35780632d88af4a146102f6575f80fd5b806301ffc9a7146101e05780631c8c4c02146102085780631f4930781461022a575b5f80fd5b6101f36101ee36600461428e565b610728565b60405190151581526020015b60405180910390f35b61021c5f805160206150e483398151915281565b6040519081526020016101ff565b61023d6102383660046142bc565b61075e565b005b61028c61024d3660046142f3565b60066020525f908152604090205461ffff8082169162010000810482169160ff600160201b83041691600160281b8104821691600160381b9091041685565b6040805161ffff968716815294861660208601529215159284019290925283166060830152909116608082015260a0016101ff565b61021c6102cf3660046142f3565b5f9081526020819052604090206001015490565b61023d6102f136600461431e565b6110ef565b61023d61030436600461431e565b611122565b61023d610317366004614339565b611163565b61023d61032a366004614367565b61118d565b61023d61033d366004614339565b611ad1565b61023d6103503660046143a6565b611b04565b61049d6103633660046142f3565b600460208181525f928352604092839020805484516060808201875260018401546001600160a01b0390811683526002850154811683870152875160a08082018a52600387015461ffff8082168452620100008083048216858c015260ff600160201b840481161515868f0152600160281b8404831686890152600160381b9093048216608080870191909152888e01959095528c518085018e529b8a015486168c5260058a015486168c8c015260068a01549586168c8e0152600160a01b90950481168b8701528b5160e081018d5260078a015480831682529590950481169985019990995260088801549a84019a909a52600987015493830193909352600a909501548089161515828701526101008104871692820192909252630100000090910490941660c0850152918401929092529216919083565b6040516101ff939291906143fd565b6104bf6104ba3660046145e8565b611b79565b60408051921515835260ff9091166020830152016101ff565b61023d6104e6366004614676565b611c84565b6104fe6104f93660046146db565b611ecf565b604080519384526020840192909252908201526060016101ff565b61023d6105273660046143a6565b612391565b61023d61053a36600461431e565b6123fa565b600254610552906001600160a01b031681565b6040516001600160a01b0390911681526020016101ff565b61023d610578366004614751565b612434565b61021c5f805160206150a483398151915281565b6105527f000000000000000000000000000000000000000000000000000000000000000081565b6101f36105c6366004614339565b6124ea565b6101f36105d93660046142f3565b612512565b61023d6105ec3660046147b5565b612842565b61021c5f81565b61021c7f372d55e37651a7c6e1940a3fb8628e4b6122a3c1a8b2b70aee13e0722860456781565b6105527f000000000000000000000000000000000000000000000000000000000000000081565b61023d610654366004614339565b612915565b61021c5f805160206150c483398151915281565b6101f361067b36600461431e565b60056020525f908152604090205460ff1681565b6106e861069d3660046142f3565b600360208190525f9182526040909120805460018201546002830154929093015461ffff80831694620100009093048116939160ff8116916101008204811691630100000090041687565b6040805161ffff98891681529688166020880152860194909452606085019290925215156080840152831660a083015290911660c082015260e0016101ff565b5f6001600160e01b03198216637965db0b60e01b148061075857506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f805160206150c483398151915261077581612939565b5f6107836020840184614837565b6002811115610794576107946143c9565b03610a0f575f6107aa604084016020850161431e565b6001600160a01b0316146107f85760405162461bcd60e51b815260206004820152601060248201526f24a222a72a2fa727afaba920a82822a960811b60448201526064015b60405180910390fd5b5f610809606084016040850161431e565b6001600160a01b0316036108575760405162461bcd60e51b815260206004820152601560248201527424a222a72a2fa722a2a229afa1a7a72722a1aa27a960591b60448201526064016107ef565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610891606084016040850161431e565b6001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108cc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108f09190614852565b6001600160a01b0316146109465760405162461bcd60e51b815260206004820152601a60248201527f434f4e4e4543544f525f4e454544535f424153455f415353455400000000000060448201526064016107ef565b61096061095b3684900384016060850161486d565b612946565b5f6109736101208401610100850161431e565b6001600160a01b03161480156109a257505f6109976101408401610120850161431e565b6001600160a01b0316145b80156109c757505f6109bc6101608401610140850161431e565b6001600160a01b0316145b610a0a5760405162461bcd60e51b8152602060048201526014602482015273424f52524f575f4346475f4e4f545f454d50545960601b60448201526064016107ef565b61102f565b6001610a1e6020840184614837565b6002811115610a2f57610a2f6143c9565b03610d0f575f610a45604084016020850161431e565b6001600160a01b031603610a905760405162461bcd60e51b81526020600482015260126024820152712ba920a82fa722a2a229afaba920a82822a960711b60448201526064016107ef565b5f610aa1606084016040850161431e565b6001600160a01b031603610aee5760405162461bcd60e51b81526020600482015260146024820152732ba920a82fa722a2a229afa1a7a72722a1aa27a960611b60448201526064016107ef565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610b28604084016020850161431e565b6001600160a01b0316635001f3b56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b63573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b879190614852565b6001600160a01b031614610bd25760405162461bcd60e51b81526020600482015260126024820152710aea482a0be8482a68abe9a92a69a82a886960731b60448201526064016107ef565b610be2604083016020840161431e565b6001600160a01b03166350e70d486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c1d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c419190614852565b6001600160a01b0316610c5a606084016040850161431e565b6001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c95573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cb99190614852565b6001600160a01b0316146109465760405162461bcd60e51b815260206004820152601860248201527f434f4e4e4543544f525f41535345545f4d49534d41544348000000000000000060448201526064016107ef565b6002610d1e6020840184614837565b6002811115610d2f57610d2f6143c9565b03610ff8575f610d476101208401610100850161431e565b6001600160a01b031603610d945760405162461bcd60e51b81526020600482015260146024820152732127a92927abafa722a2a229afa0a220a82a22a960611b60448201526064016107ef565b5f610da76101408401610120850161431e565b6001600160a01b031603610dfd5760405162461bcd60e51b815260206004820152601760248201527f424f52524f575f4e454544535f444542545f415353455400000000000000000060448201526064016107ef565b5f610e106101608401610140850161431e565b6001600160a01b031603610e5f5760405162461bcd60e51b81526020600482015260166024820152752127a92927abafa722a2a229afa1a7a72722a1aa27a960511b60448201526064016107ef565b610e716101408301610120840161431e565b6001600160a01b0316610e8c6101608401610140850161431e565b6001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ec7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eeb9190614852565b6001600160a01b031614610f415760405162461bcd60e51b815260206004820152601b60248201527f434f4e4e4543544f525f626f72726f7765645f4d49534d41544348000000000060448201526064016107ef565b610f5b610f5661018084016101608501614903565b612974565b610f76610f71368490038401610180850161491e565b6129b5565b5f610f87604084016020850161431e565b6001600160a01b0316148015610fb457505f610fa9606084016040850161431e565b6001600160a01b0316145b610a0a5760405162461bcd60e51b81526020600482015260156024820152744445504f5349545f4346475f4e4f545f454d50545960581b60448201526064016107ef565b60405162461bcd60e51b815260206004820152600c60248201526b155392d393d5d397d2d2539160a21b60448201526064016107ef565b5f83815260046020526040902082906110488282614ab1565b508390507f632829a877476ba0498e8f4a1ca7697b2f82a7494e01e709aba7f5422a0016b561107a6020850185614837565b61108a604086016020870161431e565b61109a606087016040880161431e565b6110ac6101208801610100890161431e565b6110be61014089016101208a0161431e565b6110d06101608a016101408b0161431e565b6040516110e296959493929190614bf3565b60405180910390a2505050565b5f805160206150c483398151915261110681612939565b61111d5f805160206150a4833981519152836129e7565b505050565b5f805160206150c483398151915261113981612939565b61111d7f372d55e37651a7c6e1940a3fb8628e4b6122a3c1a8b2b70aee13e07228604567836129e7565b5f8281526020819052604090206001015461117d81612939565b61118783836129e7565b50505050565b611195612a76565b6111ac5f805160206150a4833981519152336124ea565b806111c957506111c95f805160206150e4833981519152336124ea565b6112095760405162461bcd60e51b815260206004820152601160248201527013d393164812d1515411548813d4881413607a1b60448201526064016107ef565b5f828152600460205260408082208151606081019092528054829060ff166002811115611238576112386143c9565b6002811115611249576112496143c9565b8152604080516060808201835260018501546001600160a01b03908116835260028601548116602084810191909152845160a08082018752600389015461ffff80821684526201000080830482168587015260ff600160201b840481161515868c0152600160281b84048316868a0152600160381b9093048216608080870191909152898b0195909552858b019890985288518084018a5260048c01548716815260058c015487168187015260068c0154968716818b0152600160a01b909604811686880152885160e081018a5260078c015480831682529890980481168886015260088b0154888a015260098b015496880196909652600a909901549889161515868301526101008904851690860152630100000090970490921660c0840152948501919091529181019290925282015101519091505f82516002811115611394576113946143c9565b14806113b257506001825160028111156113b0576113b06143c9565b145b6113f15760405162461bcd60e51b815260206004820152601060248201526f1393d517d1115413d4d25517d2d2539160821b60448201526064016107ef565b60208083015101516001600160a01b031661141e5760405162461bcd60e51b81526004016107ef90614c3a565b60208281015101516040516302c62fa160e41b81526001600160a01b0387811660048301525f921690632c62fa1090602401602060405180830381865afa15801561146b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061148f9190614c62565b90505f81116114d15760405162461bcd60e51b815260206004820152600e60248201526d1393d7d15395125513115351539560921b60448201526064016107ef565b5f5f1985146114ee57818511156114e857816114f0565b846114f0565b815b90505f81116115355760405162461bcd60e51b81526020600482015260116024820152704e4f5448494e475f544f5f52454445454d60781b60448201526064016107ef565b5f836040015161154657835161154c565b83606001515b90505f61271061155c8382614c8d565b61156a9061ffff1685614caf565b6115749190614cc6565b90505f8660200151602001516001600160a01b031663b426b8258b86856040518463ffffffff1660e01b81526004016115af93929190614ce5565b60408051808303815f875af11580156115ca573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115ee9190614d06565b509050818110156116345760405162461bcd60e51b815260206004820152601060248201526f14915111515357d4d213d4951190531360821b60448201526064016107ef565b8060018851600281111561164a5761164a6143c9565b0361185d576020880151516001600160a01b03811661169a5760405162461bcd60e51b815260206004820152600c60248201526b15d4905417d393d517d4d15560a21b60448201526064016107ef565b5f816001600160a01b03166350e70d486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116d7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116fb9190614852565b60405163095ea7b360e01b81529091506001600160a01b0382169063095ea7b39061172c9085908890600401614d28565b6020604051808303815f875af1158015611748573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061176c9190614d41565b505f8960400151611781578960200151611787565b89608001515b90505f61271061179b61ffff841688614caf565b6117a59190614cc6565b604051636f074d1f60e11b8152600481018890529091505f906001600160a01b0386169063de0e9a3e906024016020604051808303815f875af11580156117ee573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118129190614c62565b9050818110156118565760405162461bcd60e51b815260206004820152600f60248201526e554e575241505f534c49505041474560881b60448201526064016107ef565b9450505050505b60405163095ea7b360e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906118cb907f0000000000000000000000000000000000000000000000000000000000000000908590600401614d28565b6020604051808303815f875af11580156118e7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061190b9190614d41565b506040516308ad9ed760e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906322b67b5c9061195c908e9085908f90600401614ce5565b5f604051808303815f87803b158015611973575f80fd5b505af1158015611985573d5f803e3d5ffd5b5050506020808a015101516040516302c62fa160e41b81526001600160a01b038e811660048301529091169150632c62fa1090602401602060405180830381865afa1580156119d6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119fa9190614c62565b5f03611a7c57604051631904547560e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063641151d490611a4e908e908e90600401614d28565b5f604051808303815f87803b158015611a65575f80fd5b505af1158015611a77573d5f803e3d5ffd5b505050505b898b6001600160a01b03167f490bf3846dd347fe2c06e6ab3cec012b6777612fe7312cd0d26e9d51d3f171ce83604051611ab891815260200190565b60405180910390a3505050505050505061111d60018055565b6001600160a01b0381163314611afa5760405163334bd91960e11b815260040160405180910390fd5b61111d8282612aa0565b5f805160206150c4833981519152611b1b81612939565b5f83815260046020526040908190206003018054841515600160201b0264ff00000000199091161790555183907f1a00eac50c4add93371fbba51ce853d0514d5e93b8ef82d494f783a74f33fe34906110e290851515815260200190565b5f80846080015115611b9057505f90506001611c7c565b60405163f80b656560e01b81526001600160a01b0384811660048301525f9182918291829189169063f80b656590602401608060405180830381865afa158015611bdc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c009190614d5c565b93509350935093505f8960400151118015611c185750835b8015611c275750886040015183115b15611c3c575f60029550955050505050611c7c565b5f8960600151118015611c4c5750815b8015611c5b5750886060015181105b15611c70575f60039550955050505050611c7c565b60015f95509550505050505b935093915050565b611c8c612a76565b5f805160206150e4833981519152611ca381612939565b5f848152600460205260408082208151606081019092528054829060ff166002811115611cd257611cd26143c9565b6002811115611ce357611ce36143c9565b8152604080516060808201835260018501546001600160a01b03908116835260028601548116602084810191909152845160a08082018752600389015461ffff80821684526201000080830482168587015260ff600160201b840481161515868c0152600160281b84048316868a0152600160381b9093048216608080870191909152898b0195909552858b019890985288518084018a5260048c01548716815260058c015487168187015260068c0154968716818b0152600160a01b909604811686880152885160e081018a5260078c015480831682529890980481169488019490945260088a01548789015260098a015495870195909552600a909801549384161515858201526101008404821697850197909752630100000090920490911660c083015293840152015290505f81516002811115611e2657611e266143c9565b1480611e445750600181516002811115611e4257611e426143c9565b145b15611e5957611e54878787612b09565b611ebd565b600281516002811115611e6e57611e6e6143c9565b03611e8057611e548787878787613285565b60405162461bcd60e51b8152602060048201526012602482015271155392d393d5d397d4d514905517d2d2539160721b60448201526064016107ef565b5050611ec860018055565b5050505050565b5f805f611eda612a76565b611ef15f805160206150a4833981519152336124ea565b80611f0e5750611f0e5f805160206150e4833981519152336124ea565b611f4e5760405162461bcd60e51b815260206004820152601160248201527013d393164812d1515411548813d4881413607a1b60448201526064016107ef565b5f8981526004602052604090206002815460ff166002811115611f7357611f736143c9565b14611fad5760405162461bcd60e51b815260206004820152600a60248201526914d514905517d2d2539160b21b60448201526064016107ef565b6004810180546001600160a01b031615801590611fd6575060018101546001600160a01b031615155b8015611fee575060028101546001600160a01b031615155b6120285760405162461bcd60e51b815260206004820152600b60248201526a4346475f4d495353494e4760a81b60448201526064016107ef565b6120348c828c8961351e565b815460018301549194505f916001600160a01b03918216911661205a8282888e8e6137e2565b909750925061207191508390508a8a84898f613a3d565b60405163095ea7b360e01b81529096506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906120e2907f0000000000000000000000000000000000000000000000000000000000000000908a90600401614d28565b6020604051808303815f875af11580156120fe573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121229190614d41565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166322b67b5c8e888f6040518463ffffffff1660e01b815260040161217393929190614ce5565b5f604051808303815f87803b15801561218a575f80fd5b505af115801561219c573d5f803e3d5ffd5b50505050816002015f9054906101000a90046001600160a01b03166001600160a01b0316632c62fa108e6040518263ffffffff1660e01b81526004016121f191906001600160a01b0391909116815260200190565b602060405180830381865afa15801561220c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122309190614c62565b1580156122a95750815460018301546040516311005b0760e01b81526001600160a01b0391821660048201529116906311005b0790602401602060405180830381865afa158015612283573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122a79190614c62565b155b1561232a577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663641151d48e8e6040518363ffffffff1660e01b81526004016122fc929190614d28565b5f604051808303815f87803b158015612313575f80fd5b505af1158015612325573d5f803e3d5ffd5b505050505b60408051858152602081018790529081018790528c906001600160a01b038f16907f0a1db12eec413a7ba2a35d944ede0ba6ce93d10359f00307d8b83d476241170c9060600160405180910390a350505061238460018055565b9750975097945050505050565b5f805160206150c48339815191526123a881612939565b5f83815260046020908152604091829020600a01805460ff1916851515908117909155915191825284917fd751460dfa37a649939ce06a0850c35d37260e33cb88cf09361d891bb7ab87f091016110e2565b5f805160206150c483398151915261241181612939565b50600280546001600160a01b0319166001600160a01b0392909216919091179055565b5f805160206150c483398151915261244b81612939565b5f86815260046020908152604091829020600301805461ffff868116600160381b0261ffff60381b19898316600160281b021668ffffffff0000000000198b841662010000810263ffffffff19909616948e169485179590951716171783558451908152928301529188917f82ea984af33e4323de9425a623c76267c0030ef8d8ede50f189c6ee4639988cb910160405180910390a250505050505050565b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b5f818152600360208181526040808420815160e081018352815461ffff80821683526201000090910481169482019490945260018201549281018390526002820154606082015293015460ff8116151560808501526101008104831660a08501526301000000900490911660c083015215801561259157506060810151155b1561259e57505f92915050565b5f838152600460205260408082208151606081019092528054829060ff1660028111156125cd576125cd6143c9565b60028111156125de576125de6143c9565b8152604080516060808201835260018501546001600160a01b03908116835260028601548116602084810191909152845160a08082018752600389015461ffff80821684526201000080830482168587015260ff600160201b840481161515868c0152600160281b84048316868a0152600160381b9093048216608080870191909152898b0195909552858b019890985288518084018a5260048c01548716815260058c015487168187015260068c0154968716818b0152600160a01b909604811686880152885160e081018a5260078c015480831682529890980481169488019490945260088a01548789015260098a015495870195909552600a909801549384161515858201526101008404821697850197909752630100000090920490911660c0830152938401529081019190915281810151519084015191925090156127b157604082810151602001519051631faf920160e11b81526001600160a01b03918216600482015290821690633f5f240290602401602060405180830381865afa92505050801561278e575060408051601f3d908101601f1916820190925261278b91810190614da2565b60015b156127b15783604001518161ffff1611156127af5750600195945050505050565b505b60608301511561283857806001600160a01b03166349f47b916040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612815575060408051601f3d908101601f1916820190925261281291810190614da2565b60015b156128385783606001518161ffff1610156128365750600195945050505050565b505b505f949350505050565b5f805160206150c483398151915261285981612939565b5f8881526004602090815260409182902060078101805461ffff8c811663ffffffff199092168217620100008d8316908102919091178455600885018c9055600985018b9055600a909401805464ffffffff0019166101008b84160264ffff0000001916176301000000928a1692909202919091179055845190815292830191909152918a917f4d81643471296ec367e6beb7d3d4c022b6b72e9aa116b960013c7bfdec423135910160405180910390a2505050505050505050565b5f8281526020819052604090206001015461292f81612939565b6111878383612aa0565b6129438133613c5e565b50565b805161295190612974565b61295e8160200151612974565b61296b8160600151612974565b61294381608001515b61271061ffff821611156129435760405162461bcd60e51b81526020600482015260086024820152674250533e3130302560c01b60448201526064016107ef565b80516129c090612974565b6129cd8160200151612974565b6129da8160a00151612974565b6129438160c00151612974565b5f6129f283836124ea565b612a6f575f838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055612a273390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610758565b505f610758565b600260015403612a9957604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b5f612aab83836124ea565b15612a6f575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610758565b6001600160a01b03831615801590612b2057505f82115b612b575760405162461bcd60e51b81526020600482015260086024820152674241445f4152475360c01b60448201526064016107ef565b5f818152600460205260408082208151606081019092528054829060ff166002811115612b8657612b866143c9565b6002811115612b9757612b976143c9565b8152604080516060808201835260018501546001600160a01b03908116835260028601548116602084810191909152845160a08082018752600389015461ffff80821684526201000080830482168587015260ff600160201b840481161515868c0152600160281b84048316868a0152600160381b9093048216608080870191909152898b0195909552858b019890985288518084018a5260048c01548716815260058c015487168187015260068c0154968716818b0152600160a01b909604811686880152885160e081018a5260078c015480831682529890980481169488019490945260088a01548789015260098a015495870195909552600a909801549384161515858201526101008404821697850197909752630100000090920490911660c083015293840152015290505f81516002811115612cda57612cda6143c9565b1480612cf85750600181516002811115612cf657612cf66143c9565b145b612d375760405162461bcd60e51b815260206004820152601060248201526f1393d517d1115413d4d25517d2d2539160821b60448201526064016107ef565b7f000000000000000000000000000000000000000000000000000000000000000083600183516002811115612d6e57612d6e6143c9565b0361303b576020830151516001600160a01b038116612dbe5760405162461bcd60e51b815260206004820152600c60248201526b15d4905417d393d517d4d15560a21b60448201526064016107ef565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316635001f3b56040518163ffffffff1660e01b8152600401602060405180830381865afa158015612e24573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612e489190614852565b6001600160a01b031614612e935760405162461bcd60e51b81526020600482015260126024820152710aea482a0be8482a68abe9a92a69a82a886960731b60448201526064016107ef565b806001600160a01b03166350e70d486040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ecf573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ef39190614852565b60405163095ea7b360e01b81529093506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390612f449084908a90600401614d28565b6020604051808303815f875af1158015612f60573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612f849190614d41565b50604051630ea598cb60e41b8152600481018790525f906001600160a01b0383169063ea598cb0906024016020604051808303815f875af1158015612fcb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612fef9190614c62565b90508681146130325760405162461bcd60e51b815260206004820152600f60248201526e575241505f4e4f545f315f544f5f3160881b60448201526064016107ef565b915061305f9050565b7f000000000000000000000000000000000000000000000000000000000000000091505b60208084015101516001600160a01b031661308c5760405162461bcd60e51b81526004016107ef90614c3a565b816001600160a01b03168360200151602001516001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156130da573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906130fe9190614852565b6001600160a01b03161461314a5760405162461bcd60e51b81526020600482015260136024820152720869e9c9cbe82a6a68aa8be9a92a69a82a8869606b1b60448201526064016107ef565b602080840151015160405163095ea7b360e01b81526001600160a01b0384169163095ea7b39161317f91908590600401614d28565b6020604051808303815f875af115801561319b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906131bf9190614d41565b508260200151602001516001600160a01b0316632f4f21e287836040518363ffffffff1660e01b81526004016131f6929190614d28565b6020604051808303815f875af1158015613212573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906132369190614c62565b50604080518681526020810183905285916001600160a01b038916917f392a03d846f1f19b33118acaf0453b883b9248cd04040e3893089bcbfc4524f0910160405180910390a3505050505050565b6001600160a01b0385161580159061329c57505f84115b6132d35760405162461bcd60e51b81526020600482015260086024820152674241445f4152475360c01b60448201526064016107ef565b5f8381526004602052604090206002815460ff1660028111156132f8576132f86143c9565b146133325760405162461bcd60e51b815260206004820152600a60248201526914d514905517d2d2539160b21b60448201526064016107ef565b60048101546040805160e081018252600784015461ffff8082168352620100009091048116602083015260088501549282019290925260098401546060820152600a84015460ff8116151560808301526101008104831660a08301526301000000900490911660c082015260058301546001600160a01b03928316925f9283926133be92869116611b79565b91509150816134005760405162461bcd60e51b815260206004820152600e60248201526d1093d49493d5d7d09313d0d2d15160921b60448201526064016107ef565b6004840180546001600160a01b031615801590613429575060018101546001600160a01b031615155b6134635760405162461bcd60e51b815260206004820152600b60248201526a4346475f4d495353494e4760a81b60448201526064016107ef565b5f61347087890189614e46565b5050915050613480828b83613c8d565b505f8080613490898b018b614e46565b9350505091506134a2848d8484613da7565b92505f91508190506134b6898b018b614e46565b5092509250506134c9848e858585613e99565b5050604080518b8152602081018390528a916001600160a01b038e16917f0c19a869705042e48abbca264b5462f933047c983dcf445d5d52bd14275eb1cc910160405180910390a35050505050505050505050565b6040805160e081018252600385015461ffff8082168352620100009091048116602083015260048601549282019290925260058501546060820152600685015460ff8116151560808301526101008104831660a08301526301000000900490911660c082015260028401545f91906001600160a01b03166135b15760405162461bcd60e51b81526004016107ef90614c3a565b60028501546040516302c62fa160e41b81526001600160a01b0388811660048301525f921690632c62fa1090602401602060405180830381865afa1580156135fb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061361f9190614c62565b90505f81116136615760405162461bcd60e51b815260206004820152600e60248201526d1393d7d15395125513115351539560921b60448201526064016107ef565b5f5f19861461367e57818611156136785781613680565b85613680565b815b90505f81116136c05760405162461bcd60e51b815260206004820152600c60248201526b16915493d7d49154555154d560a21b60448201526064016107ef565b5f83608001516136d15783516136d7565b8360a001515b90505f6127106136e78382614c8d565b6136f59061ffff1685614caf565b6136ff9190614cc6565b90505f81881161370f5781613711565b875b60028b015460405163b426b82560e01b81529192505f916001600160a01b039091169063b426b8259061374c908f9089908790600401614ce5565b60408051808303815f875af1158015613767573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061378b9190614d06565b509050818110156137d15760405162461bcd60e51b815260206004820152601060248201526f14915111515357d4d213d4951190531360821b60448201526064016107ef565b96505050505050505b949350505050565b6040516311005b0760e01b81526001600160a01b0385811660048301525f9182918816906311005b0790602401602060405180830381865afa15801561382a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061384e9190614c62565b60405163095ea7b360e01b81529091506001600160a01b0387169063095ea7b39061387f908a908990600401614d28565b6020604051808303815f875af115801561389b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906138bf9190614d41565b506040516343528c8f60e11b81526001600160a01b038816906386a5191e906138f2908990899089908990600401614ebf565b6020604051808303815f875af115801561390e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906139329190614c62565b91505f82116139705760405162461bcd60e51b815260206004820152600a60248201526952455041595f5a45524f60b01b60448201526064016107ef565b6040516311005b0760e01b81526001600160a01b0387811660048301525f91908916906311005b0790602401602060405180830381865afa1580156139b7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906139db9190614c62565b90508082101580156139f65750826139f38284614f06565b10155b613a325760405162461bcd60e51b815260206004820152600d60248201526c0888a84a8be9a92a69a82a8869609b1b60448201526064016107ef565b509550959350505050565b8554604051630286fca160e61b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301525f9216908290829063a1bf284090602401602060405180830381865afa158015613aa8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613acc9190614c62565b90505f8615613aef5786613ae08784614caf565b613aea9190614cc6565b613af1565b5f5b60038b015490915062010000900461ffff168015613b3157612710613b1a61ffff831684614caf565b613b249190614cc6565b613b2e9083614f06565b91505b5f8211613b765760405162461bcd60e51b81526020600482015260136024820152724e4f5448494e475f544f5f574954484452415760681b60448201526064016107ef565b604051636a987c6960e01b81526001600160a01b03851690636a987c6990613bc8907f00000000000000000000000000000000000000000000000000000000000000009086908f908f90600401614ebf565b6020604051808303815f875af1158015613be4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613c089190614c62565b945085851015613c505760405162461bcd60e51b8152602060048201526013602482015272434f4c4c41544552414c5f534c49505041474560681b60448201526064016107ef565b505050509695505050505050565b613c6882826124ea565b613c8957808260405163e2517d3f60e01b81526004016107ef929190614d28565b5050565b825460405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263095ea7b392613ce19291909116908690600401614d28565b6020604051808303815f875af1158015613cfd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613d219190614d41565b50825460405163016f1aa360e41b81526001600160a01b03909116906316f1aa3090613d75907f00000000000000000000000000000000000000000000000000000000000000009086908690600401614f19565b5f604051808303815f87803b158015613d8c575f80fd5b505af1158015613d9e573d5f803e3d5ffd5b50505050505050565b5f805f8461ffff16118015613dce5750600286015461ffff600160a01b9091048116908516105b613de7576002860154600160a01b900461ffff16613de9565b835b90505f613e167f000000000000000000000000000000000000000000000000000000000000000087614046565b90505f612710613e2a61ffff851684614caf565b613e349190614cc6565b6001890154909150613e4f906001600160a01b031682614168565b935084841015613e8e5760405162461bcd60e51b815260206004820152600a6024820152692127a92927abafa6a4a760b11b60448201526064016107ef565b505050949350505050565b8215611ec85784546001860154604051636e2246a760e01b81526001600160a01b0392831692636e2246a792613ed89291169087908790600401614f19565b5f604051808303815f87803b158015613eef575f80fd5b505af1158015613f01573d5f803e3d5ffd5b5050505060028501546001600160a01b03161561400d576001850154600286015460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392613f52929116908790600401614d28565b6020604051808303815f875af1158015613f6e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190613f929190614d41565b5060028501546040516317a790f160e11b81526001600160a01b0390911690632f4f21e290613fc79087908790600401614d28565b6020604051808303815f875af1158015613fe3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906140079190614c62565b50611ec8565b60405162461bcd60e51b815260206004820152600e60248201526d1393d7d093d49493d5d7d11154d560921b60448201526064016107ef565b5f815f0361405557505f610758565b6002546040516315d5220f60e31b81526001600160a01b0385811660048301525f92169063aea9107890602401602060405180830381865afa15801561409d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906140c19190614c62565b90505f846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015614100573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906141249190614f7c565b90506305f5e100614136826012614f9c565b61414190600a615095565b61414b8487614caf565b6141559190614caf565b61415f9190614cc6565b95945050505050565b5f815f0361417757505f610758565b6002546040516315d5220f60e31b81526001600160a01b0385811660048301525f92169063aea9107890602401602060405180830381865afa1580156141bf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906141e39190614c62565b90505f846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015614222573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906142469190614f7c565b90505f826142586305f5e10087614caf565b6142629190614cc6565b905061426f826012614f9c565b61427a90600a615095565b6142849082614cc6565b9695505050505050565b5f6020828403121561429e575f80fd5b81356001600160e01b0319811681146142b5575f80fd5b9392505050565b5f808284036102808112156142cf575f80fd5b83359250610260601f19820112156142e5575f80fd5b506020830190509250929050565b5f60208284031215614303575f80fd5b5035919050565b6001600160a01b0381168114612943575f80fd5b5f6020828403121561432e575f80fd5b81356142b58161430a565b5f806040838503121561434a575f80fd5b82359150602083013561435c8161430a565b809150509250929050565b5f805f60608486031215614379575f80fd5b83356143848161430a565b95602085013595506040909401359392505050565b8015158114612943575f80fd5b5f80604083850312156143b7575f80fd5b82359150602083013561435c81614399565b634e487b7160e01b5f52602160045260245ffd5b600381106143f957634e487b7160e01b5f52602160045260245ffd5b9052565b610260810161440c82866143dd565b60018060a01b0380855116602084015280602086015116604084015250604084015161ffff8082511660608501528060208301511660808501526040820151151560a08501528060608301511660c08501528060808301511660e085015250506137da61010083018460018060a01b0380825116835280602083015116602084015280604083015116604084015250606081015161ffff8082166060850152608083015191508082511660808501528060208301511660a0850152604082015160c0850152606082015160e0850152608082015115156101008501528060a0830151166101208501528060c08301511661014085015250505050565b634e487b7160e01b5f52604160045260245ffd5b61ffff81168114612943575f80fd5b80356145368161451c565b919050565b5f60e0828403121561454b575f80fd5b60405160e0810181811067ffffffffffffffff8211171561456e5761456e614508565b604052905080823561457f8161451c565b8152602083013561458f8161451c565b80602083015250604083013560408201526060830135606082015260808301356145b881614399565b608082015260a08301356145cb8161451c565b60a08201526145dc60c0840161452b565b60c08201525092915050565b5f805f61012084860312156145fb575f80fd5b614605858561453b565b925060e08401356146158161430a565b91506101008401356146268161430a565b809150509250925092565b5f8083601f840112614641575f80fd5b50813567ffffffffffffffff811115614658575f80fd5b60208301915083602082850101111561466f575f80fd5b9250929050565b5f805f805f6080868803121561468a575f80fd5b85356146958161430a565b94506020860135935060408601359250606086013567ffffffffffffffff8111156146be575f80fd5b6146ca88828901614631565b969995985093965092949392505050565b5f805f805f805f60c0888a0312156146f1575f80fd5b87356146fc8161430a565b9650602088013595506040880135945060608801359350608088013567ffffffffffffffff81111561472c575f80fd5b6147388a828b01614631565b989b979a5095989497959660a090950135949350505050565b5f805f805f60a08688031215614765575f80fd5b8535945060208601356147778161451c565b935060408601356147878161451c565b925060608601356147978161451c565b915060808601356147a78161451c565b809150509295509295909350565b5f805f805f805f60e0888a0312156147cb575f80fd5b8735965060208801356147dd8161451c565b955060408801356147ed8161451c565b9450606088013593506080880135925060a088013561480b8161451c565b915060c088013561481b8161451c565b8091505092959891949750929550565b60038110612943575f80fd5b5f60208284031215614847575f80fd5b81356142b58161482b565b5f60208284031215614862575f80fd5b81516142b58161430a565b5f60a0828403121561487d575f80fd5b60405160a0810181811067ffffffffffffffff821117156148a0576148a0614508565b60405282356148ae8161451c565b815260208301356148be8161451c565b602082015260408301356148d181614399565b604082015260608301356148e48161451c565b606082015260808301356148f78161451c565b60808201529392505050565b5f60208284031215614913575f80fd5b81356142b58161451c565b5f60e0828403121561492e575f80fd5b6142b5838361453b565b80546001600160a01b0319166001600160a01b0392909216919091179055565b5f81356107588161451c565b813561496f8161430a565b6149798183614938565b5060208201356149888161430a565b6149958160018401614938565b506002810160408301356149a88161430a565b6149b28183614938565b5060608301356149c18161451c565b815461ffff60a01b191660a09190911b61ffff60a01b161790556003810160808301356149ed8161451c565b815461ffff191661ffff82161782555060a0830135614a0b8161451c565b815463ffff00001916601082901b63ffff000016178255505060c0820135600482015560e0820135600582015560068101610100830135614a4b81614399565b815490151560ff1660ff1991909116178155614a85614a6d6101208501614958565b825462ffff00191660089190911b62ffff0016178255565b61111d614a956101408501614958565b825464ffff000000191660189190911b64ffff00000016178255565b8135614abc8161482b565b60038110614ad857634e487b7160e01b5f52602160045260245ffd5b60ff1982541660ff82168117835550506020820135614af68161430a565b614b038160018401614938565b506040820135614b128161430a565b614b1f8160028401614938565b50600381016060830135614b328161451c565b815461ffff191661ffff8216178255506080830135614b508161451c565b815463ffff00001916601082901b63ffff0000161782555060a0830135614b7681614399565b815460c0850135614b868161451c565b66ffff00000000008160281b1664ff0000000084151560201b1666ffffff0000000019841617178455505050614be1614bc160e08501614958565b825461ffff60381b191660389190911b68ffff0000000000000016178255565b50613c89610100830160048301614964565b60c08101614c0182896143dd565b6001600160a01b03968716602083015294861660408201529285166060840152908416608083015290921660a090920191909152919050565b6020808252600e908201526d434f4e4e4543544f525f5a45524f60901b604082015260600190565b5f60208284031215614c72575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b61ffff828116828216039080821115614ca857614ca8614c79565b5092915050565b808202811582820484141761075857610758614c79565b5f82614ce057634e487b7160e01b5f52601260045260245ffd5b500490565b6001600160a01b039390931683526020830191909152604082015260600190565b5f8060408385031215614d17575f80fd5b505080516020909101519092909150565b6001600160a01b03929092168252602082015260400190565b5f60208284031215614d51575f80fd5b81516142b581614399565b5f805f8060808587031215614d6f575f80fd5b8451614d7a81614399565b602086015160408701519195509350614d9281614399565b6060959095015193969295505050565b5f60208284031215614db2575f80fd5b81516142b58161451c565b5f82601f830112614dcc575f80fd5b813567ffffffffffffffff80821115614de757614de7614508565b604051601f8301601f19908116603f01168101908282118183101715614e0f57614e0f614508565b81604052838152866020858801011115614e27575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f8060808587031215614e59575f80fd5b8435614e648161451c565b9350602085013567ffffffffffffffff80821115614e80575f80fd5b614e8c88838901614dbd565b94506040870135915080821115614ea1575f80fd5b50614eae87828801614dbd565b949793965093946060013593505050565b6001600160a01b0385168152602081018490526060604082018190528101829052818360808301375f818301608090810191909152601f909201601f191601019392505050565b8181038181111561075857610758614c79565b60018060a01b03841681525f60208460208401526060604084015283518060608501525f5b81811015614f5a57858101830151858201608001528201614f3e565b505f608082860101526080601f19601f83011685010192505050949350505050565b5f60208284031215614f8c575f80fd5b815160ff811681146142b5575f80fd5b60ff828116828216039081111561075857610758614c79565b600181815b80851115614fef57815f1904821115614fd557614fd5614c79565b80851615614fe257918102915b93841c9390800290614fba565b509250929050565b5f8261500557506001610758565b8161501157505f610758565b816001811461502757600281146150315761504d565b6001915050610758565b60ff84111561504257615042614c79565b50506001821b610758565b5060208310610133831016604e8410600b8410161715615070575081810a610758565b61507a8383614fb5565b805f190482111561508d5761508d614c79565b029392505050565b5f6142b560ff841683614ff756fe061671c5d9c2848c4e78f3cfd7efc04c5d793e746efab769b3416aa5bbfb40ccdf058f017018cec776721a5a8df2a193f80faf9c7b8bbf29a37c17b2cf0a7a6aaa7928cf07feced9a83ea7cfbed4c4d0a65fcdd513fad1d88617046db8c37104a2646970667358221220d164a88174f26e045a3dc46525c3017358f0ef0019d2d631ed29dcbd9b8a828e64736f6c6343000818003360c060405234801561000f575f80fd5b506040516109de3803806109de83398101604081905261002e91610060565b6001600160a01b039182166080521660a052610091565b80516001600160a01b038116811461005b575f80fd5b919050565b5f8060408385031215610071575f80fd5b61007a83610045565b915061008860208401610045565b90509250929050565b60805160a0516108e76100f75f395f818161017d015281816101ec015281816104dc0152818161057c015281816105e4015261068f01525f818160ea01528181610267015281816102f5015281816103860152818161045e015261072501526108e75ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c806386a5191e1161006e57806386a5191e1461014a57806393efd8921461015d578063a1bf284014610165578063a919802d14610178578063d3d780ac1461019f578063f80b6565146101a8575f80fd5b806311005b07146100aa57806316f1aa30146100d05780635001f3b5146100e55780636a987c69146101245780636e2246a714610137575b5f80fd5b6100bd6100b83660046107b2565b6101e9565b6040519081526020015b60405180910390f35b6100e36100de3660046107d2565b610265565b005b61010c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c7565b6100bd6101323660046107d2565b610383565b6100e36101453660046107d2565b6104da565b6100bd6101583660046107d2565b6105e1565b6100bd5f5481565b6100bd6101733660046107b2565b610722565b61010c7f000000000000000000000000000000000000000000000000000000000000000081565b6100bd60015481565b6101c16101b63660046107b2565b5f8080809193509193565b60408051941515855260208501939093529015159183019190915260608201526080016100c7565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161461025d5760405162461bcd60e51b815260206004820152600a6024820152691919589d0bd85cdcd95d60b21b60448201526064015b60405180910390fd5b505060015490565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316146102d35760405162461bcd60e51b815260206004820152600a60248201526918dbdb1b0bd85cdcd95d60b21b6044820152606401610254565b6040516323b872dd60e01b8152336004820152306024820152604481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303815f875af1158015610343573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103679190610852565b50825f808282546103789190610885565b909155505050505050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316146103f05760405162461bcd60e51b81526020600482015260086024820152671dd90bd85cdcd95d60c21b6044820152606401610254565b5f5484111561042d5760405162461bcd60e51b815260206004820152600960248201526877642f65786365737360b81b6044820152606401610254565b835f8082825461043d919061089e565b909155505060405163a9059cbb60e01b8152336004820152602481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303815f875af11580156104ac573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104d09190610852565b5092949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161461054a5760405162461bcd60e51b815260206004820152600c60248201526b189bdc9c9bddcbd85cdcd95d60a21b6044820152606401610254565b8260015f82825461055b9190610885565b90915550506040516340c10f1960e01b8152336004820152602481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f19906044015f604051808303815f87803b1580156105c5575f80fd5b505af11580156105d7573d5f803e3d5ffd5b5050505050505050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316146106515760405162461bcd60e51b815260206004820152600b60248201526a1c995c185e4bd85cdcd95d60aa1b6044820152606401610254565b5f60015485116106615784610665565b6001545b90508015610719576040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303815f875af11580156106dd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107019190610852565b508060015f828254610713919061089e565b90915550505b95945050505050565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316146107905760405162461bcd60e51b815260206004820152600960248201526818985b0bd85cdcd95d60ba1b6044820152606401610254565b50505f5490565b80356001600160a01b03811681146107ad575f80fd5b919050565b5f602082840312156107c2575f80fd5b6107cb82610797565b9392505050565b5f805f80606085870312156107e5575f80fd5b6107ee85610797565b935060208501359250604085013567ffffffffffffffff80821115610811575f80fd5b818701915087601f830112610824575f80fd5b813581811115610832575f80fd5b886020828501011115610843575f80fd5b95989497505060200194505050565b5f60208284031215610862575f80fd5b815180151581146107cb575f80fd5b634e487b7160e01b5f52601160045260245ffd5b8082018082111561089857610898610871565b92915050565b818103818111156108985761089861087156fea26469706673582212205857161e1d18d6607c1970be85618469bf4e19b36cb490cd71ffa20c9974e85664736f6c6343000818003360e060405234801562000010575f80fd5b5060405162001644380380620016448339810160408190526200003391620002ac565b8282826003620000448382620003ba565b506004620000538282620003ba565b5050505f8062000069836200010760201b60201c565b91509150816200007b5760126200007d565b805b60ff1660a05250506001600160a01b039081166080526040805163313ce56760e01b815290519185169163313ce567916004808201926020929091908290030181865afa158015620000d1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620000f7919062000486565b60ff1660c05250620004e4915050565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290515f918291829182916001600160a01b038716916200014f91620004af565b5f60405180830381855afa9150503d805f811462000189576040519150601f19603f3d011682016040523d82523d5f602084013e6200018e565b606091505b5091509150818015620001a357506020815110155b15620001da575f81806020019051810190620001c09190620004cc565b905060ff8111620001d8576001969095509350505050565b505b505f9485945092505050565b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101562000216578181015183820152602001620001fc565b50505f910152565b5f82601f8301126200022e575f80fd5b81516001600160401b03808211156200024b576200024b620001e6565b604051601f8301601f19908116603f01168101908282118183101715620002765762000276620001e6565b816040528381528660208588010111156200028f575f80fd5b620002a2846020830160208901620001fa565b9695505050505050565b5f805f60608486031215620002bf575f80fd5b83516001600160a01b0381168114620002d6575f80fd5b60208501519093506001600160401b0380821115620002f3575f80fd5b62000301878388016200021e565b9350604086015191508082111562000317575f80fd5b5062000326868287016200021e565b9150509250925092565b600181811c908216806200034557607f821691505b6020821081036200036457634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620003b557805f5260205f20601f840160051c81016020851015620003915750805b601f840160051c820191505b81811015620003b2575f81556001016200039d565b50505b505050565b81516001600160401b03811115620003d657620003d6620001e6565b620003ee81620003e7845462000330565b846200036a565b602080601f83116001811462000424575f84156200040c5750858301515b5f19600386901b1c1916600185901b1785556200047e565b5f85815260208120601f198616915b82811015620004545788860151825594840194600190910190840162000433565b50858210156200047257878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f6020828403121562000497575f80fd5b815160ff81168114620004a8575f80fd5b9392505050565b5f8251620004c2818460208701620001fa565b9190910192915050565b5f60208284031215620004dd575f80fd5b5051919050565b60805160a05160c051611123620005215f395f61020c01525f50505f818161024301528181610397015281816107b1015261087101526111235ff3fe608060405234801561000f575f80fd5b506004361061016d575f3560e01c806370a08231116100d9578063ba08765211610093578063ce96cb771161006e578063ce96cb7714610336578063d905777e14610349578063dd62ed3e1461035c578063ef8b30f714610323575f80fd5b8063ba08765214610310578063c63d75b61461026d578063c6e6f59214610323575f80fd5b806370a082311461029457806394bf804d146102bc57806395d89b41146102cf578063a9059cbb146102d7578063b3d7f6b9146102ea578063b460af94146102fd575f80fd5b806323b872dd1161012a57806323b872dd146101f2578063313ce5671461020557806338d52e0f14610236578063402d267d1461026d5780634cdad506146101a15780636e553f6514610281575f80fd5b806301e1d1141461017157806306fdde031461018c57806307a2d13a146101a1578063095ea7b3146101b45780630a28a477146101d757806318160ddd146101ea575b5f80fd5b610179610394565b6040519081526020015b60405180910390f35b610194610423565b6040516101839190610d90565b6101796101af366004610ddc565b6104b3565b6101c76101c2366004610e0e565b6104c4565b6040519015158152602001610183565b6101796101e5366004610ddc565b6104db565b600254610179565b6101c7610200366004610e36565b6104e7565b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610183565b6040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152602001610183565b61017961027b366004610e6f565b505f1990565b61017961028f366004610e88565b61050c565b6101796102a2366004610e6f565b6001600160a01b03165f9081526020819052604090205490565b6101796102ca366004610e88565b61053d565b610194610558565b6101c76102e5366004610e0e565b610567565b6101796102f8366004610ddc565b610574565b61017961030b366004610eb2565b610580565b61017961031e366004610eb2565b6105d6565b610179610331366004610ddc565b610623565b610179610344366004610e6f565b61062e565b610179610357366004610e6f565b610650565b61017961036a366004610eeb565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b5f7f00000000000000000000000000000000000000000000000000000000000000006040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156103fa573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061041e9190610f13565b905090565b60606003805461043290610f2a565b80601f016020809104026020016040519081016040528092919081815260200182805461045e90610f2a565b80156104a95780601f10610480576101008083540402835291602001916104a9565b820191905f5260205f20905b81548152906001019060200180831161048c57829003601f168201915b5050505050905090565b5f6104be825f61066d565b92915050565b5f336104d18185856106a5565b5060019392505050565b5f6104be8260016106b7565b5f336104f48582856106e6565b6104ff85858561074f565b60019150505b9392505050565b5f5f1961051d565b60405180910390fd5b5f61052785610623565b9050610535338587846107ac565b949350505050565b5f5f195f61054a85610574565b9050610535338583886107ac565b60606004805461043290610f2a565b5f336104d181858561074f565b5f6104be82600161066d565b5f8061058b8361062e565b9050808511156105b457828582604051633fa733bb60e21b815260040161051493929190610f62565b5f6105be866104db565b90506105cd338686898561083e565b95945050505050565b5f806105e183610650565b90508085111561060a57828582604051632e52afbb60e21b815260040161051493929190610f62565b5f610614866104b3565b90506105cd338686848a61083e565b5f6104be825f6106b7565b6001600160a01b0381165f908152602081905260408120546104be905f61066d565b6001600160a01b0381165f908152602081905260408120546104be565b5f610505610679610394565b610684906001610f97565b61068f5f600a61108a565b60025461069c9190610f97565b859190856108fe565b6106b28383836001610940565b505050565b5f6105056106c682600a61108a565b6002546106d39190610f97565b6106db610394565b61069c906001610f97565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610749578181101561073b57828183604051637dc7a0d960e11b815260040161051493929190610f62565b61074984848484035f610940565b50505050565b6001600160a01b03831661077857604051634b637e8f60e11b81525f6004820152602401610514565b6001600160a01b0382166107a15760405163ec442f0560e01b81525f6004820152602401610514565b6106b2838383610a04565b6107d87f0000000000000000000000000000000000000000000000000000000000000000853085610b17565b6107e28382610b7e565b826001600160a01b0316846001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78484604051610830929190918252602082015260400190565b60405180910390a350505050565b826001600160a01b0316856001600160a01b031614610862576108628386836106e6565b61086c8382610bb6565b6108977f00000000000000000000000000000000000000000000000000000000000000008584610bea565b826001600160a01b0316846001600160a01b0316866001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db85856040516108ef929190918252602082015260400190565b60405180910390a45050505050565b5f61092b61090b83610c1b565b801561092657505f848061092157610921611098565b868809115b151590565b610936868686610c47565b6105cd9190610f97565b6001600160a01b0384166109695760405163e602df0560e01b81525f6004820152602401610514565b6001600160a01b03831661099257604051634a1406b160e11b81525f6004820152602401610514565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561074957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161083091815260200190565b6001600160a01b038316610a2e578060025f828254610a239190610f97565b90915550610a8b9050565b6001600160a01b0383165f9081526020819052604090205481811015610a6d5783818360405163391434e360e21b815260040161051493929190610f62565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610aa757600280548290039055610ac5565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b0a91815260200190565b60405180910390a3505050565b6040516001600160a01b0384811660248301528381166044830152606482018390526107499186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610cf7565b6001600160a01b038216610ba75760405163ec442f0560e01b81525f6004820152602401610514565b610bb25f8383610a04565b5050565b6001600160a01b038216610bdf57604051634b637e8f60e11b81525f6004820152602401610514565b610bb2825f83610a04565b6040516001600160a01b038381166024830152604482018390526106b291859182169063a9059cbb90606401610b4c565b5f6002826003811115610c3057610c306110ac565b610c3a91906110c0565b60ff166001149050919050565b5f805f610c548686610d63565b91509150815f03610c7857838181610c6e57610c6e611098565b0492505050610505565b818411610c8f57610c8f6003851502601118610d7f565b5f848688095f868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010185841190960395909502919093039390930492909217029150509392505050565b5f8060205f8451602086015f885af180610d16576040513d5f823e3d81fd5b50505f513d91508115610d2d578060011415610d3a565b6001600160a01b0384163b155b1561074957604051635274afe760e01b81526001600160a01b0385166004820152602401610514565b5f805f1983850993909202808410938190039390930393915050565b634e487b715f52806020526024601cfd5b5f602080835283518060208501525f5b81811015610dbc57858101830151858201604001528201610da0565b505f604082860101526040601f19601f8301168501019250505092915050565b5f60208284031215610dec575f80fd5b5035919050565b80356001600160a01b0381168114610e09575f80fd5b919050565b5f8060408385031215610e1f575f80fd5b610e2883610df3565b946020939093013593505050565b5f805f60608486031215610e48575f80fd5b610e5184610df3565b9250610e5f60208501610df3565b9150604084013590509250925092565b5f60208284031215610e7f575f80fd5b61050582610df3565b5f8060408385031215610e99575f80fd5b82359150610ea960208401610df3565b90509250929050565b5f805f60608486031215610ec4575f80fd5b83359250610ed460208501610df3565b9150610ee260408501610df3565b90509250925092565b5f8060408385031215610efc575f80fd5b610f0583610df3565b9150610ea960208401610df3565b5f60208284031215610f23575f80fd5b5051919050565b600181811c90821680610f3e57607f821691505b602082108103610f5c57634e487b7160e01b5f52602260045260245ffd5b50919050565b6001600160a01b039390931683526020830191909152604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b808201808211156104be576104be610f83565b600181815b80851115610fe457815f1904821115610fca57610fca610f83565b80851615610fd757918102915b93841c9390800290610faf565b509250929050565b5f82610ffa575060016104be565b8161100657505f6104be565b816001811461101c576002811461102657611042565b60019150506104be565b60ff84111561103757611037610f83565b50506001821b6104be565b5060208310610133831016604e8410600b8410161715611065575081810a6104be565b61106f8383610faa565b805f190482111561108257611082610f83565b029392505050565b5f61050560ff841683610fec565b634e487b7160e01b5f52601260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b5f60ff8316806110de57634e487b7160e01b5f52601260045260245ffd5b8060ff8416069150509291505056fea2646970667358221220437346fa5f403ef105a61095c79c0b6e718e7a3dfa5871860b3bc48a621662da64736f6c6343000818003360a060405234801562000010575f80fd5b506040516200127d3803806200127d83398101604081905262000033916200028c565b600180556001600160a01b038316158015906200005857506001600160a01b03821615155b620000965760405162461bcd60e51b81526020600482015260096024820152682d22a927afa0a2222960b91b60448201526064015b60405180910390fd5b6001600160a01b038116620000db5760405162461bcd60e51b815260206004820152600a6024820152695641554c545f5a45524f60b01b60448201526064016200008d565b600280546001600160a01b0319166001600160a01b038316908117909155604080516338d52e0f60e01b815290516338d52e0f916004808201926020929091908290030181865afa15801562000133573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620001599190620002dd565b6001600160a01b0316608052620001917fb058f49d6462f3b1a3b260356aa683712ff15e590972bfac826dd6f0ac9f69cc84620001c8565b50620001be7f14d709f3f05686e62c95aa969cf0a78b04a197162d2e5b7a0b48f3c77bb2512483620001c8565b5050505062000302565b5f828152602081815260408083206001600160a01b038516845290915281205460ff166200026b575f838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055620002223390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016200026e565b505f5b92915050565b6001600160a01b038116811462000289575f80fd5b50565b5f805f606084860312156200029f575f80fd5b8351620002ac8162000274565b6020850151909350620002bf8162000274565b6040850151909250620002d28162000274565b809150509250925092565b5f60208284031215620002ee575f80fd5b8151620002fb8162000274565b9392505050565b608051610f4d620003305f395f818161021b015281816104700152818161054a0152610b120152610f4d5ff3fe608060405234801561000f575f80fd5b5060043610610111575f3560e01c806338d52e0f1161009e578063a217fddf1161006e578063a217fddf14610260578063a515ace314610267578063b426b8251461028e578063d547741f146102b6578063de69b3aa146102c9575f80fd5b806338d52e0f146102165780633cd4f53e1461023d5780636bdee1f41461024557806391d148541461024d575f80fd5b8063248a9ca3116100e4578063248a9ca3146101a65780632c62fa10146101c85780632f2ff15d146101db5780632f4f21e2146101f057806336568abe14610203575f80fd5b806301ffc9a714610115578063049947121461013d57806307c7ac1b146101545780631f92db451461017b575b5f80fd5b610128610123366004610dac565b6102e8565b60405190151581526020015b60405180910390f35b61014660045481565b604051908152602001610134565b6101467f14d709f3f05686e62c95aa969cf0a78b04a197162d2e5b7a0b48f3c77bb2512481565b60025461018e906001600160a01b031681565b6040516001600160a01b039091168152602001610134565b6101466101b4366004610dda565b5f9081526020819052604090206001015490565b6101466101d6366004610e0c565b61031e565b6101ee6101e9366004610e25565b61039e565b005b6101466101fe366004610e4f565b6103c8565b6101ee610211366004610e25565b610700565b61018e7f000000000000000000000000000000000000000000000000000000000000000081565b610146610738565b610146610818565b61012861025b366004610e25565b610887565b6101465f81565b6101467fb058f49d6462f3b1a3b260356aa683712ff15e590972bfac826dd6f0ac9f69cc81565b6102a161029c366004610e77565b6108af565b60408051928352602083019190915201610134565b6101ee6102c4366004610e25565b610c1c565b6101466102d7366004610e0c565b60036020525f908152604090205481565b5f6001600160e01b03198216637965db0b60e01b148061031857506301ffc9a760e01b6001600160e01b03198316145b92915050565b6002546001600160a01b038281165f908152600360205260408082205490516303d1689d60e11b81526004810191909152909291909116906307a2d13a90602401602060405180830381865afa15801561037a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103189190610ea7565b5f828152602081905260409020600101546103b881610c40565b6103c28383610c4d565b50505050565b5f7f14d709f3f05686e62c95aa969cf0a78b04a197162d2e5b7a0b48f3c77bb251246103f381610c40565b6103fb610cdc565b6001600160a01b0384161580159061041257505f83115b61044e5760405162461bcd60e51b81526020600482015260086024820152674241445f4152475360c01b60448201526064015b60405180910390fd5b6040516323b872dd60e01b8152336004820152306024820152604481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303815f875af11580156104be573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104e29190610ebe565b6105215760405162461bcd60e51b815260206004820152601060248201526f1514905394d1915497d25397d190525360821b6044820152606401610445565b60025460405163095ea7b360e01b81526001600160a01b039182166004820152602481018590527f00000000000000000000000000000000000000000000000000000000000000009091169063095ea7b3906044016020604051808303815f875af1158015610592573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b69190610ebe565b6105f15760405162461bcd60e51b815260206004820152600c60248201526b1054141493d59157d190525360a21b6044820152606401610445565b600254604051636e553f6560e01b8152600481018590523060248201526001600160a01b0390911690636e553f65906044016020604051808303815f875af115801561063f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106639190610ea7565b6001600160a01b0385165f9081526003602052604081208054929450849290919061068f908490610ef1565b925050819055508160045f8282546106a79190610ef1565b909155505060408051848152602081018490526001600160a01b038616917f73a19dd210f1a7f902193214c0ee91dd35ee5b4d920cba8d519eca65a7b488ca910160405180910390a26106f960018055565b5092915050565b6001600160a01b03811633146107295760405163334bd91960e11b815260040160405180910390fd5b6107338282610d06565b505050565b6002546040516370a0823160e01b81523060048201525f9182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610782573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a69190610ea7565b6002546040516303d1689d60e11b8152600481018390529192506001600160a01b0316906307a2d13a90602401602060405180830381865afa1580156107ee573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108129190610ea7565b91505090565b6002546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa15801561085e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108829190610ea7565b905090565b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b5f807f14d709f3f05686e62c95aa969cf0a78b04a197162d2e5b7a0b48f3c77bb251246108db81610c40565b6108e3610cdc565b6001600160a01b038616158015906108fa57505f85115b6109315760405162461bcd60e51b81526020600482015260086024820152674241445f4152475360c01b6044820152606401610445565b6002546040516363737ac960e11b8152600481018790525f916001600160a01b03169063c6e6f59290602401602060405180830381865afa158015610978573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061099c9190610ea7565b6001600160a01b0388165f90815260036020526040902054909150808211156109c3578091505b5f82116109ff5760405162461bcd60e51b815260206004820152600a6024820152694e4f5f42414c414e434560b01b6044820152606401610445565b600254604051635d043b2960e11b815260048101849052306024820181905260448201526001600160a01b039091169063ba087652906064016020604051808303815f875af1158015610a54573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a789190610ea7565b945085851015610ab55760405162461bcd60e51b8152602060048201526008602482015267534c49505041474560c01b6044820152606401610445565b610abf8282610f04565b6001600160a01b0389165f9081526003602052604081209190915560048054849290610aec908490610f04565b909155505060405163a9059cbb60e01b81523360048201526024810186905291935083917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303815f875af1158015610b60573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b849190610ebe565b610bc45760405162461bcd60e51b81526020600482015260116024820152701514905394d1915497d3d55517d1905253607a1b6044820152606401610445565b60408051868152602081018490526001600160a01b038a16917ff3a670cd3af7d64b488926880889d08a8585a138ff455227af6737339a1ec262910160405180910390a25050610c1360018055565b50935093915050565b5f82815260208190526040902060010154610c3681610c40565b6103c28383610d06565b610c4a8133610d6f565b50565b5f610c588383610887565b610cd5575f838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055610c8d3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610318565b505f610318565b600260015403610cff57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b5f610d118383610887565b15610cd5575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610318565b610d798282610887565b610da85760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610445565b5050565b5f60208284031215610dbc575f80fd5b81356001600160e01b031981168114610dd3575f80fd5b9392505050565b5f60208284031215610dea575f80fd5b5035919050565b80356001600160a01b0381168114610e07575f80fd5b919050565b5f60208284031215610e1c575f80fd5b610dd382610df1565b5f8060408385031215610e36575f80fd5b82359150610e4660208401610df1565b90509250929050565b5f8060408385031215610e60575f80fd5b610e6983610df1565b946020939093013593505050565b5f805f60608486031215610e89575f80fd5b610e9284610df1565b95602085013595506040909401359392505050565b5f60208284031215610eb7575f80fd5b5051919050565b5f60208284031215610ece575f80fd5b81518015158114610dd3575f80fd5b634e487b7160e01b5f52601160045260245ffd5b8082018082111561031857610318610edd565b8181038181111561031857610318610edd56fea264697066735822122031e1740672aba3fa947a152e7090f67e55b07412b022e20284ae0227334d3c1964736f6c6343000818003360c060405234801562000010575f80fd5b5060405162002d8c38038062002d8c833981016040819052620000339162000121565b6001600160a01b03808316608052811660a0526200005062000058565b50506200015e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000a95760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001095780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6001600160a01b038116811462000109575f80fd5b5f806040838503121562000133575f80fd5b825162000140816200010c565b602084015190925062000153816200010c565b809150509250929050565b60805160a051612be2620001aa5f395f81816102b9015281816107030152610c8901525f818161039c01528181611386015281816113d9015281816116a4015261214b0152612be25ff3fe608060405234801561000f575f80fd5b5060043610610255575f3560e01c80637ecebe0011610140578063c6e6f592116100bf578063dd62ed3e11610084578063dd62ed3e1461055a578063dff81f7d1461056d578063e49d123214610580578063eaed1d0714610588578063ef8b30f7146104fe578063f5a23d8d1461059b575f80fd5b8063c6e6f592146104fe578063ce96cb7714610511578063cf8db86214610524578063d505accf14610534578063d905777e14610547575f80fd5b8063b3d7f6b911610105578063b3d7f6b91461048a578063b460af941461049d578063b6363cf2146104b0578063ba087652146104eb578063c63d75b6146103ce575f80fd5b80637ecebe001461042e57806384b0196e1461044157806394bf804d1461045c57806395d89b411461046f578063a9059cbb14610477575f80fd5b806323b872dd116101d7578063402d267d1161019c578063402d267d146103ce5780634cdad5061461032e578063558a7297146103e25780636e553f65146103f557806370a08231146104085780637d41c86e1461041b575f80fd5b806323b872dd1461036a578063313ce5671461037d57806332fe7b26146103975780633644e515146103be57806338d52e0f146103c6575f80fd5b806307a2d13a1161021d57806307a2d13a14610308578063095ea7b31461031b5780630a28a4771461032e57806318160ddd146103415780632016a0d214610355575f80fd5b806301e1d1141461025957806301ffc9a714610274578063031609401461029757806306433b1b146102b457806306fdde03146102f3575b5f80fd5b6102616105ae565b6040519081526020015b60405180910390f35b6102876102823660046123db565b610624565b604051901515815260200161026b565b61029f6106e1565b60405163ffffffff909116815260200161026b565b6102db7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161026b565b6102fb61076e565b60405161026b919061244f565b610261610316366004612461565b610813565b61028761032936600461248c565b61081e565b61026161033c366004612461565b610835565b5f80516020612b6d83398151915254610261565b610368610363366004612553565b61084f565b005b6102876103783660046125d7565b6109d3565b6103856109f8565b60405160ff909116815260200161026b565b6102db7f000000000000000000000000000000000000000000000000000000000000000081565b610261610a01565b6102db610a0a565b6102616103dc366004612615565b505f1990565b6102876103f036600461263d565b610a38565b610261610403366004612674565b610b06565b610261610416366004612615565b610b29565b610261610429366004612697565b610b59565b61026161043c366004612615565b610d6f565b610449610d79565b60405161026b97969594939291906126d6565b61026161046a366004612674565b610e22565b6102fb610e3d565b61028761048536600461248c565b610e7b565b610261610498366004612461565b610e88565b6102616104ab366004612697565b610e94565b6102876104be36600461276d565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205460ff1690565b6102616104f9366004612697565b610ff1565b61026161050c366004612461565b61114a565b61026161051f366004612615565b611155565b5f546001600160a01b03166102db565b610368610542366004612799565b61119f565b610261610555366004612615565b6112f4565b61026161056836600461276d565b611332565b61036861057b366004612461565b61137b565b610261611434565b610261610596366004612674565b611457565b6102616105a9366004612674565b611498565b5f6105b7610a0a565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156105fb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061061f919061280a565b905090565b5f6001600160e01b031982166336372b0760e01b148061065457506001600160e01b0319821663a219a02560e01b145b8061066f57506001600160e01b0319821663043eff2d60e51b145b8061068a57506001600160e01b03198216631883ba3960e21b145b806106a557506001600160e01b0319821663e3bc4e6560e01b145b806106c057506001600160e01b0319821663f7febc6d60e01b145b806106db57506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f805460405163b1e5082960e01b81526001600160a01b0391821660048201527f00000000000000000000000000000000000000000000000000000000000000009091169063b1e5082990602401602060405180830381865afa15801561074a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061061f9190612821565b60605f5f80516020612b4d8339815191525b905080600301805461079190612844565b80601f01602080910402602001604051908101604052809291908181526020018280546107bd90612844565b80156108085780601f106107df57610100808354040283529160200191610808565b820191905f5260205f20905b8154815290600101906020018083116107eb57829003601f168201915b505050505091505090565b5f6106db825f6114c3565b5f3361082b818585611507565b5060019392505050565b5f60405163468ed21160e11b815260040160405180910390fd5b5f610858611519565b805490915060ff600160401b820416159067ffffffffffffffff165f8115801561087f5750825b90505f8267ffffffffffffffff16600114801561089b5750303b155b9050811580156108a9575080155b156108c75760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156108f157845460ff60401b1916600160401b1785555b6001600160a01b03881661094c5760405162461bcd60e51b815260206004820181905260248201527f44656c656761746564206973206e6f7420612076616c6964206163636f756e7460448201526064015b60405180910390fd5b6109568787611541565b61095f89611557565b6109688761156b565b5f80546001600160a01b0319166001600160a01b038a1617905583156109c857845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b5f336109e0858285611596565b6109eb8585856115fa565b60019150505b9392505050565b5f61061f611657565b5f61061f611699565b7f0773e532dfede91f04b12a73d3d2acd361424f41f76b4fb79f090161e36b4e00546001600160a01b031690565b5f610a416116a2565b6001600160a01b038316610a975760405162461bcd60e51b815260206004820152601f60248201527f4f70657261746f72206973206e6f7420612076616c6964206163636f756e74006044820152606401610943565b335f8181526001602090815260408083206001600160a01b03881680855290835292819020805460ff19168715159081179091558151908152905184927fceb576d9f15e4e200fdb5096d64d5dfd667e16def20c1eefd14256d8e3faa267928290030190a35060019392505050565b5f5f195f610b138561114a565b9050610b2133858784611742565b949350505050565b5f805f80516020612b4d8339815191525b6001600160a01b039093165f9081526020939093525050604090205490565b5f33848203610b7b57604051631f2a200560e01b815260040160405180910390fd5b806001600160a01b0316836001600160a01b031614158015610bc257506001600160a01b038084165f9081526001602090815260408083209385168352929052205460ff16155b15610bd257610bd2838287611596565b806001600160a01b0316846001600160a01b031614158015610c1957506001600160a01b038085165f9081526001602090815260408083209385168352929052205460ff16155b15610c3757604051635c645bcf60e11b815260040160405180910390fd5b6001600160a01b0384165f908152600260205260408120805490918791839190610c62908490612890565b90915550505f805460405163b1e5082960e01b81526001600160a01b0391821660048201527f00000000000000000000000000000000000000000000000000000000000000009091169063b1e5082990602401602060405180830381865afa158015610cd0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cf49190612821565b9050610d0663ffffffff821642612890565b6001830155610d168530896115fa565b604080516001600160a01b038581168252602082018a90525f9281891692918a16917f1fdc681a13d8c5da54e301c7ce6542dcde4581e4725043fdab2db12ddc574506910160405180910390a4505f9695505050505050565b5f6106db826117bb565b5f60608082808083815f80516020612b8d8339815191528054909150158015610da457506001810154155b610de85760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606401610943565b610df06117e3565b610df8611821565b604080515f80825260208201909252600f60f81b9c939b5091995046985030975095509350915050565b5f5f195f610e2f85610e88565b9050610b2133858388611742565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f80516020612b4d8339815191529161079190612844565b5f3361082b8185856115fa565b5f6106db8260016114c3565b5f81336001600160a01b0382168114801590610ed557506001600160a01b038083165f9081526001602090815260408083209385168352929052205460ff16155b15610ef357604051635c645bcf60e11b815260040160405180910390fd5b855f03610f1357604051631f2a200560e01b815260040160405180910390fd5b6001600160a01b0384165f908152600260209081526040808320815180830190925280548252600101549181018290529103610f6257604051632bb8b38560e11b815260040160405180910390fd5b4281602001511115610f87576040516318c16a9360e31b815260040160405180910390fd5b805193505f610f9585610813565b905080881015610fb857604051631de8e6e360e31b815260040160405180910390fd5b80881115610fd957604051632bb3283960e11b815260040160405180910390fd5b610fe63388888489611837565b505050509392505050565b5f81336001600160a01b038216811480159061103257506001600160a01b038083165f9081526001602090815260408083209385168352929052205460ff16155b1561105057604051635c645bcf60e11b815260040160405180910390fd5b855f0361107057604051631f2a200560e01b815260040160405180910390fd5b6001600160a01b0384165f9081526002602090815260408083208151808301909252805482526001015491810182905291036110bf57604051632bb8b38560e11b815260040160405180910390fd5b42816020015111156110e4576040516318c16a9360e31b815260040160405180910390fd5b805187101561110657604051631de8e6e360e31b815260040160405180910390fd5b805187111561112857604051632bb3283960e11b815260040160405180910390fd5b61113187610813565b9350611140338787878b611837565b5050509392505050565b5f6106db825f6118d8565b6001600160a01b0381165f908152600260209081526040808320815180830190925280548252600101549181018290529042106111975780516109f190610813565b505f92915050565b834211156111c35760405163313c898160e11b815260048101859052602401610943565b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861122d8c6001600160a01b03165f9081527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090505f61128782611913565b90505f6112968287878761193f565b9050896001600160a01b0316816001600160a01b0316146112dd576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610943565b6112e88a8a8a611507565b50505050505050505050565b6001600160a01b0381165f90815260026020908152604080832081518083019092528054825260010154918101829052904210611197575192915050565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b6113836116a2565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146113cc57604051639165520160e01b815260040160405180910390fd5b6113fe6113d7610a0a565b7f00000000000000000000000000000000000000000000000000000000000000008361196b565b6040518181527f4126d2da817d1aa12a3c086bf2fa8957ff31629479134de6ca77c014162c77329060200160405180910390a150565b5f61143e30610b29565b5f80516020612b6d8339815191525461061f91906128a3565b6001600160a01b0381165f908152600260205260408120600181015442108015906114825750805415155b1561148f575490506106db565b505f9392505050565b6001600160a01b0381165f908152600260205260408120600181015442101561148f575490506106db565b5f6109f16114cf6105ae565b6114da906001612890565b6114e55f600a612996565b5f80516020612b6d833981519152546114fe9190612890565b859190856119ca565b6115148383836001611a15565b505050565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006106db565b611549611af9565b6115538282611b1e565b5050565b61155f611af9565b61156881611b6e565b50565b611573611af9565b61156881604051806040016040528060018152602001603160f81b815250611bf1565b5f6115a18484611332565b90505f198110156115f457818110156115e657604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610943565b6115f484848484035f611a15565b50505050565b6001600160a01b03831661162357604051634b637e8f60e11b81525f6004820152602401610943565b6001600160a01b03821661164c5760405163ec442f0560e01b81525f6004820152602401610943565b611514838383611c50565b5f807f0773e532dfede91f04b12a73d3d2acd361424f41f76b4fb79f090161e36b4e0090505f81546116939190600160a01b900460ff166129a4565b91505090565b5f61061f611c6b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c975abb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116fe573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061172291906129bd565b156117405760405163d93c066560e01b815260040160405180910390fd5b565b61175561174d610a0a565b853085611cde565b61175f8382611d17565b826001600160a01b0316846001600160a01b03167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d784846040516117ad929190918252602082015260400190565b60405180910390a350505050565b5f807f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00610b3a565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10280546060915f80516020612b8d8339815191529161079190612844565b60605f5f80516020612b8d833981519152610780565b6001600160a01b0383165f9081526002602052604081208181556001015561185f3082611d4b565b61187161186a610a0a565b858461196b565b826001600160a01b0316846001600160a01b0316866001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db85856040516118c9929190918252602082015260400190565b60405180910390a45050505050565b5f6109f16118e782600a612996565b5f80516020612b6d833981519152546119009190612890565b6119086105ae565b6114fe906001612890565b5f6106db61191f611699565b8360405161190160f01b8152600281019290925260228201526042902090565b5f805f8061194f88888888611d7f565b92509250925061195f8282611e47565b50909695505050505050565b6040516001600160a01b0383811660248301526044820183905261151491859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611eff565b5f6119f76119d783611f6b565b80156119f257505f84806119ed576119ed6129d8565b868809115b151590565b611a02868686611f97565b611a0c9190612890565b95945050505050565b5f80516020612b4d8339815191526001600160a01b038516611a4c5760405163e602df0560e01b81525f6004820152602401610943565b6001600160a01b038416611a7557604051634a1406b160e11b81525f6004820152602401610943565b6001600160a01b038086165f90815260018301602090815260408083209388168352929052208390558115611af257836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611ae991815260200190565b60405180910390a35b5050505050565b611b01612047565b61174057604051631afcd79f60e31b815260040160405180910390fd5b611b26611af9565b5f80516020612b4d8339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03611b5f8482612a30565b50600481016115f48382612a30565b611b76611af9565b7f0773e532dfede91f04b12a73d3d2acd361424f41f76b4fb79f090161e36b4e005f80611ba284612060565b9150915081611bb2576012611bb4565b805b83546001600160a81b031916600160a01b60ff92909216919091026001600160a01b031916176001600160a01b0394909416939093179091555050565b611bf9611af9565b5f80516020612b8d8339815191527fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102611c328482612a30565b5060038101611c418382612a30565b505f8082556001909101555050565b611c586116a2565b611c60612136565b6115148383836121d9565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611c95612304565b611c9d61236c565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6040516001600160a01b0384811660248301528381166044830152606482018390526115f49186918216906323b872dd90608401611998565b6001600160a01b038216611d405760405163ec442f0560e01b81525f6004820152602401610943565b6115535f8383611c50565b6001600160a01b038216611d7457604051634b637e8f60e11b81525f6004820152602401610943565b611553825f83611c50565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611db857505f91506003905082611e3d565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611e09573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116611e3457505f925060019150829050611e3d565b92505f91508190505b9450945094915050565b5f826003811115611e5a57611e5a612af0565b03611e63575050565b6001826003811115611e7757611e77612af0565b03611e955760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611ea957611ea9612af0565b03611eca5760405163fce698f760e01b815260048101829052602401610943565b6003826003811115611ede57611ede612af0565b03611553576040516335e2f38360e21b815260048101829052602401610943565b5f8060205f8451602086015f885af180611f1e576040513d5f823e3d81fd5b50505f513d91508115611f35578060011415611f42565b6001600160a01b0384163b155b156115f457604051635274afe760e01b81526001600160a01b0385166004820152602401610943565b5f6002826003811115611f8057611f80612af0565b611f8a9190612b04565b60ff166001149050919050565b5f805f611fa486866123ae565b91509150815f03611fc857838181611fbe57611fbe6129d8565b04925050506109f1565b818411611fdf57611fdf60038515026011186123ca565b5f848688095f868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010185841190960395909502919093039390930492909217029150509392505050565b5f612050611519565b54600160401b900460ff16919050565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290515f918291829182916001600160a01b038716916120a691612b31565b5f60405180830381855afa9150503d805f81146120de576040519150601f19603f3d011682016040523d82523d5f602084013e6120e3565b606091505b50915091508180156120f757506020815110155b1561212a575f81806020019051810190612111919061280a565b905060ff8111612128576001969095509350505050565b505b505f9485945092505050565b60405163016406e960e71b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b203748090602401602060405180830381865afa158015612198573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121bc91906129bd565b6117405760405163c987100f60e01b815260040160405180910390fd5b5f80516020612b4d8339815191526001600160a01b0384166122135781816002015f8282546122089190612890565b909155506122839050565b6001600160a01b0384165f90815260208290526040902054828110156122655760405163391434e360e21b81526001600160a01b03861660048201526024810182905260448101849052606401610943565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b0383166122a15760028101805483900390556122bf565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117ad91815260200190565b5f5f80516020612b8d8339815191528161231c6117e3565b80519091501561233457805160209091012092915050565b81548015612343579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b5f5f80516020612b8d83398151915281612384611821565b80519091501561239c57805160209091012092915050565b60018201548015612343579392505050565b5f805f1983850993909202808410938190039390930393915050565b634e487b715f52806020526024601cfd5b5f602082840312156123eb575f80fd5b81356001600160e01b0319811681146109f1575f80fd5b5f5b8381101561241c578181015183820152602001612404565b50505f910152565b5f815180845261243b816020860160208601612402565b601f01601f19169290920160200192915050565b602081525f6109f16020830184612424565b5f60208284031215612471575f80fd5b5035919050565b6001600160a01b0381168114611568575f80fd5b5f806040838503121561249d575f80fd5b82356124a881612478565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126124d9575f80fd5b813567ffffffffffffffff808211156124f4576124f46124b6565b604051601f8301601f19908116603f0116810190828211818310171561251c5761251c6124b6565b81604052838152866020858801011115612534575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f8060808587031215612566575f80fd5b843561257181612478565b9350602085013561258181612478565b9250604085013567ffffffffffffffff8082111561259d575f80fd5b6125a9888389016124ca565b935060608701359150808211156125be575f80fd5b506125cb878288016124ca565b91505092959194509250565b5f805f606084860312156125e9575f80fd5b83356125f481612478565b9250602084013561260481612478565b929592945050506040919091013590565b5f60208284031215612625575f80fd5b81356109f181612478565b8015158114611568575f80fd5b5f806040838503121561264e575f80fd5b823561265981612478565b9150602083013561266981612630565b809150509250929050565b5f8060408385031215612685575f80fd5b82359150602083013561266981612478565b5f805f606084860312156126a9575f80fd5b8335925060208401356126bb81612478565b915060408401356126cb81612478565b809150509250925092565b60ff60f81b881681525f602060e060208401526126f660e084018a612424565b8381036040850152612708818a612424565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825260208088019350909101905f5b8181101561275b5783518352928401929184019160010161273f565b50909c9b505050505050505050505050565b5f806040838503121561277e575f80fd5b823561278981612478565b9150602083013561266981612478565b5f805f805f805f60e0888a0312156127af575f80fd5b87356127ba81612478565b965060208801356127ca81612478565b95506040880135945060608801359350608088013560ff811681146127ed575f80fd5b9699959850939692959460a0840135945060c09093013592915050565b5f6020828403121561281a575f80fd5b5051919050565b5f60208284031215612831575f80fd5b815163ffffffff811681146109f1575f80fd5b600181811c9082168061285857607f821691505b60208210810361287657634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b808201808211156106db576106db61287c565b818103818111156106db576106db61287c565b600181815b808511156128f057815f19048211156128d6576128d661287c565b808516156128e357918102915b93841c93908002906128bb565b509250929050565b5f82612906575060016106db565b8161291257505f6106db565b816001811461292857600281146129325761294e565b60019150506106db565b60ff8411156129435761294361287c565b50506001821b6106db565b5060208310610133831016604e8410600b8410161715612971575081810a6106db565b61297b83836128b6565b805f190482111561298e5761298e61287c565b029392505050565b5f6109f160ff8416836128f8565b60ff81811683821601908111156106db576106db61287c565b5f602082840312156129cd575f80fd5b81516109f181612630565b634e487b7160e01b5f52601260045260245ffd5b601f82111561151457805f5260205f20601f840160051c81016020851015612a115750805b601f840160051c820191505b81811015611af2575f8155600101612a1d565b815167ffffffffffffffff811115612a4a57612a4a6124b6565b612a5e81612a588454612844565b846129ec565b602080601f831160018114612a91575f8415612a7a5750858301515b5f19600386901b1c1916600185901b178555612ae8565b5f85815260208120601f198616915b82811015612abf57888601518255948401946001909101908401612aa0565b5085821015612adc57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52602160045260245ffd5b5f60ff831680612b2257634e487b7160e01b5f52601260045260245ffd5b8060ff84160691505092915050565b5f8251612b42818460208701612402565b919091019291505056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0052c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100a26469706673582212203444a917955f95a1b79da153a7fa4a1d6c9ecb65bdd3fa737a5951d1b4e030bd64736f6c6343000818003360c06040523060805234801562000014575f80fd5b506040516200353b3803806200353b833981016040819052620000379162000113565b620000416200005f565b6001600160a01b03811660a052620000586200005f565b5062000142565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000b05760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001105780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b5f6020828403121562000124575f80fd5b81516001600160a01b03811681146200013b575f80fd5b9392505050565b60805160a051613398620001a35f395f81816102160152818161075001528181610adf01528181610c7f01528181610dc001528181611635015281816117c50152611f0501525f81816124600152818161248901526125c801526133985ff3fe6080604052600436106101cf575f3560e01c8063715018a6116100fd578063ad3cb1cc11610092578063dd71764411610062578063dd7176441461056e578063deec65bc1461059a578063e30c3978146105b9578063f2fde38b146105cd575f80fd5b8063ad3cb1cc146104bc578063b2037480146104f9578063b4867fe414610530578063c4d66de81461054f575f80fd5b80638da5cb5b116100cd5780638da5cb5b1461043d57806397da0056146104515780639916fa0214610472578063acfad62814610491575f80fd5b8063715018a6146103e257806379ba5097146103f65780638456cb591461040a5780638651060d1461041e575f80fd5b806333410dc4116101735780634f1ef286116101435780634f1ef2861461036d57806352d1902d1461038057806353dd91f5146103945780635c975abb146103b3575f80fd5b806333410dc4146103075780633f4ba83a14610326578063472abf681461033a5780634eb30bc91461034e575f80fd5b806314d7e25b116101ae57806314d7e25b1461027c57806317afb65b146102a85780631838efe5146102c95780633302a6a1146102e8575f80fd5b80622cf9a4146101d357806306433b1b146102055780630b78623b14610250575b5f80fd5b3480156101de575f80fd5b506101f26101ed366004612c71565b6105ec565b6040519081526020015b60405180910390f35b348015610210575f80fd5b506102387f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101fc565b34801561025b575f80fd5b5061026f61026a366004612c71565b610618565b6040516101fc9190612d8a565b348015610287575f80fd5b5061029b610296366004612d99565b610705565b6040516101fc9190612db4565b3480156102b3575f80fd5b506102c76102c2366004612e00565b610728565b005b3480156102d4575f80fd5b506101f26102e3366004612e17565b610abe565b3480156102f3575f80fd5b506102c7610302366004612e5b565b61128e565b348015610312575f80fd5b506102c7610321366004612d99565b611465565b348015610331575f80fd5b506102c7611526565b348015610345575f80fd5b506102c7611538565b348015610359575f80fd5b506102c7610368366004612e00565b61160d565b6102c761037b366004612ecc565b6119e1565b34801561038b575f80fd5b506101f26119fc565b34801561039f575f80fd5b5061026f6103ae366004612e00565b611a17565b3480156103be575f80fd5b505f805160206133238339815191525460ff165b60405190151581526020016101fc565b3480156103ed575f80fd5b506102c7611ad9565b348015610401575f80fd5b506102c7611aea565b348015610415575f80fd5b506102c7611b32565b348015610429575f80fd5b506102c7610438366004612f6e565b611b42565b348015610448575f80fd5b50610238611bef565b34801561045c575f80fd5b5060015460405160ff90911681526020016101fc565b34801561047d575f80fd5b506102c761048c366004612d99565b611c23565b34801561049c575f80fd5b506104a762093a8081565b60405163ffffffff90911681526020016101fc565b3480156104c7575f80fd5b506104ec604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101fc9190612fb0565b348015610504575f80fd5b506103d2610513366004612d99565b6001600160a01b03165f9081526020819052604090205460ff1690565b34801561053b575f80fd5b506102c761054a366004612fe2565b611c34565b34801561055a575f80fd5b506102c7610569366004612d99565b611d48565b348015610579575f80fd5b5061058d610588366004612e00565b611e59565b6040516101fc9190613005565b3480156105a5575f80fd5b506102c76105b4366004612e00565b611edd565b3480156105c4575f80fd5b50610238612075565b3480156105d8575f80fd5b506102c76105e7366004612d99565b61209d565b6001600160a01b038083165f908152600360209081526040808320938516835292905220545b92915050565b610620612bd6565b6001600160a01b038084165f9081526003602081815260408084209487168452938152838320548084526004909152918390208351610100810190945280549293929091839160ff169081111561067957610679612ca8565b600381111561068a5761068a612ca8565b815281546001600160a01b0361010082048116602084015262ffffff600160a81b830416604084015263ffffffff600160c01b80840482166060860152600160e01b9093048116608085015260019094015490811660a0840152600160a01b8104841660c08401520490911660e09091015291505092915050565b6001600160a01b0381165f90815260026020526040902060609061061290612122565b610730612135565b3360405163e9d8dbfd60e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063e9d8dbfd90602401602060405180830381865afa158015610795573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107b9919061305c565b6107e65760405163b536580760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6107ee612165565b5f82815260046020526040902080546001600160a01b0361010090910416331461082a576040516282b42960e81b815260040160405180910390fd5b5f815460ff16600381111561084157610841612ca8565b1461085f576040516307a92f1960e51b815260040160405180910390fd5b600181015463ffffffff428116600160c01b909204161015610894576040516331e24a9f60e01b815260040160405180910390fd5b600181015463ffffffff428116600160a01b9092041611156108c957604051631e55c18f60e21b815260040160405180910390fd5b805460ff1916600190811782558101546001600160a01b03165f908152600260205260408120906108f98261219c565b90505f5b81811015610a5c575f61091084836121a5565b90505f8190505f610991826001600160a01b03166301e1d1146040518163ffffffff1660e01b8152600401602060405180830381865afa158015610956573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061097a9190613077565b8854600160a81b900462ffffff16629896806121b0565b90508015610a515760405163dff81f7d60e01b8152600481018290526001600160a01b0383169063dff81f7d906024015f604051808303815f87803b1580156109d8575f80fd5b505af11580156109ea573d5f803e3d5ffd5b5050505f8a815260056020908152604080832081518083019092528582526001600160a01b03888116838501908152825460018082018555938752949095209251600290940290920192835592519190920180546001600160a01b03191691909216179055505b5050506001016108fd565b506001830154835460405187926001600160a01b0390811692610100900416907f6e141be0670106fb9241fc2d132fa5597d7decd0184d366414050b782c76ddda905f90a4505050610aba60015f8051602061334383398151915255565b5050565b5f3360405163e9d8dbfd60e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063e9d8dbfd90602401602060405180830381865afa158015610b24573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b48919061305c565b610b705760405163b536580760e01b81526001600160a01b03821660048201526024016107dd565b610b78612135565b60fa610b87606085018561308e565b90501115610bc95760405162461bcd60e51b815260206004820152600f60248201526e726561736f6e20746f6f206c6f6e6760881b60448201526064016107dd565b5f610bda60408501602086016130e8565b62ffffff1611610c205760405162461bcd60e51b815260206004820152601160248201527006d62697073206d757374206265203e203607c1b60448201526064016107dd565b42610c316060850160408601613114565b63ffffffff161115610c7b5760405162461bcd60e51b815260206004820152601360248201527274696d657374616d7020696e2066757475726560681b60448201526064016107dd565b335f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166397c459c483610cba6020890189612d99565b610cca60608a0160408b01613114565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015263ffffffff166044820152606401606060405180830381865afa158015610d20573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d44919061312f565b9050806020015162ffffff16856020016020810190610d6391906130e8565b62ffffff161115610db65760405162461bcd60e51b815260206004820152601960248201527f6d626970732065786365656473206d617820616c6c6f7765640000000000000060448201526064016107dd565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663b1e50829610df26020880188612d99565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610e34573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e58919061319f565b610e689063ffffffff16426131ce565b610e786060870160408801613114565b63ffffffff1611610ebf5760405162461bcd60e51b81526020600482015260116024820152701d1a5b595cdd185b5c081d1bdbc81bdb19607a1b60448201526064016107dd565b6001600160a01b0382165f9081526003602090815260408220908290610ee790890189612d99565b6001600160a01b0316815260208101919091526040015f205490508015610ff5575f8181526004602052604090206001815460ff166003811115610f2d57610f2d612ca8565b03610f4a5760405162461bcd60e51b81526004016107dd906131e1565b5f815460ff166003811115610f6157610f61612ca8565b03610ff357600181015463ffffffff428116600160c01b909204161115610f9a5760405162461bcd60e51b81526004016107dd906131e1565b805460ff1916600317815581610fb36020890189612d99565b6001600160a01b0316856001600160a01b03167fe3884525a2d5f483253428531619e78f11f1af8cbd2d28311259fd31ef46018a60405160405180910390a45b505b5f8260400151426110069190613232565b90505f6040518061010001604052805f600381111561102757611027612ca8565b8152602001866001600160a01b0316815260200189602001602081019061104e91906130e8565b62ffffff16815260200161106860608b0160408c01613114565b63ffffffff1681526020014263ffffffff168152602001895f0160208101906110919190612d99565b6001600160a01b0316815263ffffffff841660208201526040016110b862093a8085613232565b63ffffffff16905290506110cb81612273565b6001600160a01b0386165f9081526003602090815260408220929550859291906110f7908c018c612d99565b6001600160a01b0316815260208082019290925260409081015f90812093909355858352600490915290208151815483929190829060ff1916600183600381111561114457611144612ca8565b0217905550602082810151825460408501516060860151608087015163ffffffff908116600160e01b026001600160e01b03928216600160c01b908102939093166001600160c01b0362ffffff909516600160a81b0262ffffff60a81b196001600160a01b039889166101000216610100600160c01b03199097169690961795909517939093169390931791909117855560a08601516001909501805460c088015160e090980151841690920296909216600160a01b026001600160c01b031990911694909216939093171763ffffffff60c01b1916929092179055839061122e908a018a612d99565b6001600160a01b039081169087167f1928f55cc7948e65b5fd8b65349e79b0970a639acc7f5f308bcd1808e0ecdb8e8461126b60608e018e61308e565b60405161127a9392919061324f565b60405180910390a450909695505050505050565b61129661230d565b6001600160a01b0382165f9081526020819052604090205481151560ff9091161515036113055760405162461bcd60e51b815260206004820152601e60248201527f5661756c7420616c726561647920696e2064657369726564207374617465000060448201526064016107dd565b5f826001600160a01b031663cf8db8626040518163ffffffff1660e01b8152600401602060405180830381865afa158015611342573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113669190613290565b6001600160a01b0381165f90815260026020526040902090915082156113f25760015460ff166113958261219c565b106113e25760405162461bcd60e51b815260206004820152601f60248201527f45786365656473206d6178207661756c747320706572206f70657261746f720060448201526064016107dd565b6113ec818561233f565b506113fe565b6113fc8185612353565b505b6001600160a01b038481165f8181526020818152604091829020805460ff1916881515908117909155825193845290830152918416917f2ffaf20674bccc4ab0c9dd20b627f4ed9a43dc5232ed18a32410ad4207fc176b910160405180910390a250505050565b61146d61230d565b6001600160a01b0381166114cd5760405162461bcd60e51b815260206004820152602160248201527f47756172647261696c20616464726573732063616e6e6f7420626520656d70746044820152607960f81b60648201526084016107dd565b600180546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907fe48a815386a6ba32bdcfe3b82f31e254f5e3e0549da4cddc175ff7d296ad5a5a905f90a35050565b61152e61230d565b611536612367565b565b60025f6115436123c6565b8054909150600160401b900460ff168061156b5750805467ffffffffffffffff808416911610155b156115895760405163f92ee8a960e01b815260040160405180910390fd5b805468ffffffffffffffffff191667ffffffffffffffff831617600160401b1781556115b36123ee565b6001805460ff1916600a179055805460ff60401b1916815560405167ffffffffffffffff831681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2906020015b60405180910390a15050565b611615612135565b3360405163e9d8dbfd60e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063e9d8dbfd90602401602060405180830381865afa15801561167a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061169e919061305c565b6116c65760405163b536580760e01b81526001600160a01b03821660048201526024016107dd565b6116ce612165565b5f82815260046020526040902080546001600160a01b0361010090910416331461170a576040516282b42960e81b815260040160405180910390fd5b6001815460ff16600381111561172257611722612ca8565b14611740576040516307a92f1960e51b815260040160405180910390fd5b5f8381526006602052604090205460ff16600114611771576040516305694d1d60e01b815260040160405180910390fd5b805460ff191660021780825560018201546040516325f1167160e21b81526001600160a01b03610100840481166004830152918216602482015263ffffffff600160c01b9093049290921660448301525f917f0000000000000000000000000000000000000000000000000000000000000000909116906397c459c490606401606060405180830381865afa15801561180c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611830919061312f565b5f8581526005602052604081209192505b8154811015611937575f82828154811061185d5761185d6132ab565b5f91825260209091206002909102016001810154815485549293506001600160a01b0390911691859085908110611896576118966132ab565b5f91825260208083206002909202909101918255600190910180546001600160a01b0319169055604080516338d52e0f60e01b8152905161192c926001600160a01b038616926338d52e0f92600480830193928290030181865afa158015611900573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119249190613290565b8751836123fe565b505050600101611841565b505f85815260056020526040812061194e91612c1a565b82546001600160a01b036101009182900481165f9081526003602090815260408083206001890180548616855290835281842093909355915487548751935193851684528a959185169491900416917f82a1d74d3c1a7982ea75f5e68c0964c3309fc5ddfc6e1f1d2fb6b10eacce91e6910160405180910390a4505050610aba60015f8051602061334383398151915255565b6119e9612455565b6119f2826124f9565b610aba8282612501565b5f611a056125bd565b505f8051602061330383398151915290565b611a1f612bd6565b5f8281526004602052604090819020815161010081019092528054829060ff166003811115611a5057611a50612ca8565b6003811115611a6157611a61612ca8565b815281546001600160a01b0361010082048116602084015262ffffff600160a81b830416604084015263ffffffff600160c01b80840482166060860152600160e01b9093048116608085015260019094015490811660a0840152600160a01b8104841660c08401520490911660e09091015292915050565b611ae161230d565b6115365f612606565b3380611af4612075565b6001600160a01b031614611b265760405163118cdaa760e01b81526001600160a01b03821660048201526024016107dd565b611b2f81612606565b50565b611b3a61230d565b61153661263e565b611b4a61230d565b60015460ff9081169082168110611ba35760405162461bcd60e51b815260206004820152601c60248201527f4d7573742062652067726561746572207468616e2063757272656e740000000060448201526064016107dd565b6001805460ff191660ff84811691821790925560408051928416835260208301919091527f7f272733435a5c1171c60918325413034d8465dddd58e7830c74d20840f5a0c09101611601565b5f807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b611c2c81611d48565b611b2f611538565b611c3c612135565b60015461010090046001600160a01b0316336001600160a01b031614611c74576040516282b42960e81b815260040160405180910390fd5b5f828152600460205260409020805461010090046001600160a01b0316611cae5760405163c191eff960e01b815260040160405180910390fd5b5f8381526006602052604090205460ff1615611cdd576040516393579aa360e01b815260040160405180910390fd5b81611ce9576002611cec565b60015b5f84815260066020908152604091829020805460ff191660ff949094169390931790925551831515815284917f098a812d9d10a266b1a99ac5ec25f2cbf779f49d2cacf9c58eb35edea7df6842910160405180910390a2505050565b5f611d516123c6565b805490915060ff600160401b820416159067ffffffffffffffff165f81158015611d785750825b90505f8267ffffffffffffffff166001148015611d945750303b155b905081158015611da2575080155b15611dc05760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315611dea57845460ff60401b1916600160401b1785555b611df386612686565b611dfb612697565b611e03612697565b611e0b612697565b8315611e5157845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b606060055f8381526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015611ed2575f8481526020908190206040805180820190915260028502909101805482526001908101546001600160a01b0316828401529083529092019101611e8b565b505050509050919050565b611ee5612135565b3360405163e9d8dbfd60e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063e9d8dbfd90602401602060405180830381865afa158015611f4a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f6e919061305c565b611f965760405163b536580760e01b81526001600160a01b03821660048201526024016107dd565b5f828152600460205260409020805433919061010090046001600160a01b03168214611fd4576040516282b42960e81b815260040160405180910390fd5b5f815460ff166003811115611feb57611feb612ca8565b14612009576040516307a92f1960e51b815260040160405180910390fd5b805460ff1916600390811782556001600160a01b038381165f81815260209384526040808220600187018054861684529552808220829055935493518894909316927fe3884525a2d5f483253428531619e78f11f1af8cbd2d28311259fd31ef46018a9190a450505050565b5f807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00611c13565b6120a561230d565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b03831690811782556120e9611bef565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b60605f61212e8361269f565b9392505050565b5f805160206133238339815191525460ff16156115365760405163d93c066560e01b815260040160405180910390fd5b5f8051602061334383398151915280546001190161219657604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b5f610612825490565b5f61212e83836126f8565b5f805f6121bd868661271e565b91509150815f036121e1578381816121d7576121d76132bf565b049250505061212e565b8184116121f8576121f8600385150260111861273a565b5f848688095f868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010185841190960395909502919093039390930492909217029150509392505050565b60015f8051602061334383398151915255565b6020808201516040808401516060850151608086015160a087015160c088015160e089015195515f986122f0989791016001600160a01b03978816815262ffffff96909616602087015263ffffffff948516604087015292841660608601529416608084015292811660a08301529190911660c082015260e00190565b604051602081830303815290604052805190602001209050919050565b33612316611bef565b6001600160a01b0316146115365760405163118cdaa760e01b81523360048201526024016107dd565b5f61212e836001600160a01b03841661274b565b5f61212e836001600160a01b038416612797565b61236f612881565b5f80516020613323833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610612565b6123f66128b0565b6115366128d5565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526124509084906128dd565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806124db57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166124cf5f80516020613303833981519152546001600160a01b031690565b6001600160a01b031614155b156115365760405163703e46dd60e11b815260040160405180910390fd5b611b2f61230d565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561255b575060408051601f3d908101601f1916820190925261255891810190613077565b60015b61258357604051634c9c8ce360e01b81526001600160a01b03831660048201526024016107dd565b5f8051602061330383398151915281146125b357604051632a87526960e21b8152600481018290526024016107dd565b612450838361294f565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146115365760405163703e46dd60e11b815260040160405180910390fd5b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155610aba826129a4565b612646612135565b5f80516020613323833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336123a8565b61268e6128b0565b611b2f81612a14565b6115366128b0565b6060815f018054806020026020016040519081016040528092919081815260200182805480156126ec57602002820191905f5260205f20905b8154815260200190600101908083116126d8575b50505050509050919050565b5f825f01828154811061270d5761270d6132ab565b905f5260205f200154905092915050565b5f805f1983850993909202808410938190039390930393915050565b634e487b715f52806020526024601cfd5b5f81815260018301602052604081205461279057508154600181810184555f848152602080822090930184905584548482528286019093526040902091909155610612565b505f610612565b5f8181526001830160205260408120548015612871575f6127b96001836131ce565b85549091505f906127cc906001906131ce565b905080821461282b575f865f0182815481106127ea576127ea6132ab565b905f5260205f200154905080875f01848154811061280a5761280a6132ab565b5f918252602080832090910192909255918252600188019052604090208390555b855486908061283c5761283c6132d3565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f905560019350505050610612565b5f915050610612565b5092915050565b5f805160206133238339815191525460ff1661153657604051638dfc202b60e01b815260040160405180910390fd5b6128b8612a45565b61153657604051631afcd79f60e31b815260040160405180910390fd5b6122606128b0565b5f8060205f8451602086015f885af1806128fc576040513d5f823e3d81fd5b50505f513d91508115612913578060011415612920565b6001600160a01b0384163b155b1561294957604051635274afe760e01b81526001600160a01b03851660048201526024016107dd565b50505050565b61295882612a5e565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561299c576124508282612ac1565b610aba612b33565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b612a1c6128b0565b6001600160a01b038116611b2657604051631e4fbdf760e01b81525f60048201526024016107dd565b5f612a4e6123c6565b54600160401b900460ff16919050565b806001600160a01b03163b5f03612a9357604051634c9c8ce360e01b81526001600160a01b03821660048201526024016107dd565b5f8051602061330383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051612add91906132e7565b5f60405180830381855af49150503d805f8114612b15576040519150601f19603f3d011682016040523d82523d5f602084013e612b1a565b606091505b5091509150612b2a858383612b52565b95945050505050565b34156115365760405163b398979f60e01b815260040160405180910390fd5b606082612b6757612b6282612bae565b61212e565b8151158015612b7e57506001600160a01b0384163b155b15612ba757604051639996b31560e01b81526001600160a01b03851660048201526024016107dd565b508061212e565b805115612bbd57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b604080516101008101909152805f81525f6020820181905260408201819052606082018190526080820181905260a0820181905260c0820181905260e09091015290565b5080545f8255600202905f5260205f2090810190611b2f91905b80821115612c59575f81556001810180546001600160a01b0319169055600201612c34565b5090565b6001600160a01b0381168114611b2f575f80fd5b5f8060408385031215612c82575f80fd5b8235612c8d81612c5d565b91506020830135612c9d81612c5d565b809150509250929050565b634e487b7160e01b5f52602160045260245ffd5b805160048110612cda57634e487b7160e01b5f52602160045260245ffd5b808352506020810151612cf860208401826001600160a01b03169052565b506040810151612d0f604084018262ffffff169052565b506060810151612d27606084018263ffffffff169052565b506080810151612d3f608084018263ffffffff169052565b5060a0810151612d5a60a08401826001600160a01b03169052565b5060c0810151612d7260c084018263ffffffff169052565b5060e081015161245060e084018263ffffffff169052565b61010081016106128284612cbc565b5f60208284031215612da9575f80fd5b813561212e81612c5d565b602080825282518282018190525f9190848201906040850190845b81811015612df45783516001600160a01b031683529284019291840191600101612dcf565b50909695505050505050565b5f60208284031215612e10575f80fd5b5035919050565b5f60208284031215612e27575f80fd5b813567ffffffffffffffff811115612e3d575f80fd5b82016080818503121561212e575f80fd5b8015158114611b2f575f80fd5b5f8060408385031215612e6c575f80fd5b8235612e7781612c5d565b91506020830135612c9d81612e4e565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612ec457612ec4612e87565b604052919050565b5f8060408385031215612edd575f80fd5b8235612ee881612c5d565b915060208381013567ffffffffffffffff80821115612f05575f80fd5b818601915086601f830112612f18575f80fd5b813581811115612f2a57612f2a612e87565b612f3c601f8201601f19168501612e9b565b91508082528784828501011115612f51575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f60208284031215612f7e575f80fd5b813560ff8116811461212e575f80fd5b5f5b83811015612fa8578181015183820152602001612f90565b50505f910152565b602081525f8251806020840152612fce816040850160208701612f8e565b601f01601f19169190910160400192915050565b5f8060408385031215612ff3575f80fd5b823591506020830135612c9d81612e4e565b602080825282518282018190525f919060409081850190868401855b8281101561304f578151805185528601516001600160a01b0316868501529284019290850190600101613021565b5091979650505050505050565b5f6020828403121561306c575f80fd5b815161212e81612e4e565b5f60208284031215613087575f80fd5b5051919050565b5f808335601e198436030181126130a3575f80fd5b83018035915067ffffffffffffffff8211156130bd575f80fd5b6020019150368190038213156130d1575f80fd5b9250929050565b62ffffff81168114611b2f575f80fd5b5f602082840312156130f8575f80fd5b813561212e816130d8565b63ffffffff81168114611b2f575f80fd5b5f60208284031215613124575f80fd5b813561212e81613103565b5f6060828403121561313f575f80fd5b6040516060810181811067ffffffffffffffff8211171561316257613162612e87565b604052825161317081612c5d565b81526020830151613180816130d8565b6020820152604083015161319381613103565b60408201529392505050565b5f602082840312156131af575f80fd5b815161212e81613103565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610612576106126131ba565b60208082526031908201527f50726576696f757320736c617368696e672072657175657374206c696665637960408201527018db19481b9bdd0818dbdb5c1b195d1959607a1b606082015260800190565b63ffffffff81811683821601908082111561287a5761287a6131ba565b5f61012061325d8387612cbc565b806101008401528381840152506101408385828501375f838501820152601f909301601f19169091019091019392505050565b5f602082840312156132a0575f80fd5b815161212e81612c5d565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601260045260245ffd5b634e487b7160e01b5f52603160045260245ffd5b5f82516132f8818460208701612f8e565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a26469706673582212200ff39bb3417e829e8482ad67c9fd8c267353d3d1fef088b713b75b552adcd60f64736f6c6343000818003360c06040523060805234801562000014575f80fd5b506040516200370038038062003700833981016040819052620000379162000113565b620000416200005f565b6001600160a01b03811660a052620000586200005f565b5062000142565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000b05760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001105780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b5f6020828403121562000124575f80fd5b81516001600160a01b03811681146200013b575f80fd5b9392505050565b60805160a05161358e620001725f395f61027f01525f818161225f0152818161228801526123cc015261358e5ff3fe608060405260043610610249575f3560e01c80638e61af1211610134578063ca41e40c116100b3578063dcef440311610078578063dcef440314610773578063ddcf017d14610792578063e30c3978146107ae578063e9d8dbfd146107c2578063f2fde38b146107f9578063fd864e5e14610818575f80fd5b8063ca41e40c146106a9578063d12a833c146106c8578063d1b9d6e2146106e7578063d2cad27114610713578063dcc4605c14610754575f80fd5b8063b1ad5743116100f9578063b1ad5743146105d9578063b1e50829146105f8578063bcac0a021461064c578063be7327211461066b578063c4d66de81461068a575f80fd5b80638e61af121461052057806397c459c41461053f5780639e2d5ce81461055e578063ab06f67e1461057d578063ad3cb1cc1461059c575f80fd5b80635c975abb116101cb57806379ba50971161019057806379ba50971461049257806381d18842146104a6578063832025f9146104c55780638456cb59146104d9578063891a081f146104ed5780638da5cb5b1461050c575f80fd5b80635c975abb146103cd578063621e0299146103fc5780636d70f7ae14610428578063715018a61461045f5780637218c6a714610473575f80fd5b80634ad88989116102115780634ad889891461033b5780634f1ef2861461035a57806352d1902d1461036d57806356ce0e6c1461038f57806358715e3b146103ae575f80fd5b80630793ae7b1461024d57806332fe7b261461026e5780633f4ba83a146102be578063472abf68146102d257806348694118146102e6575b5f80fd5b348015610258575f80fd5b5061026c610267366004612f6b565b610836565b005b348015610279575f80fd5b506102a17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102c9575f80fd5b5061026c610ac4565b3480156102dd575f80fd5b5061026c610ad6565b3480156102f1575f80fd5b50610305610300366004612f95565b610bb1565b6040805182516001600160a01b0316815260208084015162ffffff16908201529181015163ffffffff16908201526060016102b5565b348015610346575f80fd5b5061026c610355366004612fc1565b610c9d565b61026c610368366004612ff0565b610eb2565b348015610378575f80fd5b50610381610ed1565b6040519081526020016102b5565b34801561039a575f80fd5b5061026c6103a93660046130f3565b610eec565b3480156103b9575f80fd5b5061026c6103c8366004612fc1565b610fa4565b3480156103d8575f80fd5b505f805160206135398339815191525460ff165b60405190151581526020016102b5565b348015610407575f80fd5b5061041b61041636600461315a565b6111ed565b6040516102b591906131c5565b348015610433575f80fd5b506103ec610442366004612f95565b6001600160a01b03165f9081526001602052604090205460ff1690565b34801561046a575f80fd5b5061026c611204565b34801561047e575f80fd5b5061026c61048d366004612f95565b611215565b34801561049d575f80fd5b5061026c611356565b3480156104b1575f80fd5b5061026c6104c03660046131d3565b61139e565b3480156104d0575f80fd5b5061026c611451565b3480156104e4575f80fd5b5061026c6114f3565b3480156104f8575f80fd5b5061026c6105073660046130f3565b611503565b348015610517575f80fd5b506102a161160e565b34801561052b575f80fd5b5061026c61053a366004612f95565b611642565b34801561054a575f80fd5b506103056105593660046131f3565b611753565b348015610569575f80fd5b5061026c6105783660046131d3565b61183d565b348015610588575f80fd5b50610381610597366004612f95565b6118f1565b3480156105a7575f80fd5b506105cc604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516102b5919061325d565b3480156105e4575f80fd5b5061041b6105f33660046131f3565b611911565b348015610603575f80fd5b50610637610612366004612f95565b6001600160a01b03165f90815260016020526040902054610100900463ffffffff1690565b60405163ffffffff90911681526020016102b5565b348015610657575f80fd5b5061026c610666366004612f95565b611928565b348015610676575f80fd5b50610381610685366004612f95565b611b19565b348015610695575f80fd5b5061026c6106a4366004612f95565b611b39565b3480156106b4575f80fd5b5061026c6106c3366004612f95565b611c4a565b3480156106d3575f80fd5b5061026c6106e23660046130f3565b611dfd565b3480156106f2575f80fd5b50600654600160201b900460ff165b60405160ff90911681526020016102b5565b34801561071e575f80fd5b5061063761072d366004612f95565b6001600160a01b03165f90815260208190526040902054600160281b900463ffffffff1690565b34801561075f575f80fd5b5061026c61076e366004612fc1565b611ed7565b34801561077e575f80fd5b5061026c61078d366004612f95565b611fa7565b34801561079d575f80fd5b506006546106379063ffffffff1681565b3480156107b9575f80fd5b506102a16120aa565b3480156107cd575f80fd5b506103ec6107dc366004612f95565b6001600160a01b03165f9081526020819052604090205460ff1690565b348015610804575f80fd5b5061026c610813366004612f95565b6120d2565b348015610823575f80fd5b50600654600160281b900460ff16610701565b335f8181526020819052604090205460ff166108755760405163b536580760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b61087d612157565b5f61088b6020840184612f95565b6001600160a01b0316036108d25760405162461bcd60e51b815260206004820152600e60248201526d064657374696e6174696f6e213d360941b604482015260640161086c565b629896806108e6604084016020850161329f565b62ffffff16111561092f5760405162461bcd60e51b815260206004820152601360248201527206d61784d62697073213d3e313030303030303606c1b604482015260640161086c565b5f610940604084016020850161329f565b62ffffff16116109805760405162461bcd60e51b815260206004820152600b60248201526a06d61784d62697073213d360ac1b604482015260640161086c565b60025463ffffffff8111156109c25760405162461bcd60e51b81526020600482015260086024820152674f766572666c6f7760c01b604482015260640161086c565b600280546001810182555f9190915283907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace016109ff82826132ba565b50505f610a093390565b6001600160a01b0381165f81815260208181526040909120805464ffffffff00191661010063ffffffff8816021781559293507ff83560c52fae7525e369b176773b2388c82c3538dea009c1c5fca741d5d613a090610a6a90880188612f95565b610a7a6040890160208a0161329f565b610a8a60608a0160408b01612fc1565b604080516001600160a01b03909416845262ffffff909216602084015263ffffffff16908201526060015b60405180910390a25050505050565b610acc612187565b610ad46121b9565b565b60025f610ae1612218565b8054909150600160401b900460ff1680610b095750805467ffffffffffffffff808416911610155b15610b275760405163f92ee8a960e01b815260040160405180910390fd5b8054600160401b67ffffffffffffffff841668ffffffffffffffffff1990921682171782556002805460010181555f526006805465ffffffffffff191665050500093a80179055815460ff60401b191682556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2906020015b60405180910390a15050565b604080516060810182525f80825260208083018290528284018290526001600160a01b03851682528190529190912054610100900463ffffffff1680610c305760405162461bcd60e51b815260206004820152601460248201527314db185cda1a5b99c81b9bdd08195b98589b195960621b604482015260640161086c565b60028163ffffffff1681548110610c4957610c49613347565b5f9182526020918290206040805160608101825291909201546001600160a01b038116825262ffffff600160a01b8204169382019390935263ffffffff600160b81b90930492909216908201529392505050565b610ca5612157565b335f8181526020819052604090205460ff16610cdf5760405163b536580760e01b81526001600160a01b038216600482015260240161086c565b5f8263ffffffff1611610d345760405162461bcd60e51b815260206004820152601960248201527f44656c6179206d757374206265206d6f7265207468616e203000000000000000604482015260640161086c565b335f81815260056020526040812090610d4c82612240565b90505f5b81811015610e47578563ffffffff1660015f610d75848761224990919063ffffffff16565b6001600160a01b0316815260208101919091526040015f2054610100900463ffffffff161015610e3f5760405162461bcd60e51b815260206004820152606360248201527f536572766963652773206d696e696d756d207769746864726177616c2064656c60448201527f6179206d757374206265206c657373207468616e206f7220657175616c20746f60648201527f20616374697665206f70657261746f722773207769746864726177616c2064656084820152626c617960e81b60a482015260c40161086c565b600101610d50565b506001600160a01b0383165f8181526020818152604091829020805468ffffffff00000000001916600160281b63ffffffff8b169081029190911790915591519182527f12cae11e6575143dc91be041916646a29e4e9af609b96be54454d8ca825b16449101610ab5565b610eba612254565b610ec3826122f8565b610ecd8282612300565b5050565b5f610eda6123c1565b505f8051602061351983398151915290565b610ef4612157565b335f8181526020819052604090205460ff1680610f2857506001600160a01b0381165f9081526001602052604090205460ff165b610f655760405162461bcd60e51b815260206004820152600e60248201526d139bdd081c9959da5cdd195c995960921b604482015260640161086c565b806001600160a01b03167f6c1850fce35387a891e82ca88e975790ab6f0709e9ed6842e01397f296012a7e86868686604051610ab59493929190613383565b610fac612157565b335f8181526001602052604090205460ff16610fe65760405163a3a66a1760e01b81526001600160a01b038216600482015260240161086c565b60065463ffffffff90811690831610156110745760405162461bcd60e51b815260206004820152604360248201527f44656c6179206d757374206265206174206c65617374206d6f7265207468616e60448201527f206f7220657175616c20746f2064656661756c745769746864726177616c44656064820152626c617960e81b608482015260a40161086c565b335f8181526004602052604081209061108c82612240565b90505f5b81811015611186578563ffffffff165f806110b4848761224990919063ffffffff16565b6001600160a01b0316815260208101919091526040015f2054600160281b900463ffffffff16111561117e5760405162461bcd60e51b815260206004820152606160248201527f4f70657261746f72207769746864726177616c2064656c6179206d757374206260448201527f65206d6f7265207468616e206f7220657175616c20746f20616374697665207360648201527f6572766963652773206d696e696d756d207769746864726177616c2064656c616084820152607960f81b60a482015260c40161086c565b600101611090565b506001600160a01b0383165f81815260016020908152604091829020805464ffffffff00191661010063ffffffff8b169081029190911790915591519182527f8accf516e9dcf834aa25a580b9beb0b2444e5a35b3162fc21cfd49565bed0a4a9101610ab5565b5f806111f9848461240a565b519150505b92915050565b61120c612187565b610ad45f61244f565b335f8181526001602052604090205460ff1661124f5760405163a3a66a1760e01b81526001600160a01b038216600482015260240161086c565b611257612157565b335f611263848361240a565b905060018151600381111561127a5761127a613191565b146112c75760405162461bcd60e51b815260206004820152601760248201527f52656c6174696f6e73686970206e6f7420616374697665000000000000000000604482015260640161086c565b6001600160a01b0384165f90815260208181526040909120549082015163ffffffff6101009092048216911681036113385760405162461bcd60e51b815260206004820152601460248201527314db185cda1a5b99c81b9bdd081d5c19185d195960621b604482015260640161086c565b63ffffffff8116602083015261134f858484612487565b5050505050565b33806113606120aa565b6001600160a01b0316146113925760405163118cdaa760e01b81526001600160a01b038216600482015260240161086c565b61139b8161244f565b50565b6113a6612187565b5f8160ff16116113c85760405162461bcd60e51b815260040161086c906133b4565b60065460ff600160201b909104811690821681106113f85760405162461bcd60e51b815260040161086c90613403565b6006805464ff000000001916600160201b60ff8581169182029290921790925560408051918416825260208201929092527f9970a620521c7aa30265e01b9d490c9e9802074a8b9015fed1af3665bbc083aa9101610ba5565b335f8181526020819052604090205460ff1661148b5760405163b536580760e01b81526001600160a01b038216600482015260240161086c565b611493612157565b335f81815260208181526040808320805464ffffffff00191681558151848152928301849052828201939093525183917ff83560c52fae7525e369b176773b2388c82c3538dea009c1c5fca741d5d613a0919081900360600190a2505050565b6114fb612187565b610ad4612670565b61150b612157565b335f818152600160205260409020805460ff16156115605760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b604482015260640161086c565b805460ff1981166001908117835560065463ffffffff166101000264ffffffffff19909216919091171781556040516001600160a01b038316907f4d0eb1f4bac8744fd2be119845e23b3befc88094b42bcda1204c65694a00f9e5905f90a2816001600160a01b03167f6c1850fce35387a891e82ca88e975790ab6f0709e9ed6842e01397f296012a7e878787876040516115fe9493929190613383565b60405180910390a2505050505050565b5f807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b335f8181526020819052604090205460ff1661167c5760405163b536580760e01b81526001600160a01b038216600482015260240161086c565b6001600160a01b0382165f90815260016020526040902054829060ff166116c15760405163a3a66a1760e01b81526001600160a01b038216600482015260240161086c565b335f6116cd828661240a565b90505f815160038111156116e3576116e3613191565b036117235760405162461bcd60e51b815260206004820152601060248201526f416c726561647920696e61637469766560801b604482015260640161086c565b61134f828660405180604001604052805f600381111561174557611745613191565b81525f602090910152612487565b604080516060810182525f808252602082018190529181018290529061177a8585856126b8565b6020015190505f8163ffffffff16116117cc5760405162461bcd60e51b815260206004820152601460248201527314db185cda1a5b99c81b9bdd08195b98589b195960621b604482015260640161086c565b60028163ffffffff16815481106117e5576117e5613347565b5f9182526020918290206040805160608101825291909201546001600160a01b038116825262ffffff600160a01b8204169382019390935263ffffffff600160b81b90930492909216908201529150505b9392505050565b611845612187565b5f8160ff16116118675760405162461bcd60e51b815260040161086c906133b4565b60065460ff600160281b909104811690821681106118975760405162461bcd60e51b815260040161086c90613403565b6006805465ff00000000001916600160281b60ff8581169182029290921790925560408051918416825260208201929092527f4e2399155205fd27a6de74fcaa614db3a3bc3edaf989234fb34032f0920f39cd9101610ba5565b6001600160a01b0381165f9081526005602052604081206111fe90612240565b5f8061191e8585856126b8565b5195945050505050565b335f8181526020819052604090205460ff166119625760405163b536580760e01b81526001600160a01b038216600482015260240161086c565b6001600160a01b0382165f90815260016020526040902054829060ff166119a75760405163a3a66a1760e01b81526001600160a01b038216600482015260240161086c565b335f6119b3828661240a565b90506001815160038111156119ca576119ca613191565b03611a085760405162461bcd60e51b815260206004820152600e60248201526d416c72656164792061637469766560901b604482015260640161086c565b600381516003811115611a1d57611a1d613191565b03611a5e5760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e481a5b9a5d1a585d1959607a1b604482015260640161086c565b5f81516003811115611a7257611a72613191565b03611a805760038152611b0e565b600281516003811115611a9557611a95613191565b03611ad557600181526001600160a01b0382165f9081526020818152604090912054610100900463ffffffff1690820152611ad082866126ff565b611b0e565b60405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642073746174757360901b604482015260640161086c565b61134f828683612487565b6001600160a01b0381165f9081526004602052604081206111fe90612240565b5f611b42612218565b805490915060ff600160401b820416159067ffffffffffffffff165f81158015611b695750825b90505f8267ffffffffffffffff166001148015611b855750303b155b905081158015611b93575080155b15611bb15760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315611bdb57845460ff60401b1916600160401b1785555b611be48661278c565b611bec61279d565b611bf461279d565b611bfc61279d565b8315611c4257845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b335f8181526001602052604090205460ff16611c845760405163a3a66a1760e01b81526001600160a01b038216600482015260240161086c565b6001600160a01b0382165f90815260208190526040902054829060ff16611cc95760405163b536580760e01b81526001600160a01b038216600482015260240161086c565b335f611cd5858361240a565b9050600181516003811115611cec57611cec613191565b03611d2a5760405162461bcd60e51b815260206004820152600e60248201526d416c72656164792061637469766560901b604482015260640161086c565b600281516003811115611d3f57611d3f613191565b03611d805760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e481a5b9a5d1a585d1959607a1b604482015260640161086c565b5f81516003811115611d9457611d94613191565b03611da25760028152611df2565b600381516003811115611db757611db7613191565b03611ad557600181526001600160a01b0385165f9081526020818152604090912054610100900463ffffffff1690820152611df285836126ff565b61134f858383612487565b611e05612157565b335f818152602081905260409020805460ff1615611e5a5760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b604482015260640161086c565b805460ff191660011781556040516001600160a01b038316907f2fa31fbaacf5eaf61d648ea7528ada6efb69bfb06d2c3bd35ce511a820fce53e905f90a2816001600160a01b03167f6c1850fce35387a891e82ca88e975790ab6f0709e9ed6842e01397f296012a7e878787876040516115fe9493929190613383565b611edf612187565b620151808163ffffffff161015611f535760405162461bcd60e51b815260206004820152603260248201527f44656c6179206d757374206265206174206c65617374206d6f7265207468616e604482015271206f7220657175616c20746f20312064617960701b606482015260840161086c565b6006805463ffffffff83811663ffffffff1983168117909355604080519190921680825260208201939093527f7d96978277a4acf1fa8af376bc53af1059e1b5e52b97732645e8bf570bd852fd9101610ba5565b335f8181526001602052604090205460ff16611fe15760405163a3a66a1760e01b81526001600160a01b038216600482015260240161086c565b6001600160a01b0382165f90815260208190526040902054829060ff166120265760405163b536580760e01b81526001600160a01b038216600482015260240161086c565b335f612032858361240a565b90505f8151600381111561204857612048613191565b036120885760405162461bcd60e51b815260206004820152601060248201526f416c726561647920696e61637469766560801b604482015260640161086c565b61134f858360405180604001604052805f600381111561174557611745613191565b5f807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00611632565b6120da612187565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b038316908117825561211e61160e565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b5f805160206135398339815191525460ff1615610ad45760405163d93c066560e01b815260040160405180910390fd5b3361219061160e565b6001600160a01b031614610ad45760405163118cdaa760e01b815233600482015260240161086c565b6121c16127a5565b5f80516020613539833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a006111fe565b5f6111fe825490565b5f61183683836127d4565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806122da57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166122ce5f80516020613519833981519152546001600160a01b031690565b6001600160a01b031614155b15610ad45760405163703e46dd60e11b815260040160405180910390fd5b61139b612187565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561235a575060408051601f3d908101601f1916820190925261235791810190613458565b60015b61238257604051634c9c8ce360e01b81526001600160a01b038316600482015260240161086c565b5f8051602061351983398151915281146123b257604051632a87526960e21b81526004810182905260240161086c565b6123bc83836127fa565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ad45760405163703e46dd60e11b815260040160405180910390fd5b604080518082019091525f8082526020820152606083811b5f9081529083901b60145260288120808252600360205260409091206124479061284f565b949350505050565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155610ecd82612877565b61248f612157565b606083811b5f9081529083901b60145260288120808252600360205260409091206124bb9042846128e7565b6001825160038111156124d0576124d0613191565b036125b8576006546001600160a01b0384165f908152600460205260409020600160281b90910460ff169061250490612240565b106125225760405163bd9b74ad60e01b815260040160405180910390fd5b6006546001600160a01b0385165f908152600560205260409020600160201b90910460ff169061255190612240565b1061256f5760405163ba11b6e760e01b815260040160405180910390fd5b6001600160a01b0383165f9081526004602052604090206125909085612906565b506001600160a01b0384165f9081526005602052604090206125b29084612906565b50612616565b5f825160038111156125cc576125cc613191565b03612616576001600160a01b0383165f9081526004602052604090206125f2908561291a565b506001600160a01b0384165f908152600560205260409020612614908461291a565b505b826001600160a01b0316846001600160a01b03167f21765f04287d7845df78e83515630836500dd5e89d866d34751b5177a96da4c6845f0151856020015160405161266292919061346f565b60405180910390a350505050565b612678612157565b5f80516020613539833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336121fa565b604080518082019091525f8082526020820152606084811b5f9081529084901b60145260288120808252600360205260409091206126f6908461292e565b95945050505050565b6001600160a01b038082165f9081526001602090815260408083205493861683529082905290205463ffffffff610100909204821691600160281b90910416808210156127865760405163650a1a9160e01b81526001600160a01b0380861660048301528416602482015263ffffffff80841660448301528216606482015260840161086c565b50505050565b612794612957565b61139b8161297c565b610ad4612957565b5f805160206135398339815191525460ff16610ad457604051638dfc202b60e01b815260040160405180910390fd5b5f825f0182815481106127e9576127e9613347565b905f5260205f200154905092915050565b612803826129ad565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115612847576123bc8282612a10565b610ecd612a79565b604080518082019091525f80825260208201525f61286c83612a98565b905061183681612adc565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f6128f9825f01518360200151612b55565b9050611c42848483612b84565b5f611836836001600160a01b038416612b9e565b5f611836836001600160a01b038416612bea565b604080518082019091525f80825260208201525f61294c8484612ccd565b905061244781612adc565b61295f612d15565b610ad457604051631afcd79f60e31b815260040160405180910390fd5b612984612957565b6001600160a01b03811661139257604051631e4fbdf760e01b81525f600482015260240161086c565b806001600160a01b03163b5f036129e257604051634c9c8ce360e01b81526001600160a01b038216600482015260240161086c565b5f8051602061351983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051612a2c9190613490565b5f60405180830381855af49150503d805f8114612a64576040519150601f19603f3d011682016040523d82523d5f602084013e612a69565b606091505b50915091506126f6858383612d2e565b3415610ad45760405163b398979f60e01b815260040160405180910390fd5b80545f908015612ad457612abe83612ab16001846134bf565b5f91825260209091200190565b54600160201b90046001600160e01b0316611836565b5f9392505050565b604080518082019091525f8082526020820152604080518082019091525f80825260208201528260ff166003811115612b1757612b17613191565b81906003811115612b2a57612b2a613191565b90816003811115612b3d57612b3d613191565b90525060089290921c63ffffffff1660208301525090565b5f80836003811115612b6957612b69613191565b60ff1660089390931b64ffffffff0016929092179392505050565b5f80612b91858585612d8a565b915091505b935093915050565b5f818152600183016020526040812054612be357508154600181810184555f8481526020808220909301849055845484825282860190935260409020919091556111fe565b505f6111fe565b5f8181526001830160205260408120548015612cc4575f612c0c6001836134bf565b85549091505f90612c1f906001906134bf565b9050808214612c7e575f865f018281548110612c3d57612c3d613347565b905f5260205f200154905080875f018481548110612c5d57612c5d613347565b5f918252602080832090910192909255918252600188019052604090208390555b8554869080612c8f57612c8f6134d2565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f9055600193505050506111fe565b5f9150506111fe565b81545f9081612cde85858385612ece565b90508015612d0b57612cf585612ab16001846134bf565b54600160201b90046001600160e01b03166126f6565b505f949350505050565b5f612d1e612218565b54600160401b900460ff16919050565b606082612d4357612d3e82612f29565b611836565b8151158015612d5a57506001600160a01b0384163b155b15612d8357604051639996b31560e01b81526001600160a01b038516600482015260240161086c565b5080611836565b82545f9081908015612e76575f612da687612ab16001856134bf565b805490915063ffffffff80821691600160201b90046001600160e01b0316908816821115612de757604051632520601d60e01b815260040160405180910390fd5b8763ffffffff168263ffffffff1603612e1a57825463ffffffff16600160201b6001600160e01b03891602178355612e68565b6040805180820190915263ffffffff808a1682526001600160e01b03808a1660208085019182528d54600181018f555f8f81529190912094519151909216600160201b029216919091179101555b9450859350612b9692505050565b50506040805180820190915263ffffffff80851682526001600160e01b0380851660208085019182528854600181018a555f8a815291822095519251909316600160201b029190931617920191909155905081612b96565b5f5b81831015612f21575f612ee38484612f51565b5f8781526020902090915063ffffffff86169082015463ffffffff161115612f0d57809250612f1b565b612f188160016134e6565b93505b50612ed0565b509392505050565b805115612f3857805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b5f612f5f60028484186134f9565b611836908484166134e6565b5f60608284031215612f7b575f80fd5b50919050565b6001600160a01b038116811461139b575f80fd5b5f60208284031215612fa5575f80fd5b813561183681612f81565b63ffffffff8116811461139b575f80fd5b5f60208284031215612fd1575f80fd5b813561183681612fb0565b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215613001575f80fd5b823561300c81612f81565b9150602083013567ffffffffffffffff80821115613028575f80fd5b818501915085601f83011261303b575f80fd5b81358181111561304d5761304d612fdc565b604051601f8201601f19908116603f0116810190838211818310171561307557613075612fdc565b8160405282815288602084870101111561308d575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f8083601f8401126130be575f80fd5b50813567ffffffffffffffff8111156130d5575f80fd5b6020830191508360208285010111156130ec575f80fd5b9250929050565b5f805f8060408587031215613106575f80fd5b843567ffffffffffffffff8082111561311d575f80fd5b613129888389016130ae565b90965094506020870135915080821115613141575f80fd5b5061314e878288016130ae565b95989497509550505050565b5f806040838503121561316b575f80fd5b823561317681612f81565b9150602083013561318681612f81565b809150509250929050565b634e487b7160e01b5f52602160045260245ffd5b600481106131c157634e487b7160e01b5f52602160045260245ffd5b9052565b602081016111fe82846131a5565b5f602082840312156131e3575f80fd5b813560ff81168114611836575f80fd5b5f805f60608486031215613205575f80fd5b833561321081612f81565b9250602084013561322081612f81565b9150604084013561323081612fb0565b809150509250925092565b5f5b8381101561325557818101518382015260200161323d565b50505f910152565b602081525f825180602084015261327b81604085016020870161323b565b601f01601f19169190910160400192915050565b62ffffff8116811461139b575f80fd5b5f602082840312156132af575f80fd5b81356118368161328f565b81356132c581612f81565b81546001600160a01b031981166001600160a01b0392909216918217835560208401356132f18161328f565b62ffffff60a01b60a09190911b166001600160b81b03198216831781178455604085013561331e81612fb0565b6001600160d81b0319929092169092179190911760b89190911b63ffffffff60b81b1617905550565b634e487b7160e01b5f52603260045260245ffd5b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b604081525f61339660408301868861335b565b82810360208401526133a981858761335b565b979650505050505050565b6020808252602f908201527f4d6178206163746976652072656c6174696f6e7368697073206d75737420626560408201526e02067726561746572207468616e203608c1b606082015260800190565b60208082526035908201527f4d6178206163746976652072656c6174696f6e7368697073206d7573742062656040820152740819dc99585d195c881d1a185b8818dd5c9c995b9d605a1b606082015260800190565b5f60208284031215613468575f80fd5b5051919050565b6040810161347d82856131a5565b63ffffffff831660208301529392505050565b5f82516134a181846020870161323b565b9190910192915050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156111fe576111fe6134ab565b634e487b7160e01b5f52603160045260245ffd5b808201808211156111fe576111fe6134ab565b5f8261351357634e487b7160e01b5f52601260045260245ffd5b50049056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220b3aa22cfd764d7ba3a1e2fc4c13799d0c104f4dce909d9df14e9f4ba0c315a1864736f6c6343000818003360e06040523060805234801562000014575f80fd5b5060405162001cac38038062001cac83398101604081905262000037916200012f565b6200004162000066565b6001600160a01b0380831660a052811660c0526200005e62000066565b50506200016c565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000b75760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001175780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6001600160a01b038116811462000117575f80fd5b5f806040838503121562000141575f80fd5b82516200014e816200011a565b602084015190925062000161816200011a565b809150509250929050565b60805160a05160c051611af2620001ba5f395f818161011a0152610bd701525f81816101850152818161054701526106a701525f8181610990015281816109ba0152610b0d0152611af25ff3fe60806040526004361062000103575f3560e01c806379ba50971162000092578063c3477e98116200005e578063c3477e9814620002d6578063c4d66de814620002fa578063e30c3978146200031e578063f2fde38b1462000335575f80fd5b806379ba509714620002505780638456cb5914620002675780638da5cb5b146200027e578063ad3cb1cc1462000295575f80fd5b806352d1902d11620000d257806352d1902d14620001be5780635c975abb14620001e4578063715018a61462000215578063796d5836146200022c575f80fd5b806306433b1b14620001075780633f4ba83a146200015957806349493a4d14620001725780634f1ef28614620001a7575b5f80fd5b34801562000113575f80fd5b506200013c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801562000165575f80fd5b506200017062000359565b005b3480156200017e575f80fd5b506200013c7f000000000000000000000000000000000000000000000000000000000000000081565b62000170620001b8366004620010b6565b6200036f565b348015620001ca575f80fd5b50620001d562000394565b60405190815260200162000150565b348015620001f0575f80fd5b505f8051602062001a9d8339815191525460ff16604051901515815260200162000150565b34801562000221575f80fd5b5062000170620003b2565b34801562000238575f80fd5b506200013c6200024a36600462001165565b620003c7565b3480156200025c575f80fd5b5062000170620005ab565b34801562000273575f80fd5b5062000170620005fd565b3480156200028a575f80fd5b506200013c62000611565b348015620002a1575f80fd5b50620002c7604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516200015091906200123c565b348015620002e2575f80fd5b506200013c620002f436600462001271565b62000645565b34801562000306575f80fd5b50620001706200031836600462001300565b62000707565b3480156200032a575f80fd5b506200013c6200083b565b34801562000341575f80fd5b50620001706200035336600462001300565b62000864565b62000363620008ed565b6200036d62000923565b565b6200037962000985565b620003848262000a2d565b62000390828262000a37565b5050565b5f6200039f62000b02565b505f8051602062001a7d83398151915290565b620003bc620008ed565b6200036d5f62000b4c565b5f620003d262000b86565b620003dd3362000bb8565b5f3390505f8686896001600160a01b03166306fdde036040518163ffffffff1660e01b81526004015f60405180830381865afa15801562000420573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526200044991908101906200131e565b6040516020016200045d9392919062001390565b60405160208183030381529060405290505f85858a6001600160a01b03166395d89b416040518163ffffffff1660e01b81526004015f60405180830381865afa158015620004ad573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052620004d691908101906200131e565b604051602001620004ea93929190620013d6565b60405160208183030381529060405290505f8984848460405160240162000515949392919062001417565b60408051601f198184030181529181526020820180516001600160e01b031663100b506960e11b179052519091505f907f0000000000000000000000000000000000000000000000000000000000000000908390620005749062000fe1565b6200058192919062001463565b604051809103905ff0801580156200059b573d5f803e3d5ffd5b509b9a5050505050505050505050565b3380620005b76200083b565b6001600160a01b031614620005ef5760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b620005fa8162000b4c565b50565b62000607620008ed565b6200036d62000c6d565b5f807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b5f62000650620008ed565b6200065b8462000bb8565b5f8585858560405160240162000675949392919062001417565b60408051601f198184030181529181526020820180516001600160e01b031663100b506960e11b179052519091505f907f0000000000000000000000000000000000000000000000000000000000000000908390620006d49062000fe1565b620006e192919062001463565b604051809103905ff080158015620006fb573d5f803e3d5ffd5b50979650505050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156200074d5750825b90505f8267ffffffffffffffff1660011480156200076a5750303b155b90508115801562000779575080155b15620007985760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315620007c357845460ff60401b1916600160401b1785555b620007ce8662000cb9565b620007d862000cce565b620007e262000cce565b620007ec62000cce565b83156200083357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b5f807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0062000635565b6200086e620008ed565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b0383169081178255620008b462000611565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b33620008f862000611565b6001600160a01b0316146200036d5760405163118cdaa760e01b8152336004820152602401620005e6565b6200092d62000cd8565b5f8051602062001a9d833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148062000a0e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662000a025f8051602062001a7d833981519152546001600160a01b031690565b6001600160a01b031614155b156200036d5760405163703e46dd60e11b815260040160405180910390fd5b620005fa620008ed565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801562000a94575060408051601f3d908101601f1916820190925262000a919181019062001490565b60015b62000abe57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401620005e6565b5f8051602062001a7d833981519152811462000af157604051632a87526960e21b815260048101829052602401620005e6565b62000afd838362000d09565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146200036d5760405163703e46dd60e11b815260040160405180910390fd5b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155620003908262000d65565b5f8051602062001a9d8339815191525460ff16156200036d5760405163d93c066560e01b815260040160405180910390fd5b6040516336b87bd760e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690636d70f7ae90602401602060405180830381865afa15801562000c1d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000c439190620014a8565b620005fa57604051633b63649d60e11b81526001600160a01b0382166004820152602401620005e6565b62000c7762000b86565b5f8051602062001a9d833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583362000967565b62000cc362000dd5565b620005fa8162000e1f565b6200036d62000dd5565b5f8051602062001a9d8339815191525460ff166200036d57604051638dfc202b60e01b815260040160405180910390fd5b62000d148262000e54565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511562000d5b5762000afd828262000eba565b6200039062000f32565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166200036d57604051631afcd79f60e31b815260040160405180910390fd5b62000e2962000dd5565b6001600160a01b038116620005ef57604051631e4fbdf760e01b81525f6004820152602401620005e6565b806001600160a01b03163b5f0362000e8b57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401620005e6565b5f8051602062001a7d83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b03168460405162000ed89190620014c9565b5f60405180830381855af49150503d805f811462000f12576040519150601f19603f3d011682016040523d82523d5f602084013e62000f17565b606091505b509150915062000f2985838362000f52565b95945050505050565b34156200036d5760405163b398979f60e01b815260040160405180910390fd5b60608262000f6b5762000f658262000fb8565b62000fb1565b815115801562000f8357506001600160a01b0384163b155b1562000fae57604051639996b31560e01b81526001600160a01b0385166004820152602401620005e6565b50805b9392505050565b80511562000fc857805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b61059680620014e783390190565b6001600160a01b0381168114620005fa575f80fd5b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171562001044576200104462001004565b604052919050565b5f67ffffffffffffffff82111562001068576200106862001004565b50601f01601f191660200190565b5f6200108c62001086846200104c565b62001018565b9050828152838383011115620010a0575f80fd5b828260208301375f602084830101529392505050565b5f8060408385031215620010c8575f80fd5b8235620010d58162000fef565b9150602083013567ffffffffffffffff811115620010f1575f80fd5b8301601f8101851362001102575f80fd5b620011138582356020840162001076565b9150509250929050565b5f8083601f8401126200112e575f80fd5b50813567ffffffffffffffff81111562001146575f80fd5b6020830191508360208285010111156200115e575f80fd5b9250929050565b5f805f805f606086880312156200117a575f80fd5b8535620011878162000fef565b9450602086013567ffffffffffffffff80821115620011a4575f80fd5b620011b289838a016200111d565b90965094506040880135915080821115620011cb575f80fd5b50620011da888289016200111d565b969995985093965092949392505050565b5f5b8381101562001207578181015183820152602001620011ed565b50505f910152565b5f815180845262001228816020860160208601620011eb565b601f01601f19169290920160200192915050565b602081525f62000fb160208301846200120f565b5f82601f83011262001260575f80fd5b62000fb18383356020850162001076565b5f805f806080858703121562001285575f80fd5b8435620012928162000fef565b93506020850135620012a48162000fef565b9250604085013567ffffffffffffffff80821115620012c1575f80fd5b620012cf8883890162001250565b93506060870135915080821115620012e5575f80fd5b50620012f48782880162001250565b91505092959194509250565b5f6020828403121562001311575f80fd5b813562000fb18162000fef565b5f602082840312156200132f575f80fd5b815167ffffffffffffffff81111562001346575f80fd5b8201601f8101841362001357575f80fd5b80516200136862001086826200104c565b8181528560208385010111156200137d575f80fd5b62000f29826020830160208601620011eb565b6802932b9ba30b5b2b2160bd1b8152828460098301375f838201600160fd1b60098201528351620013c981600a840160208801620011eb565b01600a0195945050505050565b6339b0ba1760e11b8152828460048301375f838201601760f91b600482015283516200140a816005840160208801620011eb565b0160050195945050505050565b6001600160a01b038581168252841660208201526080604082018190525f9062001444908301856200120f565b82810360608401526200145881856200120f565b979650505050505050565b6001600160a01b03831681526040602082018190525f9062001488908301846200120f565b949350505050565b5f60208284031215620014a1575f80fd5b5051919050565b5f60208284031215620014b9575f80fd5b8151801515811462000fb1575f80fd5b5f8251620014dc818460208701620011eb565b919091019291505056fe60a060405260405161059638038061059683398101604081905261002291610375565b61002c828261003e565b506001600160a01b0316608052610464565b610047826100fb565b6040516001600160a01b038316907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e905f90a28051156100ef576100ea826001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100e49190610430565b82610209565b505050565b6100f761027c565b5050565b806001600160a01b03163b5f0361013557604051631933b43b60e21b81526001600160a01b03821660048201526024015b60405180910390fd5b807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392831617905560408051635c60da1b60e01b815290515f92841691635c60da1b9160048083019260209291908290030181865afa1580156101ae573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101d29190610430565b9050806001600160a01b03163b5f036100f757604051634c9c8ce360e01b81526001600160a01b038216600482015260240161012c565b60605f80846001600160a01b0316846040516102259190610449565b5f60405180830381855af49150503d805f811461025d576040519150601f19603f3d011682016040523d82523d5f602084013e610262565b606091505b50909250905061027385838361029d565b95945050505050565b341561029b5760405163b398979f60e01b815260040160405180910390fd5b565b6060826102b2576102ad826102fc565b6102f5565b81511580156102c957506001600160a01b0384163b155b156102f257604051639996b31560e01b81526001600160a01b038516600482015260240161012c565b50805b9392505050565b80511561030b57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b80516001600160a01b038116811461033a575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561036d578181015183820152602001610355565b50505f910152565b5f8060408385031215610386575f80fd5b61038f83610324565b60208401519092506001600160401b03808211156103ab575f80fd5b818501915085601f8301126103be575f80fd5b8151818111156103d0576103d061033f565b604051601f8201601f19908116603f011681019083821181831017156103f8576103f861033f565b81604052828152886020848701011115610410575f80fd5b610421836020830160208801610353565b80955050505050509250929050565b5f60208284031215610440575f80fd5b6102f582610324565b5f825161045a818460208701610353565b9190910192915050565b60805161011b61047b5f395f601d015261011b5ff3fe6080604052600a600c565b005b60186014601a565b609d565b565b5f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156076573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906098919060ba565b905090565b365f80375f80365f845af43d5f803e80801560b6573d5ff35b3d5ffd5b5f6020828403121560c9575f80fd5b81516001600160a01b038116811460de575f80fd5b939250505056fea26469706673582212202f0906197967ccac7a412bcc4d0a64fbd96a9545518e318c31e125be1264a2af64736f6c63430008180033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a26469706673582212201da8b3f0f7b42ec16d951270fb3d52b5ec0bd4384ffe06f3090fef52839eb10264736f6c6343000818003360a06040523060805234801562000014575f80fd5b506200001f6200002f565b620000296200002f565b620000e3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000805760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000e05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051611f146200010a5f395f8181610f1901528181610f4201526110860152611f145ff3fe6080604052600436106100fa575f3560e01c80637733369c11610092578063ad3cb1cc11610062578063ad3cb1cc1461027b578063c4d66de8146102b8578063d4fac45d146102d7578063e30c39781461031b578063f2fde38b1461032f575f80fd5b80637733369c1461020857806379ba5097146102275780638456cb591461023b5780638da5cb5b1461024f575f80fd5b80635c975abb116100cd5780635c975abb1461016d5780635e04f87e1461019b5780636fdaf166146101d5578063715018a6146101f4575f80fd5b80633f4ba83a146100fe57806340b3a4bf146101145780634f1ef2861461013357806352d1902d14610146575b5f80fd5b348015610109575f80fd5b5061011261034e565b005b34801561011f575f80fd5b5061011261012e366004611add565b610360565b610112610141366004611b21565b6104cf565b348015610151575f80fd5b5061015a6104ee565b6040519081526020015b60405180910390f35b348015610178575f80fd5b505f80516020611ebf8339815191525460ff166040519015158152602001610164565b3480156101a6575f80fd5b506101ba6101b5366004611bdd565b610509565b60408051825181526020928301519281019290925201610164565b3480156101e0575f80fd5b506101126101ef366004611c0e565b610556565b3480156101ff575f80fd5b50610112610b4e565b348015610213575f80fd5b5061015a610222366004611c46565b610b5f565b348015610232575f80fd5b50610112610b96565b348015610246575f80fd5b50610112610bde565b34801561025a575f80fd5b50610263610bee565b6040516001600160a01b039091168152602001610164565b348015610286575f80fd5b506102ab604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101649190611ca8565b3480156102c3575f80fd5b506101126102d2366004611cda565b610c22565b3480156102e2575f80fd5b5061015a6102f1366004611bdd565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b348015610326575f80fd5b50610263610d33565b34801561033a575f80fd5b50610112610349366004611cda565b610d5b565b610356610de0565b61035e610e12565b565b610368610e71565b806103ba5760405162461bcd60e51b815260206004820152601b60248201527f4d65726b6c6520726f6f742063616e6e6f7420626520656d707479000000000060448201526064015b60405180910390fd5b6001600160a01b0383166104105760405162461bcd60e51b815260206004820152601c60248201527f546f6b656e20616464726573732063616e6e6f74206265207a65726f0000000060448201526064016103b1565b33821561045f5761042384823086610ea1565b6001600160a01b038082165f90815260016020908152604080832093881683529290529081208054859290610459908490611d07565b90915550505b6001600160a01b038181165f81815260208181526040808320948916808452948252918290206001810180548255879055915187815291938693909290917f9b7287e3e899d95da564c38a8d18e3c3d2135143b3d53bd6fa257cd8a961afd9910160405180910390a45050505050565b6104d7610f0e565b6104e082610fb2565b6104ea8282610fba565b5050565b5f6104f761107b565b505f80516020611e9f83398151915290565b6040805180820182525f80825260209182018190526001600160a01b0385811682528183528382209085168252825282902082518084019093528054835260010154908201525b92915050565b61055e610e71565b5f61056f6040830160208401611cda565b6001600160a01b0316036105c55760405162461bcd60e51b815260206004820152601c60248201527f546f6b656e20616464726573732063616e6e6f74206265207a65726f0000000060448201526064016103b1565b5f8160400135116106185760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016103b1565b60808101356106695760405162461bcd60e51b815260206004820152601b60248201527f4d65726b6c6520726f6f742063616e6e6f7420626520656d707479000000000060448201526064016103b1565b5f80806106796020850185611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f8360200160208101906106ac9190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f20905080600101548260800135141580156106ea57508054608083013514155b15610742576106fc6020830183611cda565b61070c6040840160208501611cda565b60405163c9f7e85160e01b81526001600160a01b03928316600482015291166024820152608083013560448201526064016103b1565b335f6002816107546020870187611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f8560200160208101906107879190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f836001600160a01b03166001600160a01b031681526020019081526020015f2054905080846040013511610831576107e26020850185611cda565b6107f26040860160208701611cda565b6040805163ed7deb9d60e01b81526001600160a01b039384166004820152918316602483015291841660448201529085013560648201526084016103b1565b60408401358190035f60018161084a6020890189611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f87602001602081019061087d9190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f20549050818110156108f0576108b46020870187611cda565b6108c46040880160208901611cda565b604051630a542ddd60e31b81526001600160a01b039283166004820152911660248201526044016103b1565b61096d61090060a0880188611d1a565b808060200260200160405190810160405280939291908181526020018383602002808284375f92019190915250505050608088013561094560e08a0160c08b01611d67565b63ffffffff1661095c6101008b0160e08c01611d67565b63ffffffff16888b604001356110c4565b61098a5760405163582f497d60e11b815260040160405180910390fd5b81810360015f61099d60208a018a611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f8860200160208101906109d09190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f2081905550856040013560025f885f016020810190610a0d9190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f886020016020810190610a409190611cda565b6001600160a01b03166001600160a01b031681526020019081526020015f205f866001600160a01b03166001600160a01b031681526020019081526020015f2081905550610ab0866020016020810190610a9a9190611cda565b610aaa6080890160608a01611cda565b846110eb565b6001600160a01b038416610aca6040880160208901611cda565b6001600160a01b0316610ae06020890189611cda565b6001600160a01b03167f4ba395584971ca8c6ff7586af6bcfddf50b5c3cb179dd2be9cf9316578e24a16610b1a60808b0160608c01611cda565b604080516001600160a01b0390921682526020820188905260808c01359082015260600160405180910390a4505050505050565b610b56610de0565b61035e5f61111c565b6001600160a01b038084165f90815260026020908152604080832086851684528252808320938516835292905220545b9392505050565b3380610ba0610d33565b6001600160a01b031614610bd25760405163118cdaa760e01b81526001600160a01b03821660048201526024016103b1565b610bdb8161111c565b50565b610be6610de0565b61035e611154565b5f807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b5f610c2b61119c565b805490915060ff600160401b820416159067ffffffffffffffff165f81158015610c525750825b90505f8267ffffffffffffffff166001148015610c6e5750303b155b905081158015610c7c575080155b15610c9a5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610cc457845460ff60401b1916600160401b1785555b610ccd866111c4565b610cd56111d5565b610cdd6111d5565b610ce56111d5565b8315610d2b57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b5f807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00610c12565b610d63610de0565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b0383169081178255610da7610bee565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b33610de9610bee565b6001600160a01b03161461035e5760405163118cdaa760e01b81523360048201526024016103b1565b610e1a6111dd565b5f80516020611ebf833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b5f80516020611ebf8339815191525460ff161561035e5760405163d93c066560e01b815260040160405180910390fd5b6040516001600160a01b038481166024830152838116604483015260648201839052610f089186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061120c565b50505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610f9457507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610f885f80516020611e9f833981519152546001600160a01b031690565b6001600160a01b031614155b1561035e5760405163703e46dd60e11b815260040160405180910390fd5b610bdb610de0565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611014575060408051601f3d908101601f1916820190925261101191810190611d8a565b60015b61103c57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016103b1565b5f80516020611e9f833981519152811461106c57604051632a87526960e21b8152600481018290526024016103b1565b6110768383611278565b505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461035e5760405163703e46dd60e11b815260040160405180910390fd5b5f806110d084846112cd565b90506110df8888838989611336565b98975050505050505050565b6040516001600160a01b0383811660248301526044820183905261107691859182169063a9059cbb90606401610ed6565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b03191681556104ea8261134f565b61115c610e71565b5f80516020611ebf833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610e53565b5f807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610550565b6111cc6113bf565b610bdb816113e4565b61035e6113bf565b5f80516020611ebf8339815191525460ff1661035e57604051638dfc202b60e01b815260040160405180910390fd5b5f8060205f8451602086015f885af18061122b576040513d5f823e3d81fd5b50505f513d9150811561124257806001141561124f565b6001600160a01b0384163b155b15610f0857604051635274afe760e01b81526001600160a01b03851660048201526024016103b1565b61128182611415565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156112c5576110768282611478565b6104ea6114ea565b5f806112d884611509565b90505f6112e4846115b7565b905081816040516020016112f9929190611da1565b60408051601f1981840301815282825280516020918201209083015201604051602081830303815290604052805190602001209250505092915050565b5f8461134487868686611647565b149695505050505050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6113c76116e9565b61035e57604051631afcd79f60e31b815260040160405180910390fd5b6113ec6113bf565b6001600160a01b038116610bd257604051631e4fbdf760e01b81525f60048201526024016103b1565b806001600160a01b03163b5f0361144a57604051634c9c8ce360e01b81526001600160a01b03821660048201526024016103b1565b5f80516020611e9f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516114949190611dcf565b5f60405180830381855af49150503d805f81146114cc576040519150601f19603f3d011682016040523d82523d5f602084013e6114d1565b606091505b50915091506114e1858383611702565b95945050505050565b341561035e5760405163b398979f60e01b815260040160405180910390fd5b60605f6115158361175e565b6028602282012090915060601c60295b60018111156115ae57600782600f1611801561155a5750606083828151811061155057611550611dea565b016020015160f81c115b1561159757602060f81b83828151811061157657611576611dea565b0160200180516001600160f81b0319908116909218909116905f82901a9053505b60049190911c906115a781611dfe565b9050611525565b50909392505050565b60605f6115c383611774565b60010190505f8167ffffffffffffffff8111156115e2576115e2611b0d565b6040519080825280601f01601f19166020018201604052801561160c576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461161657509392505050565b5f8061165483600161184b565b905085518114611677576040516313717da960e21b815260040160405180910390fd5b8460015b875181116116de5761168e600287611e27565b5f036116b257815f526020810288015160205260405f2091506002860495506116cc565b602081028801515f528160205260405f2091506002860495505b806116d681611e3a565b91505061167b565b509695505050505050565b5f6116f261119c565b54600160401b900460ff16919050565b60608261171757611712826118f4565b610b8f565b815115801561172e57506001600160a01b0384163b155b1561175757604051639996b31560e01b81526001600160a01b03851660048201526024016103b1565b5080610b8f565b60606105506001600160a01b038316601461191c565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106117b25772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106117de576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106117fc57662386f26fc10000830492506010015b6305f5e1008310611814576305f5e100830492506008015b612710831061182857612710830492506004015b6064831061183a576064830492506002015b600a83106105505760010192915050565b5f806118ca845f60076fffffffffffffffffffffffffffffffff8311901b9050600667ffffffffffffffff83831c11901b17600563ffffffff83831c11901b17600461ffff83831c11901b17600360ff83831c11901b176002600f83831c116d010102020202030303030303030360801b911b9190911791821c1a1790565b90506118ec6118d884611a96565b80156118e7575084826001901b105b151590565b019392505050565b80511561190357805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b6060825f61192b846002611e52565b611936906002611d07565b67ffffffffffffffff81111561194e5761194e611b0d565b6040519080825280601f01601f191660200182016040528015611978576020820181803683370190505b509050600360fc1b815f8151811061199257611992611dea565b60200101906001600160f81b03191690815f1a905350600f60fb1b816001815181106119c0576119c0611dea565b60200101906001600160f81b03191690815f1a9053505f6119e2856002611e52565b6119ed906001611d07565b90505b6001811115611a64576f181899199a1a9b1b9c1cb0b131b232b360811b83600f1660108110611a2157611a21611dea565b1a60f81b828281518110611a3757611a37611dea565b60200101906001600160f81b03191690815f1a90535060049290921c91611a5d81611dfe565b90506119f0565b508115611a8e5760405163e22e27eb60e01b815260048101869052602481018590526044016103b1565b949350505050565b5f6002826003811115611aab57611aab611e69565b611ab59190611e7d565b60ff166001149050919050565b80356001600160a01b0381168114611ad8575f80fd5b919050565b5f805f60608486031215611aef575f80fd5b611af884611ac2565b95602085013595506040909401359392505050565b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215611b32575f80fd5b611b3b83611ac2565b9150602083013567ffffffffffffffff80821115611b57575f80fd5b818501915085601f830112611b6a575f80fd5b813581811115611b7c57611b7c611b0d565b604051601f8201601f19908116603f01168101908382118183101715611ba457611ba4611b0d565b81604052828152886020848701011115611bbc575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f8060408385031215611bee575f80fd5b611bf783611ac2565b9150611c0560208401611ac2565b90509250929050565b5f60208284031215611c1e575f80fd5b813567ffffffffffffffff811115611c34575f80fd5b82016101008185031215610b8f575f80fd5b5f805f60608486031215611c58575f80fd5b611c6184611ac2565b9250611c6f60208501611ac2565b9150611c7d60408501611ac2565b90509250925092565b5f5b83811015611ca0578181015183820152602001611c88565b50505f910152565b602081525f8251806020840152611cc6816040850160208701611c86565b601f01601f19169190910160400192915050565b5f60208284031215611cea575f80fd5b610b8f82611ac2565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561055057610550611cf3565b5f808335601e19843603018112611d2f575f80fd5b83018035915067ffffffffffffffff821115611d49575f80fd5b6020019150600581901b3603821315611d60575f80fd5b9250929050565b5f60208284031215611d77575f80fd5b813563ffffffff81168114610b8f575f80fd5b5f60208284031215611d9a575f80fd5b5051919050565b5f8351611db2818460208801611c86565b835190830190611dc6818360208801611c86565b01949350505050565b5f8251611de0818460208701611c86565b9190910192915050565b634e487b7160e01b5f52603260045260245ffd5b5f81611e0c57611e0c611cf3565b505f190190565b634e487b7160e01b5f52601260045260245ffd5b5f82611e3557611e35611e13565b500690565b5f60018201611e4b57611e4b611cf3565b5060010190565b808202811582820484141761055057610550611cf3565b634e487b7160e01b5f52602160045260245ffd5b5f60ff831680611e8f57611e8f611e13565b8060ff8416069150509291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a26469706673582212206a3ed852be7c0498a8e77e04bac3d43824a29f7bd0d71d11ee89e0297c0d205e64736f6c6343000818003360806040526040516103ef3803806103ef8339810160408190526100229161025d565b61002c8282610033565b5050610340565b61003c82610091565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a280511561008557610080828261010c565b505050565b61008d61017f565b5050565b806001600160a01b03163b5f036100cb57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516101289190610325565b5f60405180830381855af49150503d805f8114610160576040519150601f19603f3d011682016040523d82523d5f602084013e610165565b606091505b5090925090506101768583836101a0565b95945050505050565b341561019e5760405163b398979f60e01b815260040160405180910390fd5b565b6060826101b5576101b0826101ff565b6101f8565b81511580156101cc57506001600160a01b0384163b155b156101f557604051639996b31560e01b81526001600160a01b03851660048201526024016100c2565b50805b9392505050565b80511561020e57805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561025557818101518382015260200161023d565b50505f910152565b5f806040838503121561026e575f80fd5b82516001600160a01b0381168114610284575f80fd5b60208401519092506001600160401b03808211156102a0575f80fd5b818501915085601f8301126102b3575f80fd5b8151818111156102c5576102c5610227565b604051601f8201601f19908116603f011681019083821181831017156102ed576102ed610227565b81604052828152886020848701011115610305575f80fd5b61031683602083016020880161023b565b80955050505050509250929050565b5f825161033681846020870161023b565b9190910192915050565b60a38061034c5f395ff3fe6080604052600a600c565b005b60186014601a565b6050565b565b5f604b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b365f80375f80365f845af43d5f803e8080156069573d5ff35b3d5ffdfea2646970667358221220879fca8cef9be854e2d08226444d0e225b29a6332367166082c352309ecac5ef64736f6c63430008180033608060405234801561000f575f80fd5b5060405161042138038061042183398101604081905261002e9161015f565b806001600160a01b03811661005d57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61006681610077565b50610070826100c6565b5050610190565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806001600160a01b03163b5f036100fb5760405163211eb15960e21b81526001600160a01b0382166004820152602401610054565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b80516001600160a01b038116811461015a575f80fd5b919050565b5f8060408385031215610170575f80fd5b61017983610144565b915061018760208401610144565b90509250929050565b6102848061019d5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c80633659cfe6146100595780635c60da1b1461006e578063715018a6146100975780638da5cb5b1461009f578063f2fde38b146100af575b5f80fd5b61006c610067366004610221565b6100c2565b005b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61006c6100d6565b5f546001600160a01b031661007b565b61006c6100bd366004610221565b6100e9565b6100ca610128565b6100d381610154565b50565b6100de610128565b6100e75f6101d2565b565b6100f1610128565b6001600160a01b03811661011f57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100d3816101d2565b5f546001600160a01b031633146100e75760405163118cdaa760e01b8152336004820152602401610116565b806001600160a01b03163b5f036101895760405163211eb15960e21b81526001600160a01b0382166004820152602401610116565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f60208284031215610231575f80fd5b81356001600160a01b0381168114610247575f80fd5b939250505056fea26469706673582212203c232c460712e9535730678d47997a9d43475dd95a99257d6f0a8c7dd13a216364736f6c634300081800330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d616c6c2073686172657320756e6c6f636b61626c652061667465722066756c6c20756e77696e643e074ab914832eac7ed4f8b75017e824903d0ca7a254387fde9b09f3e0822e6fa26469706673582212208dfeb75c9eaf2cc7662c8364d1524296677ba6d419be0608787ca35646eed13864736f6c63430008180033",
    "sourceMap": "16215:7737:124:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16759:37;;;;;-1:-1:-1;;;;;16759:37:124;;;;;;-1:-1:-1;;;;;210:32:125;;;192:51;;180:2;165:18;16759:37:124;;;;;;;;17037:3277;;;:::i;:::-;;16291:41;;;;;-1:-1:-1;;;;;16291:41:124;;;20938:3012;;;:::i;2907:134:97:-;;;:::i;:::-;;;;;;;:::i;16533:21:124:-;;;;;-1:-1:-1;;;;;16533:21:124;;;3823:151:97;;;:::i;:::-;;;;;;;:::i;3684:133::-;;;:::i;3385:141::-;;;:::i;16338:46:124:-;;;;;-1:-1:-1;;;;;16338:46:124;;;3193:186:97;;;:::i;:::-;;;;;;;:::i;816:30:90:-;;;;;-1:-1:-1;;;;;816:30:90;;;16593:24:124;;;;;-1:-1:-1;;;;;16593:24:124;;;3047:140:97;;;:::i;:::-;;;;;;;:::i;680:41:90:-;;;;;;;;-1:-1:-1;;;;;680:41:90;;;16675:24:124;;;;;-1:-1:-1;;;;;16675:24:124;;;3532:146:97;;;:::i;:::-;;;;;;;:::i;16802:39:124:-;;;;;-1:-1:-1;;;;;16802:39:124;;;896:28:90;;;;;-1:-1:-1;;;;;896:28:90;;;2754:147:97;;;:::i;16705:27:124:-;;;;;-1:-1:-1;;;;;16705:27:124;;;2459:141:97;;;:::i;1243:204:92:-;;;:::i;:::-;;;8717:14:125;;8710:22;8692:41;;8680:2;8665:18;1243:204:92;8552:187:125;852:38:90;;;;;-1:-1:-1;;;;;852:38:90;;;728:49;;;;;-1:-1:-1;;;;;728:49:90;;;2606:142:97;;;:::i;16473:21:124:-;;;;;-1:-1:-1;;;;;16473:21:124;;;784:26:90;;;;;-1:-1:-1;;;;;784:26:90;;;1065::104;;;;;;;;;16409:43:124;;;;;-1:-1:-1;;;;;16409:43:124;;;16645:24;;;;;-1:-1:-1;;;;;16645:24:124;;;17037:3277;17142:1;17105:39;;;;;:::i;:::-;9776:2:125;9758:21;;;9815:2;9795:18;;;9788:30;-1:-1:-1;;;9849:3:125;9834:19;;9827:42;9907:3;9900:4;9885:20;;9878:33;;;9948:1;9927:19;;;9920:30;-1:-1:-1;;;9981:3:125;9966:19;;9959:35;10078:4;10066:17;;;-1:-1:-1;10046:18:125;;10039:45;10026:3;10011:19;17105:39:124;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17098:4:124;:46;;-1:-1:-1;;;;;;17098:46:124;-1:-1:-1;;;;;17098:46:124;;;;;;;;;;17161:36;;17195:1;;17161:36;;;:::i;:::-;10432:2:125;10414:21;;;10471:1;10451:18;;;10444:29;-1:-1:-1;;;10504:3:125;10489:19;;10482:39;10559:3;10552:4;10537:20;;10530:33;;;10600:1;10579:19;;;10572:30;-1:-1:-1;;;10633:3:125;10618:19;;10611:35;10730:4;10718:17;;;-1:-1:-1;10698:18:125;;10691:45;10678:3;10663:19;17161:36:124;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17154:4:124;:43;;-1:-1:-1;;;;;;17154:43:124;-1:-1:-1;;;;;17154:43:124;;;;;;;;;;17236:19;:17;:19::i;:::-;17304:8;;17295:18;;-1:-1:-1;;;17295:18:124;;-1:-1:-1;;;;;17304:8:124;;;17295:18;;;192:51:125;-1:-1:-1;;;;;;;;;;;336:42:91;17295:8:124;;165:18:125;;17295::124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17323:8:124;;:64;;;-1:-1:-1;;;17323:64:124;;;;;11032:21:125;;;;11089:2;11069:18;;;11062:30;-1:-1:-1;;;11108:18:125;;;11101:49;11188:3;11166:20;;;11159:33;11229:2;11208:19;;;11201:31;-1:-1:-1;;;11248:19:125;;;11241:41;-1:-1:-1;;;;;17323:8:124;;;;-1:-1:-1;17323:27:124;;-1:-1:-1;11299:19:125;;17323:64:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17447:8:124;;17438:18;;-1:-1:-1;;;17438:18:124;;-1:-1:-1;;;;;17447:8:124;;;17438:18;;;192:51:125;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;17438:8:124;;-1:-1:-1;165:18:125;;17438::124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17474:12:124;;17494:4;;17474:38;;-1:-1:-1;;;17474:38:124;;-1:-1:-1;;;;;17494:4:124;;;17474:38;;;;11661:51:125;;;;11748:2;11728:18;;;11721:30;11767:18;;;11760:29;-1:-1:-1;;;11805:19:125;;;11798:35;11699:3;11849:18;;;11842:31;11708:1;11889:19;;;11882:30;-1:-1:-1;;;11928:19:125;;;11921:32;17474:12:124;;;-1:-1:-1;17474:19:124;;-1:-1:-1;11970:19:125;;17474:38:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17466:5;:46;;-1:-1:-1;;;;;;17466:46:124;-1:-1:-1;;;;;17466:46:124;;;;;;;;;17531:17;;;-1:-1:-1;;;17531:17:124;;;;17522:37;;17466:46;17531:15;;:17;;;;;;;;;;;;;;17466:46;17531:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17550:8;;-1:-1:-1;;;;;17550:8:124;17522;:37::i;:::-;17578:5;;17569:15;;-1:-1:-1;;;17569:15:124;;17578:5;;;;-1:-1:-1;;;;;17578:5:124;17569:15;;;192:51:125;-1:-1:-1;;;;;;;;;;;336:42:91;17569:8:124;;165:18:125;;17569:15:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17594:6:124;;17627:5;;17594:46;;-1:-1:-1;;;17594:46:124;;-1:-1:-1;;;;;17627:5:124;;;17594:46;;;12876:51:125;17594:6:124;12943:18:125;;;12936:50;17594:6:124;;;-1:-1:-1;17594:24:124;;-1:-1:-1;12849:18:125;;17594:46:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17689:5:124;;17670:25;;-1:-1:-1;;;;;17689:5:124;;;;-1:-1:-1;17670:25:124;;-1:-1:-1;17670:25:124;:::i;:::-;-1:-1:-1;;;;;210:32:125;;;192:51;;180:2;165:18;17670:25:124;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17665:2:124;:30;;-1:-1:-1;;;;;;17665:30:124;-1:-1:-1;;;;;17665:30:124;;;;;;;;;;17714:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17705:6:124;:25;;-1:-1:-1;;;;;;17705:25:124;-1:-1:-1;;;;;17705:25:124;;;;;;;;;17807:4;;17788:39;;-1:-1:-1;;;17788:39:124;;17807:4;;17788:39;;;13191:51:125;17814:12:124;13258:18:125;;;13251:34;17705:25:124;17788:10;;13164:18:125;;17788:39:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17837:6:124;;17856:4;;17837:30;;-1:-1:-1;;;17837:30:124;;-1:-1:-1;;;;;17856:4:124;;;17837:30;;;13191:51:125;17863:3:124;13258:18:125;;;13251:34;17837:6:124;;;-1:-1:-1;17837:10:124;;-1:-1:-1;13164:18:125;;17837:30:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17931:3:124;;17936:8;;17964:2;;17969:6;;17992:4;;17909:90;;-1:-1:-1;;;;;17931:3:124;;;;-1:-1:-1;17936:8:124;;;;-1:-1:-1;17936:8:124;;17964:2;;;;17969:6;;;;17992:4;;17909:90;;;:::i;:::-;-1:-1:-1;;;;;13969:15:125;;;13951:34;;14021:15;;;14016:2;14001:18;;13994:43;14073:15;;;14068:2;14053:18;;14046:43;14125:15;;;14120:2;14105:18;;14098:43;14178:15;;14172:3;14157:19;;14150:44;14231:15;;;13931:3;14210:19;;14203:44;13900:3;13885:19;17909:90:124;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17904:2:124;:95;;-1:-1:-1;;;;;;17904:95:124;-1:-1:-1;;;;;17904:95:124;;;;;;18087:4;;18102;;18052:56;;18087:4;;;;18102;;18052:56;;;:::i;:::-;-1:-1:-1;;;;;14488:15:125;;;14470:34;;14540:15;;14535:2;14520:18;;14513:43;14420:2;14405:18;18052:56:124;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18041:7:124;:67;;-1:-1:-1;;;;;;18041:67:124;-1:-1:-1;;;;;18041:67:124;;;;;;18289:3;;18314:2;;18377:4;;18348:59;;18289:3;;;;18314:2;;;;18377:4;;;18348:59;;;:::i;:::-;-1:-1:-1;;;;;14912:32:125;;;14894:51;;14981:2;14976;14961:18;;14954:30;;;15020:1;15000:18;;;14993:29;-1:-1:-1;;;15053:3:125;15038:19;;15031:39;14932:3;15101:2;15086:18;;15079:31;;;15147:1;15126:19;;;15119:30;-1:-1:-1;;;15180:3:125;15165:19;;15158:38;15228:3;15213:19;18348:59:124;;;;;;;;;;;;;;;;;;;;;;;18249:170;;;;;:::i;:::-;-1:-1:-1;;;;;15518:15:125;;;15500:34;;15570:15;;;15565:2;15550:18;;15543:43;15622:15;;;15617:2;15602:18;;15595:43;15450:2;15435:18;18249:170:124;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18238:8:124;:181;;-1:-1:-1;;;;;;18238:181:124;-1:-1:-1;;;;;18238:181:124;;;;;;;;;;18480:583;;;;;;;;18545:2;18480:583;;;;;;;18726:4;18480:583;;;;;;;18801:4;18480:583;;;;-1:-1:-1;18480:583:124;;;;18931:3;18480:583;;;;;;;;;;19120:38;;:::i;:::-;19177:40;19168:1;19177:40;19168:49;;-1:-1:-1;19238:314:124;;;;;;;;19297:7;;-1:-1:-1;;;;;19297:7:124;;;19238:314;;19338:4;;;;19238:314;;;;19384:8;;;;19238:314;;;;19421:4;19238:314;;;;;;;;;;19227:8;;;:325;;;;19572:3;;19563:13;;-1:-1:-1;;;19563:13:124;;19572:3;;19563:13;;;192:51:125;-1:-1:-1;;;;;;;;;;;336:42:91;19563:8:124;;165:18:125;;19563:13:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19586:2:124;;:31;;-1:-1:-1;;;19586:31:124;;-1:-1:-1;;;;;19586:2:124;;;;-1:-1:-1;19586:14:124;;-1:-1:-1;19586:31:124;;-1:-1:-1;;;;;;;;;;;16932:25:124;19615:1;;19586:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19667:8:124;;19658:18;;-1:-1:-1;;;19658:18:124;;-1:-1:-1;;;;;19667:8:124;;;19658:18;;;192:51:125;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;19658:8:124;;-1:-1:-1;165:18:125;;19658::124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19686:2:124;;:39;;-1:-1:-1;;;19686:39:124;;19697:5;19686:39;;;18340:34:125;;;18390:18;;;18383:43;;;18442:18;;;18435:43;19718:6:124;18494:18:125;;;18487:55;-1:-1:-1;;;;;19686:2:124;;;;-1:-1:-1;19686:10:124;;-1:-1:-1;18287:19:125;;19686:39:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19790:8:124;;19781:18;;-1:-1:-1;;;19781:18:124;;-1:-1:-1;;;;;19790:8:124;;;19781:18;;;192:51:125;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;19781:8:124;;-1:-1:-1;165:18:125;;19781::124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19809:2:124;;19841;;19809:36;;-1:-1:-1;;;19809:36:124;;-1:-1:-1;;;;;19841:2:124;;;19809:36;;;192:51:125;19809:2:124;;;-1:-1:-1;19809:23:124;;-1:-1:-1;165:18:125;;19809:36:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19864:8:124;;19855:18;;-1:-1:-1;;;19855:18:124;;-1:-1:-1;;;;;19864:8:124;;;19855:18;;;192:51:125;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;19855:8:124;;-1:-1:-1;165:18:125;;19855::124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19883:2:124;;:44;;-1:-1:-1;;;19883:44:124;;-1:-1:-1;;;;;;;;;;;19883:44:124;;;18753:25:125;19883:2:124;18794:18:125;;;18787:50;-1:-1:-1;;;;;19883:2:124;;;;-1:-1:-1;19883:21:124;;-1:-1:-1;18726:18:125;;19883:44:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19946:8:124;;19937:18;;-1:-1:-1;;;19937:18:124;;-1:-1:-1;;;;;19946:8:124;;;19937:18;;;192:51:125;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;19937:8:124;;-1:-1:-1;165:18:125;;19937::124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19965:2:124;;:19;;-1:-1:-1;;;19965:19:124;;:2;:19;;;8692:41:125;-1:-1:-1;;;;;19965:2:124;;;;-1:-1:-1;19965:12:124;;-1:-1:-1;8665:18:125;;19965:19:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20030:5:124;;20013:37;;;-1:-1:-1;;;20013:37:124;;-1:-1:-1;;;;;20030:5:124;;;20013:37;;;19060:51:125;19127:18;;;19120:30;19186:1;19166:18;;;19159:29;-1:-1:-1;;;19204:18:125;;;19197:39;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;20013:8:124;;-1:-1:-1;19253:19:125;;20013:37:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20077:2:124;;20060:27;;;-1:-1:-1;;;20060:27:124;;-1:-1:-1;;;;;20077:2:124;;;20060:27;;;19495:51:125;19562:18;;;19555:30;19621:1;19601:18;;;19594:29;-1:-1:-1;;;19639:18:125;;;19632:32;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;20060:8:124;;-1:-1:-1;19681:19:125;;20060:27:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20114:2:124;;20097:27;;;-1:-1:-1;;;20097:27:124;;-1:-1:-1;;;;;20114:2:124;;;20097:27;;;19923:51:125;19990:18;;;19983:30;20049:1;20029:18;;;20022:29;-1:-1:-1;;;20067:18:125;;;20060:32;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;20097:8:124;;-1:-1:-1;20109:19:125;;20097:27:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20151:7:124;;20134:37;;;-1:-1:-1;;;20134:37:124;;-1:-1:-1;;;;;20151:7:124;;;20134:37;;;20351:51:125;20418:18;;;20411:30;20477:1;20457:18;;;20450:29;-1:-1:-1;;;20495:18:125;;;20488:37;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;20134:8:124;;-1:-1:-1;20542:19:125;;20134:37:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20198:8:124;;20181:44;;;-1:-1:-1;;;20181:44:124;;-1:-1:-1;;;;;20198:8:124;;;20181:44;;;20784:51:125;20851:18;;;20844:30;20910:2;20890:18;;;20883:30;-1:-1:-1;;;20929:18:125;;;20922:43;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;20181:8:124;;-1:-1:-1;20982:19:125;;20181:44:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20252:4:124;;20235:31;;;-1:-1:-1;;;20235:31:124;;-1:-1:-1;;;;;20252:4:124;;;20235:31;;;;21224:51:125;;;;21291:18;;;21284:30;;;;21330:18;;;21323:29;-1:-1:-1;;;21368:18:125;;;21361:34;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;20235:8:124;;-1:-1:-1;21412:19:125;;20235:31:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20293:4:124;;20276:31;;;-1:-1:-1;;;20276:31:124;;-1:-1:-1;;;;;20293:4:124;;;20276:31;;;;21654:51:125;;;;21721:18;;;21714:30;;;;21760:18;;;21753:29;-1:-1:-1;;;21798:18:125;;;21791:34;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;20276:8:124;;-1:-1:-1;21842:19:125;;20276:31:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17070:3244;;17037:3277::o;20938:3012::-;21145:5;;21046:7;;21025:18;;21124:56;;-1:-1:-1;;;;;21145:5:124;21046:7;-1:-1:-1;;;;;;;;;;;21124:20:124;:56::i;:::-;21107:73;-1:-1:-1;21248:17:124;21268:10;21277:1;21107:73;21268:10;:::i;:::-;21302:8;;21288:23;;-1:-1:-1;;;21288:23:124;;-1:-1:-1;;;;;21302:8:124;;;21288:23;;;192:51:125;21248:30:124;;-1:-1:-1;;;;;;;;;;;;336:42:91;21288:13:124;;165:18:125;;21288:23:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21337:2:124;;21351:5;;21337:48;;-1:-1:-1;;;21337:48:124;;-1:-1:-1;;;;;21351:5:124;;;21337:48;;;22328:51:125;22395:18;;;22388:34;;;-1:-1:-1;;;;;;;;;;;22438:18:125;;;22431:34;21321:13:124;;-1:-1:-1;21337:2:124;;;-1:-1:-1;21337:13:124;;22301:18:125;;21337:48:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21321:64;;-1:-1:-1;;;;;;;;;;;;;;;;21395:12:124;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21420:12;21425:6;21420:4;:12::i;:::-;21687:9;;;;;;;;;21640:19;21687:9;;;21698;;;;;;;;;;21662:58;;21640:19;;21662:58;;21680:4;;21687:9;;21640:19;;21662:58;;:::i;:::-;;;;;;;-1:-1:-1;;21662:58:124;;;;;;;21739:8;;-1:-1:-1;;;21730:18:124;;-1:-1:-1;;;;;21739:8:124;21730:18;;;192:51:125;21662:58:124;-1:-1:-1;;;;;;;;;;;;336:42:91;21730:8:124;;165:18:125;;21730::124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;21780:2:124;;:25;;-1:-1:-1;;;21780:25:124;;21758:19;;-1:-1:-1;;;;;;21780:2:124;;;;-1:-1:-1;21780:10:124;;:25;;21791:5;;21798:6;;21780:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21758:47;;21910:44;21919:11;21932:1;21910:44;;;;;;;;;;;;;-1:-1:-1;;;21910:44:124;;;:8;:44::i;:::-;22035:7;;22069:4;;22035:40;;-1:-1:-1;;;22035:40:124;;-1:-1:-1;;;;;22069:4:124;;;22035:40;;;192:51:125;22026:86:124;;22035:7;;;;;:25;;165:18:125;;22035:40:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22077:11;22026:86;;;;;;;;;;;;;-1:-1:-1;;;22026:86:124;;;:8;:86::i;:::-;22508:8;;22526:5;;22508:24;;-1:-1:-1;;;22508:24:124;;-1:-1:-1;;;;;22526:5:124;;;22508:24;;;192:51:125;22486:19:124;;22508:8;;;;;:17;;165:18:125;;22508:24:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22486:46;;22542:53;22551:11;22564:1;22542:53;;;;;;;;;;;;;;;;;:8;:53::i;:::-;22914:8;;22905:18;;-1:-1:-1;;;22905:18:124;;-1:-1:-1;;;;;22914:8:124;;;22905:18;;;192:51:125;22752:11:124;;22834:1;;-1:-1:-1;;;;;;;;;;;336:42:91;22905:8:124;;165:18:125;;22905::124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23007:2:124;;23023:5;;23081:9;;;;;;;;-1:-1:-1;23081:9:124;;;23007:101;;-1:-1:-1;;;23007:101:124;;-1:-1:-1;;;;;;;;;;;;;23007:2:124;;;;:15;;:101;;23023:5;;;;;-1:-1:-1;;;;;;;;;;;16932:25:124;-1:-1:-1;;23044:17:124;23063:16;;23092:15;;23007:101;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23128:8;;23146:5;;23128:24;;-1:-1:-1;;;23128:24:124;;-1:-1:-1;;;;;23146:5:124;;;23128:24;;;192:51:125;22933:175:124;;-1:-1:-1;22933:175:124;;-1:-1:-1;22933:175:124;;-1:-1:-1;23119:60:124;;23128:8;;;:17;;165:18:125;;23128:24:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23154:1;23119:60;;;;;;;;;;;;;-1:-1:-1;;;23119:60:124;;;:8;:60::i;:::-;23189:37;23198:10;23210:1;23189:37;;;;;;;;;;;;;-1:-1:-1;;;23189:37:124;;;:8;:37::i;:::-;23245:7;;23273:4;;23245:34;;-1:-1:-1;;;23245:34:124;;-1:-1:-1;;;;;23273:4:124;;;23245:34;;;192:51:125;23236:69:124;;23245:7;;;;;:19;;165:18:125;;23245:34:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23281:1;23236:69;;;;;;;;;;;;;-1:-1:-1;;;23236:69:124;;;:8;:69::i;:::-;23315:37;23324:7;23333:1;23315:37;;;;;;;;;;;;;-1:-1:-1;;;23315:37:124;;;:8;:37::i;:::-;23574:2;;23588:5;;23574:37;;-1:-1:-1;;;23574:37:124;;-1:-1:-1;;;;;23588:5:124;;;23574:37;;;13191:51:125;-1:-1:-1;;;;;;;;;;;13258:18:125;;;13251:34;23553:18:124;;23574:2;;;;;:13;;13164:18:125;;23574:37:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23649:2;;23663:5;;23649:20;;-1:-1:-1;;;23649:20:124;;-1:-1:-1;;;;;23663:5:124;;;23649:20;;;192:51:125;23553:58:124;;-1:-1:-1;23622:20:124;;23649:2;;;:13;;165:18:125;;23649:20:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23621:48;;;;;23679:77;23688:10;23700:12;23679:77;;;;;;;;;;;;;;;;;:8;:77::i;:::-;23837:19;;;23854:1;23837:19;;;;;;;;;23811:23;;23837:19;;;;;;;;;;;-1:-1:-1;23837:19:124;23811:45;;-1:-1:-1;;;;;;;;;;;23866:3:124;23870:1;23866:6;;;;;;;;:::i;:::-;;;;;;;;;;:24;23910:5;;23901:15;;-1:-1:-1;;;23901:15:124;;-1:-1:-1;;;;;23910:5:124;;;23901:15;;;192:51:125;-1:-1:-1;;;;;;;;;;;336:42:91;23901:8:124;;165:18:125;;23901:15:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23926:2:124;;:17;;-1:-1:-1;;;23926:17:124;;-1:-1:-1;;;;;23926:2:124;;;;-1:-1:-1;23926:12:124;;-1:-1:-1;23926:17:124;;23939:3;;23926:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20977:2973;;;;;;;;;;;;;;;20938:3012::o;2907:134:97:-;2954:33;3018:16;2999:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2999:35:97;;;;;;;;;;;;;;;;;;;;;;;2907:134;:::o;3823:151::-;3872:42;3948:19;3926:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3926:41:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:151;:::o;3684:133::-;3730:33;3794:16;3775:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3775:35:97;;;;;;;;;;;;;;;;;;;;;;3684:133;:::o;3385:141::-;3433:35;3501:18;3480:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3480:39:97;;;;;;;;;;;;;;;;;;;;;;3385:141;:::o;3193:186::-;3249:56;3346:26;3317:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3317:55:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3047:140;3095:34;3162:18;3141:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3532:146;3580:40;3653:18;3632:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2754:147;2803:40;2876:18;2855:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:141;2508:34;2575:18;2554:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:204:92;1302:7;;1282:4;;1302:7;;1298:143;;;-1:-1:-1;1332:7:92;;;;;1243:204::o;1298:143::-;1377:39;;-1:-1:-1;;;1377:39:92;;-1:-1:-1;;;;;;;;;;;1377:39:92;;;13191:51:125;;;-1:-1:-1;;;13258:18:125;;;13251:34;1428:1:92;;1377:7;;13164:18:125;;1377:39:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;:::o;2606:142:97:-;2655:35;2723:18;2702:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2702:39:97;;;;;;;;;;;;;;;;;;;;;;2606:142;:::o;931:1198:90:-;1034:5;;997:44;;1034:5;;;;-1:-1:-1;;;;;1034:5:90;997:44;;;192:51:125;973:21:90;;165:18:125;;997:44:90;;;-1:-1:-1;;997:44:90;;;;;;;;;;;;;;;-1:-1:-1;;;;;997:44:90;-1:-1:-1;;;997:44:90;;;1105:8;997:44;;-1:-1:-1;1074:50:90;;-1:-1:-1;;;;;1105:8:90;997:44;1074:30;:50::i;:::-;1052:6;:73;;-1:-1:-1;;;;;;1052:73:90;-1:-1:-1;;;;;1052:73:90;;;;;;1192:8;;1161:50;;1192:8;1202;1161:30;:50::i;:::-;1135:8;:77;;-1:-1:-1;;;;;;1135:77:90;-1:-1:-1;;;;;1135:77:90;;;;;;1287:8;;1256:50;;1287:8;1297;1256:30;:50::i;:::-;1222:12;:85;;-1:-1:-1;;;;;;1222:85:90;-1:-1:-1;;;;;1222:85:90;;;;;;1372:8;;1341:50;;1372:8;1382;1341:30;:50::i;:::-;1317:7;:75;;-1:-1:-1;;;;;;1317:75:90;-1:-1:-1;;;;;1317:75:90;;;;;;1443:6;;1451:8;;1427:33;;-1:-1:-1;;1443:6:90;;;;1451:8;;;;;1427:33;;;:::i;:::-;-1:-1:-1;;;;;14488:15:125;;;14470:34;;14540:15;;14535:2;14520:18;;14513:43;14420:2;14405:18;1427:33:90;;;;;;;;;;;;;;;;;;;;;;;1403:57;;1470:14;1487:54;1523:9;1535:5;;;;;;;;;-1:-1:-1;;;;;1535:5:90;1487:27;:54::i;:::-;1566:5;;1552:20;;-1:-1:-1;;;1552:20:90;;1566:5;;;;-1:-1:-1;;;;;1566:5:90;1552:20;;;192:51:125;1470:71:90;;-1:-1:-1;;;;;;;;;;;;336:42:91;1552:13:90;;165:18:125;;1552:20:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1631:6:90;;1665:8;;1648:26;;1582:149;;-1:-1:-1;;;;;;1631:6:90;;;;-1:-1:-1;1665:8:90;;;1648:26;;;:::i;:::-;-1:-1:-1;;;;;210:32:125;;;192:51;;180:2;165:18;1648:26:90;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1677:44:90;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1677:44:90;-1:-1:-1;;;1677:44:90;;;1582:27;:149::i;:::-;1790:8;;1828:6;;1809:26;;1741:153;;-1:-1:-1;;;;;1790:8:90;;;;1828:6;;1809:26;;;:::i;1741:153::-;1940:12;;1994:8;;1963:40;;1904:105;;-1:-1:-1;;;;;1940:12:90;;;;1986:6;;1994:8;;;1963:40;;;:::i;:::-;-1:-1:-1;;;;;14488:15:125;;;14470:34;;14540:15;;14535:2;14520:18;;14513:43;14420:2;14405:18;1963:40:90;;;;;;;;;;;;;;;;;;;;;;;;1904:105;;;;;;;;;;;;:27;:105::i;:::-;2055:7;;2073:19;;2019:79;;-1:-1:-1;;;;;2055:7:90;;2073:19;;;:::i;2019:79::-;-1:-1:-1;;;;;;;;;;;;;;;;2108:12:90;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;963:1166;;;931:1198::o;3454:110:92:-;3533:24;;-1:-1:-1;;;3533:24:92;;-1:-1:-1;;;;;14488:15:125;;;3533:24:92;;;14470:34:125;14540:15;;14520:18;;;14513:43;-1:-1:-1;;;;;;;;;;;3533:11:92;;;14405:18:125;;3533:24:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20405:446:124;20551:4;;:27;;-1:-1:-1;;;20551:27:124;;-1:-1:-1;;;;;13209:32:125;;;20551:27:124;;;13191:51:125;13258:18;;;13251:34;;;20521:14:124;;20551:4;;:9;;13164:18:125;;20551:27:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20589:19:124;;-1:-1:-1;;;20589:19:124;;-1:-1:-1;;;;;210:32:125;;20589:19:124;;;192:51:125;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;20589:13:124;;-1:-1:-1;165:18:125;;20589:19:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20618:4:124;;20639:5;;20618:47;;-1:-1:-1;;;20618:47:124;;-1:-1:-1;;;;;20639:5:124;;;20618:47;;;13191:51:125;-1:-1:-1;;13258:18:125;;;13251:34;20618:4:124;;;-1:-1:-1;20618:12:124;;-1:-1:-1;13164:18:125;;20618:47:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20684:5:124;;:31;;-1:-1:-1;;;20684:31:124;;;;;28310:25:125;;;-1:-1:-1;;;;;28371:32:125;;;28351:18;;;28344:60;20684:5:124;;;;:13;;28283:18:125;;20684:31:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20740:5;;20764:2;;20726:61;;-1:-1:-1;;;20726:61:124;;-1:-1:-1;;;;;20764:2:124;;;20726:61;;;13191:51:125;-1:-1:-1;;13258:18:125;;;13251:34;20675:40:124;;-1:-1:-1;20740:5:124;;20726:29;;13164:18:125;;20726:61:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20797:2:124;;:23;;-1:-1:-1;;;20797:23:124;;;;;28621:25:125;;;28662:18;;;28655:34;;;-1:-1:-1;;;;;20797:2:124;;;;:8;;28594:18:125;;20797:23:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;20830:12:124;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20405:446;;;;;:::o;24925:100:94:-;24724:28;24716:37;;-1:-1:-1;;;;;24980:7:94;;25013:4;24724:28;24716:37;;-1:-1:-1;;;;;24988:20:94;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:29;;;;:::i;:::-;24980:38;;;;;;;;;;;;;29073:25:125;;29061:2;29046:18;;28927:177;24980:38:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24925:100;:::o;13228:134:92:-;13326:29;;-1:-1:-1;;;13326:29:92;;-1:-1:-1;;;;;;;;;;;13326:11:92;;;:29;;13338:4;;13344:5;;13351:3;;13326:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2386:134;2484:29;;-1:-1:-1;;;2484:29:92;;-1:-1:-1;;;;;;;;;;;2484:11:92;;;:29;;2496:4;;2502:5;;2509:3;;2484:29;;;:::i;20634:168:63:-;20721:7;20772:4;20778:15;20755:39;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;20740:55;;20634:168;;;;;:::o;23565:159::-;23641:7;23697:4;23703:12;23675:41;;;;;:::i;:::-;-1:-1:-1;;;;;14488:15:125;;;14470:34;;14540:15;;14535:2;14520:18;;14513:43;14420:2;14405:18;23675:41:63;14258:304:125;21994:140:63;22086:41;22106:5;22113:7;22122:4;22086:19;:41::i;:::-;21994:140;;;:::o;3706:991:64:-;3866:26;;-1:-1:-1;;;3866:26:64;;-1:-1:-1;;;;;13209:32:125;;3866:26:64;;;13191:51:125;14007:66:64;13258:18:125;;;13251:34;-1:-1:-1;;;;;;;;;;;861:42:67;3800:5:64;;861:42:67;;3866:7:64;;13164:18:125;;3866:26:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3846:46;-1:-1:-1;3846:46:64;3902:789;;3945:37;3985:33;4012:5;3985:26;:33::i;:::-;3945:73;;4036:38;;;;;;;;;;;;;;-1:-1:-1;;;4036:38:64;;;:23;:29;;:38;;;;:::i;:::-;:57;;;;4092:1;4078:4;:11;:15;4036:57;4032:234;;;4113:56;;-1:-1:-1;;;4113:56:64;;-1:-1:-1;;;;;4113:41:64;;;;;:56;;4155:7;;4164:4;;4113:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4032:234;;;4208:43;;-1:-1:-1;;;4208:43:64;;-1:-1:-1;;;;;210:32:125;;;4208:43:64;;;192:51:125;4208:34:64;;;;;165:18:125;;4208:43:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4032:234;3931:345;3902:789;;;4336:9;4296:13;4402:33;4336:9;4402:26;:33::i;:::-;4362:73;;4453:38;;;;;;;;;;;;;;-1:-1:-1;;;4453:38:64;;;:23;:29;;:38;;;;:::i;:::-;:57;;;;4509:1;4495:4;:11;:15;4453:57;4449:232;;;4530:55;;-1:-1:-1;;;4530:55:64;;-1:-1:-1;;;;;4530:33:64;;;;;:55;;4564:5;;4571:7;;4580:4;;4530:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4449:232;;;4624:42;;-1:-1:-1;;;4624:42:64;;-1:-1:-1;;;;;14488:15:125;;;4624:42:64;;;14470:34:125;14540:15;;;14520:18;;;14513:43;4624:26:64;;;;;14405:18:125;;4624:42:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4282:409;;3790:907;;3706:991;;;:::o;14679:488::-;14944:54;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14944:54:64;-1:-1:-1;;;14944:54:64;;;14915:93;;14752:13;;14874:12;;;;-1:-1:-1;;;;;14915:15:64;;;:93;;14944:54;14915:93;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14873:135;;;;15022:7;:33;;;;;15053:2;15033:10;:17;:22;15022:33;15018:143;;;15089:10;15078:32;;;;;;;;;;;;:::i;:::-;15071:39;14679:488;-1:-1:-1;;;;14679:488:64:o;15018:143::-;-1:-1:-1;;15141:9:64;;;;;;;;;-1:-1:-1;15141:9:64;;;14679:488;-1:-1:-1;;14679:488:64:o;4420:182:51:-;4492:4;4540:1;4534:15;4521:1;4515:15;:34;:80;;;;;4592:1;4576:19;;;;;;4569:1;4553:19;;;;;;:42;4515:80;4508:87;4420:182;-1:-1:-1;;;4420:182:51:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;462:658:125:-;633:2;685:21;;;755:13;;658:18;;;777:22;;;604:4;;633:2;856:15;;;;830:2;815:18;;;604:4;899:195;913:6;910:1;907:13;899:195;;;978:13;;-1:-1:-1;;;;;974:39:125;962:52;;1069:15;;;;1034:12;;;;1010:1;928:9;899:195;;;-1:-1:-1;1111:3:125;;462:658;-1:-1:-1;;;;;;462:658:125:o;1352:250::-;1437:1;1447:113;1461:6;1458:1;1455:13;1447:113;;;1537:11;;;1531:18;1518:11;;;1511:39;1483:2;1476:10;1447:113;;;-1:-1:-1;;1594:1:125;1576:16;;1569:27;1352:250::o;1607:271::-;1649:3;1687:5;1681:12;1714:6;1709:3;1702:19;1730:76;1799:6;1792:4;1787:3;1783:14;1776:4;1769:5;1765:16;1730:76;:::i;:::-;1860:2;1839:15;-1:-1:-1;;1835:29:125;1826:39;;;;1867:4;1822:50;;1607:271;-1:-1:-1;;1607:271:125:o;1883:1716::-;2118:2;2170:21;;;2240:13;;2143:18;;;2262:22;;;2089:4;;2118:2;2303;;2321:18;;;;2358:1;2401:14;;;2386:30;;2382:39;;2444:15;;;2089:4;2487:1083;2501:6;2498:1;2495:13;2487:1083;;;-1:-1:-1;;2566:22:125;;;2562:36;2550:49;;2622:13;;2709:9;;-1:-1:-1;;;;;2705:35:125;2690:51;;2780:11;;2774:18;2812:15;;;2805:27;;;2893:19;;2662:15;;;2925:24;;;3106:21;;;;2972:2;3054:17;;;3042:30;;3038:39;;;2996:15;;;;3151:1;3165:296;3181:8;3176:3;3173:17;3165:296;;;3287:2;3283:7;3274:6;3266;3262:19;3258:33;3251:5;3244:48;3319:42;3354:6;3343:8;3337:15;3319:42;:::i;:::-;3390:17;;;;3309:52;-1:-1:-1;3433:14:125;;;;3209:1;3200:11;3165:296;;;-1:-1:-1;;;3548:12:125;;;;3484:6;-1:-1:-1;;3513:15:125;;;;2523:1;2516:9;2487:1083;;;-1:-1:-1;3587:6:125;;1883:1716;-1:-1:-1;;;;;;;;;1883:1716:125:o;3604:465::-;3656:3;3694:5;3688:12;3721:6;3716:3;3709:19;3747:4;3776;3771:3;3767:14;3760:21;;3815:4;3808:5;3804:16;3838:1;3848:196;3862:6;3859:1;3856:13;3848:196;;;3927:13;;-1:-1:-1;;;;;;3923:40:125;3911:53;;3984:12;;;;4019:15;;;;3884:1;3877:9;3848:196;;;-1:-1:-1;4060:3:125;;3604:465;-1:-1:-1;;;;;3604:465:125:o;4074:1187::-;4294:4;4323:2;4363;4352:9;4348:18;4393:2;4382:9;4375:21;4416:6;4451;4445:13;4482:6;4474;4467:22;4508:2;4498:12;;4541:2;4530:9;4526:18;4519:25;;4603:2;4593:6;4590:1;4586:14;4575:9;4571:30;4567:39;4641:2;4633:6;4629:15;4662:1;4672:560;4686:6;4683:1;4680:13;4672:560;;;4751:22;;;-1:-1:-1;;4747:36:125;4735:49;;4807:13;;4853:9;;4875:18;;;4920:48;4952:15;;;4853:9;4920:48;:::i;:::-;5009:11;;;5003:18;5058:19;;;5041:15;;;5034:44;5003:18;4906:62;-1:-1:-1;5101:51:125;4906:62;5003:18;5101:51;:::i;:::-;5210:12;;;;5091:61;-1:-1:-1;;;5175:15:125;;;;4708:1;4701:9;4672:560;;;-1:-1:-1;5249:6:125;;4074:1187;-1:-1:-1;;;;;;;;4074:1187:125:o;5726:803::-;5888:4;5917:2;5957;5946:9;5942:18;5987:2;5976:9;5969:21;6010:6;6045;6039:13;6076:6;6068;6061:22;6114:2;6103:9;6099:18;6092:25;;6176:2;6166:6;6163:1;6159:14;6148:9;6144:30;6140:39;6126:53;;6214:2;6206:6;6202:15;6235:1;6245:255;6259:6;6256:1;6253:13;6245:255;;;6352:2;6348:7;6336:9;6328:6;6324:22;6320:36;6315:3;6308:49;6380:40;6413:6;6404;6398:13;6380:40;:::i;:::-;6370:50;-1:-1:-1;6478:12:125;;;;6443:15;;;;6281:1;6274:9;6245:255;;;-1:-1:-1;6517:6:125;;5726:803;-1:-1:-1;;;;;;;5726:803:125:o;6766:1075::-;6970:4;6999:2;7039;7028:9;7024:18;7069:2;7058:9;7051:21;7092:6;7127;7121:13;7158:6;7150;7143:22;7184:2;7174:12;;7217:2;7206:9;7202:18;7195:25;;7279:2;7269:6;7266:1;7262:14;7251:9;7247:30;7243:39;7317:2;7309:6;7305:15;7338:1;7348:464;7362:6;7359:1;7356:13;7348:464;;;7427:22;;;-1:-1:-1;;7423:36:125;7411:49;;7483:13;;7528:9;;-1:-1:-1;;;;;7524:35:125;7509:51;;7599:11;;7593:18;7631:15;;;7624:27;;;7674:58;7716:15;;;7593:18;7674:58;:::i;:::-;7790:12;;;;7664:68;-1:-1:-1;;7755:15:125;;;;7384:1;7377:9;7348:464;;12000:144;-1:-1:-1;;;;;12088:31:125;;12078:42;;12068:70;;12134:1;12131;12124:12;12068:70;12000:144;:::o;12149:285::-;12240:6;12293:2;12281:9;12272:7;12268:23;12264:32;12261:52;;;12309:1;12306;12299:12;12261:52;12341:9;12335:16;12360:44;12398:5;12360:44;:::i;16730:1308::-;16965:25;;;17009:13;;16952:3;16937:19;;;17048:1;17041:9;;17031:140;;17093:10;17088:3;17084:20;17081:1;17074:31;17128:4;17125:1;17118:15;17156:4;17153:1;17146:15;17031:140;17207:2;17202;17191:9;17187:18;17180:30;;17257:2;17249:6;17245:15;17239:22;17297:1;17293;17288:3;17284:11;17280:19;17360:2;17345:12;17339:19;17335:28;17330:2;17319:9;17315:18;17308:56;17434:2;17428;17414:12;17410:21;17404:28;17400:37;17395:2;17384:9;17380:18;17373:65;;17493:2;17479:12;17475:21;17469:28;17447:50;;17516:6;17586:2;17569:14;17563:21;17559:30;17553:3;17542:9;17538:19;17531:59;17663:2;17657;17641:14;17637:23;17631:30;17627:39;17621:3;17610:9;17606:19;17599:68;17744:2;17728:14;17724:23;17718:30;17711:38;17704:46;17698:3;17687:9;17683:19;17676:75;17824:2;17818;17802:14;17798:23;17792:30;17788:39;17782:3;17771:9;17767:19;17760:68;17902:2;17895:3;17879:14;17875:24;17869:31;17865:40;17859:3;17848:9;17844:19;17837:69;;;17955:2;17947:6;17943:15;17937:22;17968:64;18027:3;18016:9;18012:19;17996:14;15871:1;15867;15862:3;15858:11;15854:19;15912:2;15904:5;15898:12;15894:21;15889:3;15882:34;15977:2;15969:4;15962:5;15958:16;15952:23;15948:32;15941:4;15936:3;15932:14;15925:56;16042:2;16034:4;16027:5;16023:16;16017:23;16013:32;16006:4;16001:3;15997:14;15990:56;;16092:4;16085:5;16081:16;16075:23;16117:6;16173:2;16159:12;16155:21;16148:4;16143:3;16139:14;16132:45;16225:4;16218:5;16214:16;16208:23;16186:45;;16290:2;16273:14;16267:21;16263:30;16256:4;16251:3;16247:14;16240:54;16363:2;16355:4;16339:14;16335:25;16329:32;16325:41;16319:3;16314;16310:13;16303:64;16424:4;16408:14;16404:25;16398:32;16392:3;16387;16383:13;16376:55;16488:4;16472:14;16468:25;16462:32;16456:3;16451;16447:13;16440:55;16566:4;16550:14;16546:25;16540:32;16533:40;16526:48;16520:3;16515;16511:13;16504:71;16643:2;16636:3;16620:14;16616:24;16610:31;16606:40;16600:3;16595;16591:13;16584:63;16715:2;16708:3;16692:14;16688:24;16682:31;16678:40;16672:3;16667;16663:13;16656:63;;;15781:944;;;17968:64;;16730:1308;;;;;:::o;21872:217::-;21912:1;21938;21928:132;;21982:10;21977:3;21973:20;21970:1;21963:31;22017:4;22014:1;22007:15;22045:4;22042:1;22035:15;21928:132;-1:-1:-1;22074:9:125;;21872:217::o;22476:184::-;22546:6;22599:2;22587:9;22578:7;22574:23;22570:32;22567:52;;;22615:1;22612;22605:12;22567:52;-1:-1:-1;22638:16:125;;22476:184;-1:-1:-1;22476:184:125:o;22665:534::-;22924:6;22916;22912:19;22901:9;22894:38;22968:3;22963:2;22952:9;22948:18;22941:31;22875:4;22995:46;23036:3;23025:9;23021:19;23013:6;22995:46;:::i;:::-;23089:9;23081:6;23077:22;23072:2;23061:9;23057:18;23050:50;23117:33;23143:6;23135;23117:33;:::i;:::-;23109:41;;;23186:6;23181:2;23170:9;23166:18;23159:34;22665:534;;;;;;;:::o;23204:289::-;23379:6;23368:9;23361:25;23422:2;23417;23406:9;23402:18;23395:30;23342:4;23442:45;23483:2;23472:9;23468:18;23460:6;23442:45;:::i;23498:603::-;23814:1;23810;23805:3;23801:11;23797:19;23789:6;23785:32;23774:9;23767:51;23854:6;23849:2;23838:9;23834:18;23827:34;23897:6;23892:2;23881:9;23877:18;23870:34;23940:6;23935:2;23924:9;23920:18;23913:34;23984:3;23978;23967:9;23963:19;23956:32;23748:4;24005:46;24046:3;24035:9;24031:19;24023:6;24005:46;:::i;:::-;23997:54;;24088:6;24082:3;24071:9;24067:19;24060:35;23498:603;;;;;;;;;:::o;24106:306::-;24194:6;24202;24210;24263:2;24251:9;24242:7;24238:23;24234:32;24231:52;;;24279:1;24276;24269:12;24231:52;24308:9;24302:16;24292:26;;24358:2;24347:9;24343:18;24337:25;24327:35;;24402:2;24391:9;24387:18;24381:25;24371:35;;24106:306;;;;;:::o;24728:368::-;24825:6;24833;24841;24849;24902:3;24890:9;24881:7;24877:23;24873:33;24870:53;;;24919:1;24916;24909:12;24870:53;-1:-1:-1;;24942:16:125;;24998:2;24983:18;;24977:25;25042:2;25027:18;;25021:25;25086:2;25071:18;;;25065:25;24942:16;;24977:25;;-1:-1:-1;25065:25:125;;-1:-1:-1;24728:368:125;-1:-1:-1;24728:368:125:o;25101:127::-;25162:10;25157:3;25153:20;25150:1;25143:31;25193:4;25190:1;25183:15;25217:4;25214:1;25207:15;25233:127;25294:10;25289:3;25285:20;25282:1;25275:31;25325:4;25322:1;25315:15;25349:4;25346:1;25339:15;25365:664;25568:2;25620:21;;;25690:13;;25593:18;;;25712:22;;;25539:4;;25568:2;25791:15;;;;25765:2;25750:18;;;25539:4;25834:169;25848:6;25845:1;25842:13;25834:169;;;25909:13;;25897:26;;25978:15;;;;25943:12;;;;25870:1;25863:9;25834:169;;26034:380;26113:1;26109:12;;;;26156;;;26177:61;;26231:4;26223:6;26219:17;26209:27;;26177:61;26284:2;26276:6;26273:14;26253:18;26250:38;26247:161;;26330:10;26325:3;26321:20;26318:1;26311:31;26365:4;26362:1;26355:15;26393:4;26390:1;26383:15;26247:161;;26034:380;;;:::o;27854:277::-;27921:6;27974:2;27962:9;27953:7;27949:23;27945:32;27942:52;;;27990:1;27987;27980:12;27942:52;28022:9;28016:16;28075:5;28068:13;28061:21;28054:5;28051:32;28041:60;;28097:1;28094;28087:12;28700:222;28765:9;;;28786:10;;;28783:133;;;28838:10;28833:3;28829:20;28826:1;28819:31;28873:4;28870:1;28863:15;28901:4;28898:1;28891:15;29109:362;29314:6;29303:9;29296:25;29357:6;29352:2;29341:9;29337:18;29330:34;29400:2;29395;29384:9;29380:18;29373:30;29277:4;29420:45;29461:2;29450:9;29446:18;29438:6;29420:45;:::i;:::-;29412:53;29109:362;-1:-1:-1;;;;;29109:362:125:o;29476:315::-;-1:-1:-1;;;;;29651:32:125;;29633:51;;29720:2;29715;29700:18;;29693:30;;;-1:-1:-1;;29740:45:125;;29766:18;;29758:6;29740:45;:::i;29796:416::-;-1:-1:-1;;;;;30037:15:125;;;30019:34;;30089:15;;30084:2;30069:18;;30062:43;30141:2;30136;30121:18;;30114:30;;;29962:4;;30161:45;;30187:18;;30179:6;30161:45;:::i;30217:287::-;30346:3;30384:6;30378:13;30400:66;30459:6;30454:3;30447:4;30439:6;30435:17;30400:66;:::i;:::-;30482:16;;;;;30217:287;-1:-1:-1;;30217:287:125:o;30509:897::-;30589:6;30642:2;30630:9;30621:7;30617:23;30613:32;30610:52;;;30658:1;30655;30648:12;30610:52;30691:9;30685:16;30720:18;30761:2;30753:6;30750:14;30747:34;;;30777:1;30774;30767:12;30747:34;30815:6;30804:9;30800:22;30790:32;;30860:7;30853:4;30849:2;30845:13;30841:27;30831:55;;30882:1;30879;30872:12;30831:55;30911:2;30905:9;30933:2;30929;30926:10;30923:36;;;30939:18;;:::i;:::-;31014:2;31008:9;30982:2;31068:13;;-1:-1:-1;;31064:22:125;;;31088:2;31060:31;31056:40;31044:53;;;31112:18;;;31132:22;;;31109:46;31106:72;;;31158:18;;:::i;:::-;31198:10;31194:2;31187:22;31233:2;31225:6;31218:18;31273:7;31268:2;31263;31259;31255:11;31251:20;31248:33;31245:53;;;31294:1;31291;31284:12;31245:53;31307:68;31372:2;31367;31359:6;31355:15;31350:2;31346;31342:11;31307:68;:::i;:::-;31394:6;30509:897;-1:-1:-1;;;;;;;30509:897:125:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BASE()": "ec342ad0",
    "DEBT()": "20c61c89",
    "IS_TEST()": "fa7626d4",
    "adapter()": "03eadcfc",
    "alice()": "fb47e3a2",
    "baseImpl()": "dd5bd2c0",
    "cg()": "b215a879",
    "debtConn()": "9df8e155",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSelectors()": "b0464fdc",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "gov()": "12d43a51",
    "operator()": "570ca735",
    "oracle()": "7dc0d1d0",
    "owner()": "8da5cb5b",
    "pl()": "90e1437c",
    "registry()": "7b103999",
    "rewards()": "9ec5a894",
    "router()": "f887ea40",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_Borrow_FullFlow()": "1b985049",
    "vault()": "fbfa77cf",
    "vaultFactory()": "d8a06f73"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE\",\"outputs\":[{\"internalType\":\"contract MockERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEBT\",\"outputs\":[{\"internalType\":\"contract MockERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adapter\",\"outputs\":[{\"internalType\":\"contract MockBorrowVenueAdapter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseImpl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cg\",\"outputs\":[{\"internalType\":\"contract ConversionGateway\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debtConn\",\"outputs\":[{\"internalType\":\"contract ExternalVaultConnector\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract MockOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pl\",\"outputs\":[{\"internalType\":\"contract PositionLocker\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract SLAYRegistryV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"contract SLAYRewardsV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract SLAYRouterV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Borrow_FullFlow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract SLAYVaultV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultFactory\",\"outputs\":[{\"internalType\":\"contract SLAYVaultFactoryV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/StablecoinFull.t.sol\":\"BorrowFlowIntegrationTest\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=node_modules/@aave/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@openzeppelin/foundry-upgrades/=node_modules/@openzeppelin/foundry-upgrades/src/\",\":@satlayer/contracts/=node_modules/@satlayer/contracts/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xe9570c90b688339474e80090b0cdf0b2c85c25aa28cc6044d489dda9efc2c716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f358f7eab8cc53b784d5ff3f82073124d797638aee71487beca3543414a46a23\",\"dweb:/ipfs/QmWy153MjdHfUbqtCKELubAmMavjBEeRByTDv9MMoUVZN4\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x075302c23ba4b3a1d2a5000947ac44bbb4e84b011ecadad6f5e3fd92cd568659\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13806b62ea930e61dfba5fbbfd4eafe135bb0e2e4d55ce8cde1407d7b20a739\",\"dweb:/ipfs/QmYjt4fwBLdKrMbGHZPqdsiwsK4obFdXdKFhQBBW5ruEuC\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol\":{\"keccak256\":\"0xfd8828f97df3d421ee29b7ab5051fd465b7035cb44aa74213b8a8d5349c7558f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d56d2f64e953b65c96d6f72b73c2fc1bcc29d46baaca9c92e2c82d91ae4b3050\",\"dweb:/ipfs/QmQrjKHAY8oTnmevXndP2GDA8WS4cvjNi3gvp4jhBSpRUD\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x89374b2a634f0a9c08f5891b6ecce0179bc2e0577819c787ed3268ca428c2459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f13d2572e5bdd55e483dfac069aac47603644071616a41fce699e94368e38c13\",\"dweb:/ipfs/QmfKeyNT6vyb99vJQatPZ88UyZgXNmAiHUXSWnaR1TPE11\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x23460d4a98e568bde8b7ecaa2316853778032106b489c03be29db1abb0e712c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47b8be8c67117387069c0880d69b8df0bef52b54ba01a7f4b90c04f50655bd30\",\"dweb:/ipfs/QmNNpBXysQBbF3GSNTDsP39VBnFEBYUVeg1EWDaHzSsWSz\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa3066ff86b94128a9d3956a63a0511fa1aae41bd455772ab587b32ff322acb2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7b192fd82acf6187970c80548f624b1b9c80425b62fa49e7fdb538a52de049\",\"dweb:/ipfs/QmWXG1YCde1tqDYTbNwjkZDWVgPEjzaQGSDqWkyKLzaNua\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0xef92aebf99249a8ac1d682b9a0f04b6f2af2a8f631cb126625bab15bafcefda8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0709f54f682b4d22d3108e5951019145cd0b4abda4517638410d231f37d960\",\"dweb:/ipfs/QmdR3oRXqheNuBVRW1cMqDCffBsV1DtuvRHuaDph4ZTku2\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x46f86003755f50eff00a7c5aaf493ae62e024142b8aec4493a313851d3c14872\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462c770cb667cc75ab22df5a29c50873b24b267274edf87ac5cfe0112bf4c3f7\",\"dweb:/ipfs/QmTfKk32AkQ2yyYZCYJ44V69EM5t9ryBFC6bRF7FVMHXvj\"]},\"node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x92579f452fe663595a898cbac85d80bb3868a6c9f034f19ba7fbebdfa3b65a4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d07a888cd4a26c7077a30dd99e9ac30fbe2752bfb37e58c65f06a3b192079ef3\",\"dweb:/ipfs/QmZCQY4FC4ynBv9dha4BBWM1vYxTUJPBdFBS4HEFe6XzVB\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0x8796151c7e8fdd75a70d747201065f6d0d969d6a728a2b51804ed1e0c927a8c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a08972d66aa8d257870ba18e5a421407dfbf2372c6846b4a6d1701c271763256\",\"dweb:/ipfs/QmXsbe8iJCCXxbiKJma9MsererAQNMrPT2WqF719g1zvb1\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"node_modules/@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"node_modules/@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"node_modules/@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol\":{\"keccak256\":\"0xe32a5a466492f6a3b871d705d045fc2f8d6e6c8bf69288011531ff875003993f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61c69a907ca80a9cff4bdf30f64d5ee458a6c54f0a87ed7e4c2a1b9275256851\",\"dweb:/ipfs/QmVmhbvE7w5Hs9tj9NBPLk6yAirrEhaRYgTRT9USat4H9a\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x1fc283df727585919c3db301b948a3e827aee16917457ad7f916db9da2228e77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4f4b5e2cd0ebc3b74e41e4e94771a0417eedd9b11cec3ef9f90b2ac2989264b\",\"dweb:/ipfs/QmZmsEsvsXiwAyAe1YeoLSKezeFcvR1giUeEY6ex4zpsTS\"]},\"node_modules/@openzeppelin/foundry-upgrades/src/Defender.sol\":{\"keccak256\":\"0x2114e4d70d53b36e8cec54ba11ff78d9f38a466ec3504c76c7f26101a7cff37f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58f4d9bc58646e7631b263cdb8ef260e6818e9f716036d81d1c18218c9557a23\",\"dweb:/ipfs/QmS18L4R4gPtay9eQBcR28DnwmBkGSWsiCFwm2tXc3BkHL\"]},\"node_modules/@openzeppelin/foundry-upgrades/src/Options.sol\":{\"keccak256\":\"0xd62ea6bdc1d148c473846b5bd943144a4e492cb93496fc54645258fdc2e261f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58d96f48c6cde51bb137e851c2a481cb7f0003accfd17594c4ba0586be3c3bb\",\"dweb:/ipfs/QmdioTToxjZy2buydukEPdGrDqBEtLqtokRkN5ghgzm19V\"]},\"node_modules/@openzeppelin/foundry-upgrades/src/Upgrades.sol\":{\"keccak256\":\"0x822dc23091a6ef7c1207bdc65eba8716b635392cd061e56b99d042216686d6e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c376817ffdc56d89bdb10c4b42e56b4c4c294686f914fb65cc3e96c108f660c0\",\"dweb:/ipfs/QmXHy6WYztETzHKGjzLpDmvgFkzxsv1hEbMkEbwNyWn47o\"]},\"node_modules/@openzeppelin/foundry-upgrades/src/internal/Core.sol\":{\"keccak256\":\"0x1f671c2d16c7e66ef014d284bed46aa0fbf36d99d788e8874a8bc64f2e1f75e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991fcba03f07c28f7c04b8a85f4acbb9ffcf0f7f7e1b3e4c2eb6fc0585c2a3d1\",\"dweb:/ipfs/QmXBAMjyCnEqdYQw7vSKfQSUZK8C1aRgGXu46AiGeeut6B\"]},\"node_modules/@openzeppelin/foundry-upgrades/src/internal/DefenderDeploy.sol\":{\"keccak256\":\"0x5df88a72cb2f2e22f609636474a828595fc284e9745a7569ec73cd3c13f54ff5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec83f6823ed33ed0da807034e5556d5a84abdbb8c989fec141900d73970d05d9\",\"dweb:/ipfs/QmVb7Rfoaqn8gzKJNrSRJGVU2qSNuvMc7FJrb4j928upCK\"]},\"node_modules/@openzeppelin/foundry-upgrades/src/internal/StringFinder.sol\":{\"keccak256\":\"0x423f79ce68a98fd38d2654a47fd373f58036fbef129dd1a189d0534e67c38c50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5fec9580ff736edf6bac3f2b03f9a6c2036ba5e71bf2210491e614be8795dfd\",\"dweb:/ipfs/QmavYcUmMnf9czYo2cLxR4VLyiwtaA68yvf2g3pyoE9a4A\"]},\"node_modules/@openzeppelin/foundry-upgrades/src/internal/Utils.sol\":{\"keccak256\":\"0x96c6430958a3c74dc93b470f3656352412691e1a8c53e7225ca8b8c32ab3e77b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b1ce52f58c935c8cc930edeb13cdf6cf8d0bc2d5e58ff5f5d555383d97eda9d\",\"dweb:/ipfs/QmSWXzxtUijtQPxEQhuFw9JA5XiMWQshmYd39ZboqWRbHr\"]},\"node_modules/@openzeppelin/foundry-upgrades/src/internal/Versions.sol\":{\"keccak256\":\"0x50d28b08e922e5313831d5a45aca27d5dd429c3f891e26c89d16b088bca8372d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://208be31cc96d534f64e5293872d99cc68932df6505ea3b6b0e8f7b19cd1cd0c4\",\"dweb:/ipfs/QmbyznRaPjcZXSJ7w6ms1zrQcdtofWEPs7HSkVvFX6tQ1L\"]},\"node_modules/@openzeppelin/foundry-upgrades/src/internal/interfaces/IProxyAdmin.sol\":{\"keccak256\":\"0xf5e514595089f8959da130507086e7388602a71ce60575d141e7d892dfbddbfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b41366e2823ccc8cb42304496d761b3df80946d17384634a61afd7139495c91\",\"dweb:/ipfs/QmZE2nRMxax1NPj63ifemKdScGJzKNWi7BCGudjFLsUz1y\"]},\"node_modules/@openzeppelin/foundry-upgrades/src/internal/interfaces/IUpgradeableBeacon.sol\":{\"keccak256\":\"0xa8d7bffdd26eb763e459650c83f247b54af79800c2df52ad05878f238fc1c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed47f1e53e5eb7d48fed60a414755641fca8fa0e713fd503b2597227da78a2f\",\"dweb:/ipfs/QmQr8A5wddHdhQNauFShXxRkPcuVVpVsYpq846WhmFC8Tv\"]},\"node_modules/@openzeppelin/foundry-upgrades/src/internal/interfaces/IUpgradeableProxy.sol\":{\"keccak256\":\"0x781b564b90bba0c0e8e12fb66b1c910f42d369db469f2e88592b4cff29de99a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45fcab02a43fde934445b88e905aba3f58a70b75dd6ee6eb86a3d593424aeb03\",\"dweb:/ipfs/QmXmhAgrctaYUDLoTRgUjwD4deoXu1E2QT1kftVGcVa56j\"]},\"node_modules/@satlayer/contracts/src/MerkleProof.sol\":{\"keccak256\":\"0x2334c056ca384e72a8c1d6fb15b64dc5a6e4cb5478667dd8887c7801e3aaf195\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7a6df4b032bfa4786dffd99be22abfc4c28af7322c9e148a2e74de8be1884548\",\"dweb:/ipfs/QmWNwth1h6GQ5KCBK5XTMvYq4evDXn2ZinLx5o48VWdMvi\"]},\"node_modules/@satlayer/contracts/src/RelationshipV2.sol\":{\"keccak256\":\"0x476a00c6a985c8b5d44c81b800821ca1fb156e4d527414f5227dd1fa500248e2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2aa1058d2c60df65d564b4b453efcdd5e602310fb66eac1e313c0390d8eef763\",\"dweb:/ipfs/QmPyFGVcfeo9dRzHVYPaignPyME2pGDKFoNVhEwaZkk3LT\"]},\"node_modules/@satlayer/contracts/src/SLAYBase.sol\":{\"keccak256\":\"0xcb54991671c9d13a15852d791c6f3522bed7be17c57a66a51bfde4454aa4650b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7018ccefd60a828d7baf02b74f517ab3845c87a9be80ff1d22391ff4751cb890\",\"dweb:/ipfs/QmU3CVxE3G4n2NYb5KzWXoLyjfjxT4urW1SgbPSGPHqdkz\"]},\"node_modules/@satlayer/contracts/src/SLAYRegistryV2.sol\":{\"keccak256\":\"0x06fa99d860c131b8f048cdb256c8298b85c531459f622605aa28416128a5849d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9d7fe7fd2cdfb7383f293742c8ae5090aaa5358623280ab24271a1685f4ecb35\",\"dweb:/ipfs/QmVA8hVtJW4PajkAdjiomBcAjReCs5WU4sdBfACKztPHwh\"]},\"node_modules/@satlayer/contracts/src/SLAYRewardsV2.sol\":{\"keccak256\":\"0x2619608cdac830f1fa22e7c40f1e4e43b1d23c1a88b6c36ae8c00a2a04322da6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9aeee37002cf8a4d35c5262f82523458534c5e2813679082abc00ef2d9250447\",\"dweb:/ipfs/QmbWipdGA35cSS6feQnnpGWw6s5Bm5t1NXyz4s8HJbdT78\"]},\"node_modules/@satlayer/contracts/src/SLAYRouterV2.sol\":{\"keccak256\":\"0x71af92222bef5978b4bf835c3780e6890ee9e19996a66e56fb1b7691d123ca15\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://01e76d6de36d5808cdc8b2c4247629b7b45c9f6d309d375dcf9dcfc7b3c9acea\",\"dweb:/ipfs/Qmd8k3xfBoxvUaLZnPfgqNb9xFqbG4xoYRhAaxnTk3ZmtX\"]},\"node_modules/@satlayer/contracts/src/SLAYVaultFactoryV2.sol\":{\"keccak256\":\"0x23bbedeea912a74d8d07054d0cdfc26e40b06eae8f79f8b2a6377cd4f5b119a7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://179588dbf825522185db04bb14e299d12647e34361d88ebbec5b8bc7b1ca964b\",\"dweb:/ipfs/QmZx4c6VQ3p5ZtziCSn3745abgtJwEF7bw1SnVGSM5jfEY\"]},\"node_modules/@satlayer/contracts/src/SLAYVaultV2.sol\":{\"keccak256\":\"0xb5c4ae13fe39a5ef5acd5773987185ad4b5cceb143f98e50771f6c93991c3a63\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d1fa9a5dc554bf598f06733a011cce60147fdab53945ece943ed7509cf2b117f\",\"dweb:/ipfs/QmPivTjiNWVZSXNZ18dnHUG1Xov7H7Z4VDdQsTFG7jQgPy\"]},\"node_modules/@satlayer/contracts/src/interface/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"node_modules/@satlayer/contracts/src/interface/IERC7540.sol\":{\"keccak256\":\"0x9e130f02e48f3a015fd9e41428b1c8fb359bb7193bba4bd97f5e068af5903025\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67ebd6a0f3d0197aa74fe905b3135bd555a387bbc9d53975b1bd2134644dbf94\",\"dweb:/ipfs/QmfJytpVRmpytBunkrGLiugW3tPBZn12A3Ak9LAcV6Tj3m\"]},\"node_modules/@satlayer/contracts/src/interface/IERC7575.sol\":{\"keccak256\":\"0xb46aebdd749e632cf76466d2f75428f8e41e8283145818b621acd2624793782c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b32be8816d4658db66fdca29e9a9bc3a071bc47da19d6afa950eec5a32781ccb\",\"dweb:/ipfs/QmbJ27FAJz4rxV2xTzEPHkihYRrvhHH9mdkNSdxvba5Zxf\"]},\"node_modules/@satlayer/contracts/src/interface/ISLAYRegistryV2.sol\":{\"keccak256\":\"0x51333ef7c92f3f6d94691ea0f966acd07b12dc32277dd81892f6783b3bab2f5a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2a20146f9e3a67e6955877ac774d3d0623c80d76a8dcab49fa791cf2bb5b24d3\",\"dweb:/ipfs/QmfVYvZ8pkHvwZbSzWQNkuy3hYmdF7ZkhAmtC9fC8Lftnd\"]},\"node_modules/@satlayer/contracts/src/interface/ISLAYRewardsV2.sol\":{\"keccak256\":\"0x89f65258107bb504b36d4bc89511e667813f9f7c21bacff59ee44a84b4e36030\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cd83f14b1331eb43266c3616a6f49a8fff9ae461a1e4d929bc27d1da3974ba11\",\"dweb:/ipfs/QmVXVaqKeAcMgm18NdTyu1KHw6MSyDjhHAowzZQgyKHfzD\"]},\"node_modules/@satlayer/contracts/src/interface/ISLAYRouterSlashingV2.sol\":{\"keccak256\":\"0x2646cba81e9d4a9d7355bf82d0ae15975372446cf063630de83c443b6fbec182\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5930245bf72345a5225ce6ee11b0dcea27c6a7adc97030a5f16f2bb4182cdbbf\",\"dweb:/ipfs/QmbV3Y2sQHyPF1WgbWZQKHvh63gDnFWp3ixPhaqDPhBDCU\"]},\"node_modules/@satlayer/contracts/src/interface/ISLAYRouterV2.sol\":{\"keccak256\":\"0xcf593eb947d98627d7c3bc27250e33bc55b5d78af97fead4da64a94923839797\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://488da4391a1b48821f69440880ec5a242aad5c00fd729500bfe55fdd463eb73f\",\"dweb:/ipfs/QmVvPzoyhYmktVZwKd96QwArQ2HPjf6AUt7y3ZVqCFZsTK\"]},\"node_modules/@satlayer/contracts/src/interface/ISLAYVaultFactoryV2.sol\":{\"keccak256\":\"0x7f25f9f0221087d0f0ac229c1c9a1d2ec9c708f77af32951048d9b93ea7d68d3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2c1c6c91c62559f10c239a9a0f6115552fc551cbf6a012b0b5a94e2b6f19003f\",\"dweb:/ipfs/QmWXZXqyibNKzM7n814QKvf1PSBgfYELG8PLVeYKX1SK9p\"]},\"node_modules/@satlayer/contracts/src/interface/ISLAYVaultV2.sol\":{\"keccak256\":\"0xc31f89d1eedddb30e6d4670b53f7a7b928a4002d2ac04f25b409b6eeff80ceb5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0b5d5d80ac3cf14680a86d16a6436275dc48a02e8263689ca1e5555cb4bd8797\",\"dweb:/ipfs/QmbEMuJDvQbqguNiZ5gn47LwYkvc7po3zdWApaxwmcFHKD\"]},\"node_modules/@satlayer/contracts/test/MockERC20.sol\":{\"keccak256\":\"0x971d55f75400611df4ea7a3e5bcf31212e5b5c537d895c9789554ac40e70f5af\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://12c60932fb2b09f777c33f543c6e2bc088f4da5d6d445b5f6d9250680e669cd2\",\"dweb:/ipfs/QmextXW1Bo6uspRPBb6cPszKVuuqPtUtsSCUKYTE4uksa5\"]},\"node_modules/@satlayer/contracts/test/TestSuiteV2.sol\":{\"keccak256\":\"0xb513cae5cb63d6310cf46da958a70e24d938b05543ce103f09263b2dfe47676e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5288b7dc83b485bc3fe8299fd7368811e7fde7ee4ffda689a78b3577df6e22bc\",\"dweb:/ipfs/QmRvY1BAwaoKDwumppSnapswZva7vUWJktn7gPeVf9b66a\"]},\"node_modules/forge-std/src/Base.sol\":{\"keccak256\":\"0xa3735a6618a3014e42bb4329ad143e3b2c59cd95094350202e4c4a06c9d585dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eef9db48d94726ec3d3fa3a84a8d520903705190f7ee7a04a065335a6aeeac4d\",\"dweb:/ipfs/QmSWmNny7TkzyqRPjGdpERAJuBwwznrGPLUqS4DZy5fX5z\"]},\"node_modules/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"node_modules/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xd3edaf57db178f839d97ccee0009c2b7b20f78c2adca9028a6013acb8d5b4c5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f17329ac1d25d3e6657ca240dee0a3f9b2cf22a64a05b87dac15252dee74351\",\"dweb:/ipfs/QmPHxkEwgVpQNbU52s58RmmegrkYGj8bNKTVSW8rZm3dBm\"]},\"node_modules/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0fa6ec03602648b62cce41aab2096e6b7e052f2846075d967b6958dd586db746\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd84e2ca9c1eaed6b76768cc12bb8c1af8289170ea8b7706f58d516460d79c41\",\"dweb:/ipfs/QmQ7BK7co6DE4eWUqMyv11s5eHYkS1tyx8tDSZGZVtf2aK\"]},\"node_modules/forge-std/src/StdConstants.sol\":{\"keccak256\":\"0x319ccdabfa2c0b2428301445873270ffea20f0e039d4fd5e6eeba65158e4e534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b633f9d3a719e1d035ce7daa6cc051ddf89a72d34200d14cec37728e245cdabc\",\"dweb:/ipfs/QmRP7HQJpHMx1CsFrY8tXVVx1DQmi2dcb2BoGfiWaA923r\"]},\"node_modules/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"node_modules/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"node_modules/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974\",\"dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3\"]},\"node_modules/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"node_modules/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb91ab24383a5872b894fc93325eef1add6cbbf981628f18e860068bf88bb7dcc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2651e33b9ac8fc5803ed0a43078c1bf4fa90a0b0347aafd95776b02daccdcc57\",\"dweb:/ipfs/QmbdRyPuGJdZgnCuMnp7c1WsBo1Spf7j1KMmws1Z5rd4BQ\"]},\"node_modules/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"node_modules/forge-std/src/StdToml.sol\":{\"keccak256\":\"0x58a72c765ed3f7ff6b105509689658795b8a3739b8931772a497155878381861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4a3746f4fabaeb980bd77d9e091d3904ee38a6c0e191bfa8ba6874c6f8558a3\",\"dweb:/ipfs/QmUfFDMEn461FgGEXt5HicyGD54sc28sLaQ9JRWDMBKed8\"]},\"node_modules/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x7274081e11c05164fd8eadde4de8305c033e58a43008dea58065f3170ccf0737\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9801614b6c9d3e472982e6cc68f5f1ad03682f84eafb686be65633c7132d138\",\"dweb:/ipfs/QmcQSUcrm2A7XuektnxJjvYGmZtBeA6LKPxCXRqdXBX776\"]},\"node_modules/forge-std/src/Test.sol\":{\"keccak256\":\"0x3dda6083a83dfa3e8526e97bcc28e862ee2442dd58fe94d5c426d65b8e38f73c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33f8c02e4dabdab86a6825125856446a8657eacd712318b51b7818e4a6f6e3f4\",\"dweb:/ipfs/QmRKSjVnrk54yr8wTK2e6QxRjiuba2H8HJSKunHAkdo7RG\"]},\"node_modules/forge-std/src/Vm.sol\":{\"keccak256\":\"0xaae88142a348064677cf81169ea0ca706be3e99e2a0f13a01878ff8d52cf6b25\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://da4fb0ed1b31381c7e60ee386acc72796e8a8325c83739ec9a3678e2f841073c\",\"dweb:/ipfs/Qmb4MU6FpAi8Wt5kUQ3wa7ooHnfMVbdd9zuvnqbTehLmxJ\"]},\"node_modules/forge-std/src/console.sol\":{\"keccak256\":\"0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57\",\"dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP\"]},\"node_modules/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"node_modules/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab\",\"dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3\"]},\"src/ConversionGateway.sol\":{\"keccak256\":\"0x8cc3d163dd76ae4e87197f5e42e1788b3c16156c0f987e1de7f2c96fd6349abc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa620f309773351212554699e9a36056936669ade6a2bdf5fb3211ec221e839d\",\"dweb:/ipfs/QmbUgvhB6dnZp9QgZNXYQwfkcehPn4ZsX1PMxVdZWVPqtH\"]},\"src/ExternalVaultConnector.sol\":{\"keccak256\":\"0xc373da31e70ac217888a1f9338c1d108b1457903f688439950084a2bf082c2a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2cb5394419cd09cb81c29a3fdf80ce9be9ae13d8408636b667a783282e3dda7\",\"dweb:/ipfs/QmaFkyv74Lgf1YymEepU4tvSFKZa35D1DvbdTPhWZYhb2y\"]},\"src/PositionLocker.sol\":{\"keccak256\":\"0xcb7927f664d536eb691b68a6145a1b1d4f6314de2cb61a87bab45ff1e8c3aa48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3e4f25d25235d50a288449ba179485fb488cc4447c90a74e8ad626b807e7fb3\",\"dweb:/ipfs/QmapXSokC1c1gynzWQDzy8PjMuTG1m6GrjTLokJvdTci7m\"]},\"src/interfaces/IBorrowVenueAdapter.sol\":{\"keccak256\":\"0x4648ca96593f035c7cc74cc6081a419a09bf5cbe88a750ca431e6d733734daf5\",\"urls\":[\"bzz-raw://8335af26c7daf89907d675cbf4acf6eb14ffdffa7928e3ebe0c551f236115548\",\"dweb:/ipfs/QmUTqUgAMQbkzaLT7gyTHJ8G9ZmeEqNgztvdJbYbK4LsaU\"]},\"test/StablecoinFull.t.sol\":{\"keccak256\":\"0xf291bb6d19a0dbbe192f0b8df116eca5eaaa8775f6dc53d73d82281df34ccb42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7fad7e2951437384f8c20e9c0d9c9124f3ad092e1a75c7b7387564f9f148a2f\",\"dweb:/ipfs/QmY26axrQXK72FeFVyAF1sVkeQZMgbBZAjjyUxq21eheii\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.24+commit.e11b9ed9" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [{ "internalType": "string", "name": "", "type": "string", "indexed": false }],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "address", "name": "", "type": "address", "indexed": false }],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "uint256[]", "name": "val", "type": "uint256[]", "indexed": false }],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "int256[]", "name": "val", "type": "int256[]", "indexed": false }],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "address[]", "name": "val", "type": "address[]", "indexed": false }],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "bytes", "name": "", "type": "bytes", "indexed": false }],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32", "indexed": false }],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "int256", "name": "", "type": "int256", "indexed": false }],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "address", "name": "val", "type": "address", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "uint256[]", "name": "val", "type": "uint256[]", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "int256[]", "name": "val", "type": "int256[]", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "address[]", "name": "val", "type": "address[]", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "bytes", "name": "val", "type": "bytes", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "bytes32", "name": "val", "type": "bytes32", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "int256", "name": "val", "type": "int256", "indexed": false },
            { "internalType": "uint256", "name": "decimals", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "uint256", "name": "val", "type": "uint256", "indexed": false },
            { "internalType": "uint256", "name": "decimals", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "int256", "name": "val", "type": "int256", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "string", "name": "val", "type": "string", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "uint256", "name": "val", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "string", "name": "", "type": "string", "indexed": false }],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256", "indexed": false }],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "bytes", "name": "", "type": "bytes", "indexed": false }],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BASE",
          "outputs": [{ "internalType": "contract MockERC20", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEBT",
          "outputs": [{ "internalType": "contract MockERC20", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "adapter",
          "outputs": [{ "internalType": "contract MockBorrowVenueAdapter", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseImpl",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cg",
          "outputs": [{ "internalType": "contract ConversionGateway", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "debtConn",
          "outputs": [{ "internalType": "contract ExternalVaultConnector", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [{ "internalType": "string[]", "name": "excludedArtifacts_", "type": "string[]" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [{ "internalType": "address[]", "name": "excludedContracts_", "type": "address[]" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "excludedSelectors_",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "addr", "type": "address" },
                { "internalType": "bytes4[]", "name": "selectors", "type": "bytes4[]" }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [{ "internalType": "address[]", "name": "excludedSenders_", "type": "address[]" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gov",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operator",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "oracle",
          "outputs": [{ "internalType": "contract MockOracle", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pl",
          "outputs": [{ "internalType": "contract PositionLocker", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "registry",
          "outputs": [{ "internalType": "contract SLAYRegistryV2", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewards",
          "outputs": [{ "internalType": "contract SLAYRewardsV2", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "router",
          "outputs": [{ "internalType": "contract SLAYRouterV2", "name": "", "type": "address" }]
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "setUp" },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                { "internalType": "string", "name": "artifact", "type": "string" },
                { "internalType": "bytes4[]", "name": "selectors", "type": "bytes4[]" }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [{ "internalType": "string[]", "name": "targetedArtifacts_", "type": "string[]" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [{ "internalType": "address[]", "name": "targetedContracts_", "type": "address[]" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "addr", "type": "address" },
                { "internalType": "string[]", "name": "artifacts", "type": "string[]" }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "addr", "type": "address" },
                { "internalType": "bytes4[]", "name": "selectors", "type": "bytes4[]" }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [{ "internalType": "address[]", "name": "targetedSenders_", "type": "address[]" }]
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "test_Borrow_FullFlow" },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vault",
          "outputs": [{ "internalType": "contract SLAYVaultV2", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultFactory",
          "outputs": [{ "internalType": "contract SLAYVaultFactoryV2", "name": "", "type": "address" }]
        }
      ],
      "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@aave/=node_modules/@aave/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@openzeppelin/foundry-upgrades/=node_modules/@openzeppelin/foundry-upgrades/src/",
        "@satlayer/contracts/=node_modules/@satlayer/contracts/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "test/StablecoinFull.t.sol": "BorrowFlowIntegrationTest" },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0xe9570c90b688339474e80090b0cdf0b2c85c25aa28cc6044d489dda9efc2c716",
        "urls": [
          "bzz-raw://f358f7eab8cc53b784d5ff3f82073124d797638aee71487beca3543414a46a23",
          "dweb:/ipfs/QmWy153MjdHfUbqtCKELubAmMavjBEeRByTDv9MMoUVZN4"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
        "urls": [
          "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
          "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63",
        "urls": [
          "bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec",
          "dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022",
        "urls": [
          "bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0",
          "dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol": {
        "keccak256": "0x075302c23ba4b3a1d2a5000947ac44bbb4e84b011ecadad6f5e3fd92cd568659",
        "urls": [
          "bzz-raw://c13806b62ea930e61dfba5fbbfd4eafe135bb0e2e4d55ce8cde1407d7b20a739",
          "dweb:/ipfs/QmYjt4fwBLdKrMbGHZPqdsiwsK4obFdXdKFhQBBW5ruEuC"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol": {
        "keccak256": "0xfd8828f97df3d421ee29b7ab5051fd465b7035cb44aa74213b8a8d5349c7558f",
        "urls": [
          "bzz-raw://d56d2f64e953b65c96d6f72b73c2fc1bcc29d46baaca9c92e2c82d91ae4b3050",
          "dweb:/ipfs/QmQrjKHAY8oTnmevXndP2GDA8WS4cvjNi3gvp4jhBSpRUD"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol": {
        "keccak256": "0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4",
        "urls": [
          "bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827",
          "dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
        "keccak256": "0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5",
        "urls": [
          "bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb",
          "dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866",
        "urls": [
          "bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf",
          "dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol": {
        "keccak256": "0x89374b2a634f0a9c08f5891b6ecce0179bc2e0577819c787ed3268ca428c2459",
        "urls": [
          "bzz-raw://f13d2572e5bdd55e483dfac069aac47603644071616a41fce699e94368e38c13",
          "dweb:/ipfs/QmfKeyNT6vyb99vJQatPZ88UyZgXNmAiHUXSWnaR1TPE11"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f",
        "urls": [
          "bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a",
          "dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af",
        "urls": [
          "bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c",
          "dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c",
        "urls": [
          "bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d",
          "dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d",
        "urls": [
          "bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100",
          "dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc",
        "urls": [
          "bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037",
          "dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5",
        "urls": [
          "bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c",
          "dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44",
        "urls": [
          "bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d",
          "dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC4626.sol": {
        "keccak256": "0x23460d4a98e568bde8b7ecaa2316853778032106b489c03be29db1abb0e712c4",
        "urls": [
          "bzz-raw://47b8be8c67117387069c0880d69b8df0bef52b54ba01a7f4b90c04f50655bd30",
          "dweb:/ipfs/QmNNpBXysQBbF3GSNTDsP39VBnFEBYUVeg1EWDaHzSsWSz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee",
        "urls": [
          "bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae",
          "dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b",
        "urls": [
          "bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422",
          "dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e",
        "urls": [
          "bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23",
          "dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0xa3066ff86b94128a9d3956a63a0511fa1aae41bd455772ab587b32ff322acb2e",
        "urls": [
          "bzz-raw://bf7b192fd82acf6187970c80548f624b1b9c80425b62fa49e7fdb538a52de049",
          "dweb:/ipfs/QmWXG1YCde1tqDYTbNwjkZDWVgPEjzaQGSDqWkyKLzaNua"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618",
        "urls": [
          "bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a",
          "dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
        "urls": [
          "bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
          "dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0xef92aebf99249a8ac1d682b9a0f04b6f2af2a8f631cb126625bab15bafcefda8",
        "urls": [
          "bzz-raw://9a0709f54f682b4d22d3108e5951019145cd0b4abda4517638410d231f37d960",
          "dweb:/ipfs/QmdR3oRXqheNuBVRW1cMqDCffBsV1DtuvRHuaDph4ZTku2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b",
        "urls": [
          "bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d",
          "dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
        "keccak256": "0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b",
        "urls": [
          "bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299",
          "dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol": {
        "keccak256": "0x46f86003755f50eff00a7c5aaf493ae62e024142b8aec4493a313851d3c14872",
        "urls": [
          "bzz-raw://462c770cb667cc75ab22df5a29c50873b24b267274edf87ac5cfe0112bf4c3f7",
          "dweb:/ipfs/QmTfKk32AkQ2yyYZCYJ44V69EM5t9ryBFC6bRF7FVMHXvj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "keccak256": "0x92579f452fe663595a898cbac85d80bb3868a6c9f034f19ba7fbebdfa3b65a4d",
        "urls": [
          "bzz-raw://d07a888cd4a26c7077a30dd99e9ac30fbe2752bfb37e58c65f06a3b192079ef3",
          "dweb:/ipfs/QmZCQY4FC4ynBv9dha4BBWM1vYxTUJPBdFBS4HEFe6XzVB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994",
        "urls": [
          "bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c",
          "dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
        "urls": [
          "bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
          "dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol": {
        "keccak256": "0x8796151c7e8fdd75a70d747201065f6d0d969d6a728a2b51804ed1e0c927a8c9",
        "urls": [
          "bzz-raw://a08972d66aa8d257870ba18e5a421407dfbf2372c6846b4a6d1701c271763256",
          "dweb:/ipfs/QmXsbe8iJCCXxbiKJma9MsererAQNMrPT2WqF719g1zvb1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f",
        "urls": [
          "bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e",
          "dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4",
        "urls": [
          "bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a",
          "dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5",
        "urls": [
          "bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508",
          "dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0",
        "urls": [
          "bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f",
          "dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Arrays.sol": {
        "keccak256": "0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e",
        "urls": [
          "bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d",
          "dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Comparators.sol": {
        "keccak256": "0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58",
        "urls": [
          "bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd",
          "dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Errors.sol": {
        "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
        "urls": [
          "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
          "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Panic.sol": {
        "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
        "urls": [
          "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
          "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Pausable.sol": {
        "keccak256": "0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f",
        "urls": [
          "bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c",
          "dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "keccak256": "0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3",
        "urls": [
          "bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a",
          "dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/SlotDerivation.sol": {
        "keccak256": "0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26",
        "urls": [
          "bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2",
          "dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
        "urls": [
          "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
          "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4",
        "urls": [
          "bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e",
          "dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84",
        "urls": [
          "bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9",
          "dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
        "keccak256": "0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631",
        "urls": [
          "bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59",
          "dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e",
        "urls": [
          "bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377",
          "dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c",
        "urls": [
          "bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617",
          "dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6",
        "urls": [
          "bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3",
          "dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
        "urls": [
          "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
          "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
        "urls": [
          "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
          "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/Checkpoints.sol": {
        "keccak256": "0xe32a5a466492f6a3b871d705d045fc2f8d6e6c8bf69288011531ff875003993f",
        "urls": [
          "bzz-raw://61c69a907ca80a9cff4bdf30f64d5ee458a6c54f0a87ed7e4c2a1b9275256851",
          "dweb:/ipfs/QmVmhbvE7w5Hs9tj9NBPLk6yAirrEhaRYgTRT9USat4H9a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x1fc283df727585919c3db301b948a3e827aee16917457ad7f916db9da2228e77",
        "urls": [
          "bzz-raw://a4f4b5e2cd0ebc3b74e41e4e94771a0417eedd9b11cec3ef9f90b2ac2989264b",
          "dweb:/ipfs/QmZmsEsvsXiwAyAe1YeoLSKezeFcvR1giUeEY6ex4zpsTS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/foundry-upgrades/src/Defender.sol": {
        "keccak256": "0x2114e4d70d53b36e8cec54ba11ff78d9f38a466ec3504c76c7f26101a7cff37f",
        "urls": [
          "bzz-raw://58f4d9bc58646e7631b263cdb8ef260e6818e9f716036d81d1c18218c9557a23",
          "dweb:/ipfs/QmS18L4R4gPtay9eQBcR28DnwmBkGSWsiCFwm2tXc3BkHL"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/foundry-upgrades/src/Options.sol": {
        "keccak256": "0xd62ea6bdc1d148c473846b5bd943144a4e492cb93496fc54645258fdc2e261f7",
        "urls": [
          "bzz-raw://c58d96f48c6cde51bb137e851c2a481cb7f0003accfd17594c4ba0586be3c3bb",
          "dweb:/ipfs/QmdioTToxjZy2buydukEPdGrDqBEtLqtokRkN5ghgzm19V"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/foundry-upgrades/src/Upgrades.sol": {
        "keccak256": "0x822dc23091a6ef7c1207bdc65eba8716b635392cd061e56b99d042216686d6e2",
        "urls": [
          "bzz-raw://c376817ffdc56d89bdb10c4b42e56b4c4c294686f914fb65cc3e96c108f660c0",
          "dweb:/ipfs/QmXHy6WYztETzHKGjzLpDmvgFkzxsv1hEbMkEbwNyWn47o"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/foundry-upgrades/src/internal/Core.sol": {
        "keccak256": "0x1f671c2d16c7e66ef014d284bed46aa0fbf36d99d788e8874a8bc64f2e1f75e9",
        "urls": [
          "bzz-raw://991fcba03f07c28f7c04b8a85f4acbb9ffcf0f7f7e1b3e4c2eb6fc0585c2a3d1",
          "dweb:/ipfs/QmXBAMjyCnEqdYQw7vSKfQSUZK8C1aRgGXu46AiGeeut6B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/foundry-upgrades/src/internal/DefenderDeploy.sol": {
        "keccak256": "0x5df88a72cb2f2e22f609636474a828595fc284e9745a7569ec73cd3c13f54ff5",
        "urls": [
          "bzz-raw://ec83f6823ed33ed0da807034e5556d5a84abdbb8c989fec141900d73970d05d9",
          "dweb:/ipfs/QmVb7Rfoaqn8gzKJNrSRJGVU2qSNuvMc7FJrb4j928upCK"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/foundry-upgrades/src/internal/StringFinder.sol": {
        "keccak256": "0x423f79ce68a98fd38d2654a47fd373f58036fbef129dd1a189d0534e67c38c50",
        "urls": [
          "bzz-raw://d5fec9580ff736edf6bac3f2b03f9a6c2036ba5e71bf2210491e614be8795dfd",
          "dweb:/ipfs/QmavYcUmMnf9czYo2cLxR4VLyiwtaA68yvf2g3pyoE9a4A"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/foundry-upgrades/src/internal/Utils.sol": {
        "keccak256": "0x96c6430958a3c74dc93b470f3656352412691e1a8c53e7225ca8b8c32ab3e77b",
        "urls": [
          "bzz-raw://7b1ce52f58c935c8cc930edeb13cdf6cf8d0bc2d5e58ff5f5d555383d97eda9d",
          "dweb:/ipfs/QmSWXzxtUijtQPxEQhuFw9JA5XiMWQshmYd39ZboqWRbHr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/foundry-upgrades/src/internal/Versions.sol": {
        "keccak256": "0x50d28b08e922e5313831d5a45aca27d5dd429c3f891e26c89d16b088bca8372d",
        "urls": [
          "bzz-raw://208be31cc96d534f64e5293872d99cc68932df6505ea3b6b0e8f7b19cd1cd0c4",
          "dweb:/ipfs/QmbyznRaPjcZXSJ7w6ms1zrQcdtofWEPs7HSkVvFX6tQ1L"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/foundry-upgrades/src/internal/interfaces/IProxyAdmin.sol": {
        "keccak256": "0xf5e514595089f8959da130507086e7388602a71ce60575d141e7d892dfbddbfc",
        "urls": [
          "bzz-raw://9b41366e2823ccc8cb42304496d761b3df80946d17384634a61afd7139495c91",
          "dweb:/ipfs/QmZE2nRMxax1NPj63ifemKdScGJzKNWi7BCGudjFLsUz1y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/foundry-upgrades/src/internal/interfaces/IUpgradeableBeacon.sol": {
        "keccak256": "0xa8d7bffdd26eb763e459650c83f247b54af79800c2df52ad05878f238fc1c2f8",
        "urls": [
          "bzz-raw://8ed47f1e53e5eb7d48fed60a414755641fca8fa0e713fd503b2597227da78a2f",
          "dweb:/ipfs/QmQr8A5wddHdhQNauFShXxRkPcuVVpVsYpq846WhmFC8Tv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/foundry-upgrades/src/internal/interfaces/IUpgradeableProxy.sol": {
        "keccak256": "0x781b564b90bba0c0e8e12fb66b1c910f42d369db469f2e88592b4cff29de99a5",
        "urls": [
          "bzz-raw://45fcab02a43fde934445b88e905aba3f58a70b75dd6ee6eb86a3d593424aeb03",
          "dweb:/ipfs/QmXmhAgrctaYUDLoTRgUjwD4deoXu1E2QT1kftVGcVa56j"
        ],
        "license": "MIT"
      },
      "node_modules/@satlayer/contracts/src/MerkleProof.sol": {
        "keccak256": "0x2334c056ca384e72a8c1d6fb15b64dc5a6e4cb5478667dd8887c7801e3aaf195",
        "urls": [
          "bzz-raw://7a6df4b032bfa4786dffd99be22abfc4c28af7322c9e148a2e74de8be1884548",
          "dweb:/ipfs/QmWNwth1h6GQ5KCBK5XTMvYq4evDXn2ZinLx5o48VWdMvi"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/RelationshipV2.sol": {
        "keccak256": "0x476a00c6a985c8b5d44c81b800821ca1fb156e4d527414f5227dd1fa500248e2",
        "urls": [
          "bzz-raw://2aa1058d2c60df65d564b4b453efcdd5e602310fb66eac1e313c0390d8eef763",
          "dweb:/ipfs/QmPyFGVcfeo9dRzHVYPaignPyME2pGDKFoNVhEwaZkk3LT"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/SLAYBase.sol": {
        "keccak256": "0xcb54991671c9d13a15852d791c6f3522bed7be17c57a66a51bfde4454aa4650b",
        "urls": [
          "bzz-raw://7018ccefd60a828d7baf02b74f517ab3845c87a9be80ff1d22391ff4751cb890",
          "dweb:/ipfs/QmU3CVxE3G4n2NYb5KzWXoLyjfjxT4urW1SgbPSGPHqdkz"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/SLAYRegistryV2.sol": {
        "keccak256": "0x06fa99d860c131b8f048cdb256c8298b85c531459f622605aa28416128a5849d",
        "urls": [
          "bzz-raw://9d7fe7fd2cdfb7383f293742c8ae5090aaa5358623280ab24271a1685f4ecb35",
          "dweb:/ipfs/QmVA8hVtJW4PajkAdjiomBcAjReCs5WU4sdBfACKztPHwh"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/SLAYRewardsV2.sol": {
        "keccak256": "0x2619608cdac830f1fa22e7c40f1e4e43b1d23c1a88b6c36ae8c00a2a04322da6",
        "urls": [
          "bzz-raw://9aeee37002cf8a4d35c5262f82523458534c5e2813679082abc00ef2d9250447",
          "dweb:/ipfs/QmbWipdGA35cSS6feQnnpGWw6s5Bm5t1NXyz4s8HJbdT78"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/SLAYRouterV2.sol": {
        "keccak256": "0x71af92222bef5978b4bf835c3780e6890ee9e19996a66e56fb1b7691d123ca15",
        "urls": [
          "bzz-raw://01e76d6de36d5808cdc8b2c4247629b7b45c9f6d309d375dcf9dcfc7b3c9acea",
          "dweb:/ipfs/Qmd8k3xfBoxvUaLZnPfgqNb9xFqbG4xoYRhAaxnTk3ZmtX"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/SLAYVaultFactoryV2.sol": {
        "keccak256": "0x23bbedeea912a74d8d07054d0cdfc26e40b06eae8f79f8b2a6377cd4f5b119a7",
        "urls": [
          "bzz-raw://179588dbf825522185db04bb14e299d12647e34361d88ebbec5b8bc7b1ca964b",
          "dweb:/ipfs/QmZx4c6VQ3p5ZtziCSn3745abgtJwEF7bw1SnVGSM5jfEY"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/SLAYVaultV2.sol": {
        "keccak256": "0xb5c4ae13fe39a5ef5acd5773987185ad4b5cceb143f98e50771f6c93991c3a63",
        "urls": [
          "bzz-raw://d1fa9a5dc554bf598f06733a011cce60147fdab53945ece943ed7509cf2b117f",
          "dweb:/ipfs/QmPivTjiNWVZSXNZ18dnHUG1Xov7H7Z4VDdQsTFG7jQgPy"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/interface/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "node_modules/@satlayer/contracts/src/interface/IERC7540.sol": {
        "keccak256": "0x9e130f02e48f3a015fd9e41428b1c8fb359bb7193bba4bd97f5e068af5903025",
        "urls": [
          "bzz-raw://67ebd6a0f3d0197aa74fe905b3135bd555a387bbc9d53975b1bd2134644dbf94",
          "dweb:/ipfs/QmfJytpVRmpytBunkrGLiugW3tPBZn12A3Ak9LAcV6Tj3m"
        ],
        "license": "MIT"
      },
      "node_modules/@satlayer/contracts/src/interface/IERC7575.sol": {
        "keccak256": "0xb46aebdd749e632cf76466d2f75428f8e41e8283145818b621acd2624793782c",
        "urls": [
          "bzz-raw://b32be8816d4658db66fdca29e9a9bc3a071bc47da19d6afa950eec5a32781ccb",
          "dweb:/ipfs/QmbJ27FAJz4rxV2xTzEPHkihYRrvhHH9mdkNSdxvba5Zxf"
        ],
        "license": "MIT"
      },
      "node_modules/@satlayer/contracts/src/interface/ISLAYRegistryV2.sol": {
        "keccak256": "0x51333ef7c92f3f6d94691ea0f966acd07b12dc32277dd81892f6783b3bab2f5a",
        "urls": [
          "bzz-raw://2a20146f9e3a67e6955877ac774d3d0623c80d76a8dcab49fa791cf2bb5b24d3",
          "dweb:/ipfs/QmfVYvZ8pkHvwZbSzWQNkuy3hYmdF7ZkhAmtC9fC8Lftnd"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/interface/ISLAYRewardsV2.sol": {
        "keccak256": "0x89f65258107bb504b36d4bc89511e667813f9f7c21bacff59ee44a84b4e36030",
        "urls": [
          "bzz-raw://cd83f14b1331eb43266c3616a6f49a8fff9ae461a1e4d929bc27d1da3974ba11",
          "dweb:/ipfs/QmVXVaqKeAcMgm18NdTyu1KHw6MSyDjhHAowzZQgyKHfzD"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/interface/ISLAYRouterSlashingV2.sol": {
        "keccak256": "0x2646cba81e9d4a9d7355bf82d0ae15975372446cf063630de83c443b6fbec182",
        "urls": [
          "bzz-raw://5930245bf72345a5225ce6ee11b0dcea27c6a7adc97030a5f16f2bb4182cdbbf",
          "dweb:/ipfs/QmbV3Y2sQHyPF1WgbWZQKHvh63gDnFWp3ixPhaqDPhBDCU"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/interface/ISLAYRouterV2.sol": {
        "keccak256": "0xcf593eb947d98627d7c3bc27250e33bc55b5d78af97fead4da64a94923839797",
        "urls": [
          "bzz-raw://488da4391a1b48821f69440880ec5a242aad5c00fd729500bfe55fdd463eb73f",
          "dweb:/ipfs/QmVvPzoyhYmktVZwKd96QwArQ2HPjf6AUt7y3ZVqCFZsTK"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/interface/ISLAYVaultFactoryV2.sol": {
        "keccak256": "0x7f25f9f0221087d0f0ac229c1c9a1d2ec9c708f77af32951048d9b93ea7d68d3",
        "urls": [
          "bzz-raw://2c1c6c91c62559f10c239a9a0f6115552fc551cbf6a012b0b5a94e2b6f19003f",
          "dweb:/ipfs/QmWXZXqyibNKzM7n814QKvf1PSBgfYELG8PLVeYKX1SK9p"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/src/interface/ISLAYVaultV2.sol": {
        "keccak256": "0xc31f89d1eedddb30e6d4670b53f7a7b928a4002d2ac04f25b409b6eeff80ceb5",
        "urls": [
          "bzz-raw://0b5d5d80ac3cf14680a86d16a6436275dc48a02e8263689ca1e5555cb4bd8797",
          "dweb:/ipfs/QmbEMuJDvQbqguNiZ5gn47LwYkvc7po3zdWApaxwmcFHKD"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/test/MockERC20.sol": {
        "keccak256": "0x971d55f75400611df4ea7a3e5bcf31212e5b5c537d895c9789554ac40e70f5af",
        "urls": [
          "bzz-raw://12c60932fb2b09f777c33f543c6e2bc088f4da5d6d445b5f6d9250680e669cd2",
          "dweb:/ipfs/QmextXW1Bo6uspRPBb6cPszKVuuqPtUtsSCUKYTE4uksa5"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@satlayer/contracts/test/TestSuiteV2.sol": {
        "keccak256": "0xb513cae5cb63d6310cf46da958a70e24d938b05543ce103f09263b2dfe47676e",
        "urls": [
          "bzz-raw://5288b7dc83b485bc3fe8299fd7368811e7fde7ee4ffda689a78b3577df6e22bc",
          "dweb:/ipfs/QmRvY1BAwaoKDwumppSnapswZva7vUWJktn7gPeVf9b66a"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/forge-std/src/Base.sol": {
        "keccak256": "0xa3735a6618a3014e42bb4329ad143e3b2c59cd95094350202e4c4a06c9d585dd",
        "urls": [
          "bzz-raw://eef9db48d94726ec3d3fa3a84a8d520903705190f7ee7a04a065335a6aeeac4d",
          "dweb:/ipfs/QmSWmNny7TkzyqRPjGdpERAJuBwwznrGPLUqS4DZy5fX5z"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270",
        "urls": [
          "bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe",
          "dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdChains.sol": {
        "keccak256": "0xd3edaf57db178f839d97ccee0009c2b7b20f78c2adca9028a6013acb8d5b4c5e",
        "urls": [
          "bzz-raw://0f17329ac1d25d3e6657ca240dee0a3f9b2cf22a64a05b87dac15252dee74351",
          "dweb:/ipfs/QmPHxkEwgVpQNbU52s58RmmegrkYGj8bNKTVSW8rZm3dBm"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0fa6ec03602648b62cce41aab2096e6b7e052f2846075d967b6958dd586db746",
        "urls": [
          "bzz-raw://cd84e2ca9c1eaed6b76768cc12bb8c1af8289170ea8b7706f58d516460d79c41",
          "dweb:/ipfs/QmQ7BK7co6DE4eWUqMyv11s5eHYkS1tyx8tDSZGZVtf2aK"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdConstants.sol": {
        "keccak256": "0x319ccdabfa2c0b2428301445873270ffea20f0e039d4fd5e6eeba65158e4e534",
        "urls": [
          "bzz-raw://b633f9d3a719e1d035ce7daa6cc051ddf89a72d34200d14cec37728e245cdabc",
          "dweb:/ipfs/QmRP7HQJpHMx1CsFrY8tXVVx1DQmi2dcb2BoGfiWaA923r"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d",
        "urls": [
          "bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391",
          "dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdJson.sol": {
        "keccak256": "0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500",
        "urls": [
          "bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974",
          "dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb91ab24383a5872b894fc93325eef1add6cbbf981628f18e860068bf88bb7dcc",
        "urls": [
          "bzz-raw://2651e33b9ac8fc5803ed0a43078c1bf4fa90a0b0347aafd95776b02daccdcc57",
          "dweb:/ipfs/QmbdRyPuGJdZgnCuMnp7c1WsBo1Spf7j1KMmws1Z5rd4BQ"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdToml.sol": {
        "keccak256": "0x58a72c765ed3f7ff6b105509689658795b8a3739b8931772a497155878381861",
        "urls": [
          "bzz-raw://b4a3746f4fabaeb980bd77d9e091d3904ee38a6c0e191bfa8ba6874c6f8558a3",
          "dweb:/ipfs/QmUfFDMEn461FgGEXt5HicyGD54sc28sLaQ9JRWDMBKed8"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdUtils.sol": {
        "keccak256": "0x7274081e11c05164fd8eadde4de8305c033e58a43008dea58065f3170ccf0737",
        "urls": [
          "bzz-raw://e9801614b6c9d3e472982e6cc68f5f1ad03682f84eafb686be65633c7132d138",
          "dweb:/ipfs/QmcQSUcrm2A7XuektnxJjvYGmZtBeA6LKPxCXRqdXBX776"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Test.sol": {
        "keccak256": "0x3dda6083a83dfa3e8526e97bcc28e862ee2442dd58fe94d5c426d65b8e38f73c",
        "urls": [
          "bzz-raw://33f8c02e4dabdab86a6825125856446a8657eacd712318b51b7818e4a6f6e3f4",
          "dweb:/ipfs/QmRKSjVnrk54yr8wTK2e6QxRjiuba2H8HJSKunHAkdo7RG"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Vm.sol": {
        "keccak256": "0xaae88142a348064677cf81169ea0ca706be3e99e2a0f13a01878ff8d52cf6b25",
        "urls": [
          "bzz-raw://da4fb0ed1b31381c7e60ee386acc72796e8a8325c83739ec9a3678e2f841073c",
          "dweb:/ipfs/Qmb4MU6FpAi8Wt5kUQ3wa7ooHnfMVbdd9zuvnqbTehLmxJ"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "node_modules/forge-std/src/console.sol": {
        "keccak256": "0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5",
        "urls": [
          "bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57",
          "dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console2.sol": {
        "keccak256": "0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f",
        "urls": [
          "bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d",
          "dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11",
        "urls": [
          "bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab",
          "dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3"
        ],
        "license": "MIT"
      },
      "src/ConversionGateway.sol": {
        "keccak256": "0x8cc3d163dd76ae4e87197f5e42e1788b3c16156c0f987e1de7f2c96fd6349abc",
        "urls": [
          "bzz-raw://aa620f309773351212554699e9a36056936669ade6a2bdf5fb3211ec221e839d",
          "dweb:/ipfs/QmbUgvhB6dnZp9QgZNXYQwfkcehPn4ZsX1PMxVdZWVPqtH"
        ],
        "license": "MIT"
      },
      "src/ExternalVaultConnector.sol": {
        "keccak256": "0xc373da31e70ac217888a1f9338c1d108b1457903f688439950084a2bf082c2a0",
        "urls": [
          "bzz-raw://a2cb5394419cd09cb81c29a3fdf80ce9be9ae13d8408636b667a783282e3dda7",
          "dweb:/ipfs/QmaFkyv74Lgf1YymEepU4tvSFKZa35D1DvbdTPhWZYhb2y"
        ],
        "license": "MIT"
      },
      "src/PositionLocker.sol": {
        "keccak256": "0xcb7927f664d536eb691b68a6145a1b1d4f6314de2cb61a87bab45ff1e8c3aa48",
        "urls": [
          "bzz-raw://e3e4f25d25235d50a288449ba179485fb488cc4447c90a74e8ad626b807e7fb3",
          "dweb:/ipfs/QmapXSokC1c1gynzWQDzy8PjMuTG1m6GrjTLokJvdTci7m"
        ],
        "license": "MIT"
      },
      "src/interfaces/IBorrowVenueAdapter.sol": {
        "keccak256": "0x4648ca96593f035c7cc74cc6081a419a09bf5cbe88a750ca431e6d733734daf5",
        "urls": [
          "bzz-raw://8335af26c7daf89907d675cbf4acf6eb14ffdffa7928e3ebe0c551f236115548",
          "dweb:/ipfs/QmUTqUgAMQbkzaLT7gyTHJ8G9ZmeEqNgztvdJbYbK4LsaU"
        ],
        "license": null
      },
      "test/StablecoinFull.t.sol": {
        "keccak256": "0xf291bb6d19a0dbbe192f0b8df116eca5eaaa8775f6dc53d73d82281df34ccb42",
        "urls": [
          "bzz-raw://c7fad7e2951437384f8c20e9c0d9c9124f3ad092e1a75c7b7387564f9f148a2f",
          "dweb:/ipfs/QmY26axrQXK72FeFVyAF1sVkeQZMgbBZAjjyUxq21eheii"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 29078,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "stdstore",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(StdStorage)37084_storage"
      },
      {
        "astId": 29235,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "_failed",
        "offset": 0,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 31736,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "stdChainsInitialized",
        "offset": 1,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 31757,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "chains",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)31752_storage)"
      },
      {
        "astId": 31761,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "defaultRpcUrls",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      {
        "astId": 31765,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "idToAlias",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 31768,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "fallbackToDefaultRpcUrls",
        "offset": 0,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 32706,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "gasMeteringOff",
        "offset": 1,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 34773,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "stdstore",
        "offset": 0,
        "slot": "13",
        "type": "t_struct(StdStorage)37084_storage"
      },
      {
        "astId": 35690,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "_excludedContracts",
        "offset": 0,
        "slot": "21",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 35693,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "_excludedSenders",
        "offset": 0,
        "slot": "22",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 35696,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "_targetedContracts",
        "offset": 0,
        "slot": "23",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 35699,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "_targetedSenders",
        "offset": 0,
        "slot": "24",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 35702,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "_excludedArtifacts",
        "offset": 0,
        "slot": "25",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 35705,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "_targetedArtifacts",
        "offset": 0,
        "slot": "26",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 35709,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "_targetedArtifactSelectors",
        "offset": 0,
        "slot": "27",
        "type": "t_array(t_struct(FuzzArtifactSelector)35681_storage)dyn_storage"
      },
      {
        "astId": 35713,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "_excludedSelectors",
        "offset": 0,
        "slot": "28",
        "type": "t_array(t_struct(FuzzSelector)35675_storage)dyn_storage"
      },
      {
        "astId": 35717,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "_targetedSelectors",
        "offset": 0,
        "slot": "29",
        "type": "t_array(t_struct(FuzzSelector)35675_storage)dyn_storage"
      },
      {
        "astId": 35721,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "_targetedInterfaces",
        "offset": 0,
        "slot": "30",
        "type": "t_array(t_struct(FuzzInterface)35687_storage)dyn_storage"
      },
      {
        "astId": 41976,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "IS_TEST",
        "offset": 0,
        "slot": "31",
        "type": "t_bool"
      },
      {
        "astId": 28787,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "owner",
        "offset": 1,
        "slot": "31",
        "type": "t_address"
      },
      {
        "astId": 28796,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "baseImpl",
        "offset": 0,
        "slot": "32",
        "type": "t_address"
      },
      {
        "astId": 28799,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "router",
        "offset": 0,
        "slot": "33",
        "type": "t_contract(SLAYRouterV2)26255"
      },
      {
        "astId": 28802,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "registry",
        "offset": 0,
        "slot": "34",
        "type": "t_contract(SLAYRegistryV2)24613"
      },
      {
        "astId": 28805,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "vaultFactory",
        "offset": 0,
        "slot": "35",
        "type": "t_contract(SLAYVaultFactoryV2)26472"
      },
      {
        "astId": 28808,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "rewards",
        "offset": 0,
        "slot": "36",
        "type": "t_contract(SLAYRewardsV2)25104"
      },
      {
        "astId": 84092,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "gov",
        "offset": 0,
        "slot": "37",
        "type": "t_address"
      },
      {
        "astId": 84097,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "operator",
        "offset": 0,
        "slot": "38",
        "type": "t_address"
      },
      {
        "astId": 84102,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "alice",
        "offset": 0,
        "slot": "39",
        "type": "t_address"
      },
      {
        "astId": 84105,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "BASE",
        "offset": 0,
        "slot": "40",
        "type": "t_contract(MockERC20)28758"
      },
      {
        "astId": 84108,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "DEBT",
        "offset": 0,
        "slot": "41",
        "type": "t_contract(MockERC20)28758"
      },
      {
        "astId": 84111,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "oracle",
        "offset": 0,
        "slot": "42",
        "type": "t_contract(MockOracle)82718"
      },
      {
        "astId": 84114,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "vault",
        "offset": 0,
        "slot": "43",
        "type": "t_contract(SLAYVaultV2)27419"
      },
      {
        "astId": 84117,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "pl",
        "offset": 0,
        "slot": "44",
        "type": "t_contract(PositionLocker)73835"
      },
      {
        "astId": 84120,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "cg",
        "offset": 0,
        "slot": "45",
        "type": "t_contract(ConversionGateway)71634"
      },
      {
        "astId": 84123,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "adapter",
        "offset": 0,
        "slot": "46",
        "type": "t_contract(MockBorrowVenueAdapter)84083"
      },
      {
        "astId": 84126,
        "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
        "label": "debtConn",
        "offset": 0,
        "slot": "47",
        "type": "t_contract(ExternalVaultConnector)72007"
      }
    ],
    "types": {
      "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
      "t_array(t_address)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32",
        "base": "t_address"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_array(t_bytes4)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes4[]",
        "numberOfBytes": "32",
        "base": "t_bytes4"
      },
      "t_array(t_string_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32",
        "base": "t_string_storage"
      },
      "t_array(t_struct(FuzzArtifactSelector)35681_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct StdInvariant.FuzzArtifactSelector[]",
        "numberOfBytes": "32",
        "base": "t_struct(FuzzArtifactSelector)35681_storage"
      },
      "t_array(t_struct(FuzzInterface)35687_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct StdInvariant.FuzzInterface[]",
        "numberOfBytes": "32",
        "base": "t_struct(FuzzInterface)35687_storage"
      },
      "t_array(t_struct(FuzzSelector)35675_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct StdInvariant.FuzzSelector[]",
        "numberOfBytes": "32",
        "base": "t_struct(FuzzSelector)35675_storage"
      },
      "t_bool": { "encoding": "inplace", "label": "bool", "numberOfBytes": "1" },
      "t_bytes32": { "encoding": "inplace", "label": "bytes32", "numberOfBytes": "32" },
      "t_bytes4": { "encoding": "inplace", "label": "bytes4", "numberOfBytes": "4" },
      "t_bytes_storage": { "encoding": "bytes", "label": "bytes", "numberOfBytes": "32" },
      "t_contract(ConversionGateway)71634": {
        "encoding": "inplace",
        "label": "contract ConversionGateway",
        "numberOfBytes": "20"
      },
      "t_contract(ExternalVaultConnector)72007": {
        "encoding": "inplace",
        "label": "contract ExternalVaultConnector",
        "numberOfBytes": "20"
      },
      "t_contract(MockBorrowVenueAdapter)84083": {
        "encoding": "inplace",
        "label": "contract MockBorrowVenueAdapter",
        "numberOfBytes": "20"
      },
      "t_contract(MockERC20)28758": { "encoding": "inplace", "label": "contract MockERC20", "numberOfBytes": "20" },
      "t_contract(MockOracle)82718": { "encoding": "inplace", "label": "contract MockOracle", "numberOfBytes": "20" },
      "t_contract(PositionLocker)73835": {
        "encoding": "inplace",
        "label": "contract PositionLocker",
        "numberOfBytes": "20"
      },
      "t_contract(SLAYRegistryV2)24613": {
        "encoding": "inplace",
        "label": "contract SLAYRegistryV2",
        "numberOfBytes": "20"
      },
      "t_contract(SLAYRewardsV2)25104": {
        "encoding": "inplace",
        "label": "contract SLAYRewardsV2",
        "numberOfBytes": "20"
      },
      "t_contract(SLAYRouterV2)26255": {
        "encoding": "inplace",
        "label": "contract SLAYRouterV2",
        "numberOfBytes": "20"
      },
      "t_contract(SLAYVaultFactoryV2)26472": {
        "encoding": "inplace",
        "label": "contract SLAYVaultFactoryV2",
        "numberOfBytes": "20"
      },
      "t_contract(SLAYVaultV2)27419": { "encoding": "inplace", "label": "contract SLAYVaultV2", "numberOfBytes": "20" },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)37059_storage)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)37059_storage))"
      },
      "t_mapping(t_bytes32,t_struct(FindData)37059_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct FindData)",
        "numberOfBytes": "32",
        "value": "t_struct(FindData)37059_storage"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)37059_storage))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_struct(FindData)37059_storage)"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Chain)31752_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct StdChains.Chain)",
        "numberOfBytes": "32",
        "value": "t_struct(Chain)31752_storage"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_memory_ptr": { "encoding": "bytes", "label": "string", "numberOfBytes": "32" },
      "t_string_storage": { "encoding": "bytes", "label": "string", "numberOfBytes": "32" },
      "t_struct(Chain)31752_storage": {
        "encoding": "inplace",
        "label": "struct StdChains.Chain",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 31745,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 31747,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "chainId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 31749,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "chainAlias",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 31751,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "rpcUrl",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ]
      },
      "t_struct(FindData)37059_storage": {
        "encoding": "inplace",
        "label": "struct FindData",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 37052,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "slot",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 37054,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "offsetLeft",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 37056,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "offsetRight",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 37058,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "found",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          }
        ]
      },
      "t_struct(FuzzArtifactSelector)35681_storage": {
        "encoding": "inplace",
        "label": "struct StdInvariant.FuzzArtifactSelector",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 35677,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "artifact",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 35680,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "selectors",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes4)dyn_storage"
          }
        ]
      },
      "t_struct(FuzzInterface)35687_storage": {
        "encoding": "inplace",
        "label": "struct StdInvariant.FuzzInterface",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 35683,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 35686,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "artifacts",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_string_storage)dyn_storage"
          }
        ]
      },
      "t_struct(FuzzSelector)35675_storage": {
        "encoding": "inplace",
        "label": "struct StdInvariant.FuzzSelector",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 35671,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 35674,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "selectors",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes4)dyn_storage"
          }
        ]
      },
      "t_struct(StdStorage)37084_storage": {
        "encoding": "inplace",
        "label": "struct StdStorage",
        "numberOfBytes": "256",
        "members": [
          {
            "astId": 37068,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "finds",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)37059_storage)))"
          },
          {
            "astId": 37071,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "_keys",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 37073,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "_sig",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes4"
          },
          {
            "astId": 37075,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "_depth",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 37077,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "_target",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 37079,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "_set",
            "offset": 0,
            "slot": "5",
            "type": "t_bytes32"
          },
          {
            "astId": 37081,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "_enable_packed_slots",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 37083,
            "contract": "test/StablecoinFull.t.sol:BorrowFlowIntegrationTest",
            "label": "_calldata",
            "offset": 0,
            "slot": "7",
            "type": "t_bytes_storage"
          }
        ]
      },
      "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" }
    }
  },
  "ast": {
    "absolutePath": "test/StablecoinFull.t.sol",
    "id": 84825,
    "exportedSymbols": {
      "AccessControl": [4646],
      "BorrowFlowIntegrationTest": [84824],
      "ConversionGateway": [71634],
      "ERC20": [6553],
      "ERC4626": [7325],
      "ExternalVaultConnector": [72007],
      "IAccessControl": [4729],
      "IBorrowVenueAdapter": [75274],
      "IConversionGatewayMulti": [72129],
      "IConversionGatewayView": [72137],
      "IERC20": [6631],
      "IERC20Metadata": [7351],
      "IERC4626": [5158],
      "IExternalVaultConnector": [69059],
      "IPL": [68999],
      "IPriceOracle": [69067],
      "IRateAwareAdapter": [69082],
      "IWrapper1to1": [69024],
      "MockBorrowVenueAdapter": [84083],
      "MockERC20": [28758],
      "MockOracle": [82718],
      "MockWrapper1to1": [82847],
      "Pausable": [9333],
      "PositionLocker": [73835],
      "ReentrancyGuard": [9402],
      "SLAYVaultV2": [27419],
      "SafeERC20": [7851],
      "Simple4626": [82685],
      "StablecoinFullIntegrationTest": [83844],
      "StrategyId": [72139],
      "Test": [41977],
      "TestSuiteV2": [29031],
      "console": [55108]
    },
    "nodeType": "SourceUnit",
    "src": "32:23922:124",
    "nodes": [
      {
        "id": 82625,
        "nodeType": "PragmaDirective",
        "src": "32:24:124",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".24"]
      },
      {
        "id": 82628,
        "nodeType": "ImportDirective",
        "src": "58:49:124",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84825,
        "sourceUnit": 41978,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82626,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41977,
              "src": "66:4:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 82627,
              "name": "console",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55108,
              "src": "72:7:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82630,
        "nodeType": "ImportDirective",
        "src": "108:81:124",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "file": "@openzeppelin/contracts/access/IAccessControl.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84825,
        "sourceUnit": 4730,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82629,
              "name": "IAccessControl",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4729,
              "src": "116:14:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82632,
        "nodeType": "ImportDirective",
        "src": "191:68:124",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84825,
        "sourceUnit": 6554,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82631,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6553,
              "src": "199:5:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82634,
        "nodeType": "ImportDirective",
        "src": "260:83:124",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84825,
        "sourceUnit": 7326,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82633,
              "name": "ERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7325,
              "src": "268:7:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82636,
        "nodeType": "ImportDirective",
        "src": "344:73:124",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/interfaces/IERC4626.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC4626.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84825,
        "sourceUnit": 5159,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82635,
              "name": "IERC4626",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5158,
              "src": "352:8:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82638,
        "nodeType": "ImportDirective",
        "src": "419:69:124",
        "nodes": [],
        "absolutePath": "node_modules/@satlayer/contracts/test/TestSuiteV2.sol",
        "file": "@satlayer/contracts/test/TestSuiteV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84825,
        "sourceUnit": 29032,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82637,
              "name": "TestSuiteV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29031,
              "src": "427:11:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82640,
        "nodeType": "ImportDirective",
        "src": "489:65:124",
        "nodes": [],
        "absolutePath": "node_modules/@satlayer/contracts/test/MockERC20.sol",
        "file": "@satlayer/contracts/test/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84825,
        "sourceUnit": 28759,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82639,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28758,
              "src": "497:9:124",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82641,
        "nodeType": "ImportDirective",
        "src": "556:35:124",
        "nodes": [],
        "absolutePath": "src/PositionLocker.sol",
        "file": "../src/PositionLocker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84825,
        "sourceUnit": 73836,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 82642,
        "nodeType": "ImportDirective",
        "src": "598:38:124",
        "nodes": [],
        "absolutePath": "src/ConversionGateway.sol",
        "file": "../src/ConversionGateway.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84825,
        "sourceUnit": 71635,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 82643,
        "nodeType": "ImportDirective",
        "src": "643:43:124",
        "nodes": [],
        "absolutePath": "src/ExternalVaultConnector.sol",
        "file": "../src/ExternalVaultConnector.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 84825,
        "sourceUnit": 72008,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 82685,
        "nodeType": "ContractDefinition",
        "src": "714:369:124",
        "nodes": [
          {
            "id": 82649,
            "nodeType": "VariableDeclaration",
            "src": "758:28:124",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "_dec",
            "nameLocation": "782:4:124",
            "scope": 82685,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" },
            "typeName": {
              "id": 82648,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "758:5:124",
              "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }
            },
            "visibility": "private"
          },
          {
            "id": 82673,
            "nodeType": "FunctionDefinition",
            "src": "793:181:124",
            "nodes": [],
            "body": {
              "id": 82672,
              "nodeType": "Block",
              "src": "929:45:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 82670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82666,
                      "name": "_dec",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82649,
                      "src": "939:4:124",
                      "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 82667,
                          "name": "underlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82652,
                          "src": "946:10:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$6553",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 82668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "957:8:124",
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6117,
                        "src": "946:19:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 82669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "946:21:124",
                      "tryCall": false,
                      "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }
                    },
                    "src": "939:28:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }
                  },
                  "id": 82671,
                  "nodeType": "ExpressionStatement",
                  "src": "939:28:124"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 82659,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82654,
                    "src": "881:5:124",
                    "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                  },
                  {
                    "id": 82660,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82656,
                    "src": "888:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                  }
                ],
                "id": 82661,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 82658,
                  "name": "ERC20",
                  "nameLocations": ["875:5:124"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6553,
                  "src": "875:5:124"
                },
                "nodeType": "ModifierInvocation",
                "src": "875:21:124"
              },
              {
                "arguments": [
                  {
                    "id": 82663,
                    "name": "underlying",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82652,
                    "src": "913:10:124",
                    "typeDescriptions": { "typeIdentifier": "t_contract$_ERC20_$6553", "typeString": "contract ERC20" }
                  }
                ],
                "id": 82664,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 82662,
                  "name": "ERC4626",
                  "nameLocations": ["905:7:124"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7325,
                  "src": "905:7:124"
                },
                "nodeType": "ModifierInvocation",
                "src": "905:19:124"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 82657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82652,
                  "mutability": "mutable",
                  "name": "underlying",
                  "nameLocation": "811:10:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 82673,
                  "src": "805:16:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_contract$_ERC20_$6553", "typeString": "contract ERC20" },
                  "typeName": {
                    "id": 82651,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82650,
                      "name": "ERC20",
                      "nameLocations": ["805:5:124"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6553,
                      "src": "805:5:124"
                    },
                    "referencedDeclaration": 6553,
                    "src": "805:5:124",
                    "typeDescriptions": { "typeIdentifier": "t_contract$_ERC20_$6553", "typeString": "contract ERC20" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82654,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "837:5:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 82673,
                  "src": "823:19:124",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                  "typeName": {
                    "id": 82653,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:6:124",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82656,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "858:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 82673,
                  "src": "844:21:124",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                  "typeName": {
                    "id": 82655,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:6:124",
                    "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "804:62:124"
            },
            "returnParameters": { "id": 82665, "nodeType": "ParameterList", "parameters": [], "src": "929:0:124" },
            "scope": 82685,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 82684,
            "nodeType": "FunctionDefinition",
            "src": "980:101:124",
            "nodes": [],
            "body": {
              "id": 82683,
              "nodeType": "Block",
              "src": "1053:28:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 82681,
                    "name": "_dec",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82649,
                    "src": "1070:4:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }
                  },
                  "functionReturnParameters": 82680,
                  "id": 82682,
                  "nodeType": "Return",
                  "src": "1063:11:124"
                }
              ]
            },
            "baseFunctions": [6117, 6801],
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "989:8:124",
            "overrides": {
              "id": 82677,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 82675,
                  "name": "ERC20",
                  "nameLocations": ["1021:5:124"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6553,
                  "src": "1021:5:124"
                },
                {
                  "id": 82676,
                  "name": "ERC4626",
                  "nameLocations": ["1028:7:124"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7325,
                  "src": "1028:7:124"
                }
              ],
              "src": "1012:24:124"
            },
            "parameters": { "id": 82674, "nodeType": "ParameterList", "parameters": [], "src": "997:2:124" },
            "returnParameters": {
              "id": 82680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82679,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 82684,
                  "src": "1046:5:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" },
                  "typeName": {
                    "id": 82678,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:5:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:7:124"
            },
            "scope": 82685,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 82644,
              "name": "ERC20",
              "nameLocations": ["737:5:124"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6553,
              "src": "737:5:124"
            },
            "id": 82645,
            "nodeType": "InheritanceSpecifier",
            "src": "737:5:124"
          },
          {
            "baseName": {
              "id": 82646,
              "name": "ERC4626",
              "nameLocations": ["744:7:124"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7325,
              "src": "744:7:124"
            },
            "id": 82647,
            "nodeType": "InheritanceSpecifier",
            "src": "744:7:124"
          }
        ],
        "canonicalName": "Simple4626",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [82685, 7325, 5158, 6553, 5235, 7351, 6631, 9151],
        "name": "Simple4626",
        "nameLocation": "723:10:124",
        "scope": 84825,
        "usedErrors": [5205, 5210, 5215, 5224, 5229, 5234, 6665, 6674, 6683, 6692, 7399],
        "usedEvents": [5009, 5021, 6565, 6574]
      },
      {
        "id": 82718,
        "nodeType": "ContractDefinition",
        "src": "1085:269:124",
        "nodes": [
          {
            "id": 82691,
            "nodeType": "VariableDeclaration",
            "src": "1127:37:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "d8674dab",
            "mutability": "mutable",
            "name": "px",
            "nameLocation": "1162:2:124",
            "scope": 82718,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 82690,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 82688,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1135:7:124",
                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
              },
              "nodeType": "Mapping",
              "src": "1127:27:124",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 82689,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1146:7:124",
                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
              }
            },
            "visibility": "public"
          },
          {
            "id": 82705,
            "nodeType": "FunctionDefinition",
            "src": "1192:72:124",
            "nodes": [],
            "body": {
              "id": 82704,
              "nodeType": "Block",
              "src": "1243:21:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 82702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 82698,
                        "name": "px",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82691,
                        "src": "1245:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 82700,
                      "indexExpression": {
                        "id": 82699,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82693,
                        "src": "1248:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1245:9:124",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 82701,
                      "name": "p1e8",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82695,
                      "src": "1257:4:124",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "1245:16:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "id": 82703,
                  "nodeType": "ExpressionStatement",
                  "src": "1245:16:124"
                }
              ]
            },
            "functionSelector": "3825d828",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nameLocation": "1201:3:124",
            "parameters": {
              "id": 82696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82693,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1213:5:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 82705,
                  "src": "1205:13:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 82692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1205:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82695,
                  "mutability": "mutable",
                  "name": "p1e8",
                  "nameLocation": "1228:4:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 82705,
                  "src": "1220:12:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 82694,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1204:29:124"
            },
            "returnParameters": { "id": 82697, "nodeType": "ParameterList", "parameters": [], "src": "1243:0:124" },
            "scope": 82718,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 82717,
            "nodeType": "FunctionDefinition",
            "src": "1269:83:124",
            "nodes": [],
            "body": {
              "id": 82716,
              "nodeType": "Block",
              "src": "1331:21:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 82712,
                      "name": "px",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82691,
                      "src": "1340:2:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 82714,
                    "indexExpression": {
                      "id": 82713,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82707,
                      "src": "1343:5:124",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1340:9:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "functionReturnParameters": 82711,
                  "id": 82715,
                  "nodeType": "Return",
                  "src": "1333:16:124"
                }
              ]
            },
            "baseFunctions": [69066],
            "functionSelector": "aea91078",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "price",
            "nameLocation": "1278:5:124",
            "parameters": {
              "id": 82708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82707,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1292:5:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 82717,
                  "src": "1284:13:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 82706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1284:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1283:15:124"
            },
            "returnParameters": {
              "id": 82711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82710,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 82717,
                  "src": "1322:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 82709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1322:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1321:9:124"
            },
            "scope": 82718,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 82686,
              "name": "IPriceOracle",
              "nameLocations": ["1108:12:124"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 69067,
              "src": "1108:12:124"
            },
            "id": 82687,
            "nodeType": "InheritanceSpecifier",
            "src": "1108:12:124"
          }
        ],
        "canonicalName": "MockOracle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [82718, 69067],
        "name": "MockOracle",
        "nameLocation": "1094:10:124",
        "scope": 84825,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 82847,
        "nodeType": "ContractDefinition",
        "src": "1356:1122:124",
        "nodes": [
          {
            "id": 82723,
            "nodeType": "VariableDeclaration",
            "src": "1403:32:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "3ce68dd5",
            "mutability": "immutable",
            "name": "_base",
            "nameLocation": "1430:5:124",
            "scope": 82847,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$28758",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 82722,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82721,
                "name": "MockERC20",
                "nameLocations": ["1403:9:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28758,
                "src": "1403:9:124"
              },
              "referencedDeclaration": 28758,
              "src": "1403:9:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$28758",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82726,
            "nodeType": "VariableDeclaration",
            "src": "1441:35:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "73e2fc5a",
            "mutability": "immutable",
            "name": "_wrapped",
            "nameLocation": "1468:8:124",
            "scope": 82847,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$28758",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 82725,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82724,
                "name": "MockERC20",
                "nameLocations": ["1441:9:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28758,
                "src": "1441:9:124"
              },
              "referencedDeclaration": 28758,
              "src": "1441:9:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$28758",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82728,
            "nodeType": "VariableDeclaration",
            "src": "1482:28:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "d81b54b9",
            "mutability": "mutable",
            "name": "unwrapNextOut",
            "nameLocation": "1497:13:124",
            "scope": 82847,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
            "typeName": {
              "id": 82727,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1482:7:124",
              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
            },
            "visibility": "public"
          },
          {
            "id": 82746,
            "nodeType": "FunctionDefinition",
            "src": "1552:108:124",
            "nodes": [],
            "body": {
              "id": 82745,
              "nodeType": "Block",
              "src": "1601:59:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 82739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82737,
                      "name": "_base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82723,
                      "src": "1611:5:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28758",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 82738,
                      "name": "base_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82731,
                      "src": "1619:5:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28758",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "1611:13:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$28758",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 82740,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:13:124"
                },
                {
                  "expression": {
                    "id": 82743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82741,
                      "name": "_wrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82726,
                      "src": "1634:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28758",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 82742,
                      "name": "wrapped_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82734,
                      "src": "1645:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28758",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "1634:19:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$28758",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 82744,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:19:124"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 82735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82731,
                  "mutability": "mutable",
                  "name": "base_",
                  "nameLocation": "1574:5:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 82746,
                  "src": "1564:15:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MockERC20_$28758",
                    "typeString": "contract MockERC20"
                  },
                  "typeName": {
                    "id": 82730,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82729,
                      "name": "MockERC20",
                      "nameLocations": ["1564:9:124"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28758,
                      "src": "1564:9:124"
                    },
                    "referencedDeclaration": 28758,
                    "src": "1564:9:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$28758",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82734,
                  "mutability": "mutable",
                  "name": "wrapped_",
                  "nameLocation": "1591:8:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 82746,
                  "src": "1581:18:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MockERC20_$28758",
                    "typeString": "contract MockERC20"
                  },
                  "typeName": {
                    "id": 82733,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82732,
                      "name": "MockERC20",
                      "nameLocations": ["1581:9:124"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28758,
                      "src": "1581:9:124"
                    },
                    "referencedDeclaration": 28758,
                    "src": "1581:9:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$28758",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1563:37:124"
            },
            "returnParameters": { "id": 82736, "nodeType": "ParameterList", "parameters": [], "src": "1601:0:124" },
            "scope": 82847,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 82758,
            "nodeType": "FunctionDefinition",
            "src": "1666:95:124",
            "nodes": [],
            "body": {
              "id": 82757,
              "nodeType": "Block",
              "src": "1723:38:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82754,
                        "name": "_base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82723,
                        "src": "1748:5:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                      ],
                      "id": 82753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1740:7:124",
                      "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" },
                      "typeName": {
                        "id": 82752,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1740:7:124",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 82755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1740:14:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "functionReturnParameters": 82751,
                  "id": 82756,
                  "nodeType": "Return",
                  "src": "1733:21:124"
                }
              ]
            },
            "baseFunctions": [69004],
            "functionSelector": "5001f3b5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "base",
            "nameLocation": "1675:4:124",
            "overrides": { "id": 82748, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1696:8:124" },
            "parameters": { "id": 82747, "nodeType": "ParameterList", "parameters": [], "src": "1679:2:124" },
            "returnParameters": {
              "id": 82751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82750,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 82758,
                  "src": "1714:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 82749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1714:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1713:9:124"
            },
            "scope": 82847,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 82770,
            "nodeType": "FunctionDefinition",
            "src": "1767:101:124",
            "nodes": [],
            "body": {
              "id": 82769,
              "nodeType": "Block",
              "src": "1827:41:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82766,
                        "name": "_wrapped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82726,
                        "src": "1852:8:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                      ],
                      "id": 82765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1844:7:124",
                      "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" },
                      "typeName": {
                        "id": 82764,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1844:7:124",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 82767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:17:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "functionReturnParameters": 82763,
                  "id": 82768,
                  "nodeType": "Return",
                  "src": "1837:24:124"
                }
              ]
            },
            "baseFunctions": [69009],
            "functionSelector": "50e70d48",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "wrapped",
            "nameLocation": "1776:7:124",
            "overrides": { "id": 82760, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1800:8:124" },
            "parameters": { "id": 82759, "nodeType": "ParameterList", "parameters": [], "src": "1783:2:124" },
            "returnParameters": {
              "id": 82763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82762,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 82770,
                  "src": "1818:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 82761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1817:9:124"
            },
            "scope": 82847,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 82808,
            "nodeType": "FunctionDefinition",
            "src": "1922:248:124",
            "nodes": [],
            "body": {
              "id": 82807,
              "nodeType": "Block",
              "src": "1992:178:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "id": 82781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 82779,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82772,
                          "src": "2010:6:124",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 82780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2019:1:124",
                          "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                          "value": "0"
                        },
                        "src": "2010:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "777261702f7a65726f",
                        "id": 82782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2022:11:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4a48236886abd6ae21e7d074db2cf6cd4ace6806ca9c9efee3994fb1729d139",
                          "typeString": "literal_string \"wrap/zero\""
                        },
                        "value": "wrap/zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_a4a48236886abd6ae21e7d074db2cf6cd4ace6806ca9c9efee3994fb1729d139",
                          "typeString": "literal_string \"wrap/zero\""
                        }
                      ],
                      "id": 82778,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2002:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2002:32:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 82784,
                  "nodeType": "ExpressionStatement",
                  "src": "2002:32:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 82788,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2063:3:124",
                          "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                        },
                        "id": 82789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2067:6:124",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2063:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "arguments": [
                          {
                            "id": 82792,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2083:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockWrapper1to1_$82847",
                              "typeString": "contract MockWrapper1to1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockWrapper1to1_$82847",
                              "typeString": "contract MockWrapper1to1"
                            }
                          ],
                          "id": 82791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2075:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 82790,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2075:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 82793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2075:13:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 82794,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82772,
                        "src": "2090:6:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 82785,
                        "name": "_base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82723,
                        "src": "2044:5:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 82787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2050:12:124",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6236,
                      "src": "2044:18:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 82795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2044:53:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 82796,
                  "nodeType": "ExpressionStatement",
                  "src": "2044:53:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 82800,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2121:3:124",
                          "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                        },
                        "id": 82801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2125:6:124",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2121:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 82802,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82772,
                        "src": "2133:6:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 82797,
                        "name": "_wrapped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82726,
                        "src": "2107:8:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 82799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2116:4:124",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28757,
                      "src": "2107:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 82803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2107:33:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 82804,
                  "nodeType": "ExpressionStatement",
                  "src": "2107:33:124"
                },
                {
                  "expression": {
                    "id": 82805,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82772,
                    "src": "2157:6:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "functionReturnParameters": 82777,
                  "id": 82806,
                  "nodeType": "Return",
                  "src": "2150:13:124"
                }
              ]
            },
            "baseFunctions": [69016],
            "functionSelector": "ea598cb0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "wrap",
            "nameLocation": "1931:4:124",
            "overrides": { "id": 82774, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1961:8:124" },
            "parameters": {
              "id": 82773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82772,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1944:6:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 82808,
                  "src": "1936:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 82771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1936:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1935:16:124"
            },
            "returnParameters": {
              "id": 82777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82776,
                  "mutability": "mutable",
                  "name": "out",
                  "nameLocation": "1987:3:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 82808,
                  "src": "1979:11:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 82775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1979:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1978:13:124"
            },
            "scope": 82847,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 82846,
            "nodeType": "FunctionDefinition",
            "src": "2224:252:124",
            "nodes": [],
            "body": {
              "id": 82845,
              "nodeType": "Block",
              "src": "2296:180:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "id": 82819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 82817,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82810,
                          "src": "2314:6:124",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 82818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2323:1:124",
                          "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                          "value": "0"
                        },
                        "src": "2314:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "756e777261702f7a65726f",
                        "id": 82820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2326:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffc61062a3858545e88700f372da88ae7b65134cc5e0ef1c33615568c2e0c3c7",
                          "typeString": "literal_string \"unwrap/zero\""
                        },
                        "value": "unwrap/zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_ffc61062a3858545e88700f372da88ae7b65134cc5e0ef1c33615568c2e0c3c7",
                          "typeString": "literal_string \"unwrap/zero\""
                        }
                      ],
                      "id": 82816,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2306:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2306:34:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 82822,
                  "nodeType": "ExpressionStatement",
                  "src": "2306:34:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 82826,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2372:3:124",
                          "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                        },
                        "id": 82827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2376:6:124",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2372:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "arguments": [
                          {
                            "id": 82830,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2392:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockWrapper1to1_$82847",
                              "typeString": "contract MockWrapper1to1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockWrapper1to1_$82847",
                              "typeString": "contract MockWrapper1to1"
                            }
                          ],
                          "id": 82829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2384:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 82828,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2384:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 82831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2384:13:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 82832,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82810,
                        "src": "2399:6:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 82823,
                        "name": "_wrapped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82726,
                        "src": "2350:8:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 82825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2359:12:124",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6236,
                      "src": "2350:21:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 82833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2350:56:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 82834,
                  "nodeType": "ExpressionStatement",
                  "src": "2350:56:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 82838,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2427:3:124",
                          "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                        },
                        "id": 82839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2431:6:124",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2427:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 82840,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82810,
                        "src": "2439:6:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 82835,
                        "name": "_base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82723,
                        "src": "2416:5:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 82837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2422:4:124",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28757,
                      "src": "2416:10:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 82841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2416:30:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 82842,
                  "nodeType": "ExpressionStatement",
                  "src": "2416:30:124"
                },
                {
                  "expression": {
                    "id": 82843,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82810,
                    "src": "2463:6:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "functionReturnParameters": 82815,
                  "id": 82844,
                  "nodeType": "Return",
                  "src": "2456:13:124"
                }
              ]
            },
            "baseFunctions": [69023],
            "functionSelector": "de0e9a3e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwrap",
            "nameLocation": "2233:6:124",
            "overrides": { "id": 82812, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2265:8:124" },
            "parameters": {
              "id": 82811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82810,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2248:6:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 82846,
                  "src": "2240:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 82809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2240:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2239:16:124"
            },
            "returnParameters": {
              "id": 82815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82814,
                  "mutability": "mutable",
                  "name": "out",
                  "nameLocation": "2291:3:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 82846,
                  "src": "2283:11:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 82813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2283:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2282:13:124"
            },
            "scope": 82847,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 82719,
              "name": "IWrapper1to1",
              "nameLocations": ["1384:12:124"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 69024,
              "src": "1384:12:124"
            },
            "id": 82720,
            "nodeType": "InheritanceSpecifier",
            "src": "1384:12:124"
          }
        ],
        "canonicalName": "MockWrapper1to1",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [82847, 69024],
        "name": "MockWrapper1to1",
        "nameLocation": "1365:15:124",
        "scope": 84825,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 83844,
        "nodeType": "ContractDefinition",
        "src": "2480:10983:124",
        "nodes": [
          {
            "id": 82856,
            "nodeType": "VariableDeclaration",
            "src": "2560:36:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "12d43a51",
            "mutability": "mutable",
            "name": "gov",
            "nameLocation": "2575:3:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
            "typeName": {
              "id": 82852,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2560:7:124",
              "stateMutability": "nonpayable",
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "676f76",
                  "id": 82854,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2590:5:124",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_0513914b5dbefa3a0eed07f860beb4ab89366ecf422e323f9160c4de52afed69",
                    "typeString": "literal_string \"gov\""
                  },
                  "value": "gov"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_0513914b5dbefa3a0eed07f860beb4ab89366ecf422e323f9160c4de52afed69",
                    "typeString": "literal_string \"gov\""
                  }
                ],
                "id": 82853,
                "name": "makeAddr",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 34526,
                "src": "2581:8:124",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                  "typeString": "function (string memory) returns (address)"
                }
              },
              "id": 82855,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2581:15:124",
              "tryCall": false,
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "visibility": "public"
          },
          {
            "id": 82861,
            "nodeType": "VariableDeclaration",
            "src": "2616:46:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "570ca735",
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "2631:8:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
            "typeName": {
              "id": 82857,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2616:7:124",
              "stateMutability": "nonpayable",
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "6f70657261746f72",
                  "id": 82859,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2651:10:124",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_46a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f622",
                    "typeString": "literal_string \"operator\""
                  },
                  "value": "operator"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_46a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f622",
                    "typeString": "literal_string \"operator\""
                  }
                ],
                "id": 82858,
                "name": "makeAddr",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 34526,
                "src": "2642:8:124",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                  "typeString": "function (string memory) returns (address)"
                }
              },
              "id": 82860,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2642:20:124",
              "tryCall": false,
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "visibility": "public"
          },
          {
            "id": 82866,
            "nodeType": "VariableDeclaration",
            "src": "2707:40:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "2722:5:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
            "typeName": {
              "id": 82862,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2707:7:124",
              "stateMutability": "nonpayable",
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "616c696365",
                  "id": 82864,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2739:7:124",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9c0257114eb9399a2985f8e75dad7600c5d89fe3824ffa99ec1c3eb8bf3b0501",
                    "typeString": "literal_string \"alice\""
                  },
                  "value": "alice"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9c0257114eb9399a2985f8e75dad7600c5d89fe3824ffa99ec1c3eb8bf3b0501",
                    "typeString": "literal_string \"alice\""
                  }
                ],
                "id": 82863,
                "name": "makeAddr",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 34526,
                "src": "2730:8:124",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                  "typeString": "function (string memory) returns (address)"
                }
              },
              "id": 82865,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2730:17:124",
              "tryCall": false,
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "visibility": "public"
          },
          {
            "id": 82869,
            "nodeType": "VariableDeclaration",
            "src": "2776:21:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "ec342ad0",
            "mutability": "mutable",
            "name": "BASE",
            "nameLocation": "2793:4:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$28758",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 82868,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82867,
                "name": "MockERC20",
                "nameLocations": ["2776:9:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28758,
                "src": "2776:9:124"
              },
              "referencedDeclaration": 28758,
              "src": "2776:9:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$28758",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82872,
            "nodeType": "VariableDeclaration",
            "src": "2830:24:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "e344a88b",
            "mutability": "mutable",
            "name": "WRAPPED",
            "nameLocation": "2847:7:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$28758",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 82871,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82870,
                "name": "MockERC20",
                "nameLocations": ["2830:9:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28758,
                "src": "2830:9:124"
              },
              "referencedDeclaration": 28758,
              "src": "2830:9:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$28758",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82875,
            "nodeType": "VariableDeclaration",
            "src": "2894:21:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "20c61c89",
            "mutability": "mutable",
            "name": "DEBT",
            "nameLocation": "2911:4:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$28758",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 82874,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82873,
                "name": "MockERC20",
                "nameLocations": ["2894:9:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28758,
                "src": "2894:9:124"
              },
              "referencedDeclaration": 28758,
              "src": "2894:9:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$28758",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82878,
            "nodeType": "VariableDeclaration",
            "src": "2975:24:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "fbfa77cf",
            "mutability": "mutable",
            "name": "vault",
            "nameLocation": "2994:5:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
              "typeString": "contract SLAYVaultV2"
            },
            "typeName": {
              "id": 82877,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82876,
                "name": "SLAYVaultV2",
                "nameLocations": ["2975:11:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27419,
                "src": "2975:11:124"
              },
              "referencedDeclaration": 27419,
              "src": "2975:11:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                "typeString": "contract SLAYVaultV2"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82881,
            "nodeType": "VariableDeclaration",
            "src": "3005:24:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "90e1437c",
            "mutability": "mutable",
            "name": "pl",
            "nameLocation": "3027:2:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PositionLocker_$73835",
              "typeString": "contract PositionLocker"
            },
            "typeName": {
              "id": 82880,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82879,
                "name": "PositionLocker",
                "nameLocations": ["3005:14:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 73835,
                "src": "3005:14:124"
              },
              "referencedDeclaration": 73835,
              "src": "3005:14:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PositionLocker_$73835",
                "typeString": "contract PositionLocker"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82884,
            "nodeType": "VariableDeclaration",
            "src": "3035:27:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "b215a879",
            "mutability": "mutable",
            "name": "cg",
            "nameLocation": "3060:2:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ConversionGateway_$71634",
              "typeString": "contract ConversionGateway"
            },
            "typeName": {
              "id": 82883,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82882,
                "name": "ConversionGateway",
                "nameLocations": ["3035:17:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 71634,
                "src": "3035:17:124"
              },
              "referencedDeclaration": 71634,
              "src": "3035:17:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                "typeString": "contract ConversionGateway"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82887,
            "nodeType": "VariableDeclaration",
            "src": "3068:24:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "3086:6:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockOracle_$82718",
              "typeString": "contract MockOracle"
            },
            "typeName": {
              "id": 82886,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82885,
                "name": "MockOracle",
                "nameLocations": ["3068:10:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 82718,
                "src": "3068:10:124"
              },
              "referencedDeclaration": 82718,
              "src": "3068:10:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockOracle_$82718",
                "typeString": "contract MockOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82890,
            "nodeType": "VariableDeclaration",
            "src": "3099:30:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "ac210cc7",
            "mutability": "mutable",
            "name": "wrapper",
            "nameLocation": "3122:7:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockWrapper1to1_$82847",
              "typeString": "contract MockWrapper1to1"
            },
            "typeName": {
              "id": 82889,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82888,
                "name": "MockWrapper1to1",
                "nameLocations": ["3099:15:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 82847,
                "src": "3099:15:124"
              },
              "referencedDeclaration": 82847,
              "src": "3099:15:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockWrapper1to1_$82847",
                "typeString": "contract MockWrapper1to1"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82893,
            "nodeType": "VariableDeclaration",
            "src": "3135:33:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "89d25a91",
            "mutability": "mutable",
            "name": "extVaultWrapped",
            "nameLocation": "3153:15:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Simple4626_$82685",
              "typeString": "contract Simple4626"
            },
            "typeName": {
              "id": 82892,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82891,
                "name": "Simple4626",
                "nameLocations": ["3135:10:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 82685,
                "src": "3135:10:124"
              },
              "referencedDeclaration": 82685,
              "src": "3135:10:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Simple4626_$82685",
                "typeString": "contract Simple4626"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82896,
            "nodeType": "VariableDeclaration",
            "src": "3219:30:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "5c29f20f",
            "mutability": "mutable",
            "name": "extVaultBase",
            "nameLocation": "3237:12:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Simple4626_$82685",
              "typeString": "contract Simple4626"
            },
            "typeName": {
              "id": 82895,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82894,
                "name": "Simple4626",
                "nameLocations": ["3219:10:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 82685,
                "src": "3219:10:124"
              },
              "referencedDeclaration": 82685,
              "src": "3219:10:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Simple4626_$82685",
                "typeString": "contract Simple4626"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82899,
            "nodeType": "VariableDeclaration",
            "src": "3297:41:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "f34aa3da",
            "mutability": "mutable",
            "name": "connWrapped",
            "nameLocation": "3327:11:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
              "typeString": "contract ExternalVaultConnector"
            },
            "typeName": {
              "id": 82898,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82897,
                "name": "ExternalVaultConnector",
                "nameLocations": ["3297:22:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 72007,
                "src": "3297:22:124"
              },
              "referencedDeclaration": 72007,
              "src": "3297:22:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                "typeString": "contract ExternalVaultConnector"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82902,
            "nodeType": "VariableDeclaration",
            "src": "3383:38:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "2b803867",
            "mutability": "mutable",
            "name": "connBase",
            "nameLocation": "3413:8:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
              "typeString": "contract ExternalVaultConnector"
            },
            "typeName": {
              "id": 82901,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82900,
                "name": "ExternalVaultConnector",
                "nameLocations": ["3383:22:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 72007,
                "src": "3383:22:124"
              },
              "referencedDeclaration": 72007,
              "src": "3383:22:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                "typeString": "contract ExternalVaultConnector"
              }
            },
            "visibility": "public"
          },
          {
            "id": 82907,
            "nodeType": "VariableDeclaration",
            "src": "3484:53:124",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "STRAT_WRAP",
            "nameLocation": "3501:10:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
            "typeName": {
              "id": 82903,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3484:7:124",
              "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "524f5554455f57524150",
                  "id": 82905,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3524:12:124",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_db81e5fca4ef5ccec3f534fd30d0a597fba1b70a65fc0d067ca153f9cc460726",
                    "typeString": "literal_string \"ROUTE_WRAP\""
                  },
                  "value": "ROUTE_WRAP"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_db81e5fca4ef5ccec3f534fd30d0a597fba1b70a65fc0d067ca153f9cc460726",
                    "typeString": "literal_string \"ROUTE_WRAP\""
                  }
                ],
                "id": 82904,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "3514:9:124",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 82906,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3514:23:124",
              "tryCall": false,
              "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
            },
            "visibility": "internal"
          },
          {
            "id": 82912,
            "nodeType": "VariableDeclaration",
            "src": "3543:58:124",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "STRAT_IDENT",
            "nameLocation": "3560:11:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
            "typeName": {
              "id": 82908,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3543:7:124",
              "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "524f5554455f4944454e54495459",
                  "id": 82910,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3584:16:124",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_63a3dd821429357b645d85034337aa6ce64f4f783ffcb51206e9b9e9f207fda3",
                    "typeString": "literal_string \"ROUTE_IDENTITY\""
                  },
                  "value": "ROUTE_IDENTITY"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_63a3dd821429357b645d85034337aa6ce64f4f783ffcb51206e9b9e9f207fda3",
                    "typeString": "literal_string \"ROUTE_IDENTITY\""
                  }
                ],
                "id": 82909,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "3574:9:124",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 82911,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3574:27:124",
              "tryCall": false,
              "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
            },
            "visibility": "internal"
          },
          {
            "id": 82919,
            "nodeType": "VariableDeclaration",
            "src": "3607:63:124",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "STRAT_WRAP_ID",
            "nameLocation": "3627:13:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
              "typeString": "StrategyId"
            },
            "typeName": {
              "id": 82914,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82913,
                "name": "StrategyId",
                "nameLocations": ["3607:10:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 72139,
                "src": "3607:10:124"
              },
              "referencedDeclaration": 72139,
              "src": "3607:10:124",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                "typeString": "StrategyId"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 82917,
                  "name": "STRAT_WRAP",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 82907,
                  "src": "3659:10:124",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                }
              ],
              "expression": {
                "argumentTypes": [{ "typeIdentifier": "t_bytes32", "typeString": "bytes32" }],
                "expression": {
                  "id": 82915,
                  "name": "StrategyId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 72139,
                  "src": "3643:10:124",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_userDefinedValueType$_StrategyId_$72139_$",
                    "typeString": "type(StrategyId)"
                  }
                },
                "id": 82916,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "memberLocation": "3654:4:124",
                "memberName": "wrap",
                "nodeType": "MemberAccess",
                "src": "3643:15:124",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_StrategyId_$72139_$",
                  "typeString": "function (bytes32) pure returns (StrategyId)"
                }
              },
              "id": 82918,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3643:27:124",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                "typeString": "StrategyId"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 82926,
            "nodeType": "VariableDeclaration",
            "src": "3676:65:124",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "STRAT_IDENT_ID",
            "nameLocation": "3696:14:124",
            "scope": 83844,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
              "typeString": "StrategyId"
            },
            "typeName": {
              "id": 82921,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 82920,
                "name": "StrategyId",
                "nameLocations": ["3676:10:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 72139,
                "src": "3676:10:124"
              },
              "referencedDeclaration": 72139,
              "src": "3676:10:124",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                "typeString": "StrategyId"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 82924,
                  "name": "STRAT_IDENT",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 82912,
                  "src": "3729:11:124",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                }
              ],
              "expression": {
                "argumentTypes": [{ "typeIdentifier": "t_bytes32", "typeString": "bytes32" }],
                "expression": {
                  "id": 82922,
                  "name": "StrategyId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 72139,
                  "src": "3713:10:124",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_userDefinedValueType$_StrategyId_$72139_$",
                    "typeString": "type(StrategyId)"
                  }
                },
                "id": 82923,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "memberLocation": "3724:4:124",
                "memberName": "wrap",
                "nodeType": "MemberAccess",
                "src": "3713:15:124",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_StrategyId_$72139_$",
                  "typeString": "function (bytes32) pure returns (StrategyId)"
                }
              },
              "id": 82925,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3713:28:124",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                "typeString": "StrategyId"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 83426,
            "nodeType": "FunctionDefinition",
            "src": "3748:5234:124",
            "nodes": [],
            "body": {
              "id": 83425,
              "nodeType": "Block",
              "src": "3781:5201:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 82938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82930,
                      "name": "BASE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82869,
                      "src": "3820:4:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28758",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "5772617070656420425443",
                          "id": 82934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3841:13:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2ef08214ff447791a5e9afb7318f8e3059fd5f496df6b60a73eead50d2471ef1",
                            "typeString": "literal_string \"Wrapped BTC\""
                          },
                          "value": "Wrapped BTC"
                        },
                        {
                          "hexValue": "57425443",
                          "id": 82935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3856:6:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73",
                            "typeString": "literal_string \"WBTC\""
                          },
                          "value": "WBTC"
                        },
                        {
                          "hexValue": "38",
                          "id": 82936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3864:1:124",
                          "typeDescriptions": { "typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8" },
                          "value": "8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_2ef08214ff447791a5e9afb7318f8e3059fd5f496df6b60a73eead50d2471ef1",
                            "typeString": "literal_string \"Wrapped BTC\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73",
                            "typeString": "literal_string \"WBTC\""
                          },
                          { "typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8" }
                        ],
                        "id": 82933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3827:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$28758_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 82932,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 82931,
                            "name": "MockERC20",
                            "nameLocations": ["3831:9:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28758,
                            "src": "3831:9:124"
                          },
                          "referencedDeclaration": 28758,
                          "src": "3831:9:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$28758",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 82937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3827:39:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28758",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "3820:46:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$28758",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 82939,
                  "nodeType": "ExpressionStatement",
                  "src": "3820:46:124"
                },
                {
                  "expression": {
                    "id": 82948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82940,
                      "name": "WRAPPED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82872,
                      "src": "3876:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28758",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "7757425443",
                          "id": 82944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3900:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f17bf563a311ab4405cb9213292b871966123232355f86d77ed43fcc855e1007",
                            "typeString": "literal_string \"wWBTC\""
                          },
                          "value": "wWBTC"
                        },
                        {
                          "hexValue": "7757425443",
                          "id": 82945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3909:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f17bf563a311ab4405cb9213292b871966123232355f86d77ed43fcc855e1007",
                            "typeString": "literal_string \"wWBTC\""
                          },
                          "value": "wWBTC"
                        },
                        {
                          "hexValue": "38",
                          "id": 82946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3918:1:124",
                          "typeDescriptions": { "typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8" },
                          "value": "8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_f17bf563a311ab4405cb9213292b871966123232355f86d77ed43fcc855e1007",
                            "typeString": "literal_string \"wWBTC\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_f17bf563a311ab4405cb9213292b871966123232355f86d77ed43fcc855e1007",
                            "typeString": "literal_string \"wWBTC\""
                          },
                          { "typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8" }
                        ],
                        "id": 82943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3886:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$28758_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 82942,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 82941,
                            "name": "MockERC20",
                            "nameLocations": ["3890:9:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28758,
                            "src": "3890:9:124"
                          },
                          "referencedDeclaration": 28758,
                          "src": "3890:9:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$28758",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 82947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3886:34:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28758",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "3876:44:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$28758",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 82949,
                  "nodeType": "ExpressionStatement",
                  "src": "3876:44:124"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 82950,
                        "name": "TestSuiteV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29031,
                        "src": "3930:11:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TestSuiteV2_$29031_$",
                          "typeString": "type(contract TestSuiteV2)"
                        }
                      },
                      "id": 82952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3942:5:124",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28976,
                      "src": "3930:17:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 82953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3930:19:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 82954,
                  "nodeType": "ExpressionStatement",
                  "src": "3930:19:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82958,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82861,
                        "src": "4000:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 82955,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "3991:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 82957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3994:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "3991:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3991:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 82960,
                  "nodeType": "ExpressionStatement",
                  "src": "3991:18:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "68747470733a2f2f6578616d706c652e636f6d",
                        "id": 82964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4047:21:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edba3f8cfcd4165f73cd4641ced2b2ec0d3ba4338e3eec30edd58777d86b53b2",
                          "typeString": "literal_string \"https://example.com\""
                        },
                        "value": "https://example.com"
                      },
                      {
                        "hexValue": "4f70657261746f722059",
                        "id": 82965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4070:12:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1038313a1e75734d78a6160e04e6865b81fc5c9166adb208e9f84694c6f7893",
                          "typeString": "literal_string \"Operator Y\""
                        },
                        "value": "Operator Y"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_edba3f8cfcd4165f73cd4641ced2b2ec0d3ba4338e3eec30edd58777d86b53b2",
                          "typeString": "literal_string \"https://example.com\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1038313a1e75734d78a6160e04e6865b81fc5c9166adb208e9f84694c6f7893",
                          "typeString": "literal_string \"Operator Y\""
                        }
                      ],
                      "expression": {
                        "id": 82961,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28802,
                        "src": "4019:8:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SLAYRegistryV2_$24613",
                          "typeString": "contract SLAYRegistryV2"
                        }
                      },
                      "id": 82963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4028:18:124",
                      "memberName": "registerAsOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23341,
                      "src": "4019:27:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory) external"
                      }
                    },
                    "id": 82966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4019:64:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 82967,
                  "nodeType": "ExpressionStatement",
                  "src": "4019:64:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82971,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82861,
                        "src": "4127:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 82968,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "4118:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 82970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4121:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "4118:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4118:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 82973,
                  "nodeType": "ExpressionStatement",
                  "src": "4118:18:124"
                },
                {
                  "expression": {
                    "id": 82981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82974,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82878,
                      "src": "4146:5:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                        "typeString": "contract SLAYVaultV2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 82977,
                          "name": "BASE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82869,
                          "src": "4174:4:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$28758",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "hexValue": "74657374",
                          "id": 82978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4180:6:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                            "typeString": "literal_string \"test\""
                          },
                          "value": "test"
                        },
                        {
                          "hexValue": "54",
                          "id": 82979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4188:3:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
                            "typeString": "literal_string \"T\""
                          },
                          "value": "T"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" },
                          {
                            "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                            "typeString": "literal_string \"test\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
                            "typeString": "literal_string \"T\""
                          }
                        ],
                        "expression": {
                          "id": 82975,
                          "name": "vaultFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28805,
                          "src": "4154:12:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLAYVaultFactoryV2_$26472",
                            "typeString": "contract SLAYVaultFactoryV2"
                          }
                        },
                        "id": 82976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4167:6:124",
                        "memberName": "create",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26417,
                        "src": "4154:19:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20Metadata_$7351_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_SLAYVaultV2_$27419_$",
                          "typeString": "function (contract IERC20Metadata,string memory,string memory) external returns (contract SLAYVaultV2)"
                        }
                      },
                      "id": 82980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4154:38:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                        "typeString": "contract SLAYVaultV2"
                      }
                    },
                    "src": "4146:46:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                      "typeString": "contract SLAYVaultV2"
                    }
                  },
                  "id": 82982,
                  "nodeType": "ExpressionStatement",
                  "src": "4146:46:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 82984,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82878,
                            "src": "4230:5:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                              "typeString": "contract SLAYVaultV2"
                            }
                          },
                          "id": 82985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4236:9:124",
                          "memberName": "delegated",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26664,
                          "src": "4230:15:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 82986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4230:17:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 82987,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82861,
                        "src": "4249:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" }
                      ],
                      "id": 82983,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29538,
                      "src": "4221:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) pure"
                      }
                    },
                    "id": 82988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4221:37:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 82989,
                  "nodeType": "ExpressionStatement",
                  "src": "4221:37:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82993,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28787,
                        "src": "4278:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 82990,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "4269:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 82992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4272:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "4269:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4269:15:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 82995,
                  "nodeType": "ExpressionStatement",
                  "src": "4269:15:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83001,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82878,
                            "src": "4327:5:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                              "typeString": "contract SLAYVaultV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_SLAYVaultV2_$27419", "typeString": "contract SLAYVaultV2" }
                          ],
                          "id": 83000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4319:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 82999,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4319:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4319:14:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 83003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4335:4:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" }
                      ],
                      "expression": {
                        "id": 82996,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28799,
                        "src": "4294:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SLAYRouterV2_$26255",
                          "typeString": "contract SLAYRouterV2"
                        }
                      },
                      "id": 82998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4301:17:124",
                      "memberName": "setVaultWhitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25373,
                      "src": "4294:24:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 83004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4294:46:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83005,
                  "nodeType": "ExpressionStatement",
                  "src": "4294:46:124"
                },
                {
                  "expression": {
                    "id": 83012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83006,
                      "name": "pl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82881,
                      "src": "4434:2:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PositionLocker_$73835",
                        "typeString": "contract PositionLocker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 83010,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82878,
                          "src": "4458:5:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                            "typeString": "contract SLAYVaultV2"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_contract$_SLAYVaultV2_$27419", "typeString": "contract SLAYVaultV2" }
                        ],
                        "id": 83009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4439:18:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_SLAYVaultV2_$27419_$returns$_t_contract$_PositionLocker_$73835_$",
                          "typeString": "function (contract SLAYVaultV2) returns (contract PositionLocker)"
                        },
                        "typeName": {
                          "id": 83008,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 83007,
                            "name": "PositionLocker",
                            "nameLocations": ["4443:14:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 73835,
                            "src": "4443:14:124"
                          },
                          "referencedDeclaration": 73835,
                          "src": "4443:14:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PositionLocker_$73835",
                            "typeString": "contract PositionLocker"
                          }
                        }
                      },
                      "id": 83011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4439:25:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PositionLocker_$73835",
                        "typeString": "contract PositionLocker"
                      }
                    },
                    "src": "4434:30:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PositionLocker_$73835",
                      "typeString": "contract PositionLocker"
                    }
                  },
                  "id": 83013,
                  "nodeType": "ExpressionStatement",
                  "src": "4434:30:124"
                },
                {
                  "expression": {
                    "id": 83019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83014,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82887,
                      "src": "4518:6:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockOracle_$82718",
                        "typeString": "contract MockOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 83017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4528:14:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockOracle_$82718_$",
                          "typeString": "function () returns (contract MockOracle)"
                        },
                        "typeName": {
                          "id": 83016,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 83015,
                            "name": "MockOracle",
                            "nameLocations": ["4532:10:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82718,
                            "src": "4532:10:124"
                          },
                          "referencedDeclaration": 82718,
                          "src": "4532:10:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOracle_$82718",
                            "typeString": "contract MockOracle"
                          }
                        }
                      },
                      "id": 83018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4528:16:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockOracle_$82718",
                        "typeString": "contract MockOracle"
                      }
                    },
                    "src": "4518:26:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockOracle_$82718",
                      "typeString": "contract MockOracle"
                    }
                  },
                  "id": 83020,
                  "nodeType": "ExpressionStatement",
                  "src": "4518:26:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83026,
                            "name": "BASE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82869,
                            "src": "4622:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 83025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4614:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83024,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4614:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4614:13:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_5000000000000_by_1",
                          "typeString": "int_const 5000000000000"
                        },
                        "id": 83030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "35305f303030",
                          "id": 83028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4629:6:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50000_by_1",
                            "typeString": "int_const 50000"
                          },
                          "value": "50_000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "316538",
                          "id": 83029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4638:3:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          "value": "1e8"
                        },
                        "src": "4629:12:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000_by_1",
                          "typeString": "int_const 5000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_rational_5000000000000_by_1", "typeString": "int_const 5000000000000" }
                      ],
                      "expression": {
                        "id": 83021,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82887,
                        "src": "4603:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOracle_$82718",
                          "typeString": "contract MockOracle"
                        }
                      },
                      "id": 83023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4610:3:124",
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82705,
                      "src": "4603:10:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 83031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4603:39:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83032,
                  "nodeType": "ExpressionStatement",
                  "src": "4603:39:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83038,
                            "name": "DEBT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82875,
                            "src": "4671:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 83037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4663:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83036,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4663:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4663:13:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "316538",
                        "id": 83040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4678:3:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000_by_1",
                          "typeString": "int_const 100000000"
                        },
                        "value": "1e8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_rational_100000000_by_1", "typeString": "int_const 100000000" }
                      ],
                      "expression": {
                        "id": 83033,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82887,
                        "src": "4652:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOracle_$82718",
                          "typeString": "contract MockOracle"
                        }
                      },
                      "id": 83035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4659:3:124",
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82705,
                      "src": "4652:10:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 83041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4652:30:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83042,
                  "nodeType": "ExpressionStatement",
                  "src": "4652:30:124"
                },
                {
                  "expression": {
                    "id": 83062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83043,
                      "name": "cg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82884,
                      "src": "4741:2:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                        "typeString": "contract ConversionGateway"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 83047,
                          "name": "gov",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82856,
                          "src": "4768:3:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "id": 83048,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82861,
                          "src": "4773:8:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "id": 83049,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82861,
                          "src": "4783:8:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "arguments": [
                            {
                              "id": 83052,
                              "name": "pl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82881,
                              "src": "4801:2:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PositionLocker_$73835",
                                "typeString": "contract PositionLocker"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PositionLocker_$73835",
                                "typeString": "contract PositionLocker"
                              }
                            ],
                            "id": 83051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4793:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 83050,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4793:7:124",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 83053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4793:11:124",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "id": 83054,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82887,
                          "src": "4806:6:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOracle_$82718",
                            "typeString": "contract MockOracle"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 83058,
                                  "name": "BASE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82869,
                                  "src": "4829:4:124",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$28758",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$28758",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 83057,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4821:7:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 83056,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4821:7:124",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 83059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4821:13:124",
                              "tryCall": false,
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                            "id": 83055,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6631,
                            "src": "4814:6:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$6631_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 83060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4814:21:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$6631",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_contract$_MockOracle_$82718", "typeString": "contract MockOracle" },
                          { "typeIdentifier": "t_contract$_IERC20_$6631", "typeString": "contract IERC20" }
                        ],
                        "id": 83046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4746:21:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_contract$_IPriceOracle_$69067_$_t_contract$_IERC20_$6631_$returns$_t_contract$_ConversionGateway_$71634_$",
                          "typeString": "function (address,address,address,address,contract IPriceOracle,contract IERC20) returns (contract ConversionGateway)"
                        },
                        "typeName": {
                          "id": 83045,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 83044,
                            "name": "ConversionGateway",
                            "nameLocations": ["4750:17:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 71634,
                            "src": "4750:17:124"
                          },
                          "referencedDeclaration": 71634,
                          "src": "4750:17:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                            "typeString": "contract ConversionGateway"
                          }
                        }
                      },
                      "id": 83061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4746:90:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                        "typeString": "contract ConversionGateway"
                      }
                    },
                    "src": "4741:95:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                      "typeString": "contract ConversionGateway"
                    }
                  },
                  "id": 83063,
                  "nodeType": "ExpressionStatement",
                  "src": "4741:95:124"
                },
                {
                  "expression": {
                    "id": 83071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83064,
                      "name": "wrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82890,
                      "src": "4884:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockWrapper1to1_$82847",
                        "typeString": "contract MockWrapper1to1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 83068,
                          "name": "BASE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82869,
                          "src": "4914:4:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$28758",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "id": 83069,
                          "name": "WRAPPED",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82872,
                          "src": "4920:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$28758",
                            "typeString": "contract MockERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" },
                          { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                        ],
                        "id": 83067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4894:19:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_MockERC20_$28758_$_t_contract$_MockERC20_$28758_$returns$_t_contract$_MockWrapper1to1_$82847_$",
                          "typeString": "function (contract MockERC20,contract MockERC20) returns (contract MockWrapper1to1)"
                        },
                        "typeName": {
                          "id": 83066,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 83065,
                            "name": "MockWrapper1to1",
                            "nameLocations": ["4898:15:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82847,
                            "src": "4898:15:124"
                          },
                          "referencedDeclaration": 82847,
                          "src": "4898:15:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockWrapper1to1_$82847",
                            "typeString": "contract MockWrapper1to1"
                          }
                        }
                      },
                      "id": 83070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4894:34:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockWrapper1to1_$82847",
                        "typeString": "contract MockWrapper1to1"
                      }
                    },
                    "src": "4884:44:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockWrapper1to1_$82847",
                      "typeString": "contract MockWrapper1to1"
                    }
                  },
                  "id": 83072,
                  "nodeType": "ExpressionStatement",
                  "src": "4884:44:124"
                },
                {
                  "expression": {
                    "id": 83086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83073,
                      "name": "extVaultWrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82893,
                      "src": "4938:15:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Simple4626_$82685",
                        "typeString": "contract Simple4626"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 83080,
                                  "name": "WRAPPED",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82872,
                                  "src": "4985:7:124",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$28758",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$28758",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 83079,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4977:7:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 83078,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4977:7:124",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 83081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4977:16:124",
                              "tryCall": false,
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                            "id": 83077,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6553,
                            "src": "4971:5:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$6553_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 83082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4971:23:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$6553",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "hexValue": "657874207657425443",
                          "id": 83083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4996:11:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2f23a64d3d3852ceff6ada81ce609332d5a3f1872da693206b12c54ab62ec5d9",
                            "typeString": "literal_string \"ext vWBTC\""
                          },
                          "value": "ext vWBTC"
                        },
                        {
                          "hexValue": "6578742d7657425443",
                          "id": 83084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5009:11:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6630c56a7efc8c5af516fc7ef1798520c78dd4ea0a3f6c7993b8c276e17e9abb",
                            "typeString": "literal_string \"ext-vWBTC\""
                          },
                          "value": "ext-vWBTC"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_contract$_ERC20_$6553", "typeString": "contract ERC20" },
                          {
                            "typeIdentifier": "t_stringliteral_2f23a64d3d3852ceff6ada81ce609332d5a3f1872da693206b12c54ab62ec5d9",
                            "typeString": "literal_string \"ext vWBTC\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_6630c56a7efc8c5af516fc7ef1798520c78dd4ea0a3f6c7993b8c276e17e9abb",
                            "typeString": "literal_string \"ext-vWBTC\""
                          }
                        ],
                        "id": 83076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4956:14:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$6553_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_Simple4626_$82685_$",
                          "typeString": "function (contract ERC20,string memory,string memory) returns (contract Simple4626)"
                        },
                        "typeName": {
                          "id": 83075,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 83074,
                            "name": "Simple4626",
                            "nameLocations": ["4960:10:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82685,
                            "src": "4960:10:124"
                          },
                          "referencedDeclaration": 82685,
                          "src": "4960:10:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Simple4626_$82685",
                            "typeString": "contract Simple4626"
                          }
                        }
                      },
                      "id": 83085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4956:65:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Simple4626_$82685",
                        "typeString": "contract Simple4626"
                      }
                    },
                    "src": "4938:83:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Simple4626_$82685",
                      "typeString": "contract Simple4626"
                    }
                  },
                  "id": 83087,
                  "nodeType": "ExpressionStatement",
                  "src": "4938:83:124"
                },
                {
                  "expression": {
                    "id": 83101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83088,
                      "name": "extVaultBase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82896,
                      "src": "5031:12:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Simple4626_$82685",
                        "typeString": "contract Simple4626"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 83095,
                                  "name": "BASE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82869,
                                  "src": "5075:4:124",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$28758",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$28758",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 83094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5067:7:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 83093,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5067:7:124",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 83096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5067:13:124",
                              "tryCall": false,
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                            "id": 83092,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6553,
                            "src": "5061:5:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$6553_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 83097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5061:20:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$6553",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "hexValue": "657874207642415345",
                          "id": 83098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5083:11:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_fc1d8cb4a8441f2268f6c3e020d323efa981dce9e85b71af55c768463adffa4d",
                            "typeString": "literal_string \"ext vBASE\""
                          },
                          "value": "ext vBASE"
                        },
                        {
                          "hexValue": "6578742d7642415345",
                          "id": 83099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5096:11:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b17acb86af6ad7596b4a0cc203994bda9a84d39026fd080f096040b8c3306d73",
                            "typeString": "literal_string \"ext-vBASE\""
                          },
                          "value": "ext-vBASE"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_contract$_ERC20_$6553", "typeString": "contract ERC20" },
                          {
                            "typeIdentifier": "t_stringliteral_fc1d8cb4a8441f2268f6c3e020d323efa981dce9e85b71af55c768463adffa4d",
                            "typeString": "literal_string \"ext vBASE\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_b17acb86af6ad7596b4a0cc203994bda9a84d39026fd080f096040b8c3306d73",
                            "typeString": "literal_string \"ext-vBASE\""
                          }
                        ],
                        "id": 83091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5046:14:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$6553_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_Simple4626_$82685_$",
                          "typeString": "function (contract ERC20,string memory,string memory) returns (contract Simple4626)"
                        },
                        "typeName": {
                          "id": 83090,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 83089,
                            "name": "Simple4626",
                            "nameLocations": ["5050:10:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82685,
                            "src": "5050:10:124"
                          },
                          "referencedDeclaration": 82685,
                          "src": "5050:10:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Simple4626_$82685",
                            "typeString": "contract Simple4626"
                          }
                        }
                      },
                      "id": 83100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5046:62:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Simple4626_$82685",
                        "typeString": "contract Simple4626"
                      }
                    },
                    "src": "5031:77:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Simple4626_$82685",
                      "typeString": "contract Simple4626"
                    }
                  },
                  "id": 83102,
                  "nodeType": "ExpressionStatement",
                  "src": "5031:77:124"
                },
                {
                  "expression": {
                    "id": 83119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83103,
                      "name": "connWrapped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82899,
                      "src": "5141:11:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                        "typeString": "contract ExternalVaultConnector"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 83107,
                          "name": "gov",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82856,
                          "src": "5182:3:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "arguments": [
                            {
                              "id": 83110,
                              "name": "cg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82884,
                              "src": "5195:2:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                                "typeString": "contract ConversionGateway"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                                "typeString": "contract ConversionGateway"
                              }
                            ],
                            "id": 83109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5187:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 83108,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5187:7:124",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 83111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5187:11:124",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 83115,
                                  "name": "extVaultWrapped",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82893,
                                  "src": "5217:15:124",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Simple4626_$82685",
                                    "typeString": "contract Simple4626"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Simple4626_$82685",
                                    "typeString": "contract Simple4626"
                                  }
                                ],
                                "id": 83114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5209:7:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 83113,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5209:7:124",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 83116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5209:24:124",
                              "tryCall": false,
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                            "id": 83112,
                            "name": "IERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5158,
                            "src": "5200:8:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC4626_$5158_$",
                              "typeString": "type(contract IERC4626)"
                            }
                          },
                          "id": 83117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5200:34:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC4626_$5158",
                            "typeString": "contract IERC4626"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_contract$_IERC4626_$5158", "typeString": "contract IERC4626" }
                        ],
                        "id": 83106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5155:26:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_contract$_IERC4626_$5158_$returns$_t_contract$_ExternalVaultConnector_$72007_$",
                          "typeString": "function (address,address,contract IERC4626) returns (contract ExternalVaultConnector)"
                        },
                        "typeName": {
                          "id": 83105,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 83104,
                            "name": "ExternalVaultConnector",
                            "nameLocations": ["5159:22:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 72007,
                            "src": "5159:22:124"
                          },
                          "referencedDeclaration": 72007,
                          "src": "5159:22:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                            "typeString": "contract ExternalVaultConnector"
                          }
                        }
                      },
                      "id": 83118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5155:80:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                        "typeString": "contract ExternalVaultConnector"
                      }
                    },
                    "src": "5141:94:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                      "typeString": "contract ExternalVaultConnector"
                    }
                  },
                  "id": 83120,
                  "nodeType": "ExpressionStatement",
                  "src": "5141:94:124"
                },
                {
                  "expression": {
                    "id": 83137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83121,
                      "name": "connBase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82902,
                      "src": "5245:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                        "typeString": "contract ExternalVaultConnector"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 83125,
                          "name": "gov",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82856,
                          "src": "5283:3:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "arguments": [
                            {
                              "id": 83128,
                              "name": "cg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82884,
                              "src": "5296:2:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                                "typeString": "contract ConversionGateway"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                                "typeString": "contract ConversionGateway"
                              }
                            ],
                            "id": 83127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5288:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 83126,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5288:7:124",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 83129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5288:11:124",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 83133,
                                  "name": "extVaultBase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82896,
                                  "src": "5318:12:124",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Simple4626_$82685",
                                    "typeString": "contract Simple4626"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Simple4626_$82685",
                                    "typeString": "contract Simple4626"
                                  }
                                ],
                                "id": 83132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5310:7:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 83131,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5310:7:124",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 83134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5310:21:124",
                              "tryCall": false,
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                            "id": 83130,
                            "name": "IERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5158,
                            "src": "5301:8:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC4626_$5158_$",
                              "typeString": "type(contract IERC4626)"
                            }
                          },
                          "id": 83135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5301:31:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC4626_$5158",
                            "typeString": "contract IERC4626"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_contract$_IERC4626_$5158", "typeString": "contract IERC4626" }
                        ],
                        "id": 83124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5256:26:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_contract$_IERC4626_$5158_$returns$_t_contract$_ExternalVaultConnector_$72007_$",
                          "typeString": "function (address,address,contract IERC4626) returns (contract ExternalVaultConnector)"
                        },
                        "typeName": {
                          "id": 83123,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 83122,
                            "name": "ExternalVaultConnector",
                            "nameLocations": ["5260:22:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 72007,
                            "src": "5260:22:124"
                          },
                          "referencedDeclaration": 72007,
                          "src": "5260:22:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                            "typeString": "contract ExternalVaultConnector"
                          }
                        }
                      },
                      "id": 83136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5256:77:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                        "typeString": "contract ExternalVaultConnector"
                      }
                    },
                    "src": "5245:88:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                      "typeString": "contract ExternalVaultConnector"
                    }
                  },
                  "id": 83138,
                  "nodeType": "ExpressionStatement",
                  "src": "5245:88:124"
                },
                {
                  "assignments": [83143],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83143,
                      "mutability": "mutable",
                      "name": "depSafeWrap",
                      "nameLocation": "5984:11:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83425,
                      "src": "5945:50:124",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DepositSafety_$69160_memory_ptr",
                        "typeString": "struct ConversionGateway.DepositSafety"
                      },
                      "typeName": {
                        "id": 83142,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 83141,
                          "name": "ConversionGateway.DepositSafety",
                          "nameLocations": ["5945:17:124", "5963:13:124"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69160,
                          "src": "5945:31:124"
                        },
                        "referencedDeclaration": 69160,
                        "src": "5945:31:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DepositSafety_$69160_storage_ptr",
                          "typeString": "struct ConversionGateway.DepositSafety"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83152,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "3235",
                        "id": 83146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6064:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_25_by_1", "typeString": "int_const 25" },
                        "value": "25"
                      },
                      {
                        "hexValue": "39393530",
                        "id": 83147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6145:4:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9950_by_1",
                          "typeString": "int_const 9950"
                        },
                        "value": "9950"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 83148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6227:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "false"
                      },
                      {
                        "hexValue": "353030",
                        "id": 83149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6288:3:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_500_by_1", "typeString": "int_const 500" },
                        "value": "500"
                      },
                      {
                        "hexValue": "353030",
                        "id": 83150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6381:3:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_500_by_1", "typeString": "int_const 500" },
                        "value": "500"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_rational_25_by_1", "typeString": "int_const 25" },
                        { "typeIdentifier": "t_rational_9950_by_1", "typeString": "int_const 9950" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_rational_500_by_1", "typeString": "int_const 500" },
                        { "typeIdentifier": "t_rational_500_by_1", "typeString": "int_const 500" }
                      ],
                      "expression": {
                        "id": 83144,
                        "name": "ConversionGateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71634,
                        "src": "5998:17:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ConversionGateway_$71634_$",
                          "typeString": "type(contract ConversionGateway)"
                        }
                      },
                      "id": 83145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6016:13:124",
                      "memberName": "DepositSafety",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69160,
                      "src": "5998:31:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_DepositSafety_$69160_storage_ptr_$",
                        "typeString": "type(struct ConversionGateway.DepositSafety storage pointer)"
                      }
                    },
                    "id": 83151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": ["6044:18:124", "6125:15:124", "6207:13:124", "6268:18:124", "6361:18:124"],
                    "names": [
                      "redeemToleranceBps",
                      "unwrapMinOutBps",
                      "emergencyMode",
                      "emergencyRedeemBps",
                      "emergencyUnwrapBps"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "5998:456:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DepositSafety_$69160_memory_ptr",
                      "typeString": "struct ConversionGateway.DepositSafety memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5945:509:124"
                },
                {
                  "assignments": [83157],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83157,
                      "mutability": "mutable",
                      "name": "depSafeIdent",
                      "nameLocation": "6504:12:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83425,
                      "src": "6465:51:124",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DepositSafety_$69160_memory_ptr",
                        "typeString": "struct ConversionGateway.DepositSafety"
                      },
                      "typeName": {
                        "id": 83156,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 83155,
                          "name": "ConversionGateway.DepositSafety",
                          "nameLocations": ["6465:17:124", "6483:13:124"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69160,
                          "src": "6465:31:124"
                        },
                        "referencedDeclaration": 69160,
                        "src": "6465:31:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DepositSafety_$69160_storage_ptr",
                          "typeString": "struct ConversionGateway.DepositSafety"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83166,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 83160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6585:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" },
                        "value": "10"
                      },
                      {
                        "hexValue": "31305f303030",
                        "id": 83161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6650:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10_000"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 83162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6737:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "false"
                      },
                      {
                        "hexValue": "323030",
                        "id": 83163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6776:3:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_200_by_1", "typeString": "int_const 200" },
                        "value": "200"
                      },
                      {
                        "hexValue": "30",
                        "id": 83164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6842:1:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10" },
                        { "typeIdentifier": "t_rational_10000_by_1", "typeString": "int_const 10000" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_rational_200_by_1", "typeString": "int_const 200" },
                        { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }
                      ],
                      "expression": {
                        "id": 83158,
                        "name": "ConversionGateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71634,
                        "src": "6519:17:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ConversionGateway_$71634_$",
                          "typeString": "type(contract ConversionGateway)"
                        }
                      },
                      "id": 83159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6537:13:124",
                      "memberName": "DepositSafety",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69160,
                      "src": "6519:31:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_DepositSafety_$69160_storage_ptr_$",
                        "typeString": "type(struct ConversionGateway.DepositSafety storage pointer)"
                      }
                    },
                    "id": 83165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": ["6565:18:124", "6630:15:124", "6717:13:124", "6756:18:124", "6822:18:124"],
                    "names": [
                      "redeemToleranceBps",
                      "unwrapMinOutBps",
                      "emergencyMode",
                      "emergencyRedeemBps",
                      "emergencyUnwrapBps"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6519:369:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DepositSafety_$69160_memory_ptr",
                      "typeString": "struct ConversionGateway.DepositSafety memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6465:423:124"
                },
                {
                  "id": 83211,
                  "nodeType": "Block",
                  "src": "6971:451:124",
                  "statements": [
                    {
                      "assignments": [83171],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 83171,
                          "mutability": "mutable",
                          "name": "s",
                          "nameLocation": "7022:1:124",
                          "nodeType": "VariableDeclaration",
                          "scope": 83211,
                          "src": "6985:38:124",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StrategyCfg_$69149_memory_ptr",
                            "typeString": "struct ConversionGateway.StrategyCfg"
                          },
                          "typeName": {
                            "id": 83170,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 83169,
                              "name": "ConversionGateway.StrategyCfg",
                              "nameLocations": ["6985:17:124", "7003:11:124"],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 69149,
                              "src": "6985:29:124"
                            },
                            "referencedDeclaration": 69149,
                            "src": "6985:29:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyCfg_$69149_storage_ptr",
                              "typeString": "struct ConversionGateway.StrategyCfg"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 83172,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6985:38:124"
                    },
                    {
                      "expression": {
                        "id": 83179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 83173,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83171,
                            "src": "7037:1:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyCfg_$69149_memory_ptr",
                              "typeString": "struct ConversionGateway.StrategyCfg memory"
                            }
                          },
                          "id": 83175,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "7039:4:124",
                          "memberName": "kind",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 69142,
                          "src": "7037:6:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RouteKind_$69119",
                            "typeString": "enum ConversionGateway.RouteKind"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "expression": {
                            "expression": {
                              "id": 83176,
                              "name": "ConversionGateway",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71634,
                              "src": "7046:17:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ConversionGateway_$71634_$",
                                "typeString": "type(contract ConversionGateway)"
                              }
                            },
                            "id": 83177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7064:9:124",
                            "memberName": "RouteKind",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69119,
                            "src": "7046:27:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RouteKind_$69119_$",
                              "typeString": "type(enum ConversionGateway.RouteKind)"
                            }
                          },
                          "id": 83178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7074:15:124",
                          "memberName": "DepositWrap1to1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 69117,
                          "src": "7046:43:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RouteKind_$69119",
                            "typeString": "enum ConversionGateway.RouteKind"
                          }
                        },
                        "src": "7037:52:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RouteKind_$69119",
                          "typeString": "enum ConversionGateway.RouteKind"
                        }
                      },
                      "id": 83180,
                      "nodeType": "ExpressionStatement",
                      "src": "7037:52:124"
                    },
                    {
                      "expression": {
                        "id": 83196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 83181,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83171,
                            "src": "7103:1:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyCfg_$69149_memory_ptr",
                              "typeString": "struct ConversionGateway.StrategyCfg memory"
                            }
                          },
                          "id": 83183,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "7105:7:124",
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 69145,
                          "src": "7103:9:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DepositCfg_$69127_memory_ptr",
                            "typeString": "struct ConversionGateway.DepositCfg memory"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 83188,
                                  "name": "wrapper",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82890,
                                  "src": "7181:7:124",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockWrapper1to1_$82847",
                                    "typeString": "contract MockWrapper1to1"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockWrapper1to1_$82847",
                                    "typeString": "contract MockWrapper1to1"
                                  }
                                ],
                                "id": 83187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7173:7:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 83186,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7173:7:124",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 83189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7173:16:124",
                              "tryCall": false,
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 83192,
                                  "name": "connWrapped",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82899,
                                  "src": "7226:11:124",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                                    "typeString": "contract ExternalVaultConnector"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                                    "typeString": "contract ExternalVaultConnector"
                                  }
                                ],
                                "id": 83191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7218:7:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 83190,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7218:7:124",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 83193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7218:20:124",
                              "tryCall": false,
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "id": 83194,
                              "name": "depSafeWrap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83143,
                              "src": "7267:11:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DepositSafety_$69160_memory_ptr",
                                "typeString": "struct ConversionGateway.DepositSafety memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              {
                                "typeIdentifier": "t_struct$_DepositSafety_$69160_memory_ptr",
                                "typeString": "struct ConversionGateway.DepositSafety memory"
                              }
                            ],
                            "expression": {
                              "id": 83184,
                              "name": "ConversionGateway",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71634,
                              "src": "7115:17:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ConversionGateway_$71634_$",
                                "typeString": "type(contract ConversionGateway)"
                              }
                            },
                            "id": 83185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7133:10:124",
                            "memberName": "DepositCfg",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69127,
                            "src": "7115:28:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DepositCfg_$69127_storage_ptr_$",
                              "typeString": "type(struct ConversionGateway.DepositCfg storage pointer)"
                            }
                          },
                          "id": 83195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": ["7162:7:124", "7207:9:124", "7256:6:124"],
                          "names": ["wrapper", "connector", "safety"],
                          "nodeType": "FunctionCall",
                          "src": "7115:178:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DepositCfg_$69127_memory_ptr",
                            "typeString": "struct ConversionGateway.DepositCfg memory"
                          }
                        },
                        "src": "7103:190:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DepositCfg_$69127_memory_ptr",
                          "typeString": "struct ConversionGateway.DepositCfg memory"
                        }
                      },
                      "id": 83197,
                      "nodeType": "ExpressionStatement",
                      "src": "7103:190:124"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 83201,
                            "name": "gov",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82856,
                            "src": "7364:3:124",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 83198,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29075,
                            "src": "7355:2:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$46992",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 83200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7358:5:124",
                          "memberName": "prank",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46281,
                          "src": "7355:8:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 83202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7355:13:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                      },
                      "id": 83203,
                      "nodeType": "ExpressionStatement",
                      "src": "7355:13:124"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 83207,
                            "name": "STRAT_WRAP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82907,
                            "src": "7397:10:124",
                            "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                          },
                          {
                            "id": 83208,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83171,
                            "src": "7409:1:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyCfg_$69149_memory_ptr",
                              "typeString": "struct ConversionGateway.StrategyCfg memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                            {
                              "typeIdentifier": "t_struct$_StrategyCfg_$69149_memory_ptr",
                              "typeString": "struct ConversionGateway.StrategyCfg memory"
                            }
                          ],
                          "expression": {
                            "id": 83204,
                            "name": "cg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82884,
                            "src": "7382:2:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                              "typeString": "contract ConversionGateway"
                            }
                          },
                          "id": 83206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7385:11:124",
                          "memberName": "setStrategy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70013,
                          "src": "7382:14:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_struct$_StrategyCfg_$69149_memory_ptr_$returns$__$",
                            "typeString": "function (bytes32,struct ConversionGateway.StrategyCfg memory) external"
                          }
                        },
                        "id": 83209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7382:29:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                      },
                      "id": 83210,
                      "nodeType": "ExpressionStatement",
                      "src": "7382:29:124"
                    }
                  ]
                },
                {
                  "id": 83256,
                  "nodeType": "Block",
                  "src": "7493:396:124",
                  "statements": [
                    {
                      "assignments": [83216],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 83216,
                          "mutability": "mutable",
                          "name": "s",
                          "nameLocation": "7544:1:124",
                          "nodeType": "VariableDeclaration",
                          "scope": 83256,
                          "src": "7507:38:124",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StrategyCfg_$69149_memory_ptr",
                            "typeString": "struct ConversionGateway.StrategyCfg"
                          },
                          "typeName": {
                            "id": 83215,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 83214,
                              "name": "ConversionGateway.StrategyCfg",
                              "nameLocations": ["7507:17:124", "7525:11:124"],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 69149,
                              "src": "7507:29:124"
                            },
                            "referencedDeclaration": 69149,
                            "src": "7507:29:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyCfg_$69149_storage_ptr",
                              "typeString": "struct ConversionGateway.StrategyCfg"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 83217,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7507:38:124"
                    },
                    {
                      "expression": {
                        "id": 83224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 83218,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83216,
                            "src": "7559:1:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyCfg_$69149_memory_ptr",
                              "typeString": "struct ConversionGateway.StrategyCfg memory"
                            }
                          },
                          "id": 83220,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "7561:4:124",
                          "memberName": "kind",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 69142,
                          "src": "7559:6:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RouteKind_$69119",
                            "typeString": "enum ConversionGateway.RouteKind"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "expression": {
                            "expression": {
                              "id": 83221,
                              "name": "ConversionGateway",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71634,
                              "src": "7568:17:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ConversionGateway_$71634_$",
                                "typeString": "type(contract ConversionGateway)"
                              }
                            },
                            "id": 83222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7586:9:124",
                            "memberName": "RouteKind",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69119,
                            "src": "7568:27:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_RouteKind_$69119_$",
                              "typeString": "type(enum ConversionGateway.RouteKind)"
                            }
                          },
                          "id": 83223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7596:15:124",
                          "memberName": "DepositIdentity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 69116,
                          "src": "7568:43:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RouteKind_$69119",
                            "typeString": "enum ConversionGateway.RouteKind"
                          }
                        },
                        "src": "7559:52:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RouteKind_$69119",
                          "typeString": "enum ConversionGateway.RouteKind"
                        }
                      },
                      "id": 83225,
                      "nodeType": "ExpressionStatement",
                      "src": "7559:52:124"
                    },
                    {
                      "expression": {
                        "id": 83241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 83226,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83216,
                            "src": "7625:1:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyCfg_$69149_memory_ptr",
                              "typeString": "struct ConversionGateway.StrategyCfg memory"
                            }
                          },
                          "id": 83228,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "7627:7:124",
                          "memberName": "deposit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 69145,
                          "src": "7625:9:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DepositCfg_$69127_memory_ptr",
                            "typeString": "struct ConversionGateway.DepositCfg memory"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 83233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7703:1:124",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }
                                ],
                                "id": 83232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7695:7:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 83231,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7695:7:124",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 83234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7695:10:124",
                              "tryCall": false,
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 83237,
                                  "name": "connBase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82902,
                                  "src": "7742:8:124",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                                    "typeString": "contract ExternalVaultConnector"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                                    "typeString": "contract ExternalVaultConnector"
                                  }
                                ],
                                "id": 83236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7734:7:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 83235,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7734:7:124",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 83238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7734:17:124",
                              "tryCall": false,
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "id": 83239,
                              "name": "depSafeIdent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83157,
                              "src": "7780:12:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DepositSafety_$69160_memory_ptr",
                                "typeString": "struct ConversionGateway.DepositSafety memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              {
                                "typeIdentifier": "t_struct$_DepositSafety_$69160_memory_ptr",
                                "typeString": "struct ConversionGateway.DepositSafety memory"
                              }
                            ],
                            "expression": {
                              "id": 83229,
                              "name": "ConversionGateway",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71634,
                              "src": "7637:17:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ConversionGateway_$71634_$",
                                "typeString": "type(contract ConversionGateway)"
                              }
                            },
                            "id": 83230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7655:10:124",
                            "memberName": "DepositCfg",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69127,
                            "src": "7637:28:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DepositCfg_$69127_storage_ptr_$",
                              "typeString": "type(struct ConversionGateway.DepositCfg storage pointer)"
                            }
                          },
                          "id": 83240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": ["7684:7:124", "7723:9:124", "7769:6:124"],
                          "names": ["wrapper", "connector", "safety"],
                          "nodeType": "FunctionCall",
                          "src": "7637:170:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DepositCfg_$69127_memory_ptr",
                            "typeString": "struct ConversionGateway.DepositCfg memory"
                          }
                        },
                        "src": "7625:182:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DepositCfg_$69127_memory_ptr",
                          "typeString": "struct ConversionGateway.DepositCfg memory"
                        }
                      },
                      "id": 83242,
                      "nodeType": "ExpressionStatement",
                      "src": "7625:182:124"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 83246,
                            "name": "gov",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82856,
                            "src": "7830:3:124",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 83243,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29075,
                            "src": "7821:2:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$46992",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 83245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7824:5:124",
                          "memberName": "prank",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46281,
                          "src": "7821:8:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 83247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7821:13:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                      },
                      "id": 83248,
                      "nodeType": "ExpressionStatement",
                      "src": "7821:13:124"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 83252,
                            "name": "STRAT_IDENT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82912,
                            "src": "7863:11:124",
                            "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                          },
                          {
                            "id": 83253,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83216,
                            "src": "7876:1:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyCfg_$69149_memory_ptr",
                              "typeString": "struct ConversionGateway.StrategyCfg memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                            {
                              "typeIdentifier": "t_struct$_StrategyCfg_$69149_memory_ptr",
                              "typeString": "struct ConversionGateway.StrategyCfg memory"
                            }
                          ],
                          "expression": {
                            "id": 83249,
                            "name": "cg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82884,
                            "src": "7848:2:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                              "typeString": "contract ConversionGateway"
                            }
                          },
                          "id": 83251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7851:11:124",
                          "memberName": "setStrategy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 70013,
                          "src": "7848:14:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_struct$_StrategyCfg_$69149_memory_ptr_$returns$__$",
                            "typeString": "function (bytes32,struct ConversionGateway.StrategyCfg memory) external"
                          }
                        },
                        "id": 83254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7848:30:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                      },
                      "id": 83255,
                      "nodeType": "ExpressionStatement",
                      "src": "7848:30:124"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83260,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82861,
                        "src": "8023:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83257,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "8014:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8017:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "8014:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8014:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83262,
                  "nodeType": "ExpressionStatement",
                  "src": "8014:18:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "355f303030",
                        "id": 83266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8053:5:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000_by_1",
                          "typeString": "int_const 5000"
                        },
                        "value": "5_000"
                      },
                      {
                        "hexValue": "355f303030",
                        "id": 83267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8060:5:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000_by_1",
                          "typeString": "int_const 5000"
                        },
                        "value": "5_000"
                      },
                      {
                        "hexValue": "355f303030",
                        "id": 83268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8067:5:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000_by_1",
                          "typeString": "int_const 5000"
                        },
                        "value": "5_000"
                      },
                      {
                        "hexValue": "31",
                        "id": 83269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8074:6:124",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_rational_5000_by_1", "typeString": "int_const 5000" },
                        { "typeIdentifier": "t_rational_5000_by_1", "typeString": "int_const 5000" },
                        { "typeIdentifier": "t_rational_5000_by_1", "typeString": "int_const 5000" },
                        { "typeIdentifier": "t_rational_86400_by_1", "typeString": "int_const 86400" }
                      ],
                      "expression": {
                        "id": 83263,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82881,
                        "src": "8042:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 83265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8045:7:124",
                      "memberName": "setCaps",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72550,
                      "src": "8042:10:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint48_$returns$__$",
                        "typeString": "function (uint16,uint16,uint16,uint48) external"
                      }
                    },
                    "id": 83270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8042:39:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83271,
                  "nodeType": "ExpressionStatement",
                  "src": "8042:39:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83275,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82861,
                        "src": "8154:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83272,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "8145:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8148:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "8145:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8145:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83277,
                  "nodeType": "ExpressionStatement",
                  "src": "8145:18:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83283,
                            "name": "cg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82884,
                            "src": "8205:2:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                              "typeString": "contract ConversionGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                              "typeString": "contract ConversionGateway"
                            }
                          ],
                          "id": 83282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8197:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83281,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8197:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8197:11:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83278,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82881,
                        "src": "8173:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 83280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8176:20:124",
                      "memberName": "setConversionGateway",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72582,
                      "src": "8173:23:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8173:36:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83286,
                  "nodeType": "ExpressionStatement",
                  "src": "8173:36:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83290,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82861,
                        "src": "8256:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83287,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "8247:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8250:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "8247:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8247:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83292,
                  "nodeType": "ExpressionStatement",
                  "src": "8247:18:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83296,
                        "name": "STRAT_WRAP_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82919,
                        "src": "8297:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                          "typeString": "StrategyId"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 83297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8312:4:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139", "typeString": "StrategyId" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" }
                      ],
                      "expression": {
                        "id": 83293,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82881,
                        "src": "8275:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 83295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8278:18:124",
                      "memberName": "setStrategyEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72605,
                      "src": "8275:21:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_StrategyId_$72139_$_t_bool_$returns$__$",
                        "typeString": "function (StrategyId,bool) external"
                      }
                    },
                    "id": 83298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8275:42:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83299,
                  "nodeType": "ExpressionStatement",
                  "src": "8275:42:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83303,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82861,
                        "src": "8336:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83300,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "8327:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8330:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "8327:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8327:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83305,
                  "nodeType": "ExpressionStatement",
                  "src": "8327:18:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83309,
                        "name": "STRAT_IDENT_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82926,
                        "src": "8377:14:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                          "typeString": "StrategyId"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 83310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8393:4:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139", "typeString": "StrategyId" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" }
                      ],
                      "expression": {
                        "id": 83306,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82881,
                        "src": "8355:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 83308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8358:18:124",
                      "memberName": "setStrategyEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72605,
                      "src": "8355:21:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_StrategyId_$72139_$_t_bool_$returns$__$",
                        "typeString": "function (StrategyId,bool) external"
                      }
                    },
                    "id": 83311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8355:43:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83312,
                  "nodeType": "ExpressionStatement",
                  "src": "8355:43:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83316,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82861,
                        "src": "8417:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83313,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "8408:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8411:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "8408:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8408:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83318,
                  "nodeType": "ExpressionStatement",
                  "src": "8408:18:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 83322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8449:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }],
                      "expression": {
                        "id": 83319,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82881,
                        "src": "8436:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 83321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8439:9:124",
                      "memberName": "setPaused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72648,
                      "src": "8436:12:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 83323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8436:19:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83324,
                  "nodeType": "ExpressionStatement",
                  "src": "8436:19:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83330,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82878,
                            "src": "8522:5:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                              "typeString": "contract SLAYVaultV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_SLAYVaultV2_$27419", "typeString": "contract SLAYVaultV2" }
                          ],
                          "id": 83329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8514:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83328,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8514:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8514:14:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "534c41595661756c74",
                        "id": 83332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8530:11:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99f53b233ce46e3d48520599d22c887400462f3e3b60f6fb4be68eb475f55f1b",
                          "typeString": "literal_string \"SLAYVault\""
                        },
                        "value": "SLAYVault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_99f53b233ce46e3d48520599d22c887400462f3e3b60f6fb4be68eb475f55f1b",
                          "typeString": "literal_string \"SLAYVault\""
                        }
                      ],
                      "expression": {
                        "id": 83325,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "8505:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8508:5:124",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "8505:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 83333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8505:37:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83334,
                  "nodeType": "ExpressionStatement",
                  "src": "8505:37:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83340,
                            "name": "pl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82881,
                            "src": "8569:2:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionLocker_$73835",
                              "typeString": "contract PositionLocker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionLocker_$73835",
                              "typeString": "contract PositionLocker"
                            }
                          ],
                          "id": 83339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8561:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83338,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8561:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8561:11:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "504c",
                        "id": 83342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8574:4:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_876138161d860b1265e6206748b138a5de33dd60f8d22eb8229bb1ff8d1d9fd0",
                          "typeString": "literal_string \"PL\""
                        },
                        "value": "PL"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_876138161d860b1265e6206748b138a5de33dd60f8d22eb8229bb1ff8d1d9fd0",
                          "typeString": "literal_string \"PL\""
                        }
                      ],
                      "expression": {
                        "id": 83335,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "8552:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8555:5:124",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "8552:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 83343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8552:27:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83344,
                  "nodeType": "ExpressionStatement",
                  "src": "8552:27:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83350,
                            "name": "cg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82884,
                            "src": "8606:2:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                              "typeString": "contract ConversionGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                              "typeString": "contract ConversionGateway"
                            }
                          ],
                          "id": 83349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8598:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83348,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8598:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8598:11:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "4347",
                        "id": 83352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8611:4:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_057537b6778caf7350f1d109e8920782d4826c3fc64124776c686911ef890822",
                          "typeString": "literal_string \"CG\""
                        },
                        "value": "CG"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_057537b6778caf7350f1d109e8920782d4826c3fc64124776c686911ef890822",
                          "typeString": "literal_string \"CG\""
                        }
                      ],
                      "expression": {
                        "id": 83345,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "8589:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8592:5:124",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "8589:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 83353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8589:27:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83354,
                  "nodeType": "ExpressionStatement",
                  "src": "8589:27:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83360,
                            "name": "wrapper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82890,
                            "src": "8643:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockWrapper1to1_$82847",
                              "typeString": "contract MockWrapper1to1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockWrapper1to1_$82847",
                              "typeString": "contract MockWrapper1to1"
                            }
                          ],
                          "id": 83359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8635:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83358,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8635:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8635:16:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "57726170706572",
                        "id": 83362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8653:9:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b634c26ab04f2ed327f5afb94432d19605e935870fcc91ad0d1bd271602777c4",
                          "typeString": "literal_string \"Wrapper\""
                        },
                        "value": "Wrapper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_b634c26ab04f2ed327f5afb94432d19605e935870fcc91ad0d1bd271602777c4",
                          "typeString": "literal_string \"Wrapper\""
                        }
                      ],
                      "expression": {
                        "id": 83355,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "8626:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8629:5:124",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "8626:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 83363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8626:37:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83364,
                  "nodeType": "ExpressionStatement",
                  "src": "8626:37:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83370,
                            "name": "connWrapped",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82899,
                            "src": "8690:11:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                              "typeString": "contract ExternalVaultConnector"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                              "typeString": "contract ExternalVaultConnector"
                            }
                          ],
                          "id": 83369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8682:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83368,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8682:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8682:20:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "436f6e6e57726170706564",
                        "id": 83372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8704:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2be4451e37aae1430f1c5fd861b88479e074110759fce8852c79b21a72e5bbba",
                          "typeString": "literal_string \"ConnWrapped\""
                        },
                        "value": "ConnWrapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_2be4451e37aae1430f1c5fd861b88479e074110759fce8852c79b21a72e5bbba",
                          "typeString": "literal_string \"ConnWrapped\""
                        }
                      ],
                      "expression": {
                        "id": 83365,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "8673:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8676:5:124",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "8673:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 83373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8673:45:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83374,
                  "nodeType": "ExpressionStatement",
                  "src": "8673:45:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83380,
                            "name": "connBase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82902,
                            "src": "8745:8:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                              "typeString": "contract ExternalVaultConnector"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                              "typeString": "contract ExternalVaultConnector"
                            }
                          ],
                          "id": 83379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8737:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83378,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8737:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8737:17:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "436f6e6e42617365",
                        "id": 83382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8756:10:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a1c5ddd3d562fd48f2e657c84c55b58adf11b18daef077ac009a1fd057b2772",
                          "typeString": "literal_string \"ConnBase\""
                        },
                        "value": "ConnBase"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_4a1c5ddd3d562fd48f2e657c84c55b58adf11b18daef077ac009a1fd057b2772",
                          "typeString": "literal_string \"ConnBase\""
                        }
                      ],
                      "expression": {
                        "id": 83375,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "8728:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8731:5:124",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "8728:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 83383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8728:39:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83384,
                  "nodeType": "ExpressionStatement",
                  "src": "8728:39:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83390,
                            "name": "extVaultWrapped",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82893,
                            "src": "8794:15:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Simple4626_$82685",
                              "typeString": "contract Simple4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_Simple4626_$82685", "typeString": "contract Simple4626" }
                          ],
                          "id": 83389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8786:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83388,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8786:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8786:24:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "4578745661756c7457726170706564",
                        "id": 83392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8812:17:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_934276878d3e30c78804f5c17d8a657d155add032d812e96c866efcafbd3df3e",
                          "typeString": "literal_string \"ExtVaultWrapped\""
                        },
                        "value": "ExtVaultWrapped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_934276878d3e30c78804f5c17d8a657d155add032d812e96c866efcafbd3df3e",
                          "typeString": "literal_string \"ExtVaultWrapped\""
                        }
                      ],
                      "expression": {
                        "id": 83385,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "8777:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8780:5:124",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "8777:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 83393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8777:53:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83394,
                  "nodeType": "ExpressionStatement",
                  "src": "8777:53:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83400,
                            "name": "extVaultBase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82896,
                            "src": "8857:12:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Simple4626_$82685",
                              "typeString": "contract Simple4626"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_Simple4626_$82685", "typeString": "contract Simple4626" }
                          ],
                          "id": 83399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8849:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83398,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8849:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8849:21:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "4578745661756c7442617365",
                        "id": 83402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8872:14:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bdab90640524c21a186524381437e3594466ff37893206b8cd11dba950147d80",
                          "typeString": "literal_string \"ExtVaultBase\""
                        },
                        "value": "ExtVaultBase"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_bdab90640524c21a186524381437e3594466ff37893206b8cd11dba950147d80",
                          "typeString": "literal_string \"ExtVaultBase\""
                        }
                      ],
                      "expression": {
                        "id": 83395,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "8840:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8843:5:124",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "8840:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 83403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8840:47:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83404,
                  "nodeType": "ExpressionStatement",
                  "src": "8840:47:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83410,
                            "name": "BASE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82869,
                            "src": "8914:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 83409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8906:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83408,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8906:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8906:13:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "42415345",
                        "id": 83412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8921:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a96b772a8c17d9c8cf2c92a171b3dcdcf9453b286b3b47d988d07a79acc72567",
                          "typeString": "literal_string \"BASE\""
                        },
                        "value": "BASE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_a96b772a8c17d9c8cf2c92a171b3dcdcf9453b286b3b47d988d07a79acc72567",
                          "typeString": "literal_string \"BASE\""
                        }
                      ],
                      "expression": {
                        "id": 83405,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "8897:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8900:5:124",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "8897:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 83413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8897:31:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83414,
                  "nodeType": "ExpressionStatement",
                  "src": "8897:31:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83420,
                            "name": "WRAPPED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82872,
                            "src": "8955:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 83419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8947:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83418,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8947:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8947:16:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "57524150504544",
                        "id": 83422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8965:9:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b186708b56a1a43dbf01a97d29bbb55d487b00ca063c409515185b4b6ffa3416",
                          "typeString": "literal_string \"WRAPPED\""
                        },
                        "value": "WRAPPED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_b186708b56a1a43dbf01a97d29bbb55d487b00ca063c409515185b4b6ffa3416",
                          "typeString": "literal_string \"WRAPPED\""
                        }
                      ],
                      "expression": {
                        "id": 83415,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "8938:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8941:5:124",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "8938:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 83423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8938:37:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83424,
                  "nodeType": "ExpressionStatement",
                  "src": "8938:37:124"
                }
              ]
            },
            "baseFunctions": [28976],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "3757:5:124",
            "overrides": { "id": 82928, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3772:8:124" },
            "parameters": { "id": 82927, "nodeType": "ParameterList", "parameters": [], "src": "3762:2:124" },
            "returnParameters": { "id": 82929, "nodeType": "ParameterList", "parameters": [], "src": "3781:0:124" },
            "scope": 83844,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83504,
            "nodeType": "FunctionDefinition",
            "src": "9189:552:124",
            "nodes": [],
            "body": {
              "id": 83503,
              "nodeType": "Block",
              "src": "9325:416:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83441,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83428,
                        "src": "9366:4:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 83442,
                        "name": "baseAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83430,
                        "src": "9372:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 83438,
                        "name": "BASE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82869,
                        "src": "9356:4:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9361:4:124",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28757,
                      "src": "9356:9:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 83443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9356:27:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83444,
                  "nodeType": "ExpressionStatement",
                  "src": "9356:27:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83448,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83428,
                        "src": "9408:4:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83445,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "9394:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9397:10:124",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46477,
                      "src": "9394:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9394:19:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83450,
                  "nodeType": "ExpressionStatement",
                  "src": "9394:19:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83456,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82878,
                            "src": "9481:5:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                              "typeString": "contract SLAYVaultV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_SLAYVaultV2_$27419", "typeString": "contract SLAYVaultV2" }
                          ],
                          "id": 83455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9473:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83454,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9473:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9473:14:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 83460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9494:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 83459,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9494:7:124",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)" }
                            ],
                            "id": 83458,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "9489:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 83461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9489:13:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 83462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "9503:3:124",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "9489:17:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 83451,
                        "name": "BASE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82869,
                        "src": "9460:4:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9465:7:124",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6204,
                      "src": "9460:12:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 83463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9460:47:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 83464,
                  "nodeType": "ExpressionStatement",
                  "src": "9460:47:124"
                },
                {
                  "expression": {
                    "id": 83471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83465,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83436,
                      "src": "9517:6:124",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 83468,
                          "name": "baseAssets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83430,
                          "src": "9540:10:124",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        {
                          "id": 83469,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83428,
                          "src": "9552:4:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                          { "typeIdentifier": "t_address", "typeString": "address" }
                        ],
                        "expression": {
                          "id": 83466,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82878,
                          "src": "9526:5:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                            "typeString": "contract SLAYVaultV2"
                          }
                        },
                        "id": 83467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9532:7:124",
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3226,
                        "src": "9526:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address) external returns (uint256)"
                        }
                      },
                      "id": 83470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9526:31:124",
                      "tryCall": false,
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "9517:40:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "id": 83472,
                  "nodeType": "ExpressionStatement",
                  "src": "9517:40:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83482,
                            "name": "pl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82881,
                            "src": "9654:2:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionLocker_$73835",
                              "typeString": "contract PositionLocker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionLocker_$73835",
                              "typeString": "contract PositionLocker"
                            }
                          ],
                          "id": 83481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9646:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83480,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9646:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9646:11:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 83486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9664:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 83485,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9664:7:124",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)" }
                            ],
                            "id": 83484,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "9659:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 83487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9659:13:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 83488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "9673:3:124",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "9659:17:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 83476,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82878,
                                "src": "9630:5:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                                  "typeString": "contract SLAYVaultV2"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                                  "typeString": "contract SLAYVaultV2"
                                }
                              ],
                              "id": 83475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9622:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 83474,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9622:7:124",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 83477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9622:14:124",
                            "tryCall": false,
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "id": 83473,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6553,
                          "src": "9616:5:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$6553_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 83478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9616:21:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$6553",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 83479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9638:7:124",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6204,
                      "src": "9616:29:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 83489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9616:61:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 83490,
                  "nodeType": "ExpressionStatement",
                  "src": "9616:61:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83494,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83436,
                        "src": "9696:6:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 83495,
                        "name": "strat",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83433,
                        "src": "9704:5:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                          "typeString": "StrategyId"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139", "typeString": "StrategyId" }
                      ],
                      "expression": {
                        "id": 83491,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82881,
                        "src": "9687:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 83493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9690:5:124",
                      "memberName": "optIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72750,
                      "src": "9687:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_userDefinedValueType$_StrategyId_$72139_$returns$__$",
                        "typeString": "function (uint256,StrategyId) external"
                      }
                    },
                    "id": 83496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9687:23:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83497,
                  "nodeType": "ExpressionStatement",
                  "src": "9687:23:124"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83498,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "9720:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9723:9:124",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46521,
                      "src": "9720:12:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9720:14:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83502,
                  "nodeType": "ExpressionStatement",
                  "src": "9720:14:124"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_userDepositAndOptIn",
            "nameLocation": "9198:20:124",
            "parameters": {
              "id": 83434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83428,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "9227:4:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 83504,
                  "src": "9219:12:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 83427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9219:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83430,
                  "mutability": "mutable",
                  "name": "baseAssets",
                  "nameLocation": "9241:10:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 83504,
                  "src": "9233:18:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 83429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9233:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83433,
                  "mutability": "mutable",
                  "name": "strat",
                  "nameLocation": "9264:5:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 83504,
                  "src": "9253:16:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                    "typeString": "StrategyId"
                  },
                  "typeName": {
                    "id": 83432,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 83431,
                      "name": "StrategyId",
                      "nameLocations": ["9253:10:124"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72139,
                      "src": "9253:10:124"
                    },
                    "referencedDeclaration": 72139,
                    "src": "9253:10:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                      "typeString": "StrategyId"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9218:52:124"
            },
            "returnParameters": {
              "id": 83437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83436,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "9313:6:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 83504,
                  "src": "9305:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 83435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9305:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9304:16:124"
            },
            "scope": 83844,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 83662,
            "nodeType": "FunctionDefinition",
            "src": "10075:1689:124",
            "nodes": [],
            "body": {
              "id": 83661,
              "nodeType": "Block",
              "src": "10112:1652:124",
              "nodes": [],
              "statements": [
                {
                  "assignments": [83508],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83508,
                      "mutability": "mutable",
                      "name": "depositAmt",
                      "nameLocation": "10130:10:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83661,
                      "src": "10122:18:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 83507,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10122:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83510,
                  "initialValue": {
                    "hexValue": "3530306538",
                    "id": 83509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10143:5:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50000000000_by_1",
                      "typeString": "int_const 50000000000"
                    },
                    "value": "500e8"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10122:26:124"
                },
                {
                  "assignments": [83512],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83512,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "10191:6:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83661,
                      "src": "10183:14:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 83511,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10183:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83518,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83514,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82866,
                        "src": "10221:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 83515,
                        "name": "depositAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83508,
                        "src": "10228:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 83516,
                        "name": "STRAT_WRAP_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82919,
                        "src": "10240:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                          "typeString": "StrategyId"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139", "typeString": "StrategyId" }
                      ],
                      "id": 83513,
                      "name": "_userDepositAndOptIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83504,
                      "src": "10200:20:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_userDefinedValueType$_StrategyId_$72139_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,StrategyId) returns (uint256)"
                      }
                    },
                    "id": 83517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10200:54:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10183:71:124"
                },
                {
                  "assignments": [83520],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83520,
                      "mutability": "mutable",
                      "name": "reqShares",
                      "nameLocation": "10315:9:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83661,
                      "src": "10307:17:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 83519,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10307:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83524,
                  "initialValue": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 83523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 83521,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83512,
                      "src": "10327:6:124",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 83522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10336:1:124",
                      "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" },
                      "value": "2"
                    },
                    "src": "10327:10:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10307:30:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83528,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82861,
                        "src": "10362:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83525,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "10348:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10351:10:124",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46477,
                      "src": "10348:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10348:23:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83530,
                  "nodeType": "ExpressionStatement",
                  "src": "10348:23:124"
                },
                {
                  "assignments": [83532],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83532,
                      "mutability": "mutable",
                      "name": "reqId",
                      "nameLocation": "10389:5:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83661,
                      "src": "10381:13:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 83531,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10381:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83539,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83535,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82866,
                        "src": "10411:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 83536,
                        "name": "reqShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83520,
                        "src": "10418:9:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 83537,
                        "name": "STRAT_WRAP_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82919,
                        "src": "10429:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                          "typeString": "StrategyId"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139", "typeString": "StrategyId" }
                      ],
                      "expression": {
                        "id": 83533,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82881,
                        "src": "10397:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 83534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10400:10:124",
                      "memberName": "requestFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73306,
                      "src": "10397:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_userDefinedValueType$_StrategyId_$72139_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,StrategyId) external returns (uint256)"
                      }
                    },
                    "id": 83538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10397:46:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10381:62:124"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83540,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "10453:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10456:9:124",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46521,
                      "src": "10453:12:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10453:14:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83544,
                  "nodeType": "ExpressionStatement",
                  "src": "10453:14:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "37",
                        "id": 83546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10526:6:124",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_604800_by_1",
                          "typeString": "int_const 604800"
                        },
                        "value": "7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_rational_604800_by_1", "typeString": "int_const 604800" }
                      ],
                      "id": 83545,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34809,
                      "src": "10521:4:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 83547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10521:12:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83548,
                  "nodeType": "ExpressionStatement",
                  "src": "10521:12:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83552,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82861,
                        "src": "10660:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83549,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "10651:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10654:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "10651:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10651:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83554,
                  "nodeType": "ExpressionStatement",
                  "src": "10651:18:124"
                },
                {
                  "assignments": [83556],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83556,
                      "mutability": "mutable",
                      "name": "assetsOut",
                      "nameLocation": "10687:9:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83661,
                      "src": "10679:17:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 83555,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10679:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83562,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83559,
                        "name": "reqId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83532,
                        "src": "10710:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "",
                        "id": 83560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10717:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 83557,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82881,
                        "src": "10699:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 83558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10702:7:124",
                      "memberName": "claimTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73433,
                      "src": "10699:10:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes memory) external returns (uint256)"
                      }
                    },
                    "id": 83561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10699:21:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10679:41:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83564,
                        "name": "assetsOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83556,
                        "src": "10739:9:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "30",
                        "id": 83565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10750:1:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        "value": "0"
                      },
                      {
                        "hexValue": "636c61696d65642062617365203e2030",
                        "id": 83566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10753:18:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2bc828285b122b96562f4ff0ae7061e214ce6cb383f5b3d8239cda026e127ce",
                          "typeString": "literal_string \"claimed base > 0\""
                        },
                        "value": "claimed base > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        {
                          "typeIdentifier": "t_stringliteral_e2bc828285b122b96562f4ff0ae7061e214ce6cb383f5b3d8239cda026e127ce",
                          "typeString": "literal_string \"claimed base > 0\""
                        }
                      ],
                      "id": 83563,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [30712, 30730, 30784, 30802],
                      "referencedDeclaration": 30730,
                      "src": "10730:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 83567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10730:42:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83568,
                  "nodeType": "ExpressionStatement",
                  "src": "10730:42:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83572,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82866,
                            "src": "10880:5:124",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 83570,
                            "name": "connWrapped",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82899,
                            "src": "10859:11:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                              "typeString": "contract ExternalVaultConnector"
                            }
                          },
                          "id": 83571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10871:8:124",
                          "memberName": "assetsOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 71969,
                          "src": "10859:20:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 83573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10859:27:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 83574,
                        "name": "assetsOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83556,
                        "src": "10888:9:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "656e7469746c656d656e74203d3d20636c61696d6564",
                        "id": 83575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10899:24:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4002a483910ebaf3f682e49a2ada2816b03c92b977bbd2b9a445476c40536c4f",
                          "typeString": "literal_string \"entitlement == claimed\""
                        },
                        "value": "entitlement == claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_4002a483910ebaf3f682e49a2ada2816b03c92b977bbd2b9a445476c40536c4f",
                          "typeString": "literal_string \"entitlement == claimed\""
                        }
                      ],
                      "id": 83569,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29412,
                      "src": "10850:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 83576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10850:74:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83577,
                  "nodeType": "ExpressionStatement",
                  "src": "10850:74:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83581,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82861,
                        "src": "11024:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83578,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "11015:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11018:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "11015:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11015:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83583,
                  "nodeType": "ExpressionStatement",
                  "src": "11015:18:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83587,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82866,
                        "src": "11063:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 83588,
                        "name": "STRAT_WRAP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82907,
                        "src": "11070:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 83591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11087:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 83590,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "11087:7:124",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)" }
                            ],
                            "id": 83589,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "11082:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 83592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11082:13:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 83593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "11096:3:124",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "11082:17:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 83584,
                        "name": "cg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82884,
                        "src": "11043:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                          "typeString": "contract ConversionGateway"
                        }
                      },
                      "id": 83586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11046:16:124",
                      "memberName": "unwindDepositAny",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70539,
                      "src": "11043:19:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bytes32,uint256) external"
                      }
                    },
                    "id": 83594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11043:57:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83595,
                  "nodeType": "ExpressionStatement",
                  "src": "11043:57:124"
                },
                {
                  "assignments": [83597],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83597,
                      "mutability": "mutable",
                      "name": "unlockable",
                      "nameLocation": "11263:10:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83661,
                      "src": "11255:18:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 83596,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11255:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83603,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83600,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82866,
                        "src": "11290:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 83601,
                        "name": "STRAT_WRAP_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82919,
                        "src": "11297:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                          "typeString": "StrategyId"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139", "typeString": "StrategyId" }
                      ],
                      "expression": {
                        "id": 83598,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82881,
                        "src": "11276:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 83599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11279:10:124",
                      "memberName": "unlockable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73751,
                      "src": "11276:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_userDefinedValueType$_StrategyId_$72139_$returns$_t_uint256_$",
                        "typeString": "function (address,StrategyId) view external returns (uint256)"
                      }
                    },
                    "id": 83602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11276:35:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11255:56:124"
                },
                {
                  "assignments": [83605, null, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83605,
                      "mutability": "mutable",
                      "name": "totalShares2",
                      "nameLocation": "11330:12:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83661,
                      "src": "11322:20:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 83604,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11322:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 83610,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83608,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82866,
                        "src": "11363:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83606,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82881,
                        "src": "11349:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 83607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11352:10:124",
                      "memberName": "userTotals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73780,
                      "src": "11349:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 83609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11349:20:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11321:48:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83612,
                        "name": "unlockable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83597,
                        "src": "11388:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 83613,
                        "name": "totalShares2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83605,
                        "src": "11400:12:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "616c6c2073686172657320756e6c6f636b61626c652061667465722066756c6c20756e77696e64",
                        "id": 83614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11414:41:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e035f9548643decd9c9e94da858e4d88d59b33229e1ed9ee0ea0853a68e2bbc6",
                          "typeString": "literal_string \"all shares unlockable after full unwind\""
                        },
                        "value": "all shares unlockable after full unwind"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_e035f9548643decd9c9e94da858e4d88d59b33229e1ed9ee0ea0853a68e2bbc6",
                          "typeString": "literal_string \"all shares unlockable after full unwind\""
                        }
                      ],
                      "id": 83611,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29412,
                      "src": "11379:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 83615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11379:77:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83616,
                  "nodeType": "ExpressionStatement",
                  "src": "11379:77:124"
                },
                {
                  "assignments": [83621],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83621,
                      "mutability": "mutable",
                      "name": "arr",
                      "nameLocation": "11546:3:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83661,
                      "src": "11526:23:124",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr",
                        "typeString": "StrategyId[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 83619,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 83618,
                            "name": "StrategyId",
                            "nameLocations": ["11526:10:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 72139,
                            "src": "11526:10:124"
                          },
                          "referencedDeclaration": 72139,
                          "src": "11526:10:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                            "typeString": "StrategyId"
                          }
                        },
                        "id": 83620,
                        "nodeType": "ArrayTypeName",
                        "src": "11526:12:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_storage_ptr",
                          "typeString": "StrategyId[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83628,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 83626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11569:1:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }],
                      "id": 83625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11552:16:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (StrategyId[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 83623,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 83622,
                            "name": "StrategyId",
                            "nameLocations": ["11556:10:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 72139,
                            "src": "11556:10:124"
                          },
                          "referencedDeclaration": 72139,
                          "src": "11556:10:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                            "typeString": "StrategyId"
                          }
                        },
                        "id": 83624,
                        "nodeType": "ArrayTypeName",
                        "src": "11556:12:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_storage_ptr",
                          "typeString": "StrategyId[]"
                        }
                      }
                    },
                    "id": 83627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11552:19:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr",
                      "typeString": "StrategyId[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11526:45:124"
                },
                {
                  "expression": {
                    "id": 83633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 83629,
                        "name": "arr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83621,
                        "src": "11581:3:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr",
                          "typeString": "StrategyId[] memory"
                        }
                      },
                      "id": 83631,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 83630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11585:1:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11581:6:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                        "typeString": "StrategyId"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 83632,
                      "name": "STRAT_WRAP_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82919,
                      "src": "11590:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                        "typeString": "StrategyId"
                      }
                    },
                    "src": "11581:22:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                      "typeString": "StrategyId"
                    }
                  },
                  "id": 83634,
                  "nodeType": "ExpressionStatement",
                  "src": "11581:22:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83638,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82866,
                        "src": "11623:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83635,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "11614:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11617:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "11614:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11614:15:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83640,
                  "nodeType": "ExpressionStatement",
                  "src": "11614:15:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83644,
                        "name": "arr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83621,
                        "src": "11652:3:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr",
                          "typeString": "StrategyId[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr",
                          "typeString": "StrategyId[] memory"
                        }
                      ],
                      "expression": {
                        "id": 83641,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82881,
                        "src": "11639:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 83643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11642:9:124",
                      "memberName": "optOutAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72879,
                      "src": "11639:12:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (StrategyId[] memory) external"
                      }
                    },
                    "id": 83645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11639:17:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83646,
                  "nodeType": "ExpressionStatement",
                  "src": "11639:17:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83655,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82866,
                            "src": "11707:5:124",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 83651,
                                    "name": "vault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 82878,
                                    "src": "11689:5:124",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                                      "typeString": "contract SLAYVaultV2"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                                      "typeString": "contract SLAYVaultV2"
                                    }
                                  ],
                                  "id": 83650,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11681:7:124",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 83649,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11681:7:124",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 83652,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11681:14:124",
                                "tryCall": false,
                                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                              "id": 83648,
                              "name": "ERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6553,
                              "src": "11675:5:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20_$6553_$",
                                "typeString": "type(contract ERC20)"
                              }
                            },
                            "id": 83653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11675:21:124",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$6553",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 83654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11697:9:124",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6139,
                          "src": "11675:31:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 83656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11675:38:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 83657,
                        "name": "totalShares2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83605,
                        "src": "11715:12:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "7573657220726563656976656420736861726573206261636b",
                        "id": 83658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11729:27:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3acbbe023516ddfc9b94df0108dc9ceff9c43b57f6011adc62c2fb32ca44585c",
                          "typeString": "literal_string \"user received shares back\""
                        },
                        "value": "user received shares back"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_3acbbe023516ddfc9b94df0108dc9ceff9c43b57f6011adc62c2fb32ca44585c",
                          "typeString": "literal_string \"user received shares back\""
                        }
                      ],
                      "id": 83647,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29412,
                      "src": "11666:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 83659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11666:91:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83660,
                  "nodeType": "ExpressionStatement",
                  "src": "11666:91:124"
                }
              ]
            },
            "functionSelector": "e3cbdd06",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Wrap_FullFlow",
            "nameLocation": "10084:18:124",
            "parameters": { "id": 83505, "nodeType": "ParameterList", "parameters": [], "src": "10102:2:124" },
            "returnParameters": { "id": 83506, "nodeType": "ParameterList", "parameters": [], "src": "10112:0:124" },
            "scope": 83844,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83843,
            "nodeType": "FunctionDefinition",
            "src": "11949:1512:124",
            "nodes": [],
            "body": {
              "id": 83842,
              "nodeType": "Block",
              "src": "11990:1471:124",
              "nodes": [],
              "statements": [
                {
                  "assignments": [83666],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83666,
                      "mutability": "mutable",
                      "name": "depositAmt",
                      "nameLocation": "12008:10:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83842,
                      "src": "12000:18:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 83665,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12000:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83668,
                  "initialValue": {
                    "hexValue": "3332306538",
                    "id": 83667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12021:5:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_32000000000_by_1",
                      "typeString": "int_const 32000000000"
                    },
                    "value": "320e8"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12000:26:124"
                },
                {
                  "assignments": [83670],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83670,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "12044:6:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83842,
                      "src": "12036:14:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 83669,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12036:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83676,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83672,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82866,
                        "src": "12074:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 83673,
                        "name": "depositAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83666,
                        "src": "12081:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 83674,
                        "name": "STRAT_IDENT_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82926,
                        "src": "12093:14:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                          "typeString": "StrategyId"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139", "typeString": "StrategyId" }
                      ],
                      "id": 83671,
                      "name": "_userDepositAndOptIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83504,
                      "src": "12053:20:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_userDefinedValueType$_StrategyId_$72139_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,StrategyId) returns (uint256)"
                      }
                    },
                    "id": 83675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12053:55:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12036:72:124"
                },
                {
                  "assignments": [83678],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83678,
                      "mutability": "mutable",
                      "name": "reqShares",
                      "nameLocation": "12161:9:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83842,
                      "src": "12153:17:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 83677,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12153:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83685,
                  "initialValue": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 83684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                          "id": 83681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 83679,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83670,
                            "src": "12174:6:124",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 83680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12183:1:124",
                            "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" },
                            "value": "2"
                          },
                          "src": "12174:10:124",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        }
                      ],
                      "id": 83682,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12173:12:124",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "35",
                      "id": 83683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12188:1:124",
                      "typeDescriptions": { "typeIdentifier": "t_rational_5_by_1", "typeString": "int_const 5" },
                      "value": "5"
                    },
                    "src": "12173:16:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12153:36:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83689,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82861,
                        "src": "12214:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83686,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "12200:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12203:10:124",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46477,
                      "src": "12200:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12200:23:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83691,
                  "nodeType": "ExpressionStatement",
                  "src": "12200:23:124"
                },
                {
                  "assignments": [83693],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83693,
                      "mutability": "mutable",
                      "name": "reqId",
                      "nameLocation": "12241:5:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83842,
                      "src": "12233:13:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 83692,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12233:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83700,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83696,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82866,
                        "src": "12263:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 83697,
                        "name": "reqShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83678,
                        "src": "12270:9:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 83698,
                        "name": "STRAT_IDENT_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82926,
                        "src": "12281:14:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                          "typeString": "StrategyId"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139", "typeString": "StrategyId" }
                      ],
                      "expression": {
                        "id": 83694,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82881,
                        "src": "12249:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 83695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12252:10:124",
                      "memberName": "requestFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73306,
                      "src": "12249:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_userDefinedValueType$_StrategyId_$72139_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,StrategyId) external returns (uint256)"
                      }
                    },
                    "id": 83699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12249:47:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12233:63:124"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 83701,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "12306:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12309:9:124",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46521,
                      "src": "12306:12:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 83704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12306:14:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83705,
                  "nodeType": "ExpressionStatement",
                  "src": "12306:14:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "37",
                        "id": 83707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12336:6:124",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_604800_by_1",
                          "typeString": "int_const 604800"
                        },
                        "value": "7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_rational_604800_by_1", "typeString": "int_const 604800" }
                      ],
                      "id": 83706,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34809,
                      "src": "12331:4:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 83708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12331:12:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83709,
                  "nodeType": "ExpressionStatement",
                  "src": "12331:12:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83713,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82861,
                        "src": "12363:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83710,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "12354:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12357:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "12354:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12354:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83715,
                  "nodeType": "ExpressionStatement",
                  "src": "12354:18:124"
                },
                {
                  "assignments": [83717],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83717,
                      "mutability": "mutable",
                      "name": "assetsOut",
                      "nameLocation": "12390:9:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83842,
                      "src": "12382:17:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 83716,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12382:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83723,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83720,
                        "name": "reqId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83693,
                        "src": "12413:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "",
                        "id": 83721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12420:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 83718,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82881,
                        "src": "12402:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 83719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12405:7:124",
                      "memberName": "claimTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73433,
                      "src": "12402:10:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes memory) external returns (uint256)"
                      }
                    },
                    "id": 83722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12402:21:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12382:41:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83725,
                        "name": "assetsOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83717,
                        "src": "12442:9:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "30",
                        "id": 83726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12453:1:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }
                      ],
                      "id": 83724,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [30712, 30730, 30784, 30802],
                      "referencedDeclaration": 30712,
                      "src": "12433:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 83727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12433:22:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83728,
                  "nodeType": "ExpressionStatement",
                  "src": "12433:22:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 83732,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82866,
                            "src": "12559:5:124",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 83730,
                            "name": "connBase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82902,
                            "src": "12541:8:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                              "typeString": "contract ExternalVaultConnector"
                            }
                          },
                          "id": 83731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12550:8:124",
                          "memberName": "assetsOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 71969,
                          "src": "12541:17:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 83733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12541:24:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 83734,
                        "name": "assetsOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83717,
                        "src": "12567:9:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "id": 83729,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29394,
                      "src": "12532:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 83735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12532:45:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83736,
                  "nodeType": "ExpressionStatement",
                  "src": "12532:45:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83740,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82861,
                        "src": "12641:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83737,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "12632:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12635:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "12632:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12632:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83742,
                  "nodeType": "ExpressionStatement",
                  "src": "12632:18:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83746,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82866,
                        "src": "12680:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 83747,
                        "name": "STRAT_IDENT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82912,
                        "src": "12687:11:124",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      },
                      {
                        "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "id": 83750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 83748,
                          "name": "assetsOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83717,
                          "src": "12700:9:124",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 83749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12712:1:124",
                          "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" },
                          "value": "2"
                        },
                        "src": "12700:13:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 83743,
                        "name": "cg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82884,
                        "src": "12660:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                          "typeString": "contract ConversionGateway"
                        }
                      },
                      "id": 83745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12663:16:124",
                      "memberName": "unwindDepositAny",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70539,
                      "src": "12660:19:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bytes32,uint256) external"
                      }
                    },
                    "id": 83751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12660:54:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83752,
                  "nodeType": "ExpressionStatement",
                  "src": "12660:54:124"
                },
                {
                  "assignments": [83754],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83754,
                      "mutability": "mutable",
                      "name": "unlockable1",
                      "nameLocation": "12784:11:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83842,
                      "src": "12776:19:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 83753,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12776:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83760,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83757,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82866,
                        "src": "12812:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 83758,
                        "name": "STRAT_IDENT_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82926,
                        "src": "12819:14:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                          "typeString": "StrategyId"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139", "typeString": "StrategyId" }
                      ],
                      "expression": {
                        "id": 83755,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82881,
                        "src": "12798:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 83756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12801:10:124",
                      "memberName": "unlockable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73751,
                      "src": "12798:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_userDefinedValueType$_StrategyId_$72139_$returns$_t_uint256_$",
                        "typeString": "function (address,StrategyId) view external returns (uint256)"
                      }
                    },
                    "id": 83759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12798:36:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12776:58:124"
                },
                {
                  "assignments": [83762, null, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83762,
                      "mutability": "mutable",
                      "name": "totalShares",
                      "nameLocation": "12853:11:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83842,
                      "src": "12845:19:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 83761,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12845:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 83767,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83765,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82866,
                        "src": "12885:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83763,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82881,
                        "src": "12871:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 83764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12874:10:124",
                      "memberName": "userTotals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73780,
                      "src": "12871:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 83766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12871:20:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12844:47:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83769,
                        "name": "unlockable1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83754,
                        "src": "12910:11:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 83770,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83762,
                        "src": "12923:11:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "id": 83768,
                      "name": "assertLt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [30568, 30586, 30640, 30658],
                      "referencedDeclaration": 30568,
                      "src": "12901:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 83771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12901:34:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83772,
                  "nodeType": "ExpressionStatement",
                  "src": "12901:34:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83776,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82861,
                        "src": "12983:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83773,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "12974:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12977:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "12974:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12974:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83778,
                  "nodeType": "ExpressionStatement",
                  "src": "12974:18:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83782,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82866,
                        "src": "13022:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 83783,
                        "name": "STRAT_IDENT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82912,
                        "src": "13029:11:124",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 83786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13047:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 83785,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "13047:7:124",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)" }
                            ],
                            "id": 83784,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "13042:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 83787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13042:13:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 83788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "13056:3:124",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "13042:17:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 83779,
                        "name": "cg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82884,
                        "src": "13002:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                          "typeString": "contract ConversionGateway"
                        }
                      },
                      "id": 83781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13005:16:124",
                      "memberName": "unwindDepositAny",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70539,
                      "src": "13002:19:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bytes32,uint256) external"
                      }
                    },
                    "id": 83789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13002:58:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83790,
                  "nodeType": "ExpressionStatement",
                  "src": "13002:58:124"
                },
                {
                  "assignments": [83792],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83792,
                      "mutability": "mutable",
                      "name": "unlockable2",
                      "nameLocation": "13111:11:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83842,
                      "src": "13103:19:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 83791,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13103:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83798,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 83795,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82866,
                        "src": "13139:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 83796,
                        "name": "STRAT_IDENT_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82926,
                        "src": "13146:14:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                          "typeString": "StrategyId"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139", "typeString": "StrategyId" }
                      ],
                      "expression": {
                        "id": 83793,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82881,
                        "src": "13125:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 83794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13128:10:124",
                      "memberName": "unlockable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73751,
                      "src": "13125:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_userDefinedValueType$_StrategyId_$72139_$returns$_t_uint256_$",
                        "typeString": "function (address,StrategyId) view external returns (uint256)"
                      }
                    },
                    "id": 83797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13125:36:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13103:58:124"
                },
                {
                  "expression": {
                    "id": 83805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 83799,
                          "name": "totalShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83762,
                          "src": "13172:11:124",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        null,
                        null,
                        null
                      ],
                      "id": 83800,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "13171:16:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$__$__$__$",
                        "typeString": "tuple(uint256,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 83803,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82866,
                          "src": "13204:5:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                        "expression": {
                          "id": 83801,
                          "name": "pl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82881,
                          "src": "13190:2:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PositionLocker_$73835",
                            "typeString": "contract PositionLocker"
                          }
                        },
                        "id": 83802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13193:10:124",
                        "memberName": "userTotals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 73780,
                        "src": "13190:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 83804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13190:20:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256,uint256)"
                      }
                    },
                    "src": "13171:39:124",
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83806,
                  "nodeType": "ExpressionStatement",
                  "src": "13171:39:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83808,
                        "name": "unlockable2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83792,
                        "src": "13229:11:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 83809,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83762,
                        "src": "13242:11:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "id": 83807,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29394,
                      "src": "13220:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 83810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13220:34:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83811,
                  "nodeType": "ExpressionStatement",
                  "src": "13220:34:124"
                },
                {
                  "assignments": [83816],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83816,
                      "mutability": "mutable",
                      "name": "arr",
                      "nameLocation": "13344:3:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 83842,
                      "src": "13324:23:124",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr",
                        "typeString": "StrategyId[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 83814,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 83813,
                            "name": "StrategyId",
                            "nameLocations": ["13324:10:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 72139,
                            "src": "13324:10:124"
                          },
                          "referencedDeclaration": 72139,
                          "src": "13324:10:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                            "typeString": "StrategyId"
                          }
                        },
                        "id": 83815,
                        "nodeType": "ArrayTypeName",
                        "src": "13324:12:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_storage_ptr",
                          "typeString": "StrategyId[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 83823,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 83821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13367:1:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }],
                      "id": 83820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "13350:16:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (StrategyId[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 83818,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 83817,
                            "name": "StrategyId",
                            "nameLocations": ["13354:10:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 72139,
                            "src": "13354:10:124"
                          },
                          "referencedDeclaration": 72139,
                          "src": "13354:10:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                            "typeString": "StrategyId"
                          }
                        },
                        "id": 83819,
                        "nodeType": "ArrayTypeName",
                        "src": "13354:12:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_storage_ptr",
                          "typeString": "StrategyId[]"
                        }
                      }
                    },
                    "id": 83822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13350:19:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr",
                      "typeString": "StrategyId[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13324:45:124"
                },
                {
                  "expression": {
                    "id": 83828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 83824,
                        "name": "arr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83816,
                        "src": "13379:3:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr",
                          "typeString": "StrategyId[] memory"
                        }
                      },
                      "id": 83826,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 83825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13383:1:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13379:6:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                        "typeString": "StrategyId"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 83827,
                      "name": "STRAT_IDENT_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82926,
                      "src": "13388:14:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                        "typeString": "StrategyId"
                      }
                    },
                    "src": "13379:23:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                      "typeString": "StrategyId"
                    }
                  },
                  "id": 83829,
                  "nodeType": "ExpressionStatement",
                  "src": "13379:23:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83833,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82866,
                        "src": "13421:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 83830,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "13412:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 83832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13415:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "13412:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 83834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13412:15:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83835,
                  "nodeType": "ExpressionStatement",
                  "src": "13412:15:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 83839,
                        "name": "arr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83816,
                        "src": "13450:3:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr",
                          "typeString": "StrategyId[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr",
                          "typeString": "StrategyId[] memory"
                        }
                      ],
                      "expression": {
                        "id": 83836,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82881,
                        "src": "13437:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 83838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13440:9:124",
                      "memberName": "optOutAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72879,
                      "src": "13437:12:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (StrategyId[] memory) external"
                      }
                    },
                    "id": 83840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13437:17:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83841,
                  "nodeType": "ExpressionStatement",
                  "src": "13437:17:124"
                }
              ]
            },
            "functionSelector": "c4c000d7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Identity_FullFlow",
            "nameLocation": "11958:22:124",
            "parameters": { "id": 83663, "nodeType": "ParameterList", "parameters": [], "src": "11980:2:124" },
            "returnParameters": { "id": 83664, "nodeType": "ParameterList", "parameters": [], "src": "11990:0:124" },
            "scope": 83844,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 82848,
              "name": "Test",
              "nameLocations": ["2522:4:124"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41977,
              "src": "2522:4:124"
            },
            "id": 82849,
            "nodeType": "InheritanceSpecifier",
            "src": "2522:4:124"
          },
          {
            "baseName": {
              "id": 82850,
              "name": "TestSuiteV2",
              "nameLocations": ["2528:11:124"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29031,
              "src": "2528:11:124"
            },
            "id": 82851,
            "nodeType": "InheritanceSpecifier",
            "src": "2528:11:124"
          }
        ],
        "canonicalName": "StablecoinFullIntegrationTest",
        "contractDependencies": [
          5368, 5854, 23094, 24613, 25104, 26255, 26472, 27419, 28758, 71634, 72007, 73835, 82685, 82718, 82847
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [83844, 29031, 41977, 41923, 35960, 35559, 34764, 32674, 31712, 29082, 29079],
        "name": "StablecoinFullIntegrationTest",
        "nameLocation": "2489:29:124",
        "scope": 84825,
        "usedErrors": [],
        "usedEvents": [
          29117, 29121, 29125, 29129, 29133, 29137, 29141, 29145, 29151, 29157, 29165, 29173, 29179, 29185, 29191,
          29197, 29202, 29207, 29212, 29219, 29226, 29233
        ]
      },
      {
        "id": 84083,
        "nodeType": "ContractDefinition",
        "src": "13857:2278:124",
        "nodes": [
          {
            "id": 83848,
            "nodeType": "VariableDeclaration",
            "src": "13918:29:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "5001f3b5",
            "mutability": "immutable",
            "name": "base",
            "nameLocation": "13943:4:124",
            "scope": 84083,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
            "typeName": {
              "id": 83847,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "13918:7:124",
              "stateMutability": "nonpayable",
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "visibility": "public"
          },
          {
            "id": 83850,
            "nodeType": "VariableDeclaration",
            "src": "13978:34:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "a919802d",
            "mutability": "immutable",
            "name": "debtAsset",
            "nameLocation": "14003:9:124",
            "scope": 84083,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
            "typeName": {
              "id": 83849,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "13978:7:124",
              "stateMutability": "nonpayable",
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "visibility": "public"
          },
          {
            "id": 83852,
            "nodeType": "VariableDeclaration",
            "src": "14033:22:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "93efd892",
            "mutability": "mutable",
            "name": "collBal",
            "nameLocation": "14048:7:124",
            "scope": 84083,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
            "typeName": {
              "id": 83851,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "14033:7:124",
              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
            },
            "visibility": "public"
          },
          {
            "id": 83854,
            "nodeType": "VariableDeclaration",
            "src": "14105:22:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "d3d780ac",
            "mutability": "mutable",
            "name": "debtBal",
            "nameLocation": "14120:7:124",
            "scope": 84083,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
            "typeName": {
              "id": 83853,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "14105:7:124",
              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
            },
            "visibility": "public"
          },
          {
            "id": 83870,
            "nodeType": "FunctionDefinition",
            "src": "14168:98:124",
            "nodes": [],
            "body": {
              "id": 83869,
              "nodeType": "Block",
              "src": "14210:56:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 83863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83861,
                      "name": "base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83848,
                      "src": "14220:4:124",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 83862,
                      "name": "_base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83856,
                      "src": "14227:5:124",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "src": "14220:12:124",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "id": 83864,
                  "nodeType": "ExpressionStatement",
                  "src": "14220:12:124"
                },
                {
                  "expression": {
                    "id": 83867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83865,
                      "name": "debtAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83850,
                      "src": "14242:9:124",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 83866,
                      "name": "_debt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83858,
                      "src": "14254:5:124",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "src": "14242:17:124",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "id": 83868,
                  "nodeType": "ExpressionStatement",
                  "src": "14242:17:124"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 83859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83856,
                  "mutability": "mutable",
                  "name": "_base",
                  "nameLocation": "14188:5:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 83870,
                  "src": "14180:13:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 83855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14180:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83858,
                  "mutability": "mutable",
                  "name": "_debt",
                  "nameLocation": "14203:5:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 83870,
                  "src": "14195:13:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 83857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14195:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14179:30:124"
            },
            "returnParameters": { "id": 83860, "nodeType": "ParameterList", "parameters": [], "src": "14210:0:124" },
            "scope": 84083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 83904,
            "nodeType": "FunctionDefinition",
            "src": "14272:289:124",
            "nodes": [],
            "body": {
              "id": 83903,
              "nodeType": "Block",
              "src": "14359:202:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                        "id": 83882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 83880,
                          "name": "collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83872,
                          "src": "14377:10:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 83881,
                          "name": "base",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83848,
                          "src": "14391:4:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "src": "14377:18:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "636f6c6c2f6173736574",
                        "id": 83883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14397:12:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f13caa97c126945a51e3ad0bd4dfc33713ec0f5eff73e0af9989206d327da4cd",
                          "typeString": "literal_string \"coll/asset\""
                        },
                        "value": "coll/asset"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_f13caa97c126945a51e3ad0bd4dfc33713ec0f5eff73e0af9989206d327da4cd",
                          "typeString": "literal_string \"coll/asset\""
                        }
                      ],
                      "id": 83879,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "14369:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14369:41:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83885,
                  "nodeType": "ExpressionStatement",
                  "src": "14369:41:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 83890,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14493:3:124",
                          "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                        },
                        "id": 83891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14497:6:124",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14493:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "arguments": [
                          {
                            "id": 83894,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14513:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowVenueAdapter_$84083",
                              "typeString": "contract MockBorrowVenueAdapter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockBorrowVenueAdapter_$84083",
                              "typeString": "contract MockBorrowVenueAdapter"
                            }
                          ],
                          "id": 83893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14505:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 83892,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14505:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 83895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14505:13:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 83896,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83874,
                        "src": "14520:6:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 83887,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83848,
                            "src": "14474:4:124",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "id": 83886,
                          "name": "MockERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28758,
                          "src": "14464:9:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MockERC20_$28758_$",
                            "typeString": "type(contract MockERC20)"
                          }
                        },
                        "id": 83888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14464:15:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14480:12:124",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6236,
                      "src": "14464:28:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 83897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14464:63:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 83898,
                  "nodeType": "ExpressionStatement",
                  "src": "14464:63:124"
                },
                {
                  "expression": {
                    "id": 83901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83899,
                      "name": "collBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83852,
                      "src": "14537:7:124",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 83900,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83874,
                      "src": "14548:6:124",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "14537:17:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "id": 83902,
                  "nodeType": "ExpressionStatement",
                  "src": "14537:17:124"
                }
              ]
            },
            "baseFunctions": [75215],
            "functionSelector": "16f1aa30",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supplyCollateral",
            "nameLocation": "14281:16:124",
            "parameters": {
              "id": 83877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83872,
                  "mutability": "mutable",
                  "name": "collateral",
                  "nameLocation": "14306:10:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 83904,
                  "src": "14298:18:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 83871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14298:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83874,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14326:6:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 83904,
                  "src": "14318:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 83873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14318:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83876,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83904,
                  "src": "14334:14:124",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": { "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes" },
                  "typeName": {
                    "id": 83875,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14334:5:124",
                    "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14297:52:124"
            },
            "returnParameters": { "id": 83878, "nodeType": "ParameterList", "parameters": [], "src": "14359:0:124" },
            "scope": 84083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 83945,
            "nodeType": "FunctionDefinition",
            "src": "14567:316:124",
            "nodes": [],
            "body": {
              "id": 83944,
              "nodeType": "Block",
              "src": "14674:209:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                        "id": 83918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 83916,
                          "name": "collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83906,
                          "src": "14692:10:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 83917,
                          "name": "base",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83848,
                          "src": "14706:4:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "src": "14692:18:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "77642f6173736574",
                        "id": 83919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14712:10:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab70f1d5809ed81cf76537d72204d436fb9ecb2e4fe20d84ca8d9cd024c5dd0a",
                          "typeString": "literal_string \"wd/asset\""
                        },
                        "value": "wd/asset"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_ab70f1d5809ed81cf76537d72204d436fb9ecb2e4fe20d84ca8d9cd024c5dd0a",
                          "typeString": "literal_string \"wd/asset\""
                        }
                      ],
                      "id": 83915,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "14684:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14684:39:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83921,
                  "nodeType": "ExpressionStatement",
                  "src": "14684:39:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "id": 83925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 83923,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83908,
                          "src": "14741:6:124",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 83924,
                          "name": "collBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83852,
                          "src": "14751:7:124",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "src": "14741:17:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "77642f657863657373",
                        "id": 83926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14760:11:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5db4897eccb777895f0d7de145085b401cd10f746eccc1708fd71c63def1e4f7",
                          "typeString": "literal_string \"wd/excess\""
                        },
                        "value": "wd/excess"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_5db4897eccb777895f0d7de145085b401cd10f746eccc1708fd71c63def1e4f7",
                          "typeString": "literal_string \"wd/excess\""
                        }
                      ],
                      "id": 83922,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "14733:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14733:39:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83928,
                  "nodeType": "ExpressionStatement",
                  "src": "14733:39:124"
                },
                {
                  "expression": {
                    "id": 83931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83929,
                      "name": "collBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83852,
                      "src": "14782:7:124",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 83930,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83908,
                      "src": "14793:6:124",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "14782:17:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "id": 83932,
                  "nodeType": "ExpressionStatement",
                  "src": "14782:17:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 83937,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14834:3:124",
                          "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                        },
                        "id": 83938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14838:6:124",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14834:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 83939,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83908,
                        "src": "14846:6:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 83934,
                            "name": "base",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83848,
                            "src": "14819:4:124",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "id": 83933,
                          "name": "MockERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28758,
                          "src": "14809:9:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MockERC20_$28758_$",
                            "typeString": "type(contract MockERC20)"
                          }
                        },
                        "id": 83935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14809:15:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14825:8:124",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6163,
                      "src": "14809:24:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 83940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14809:44:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 83941,
                  "nodeType": "ExpressionStatement",
                  "src": "14809:44:124"
                },
                {
                  "expression": {
                    "id": 83942,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 83908,
                    "src": "14870:6:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "functionReturnParameters": 83914,
                  "id": 83943,
                  "nodeType": "Return",
                  "src": "14863:13:124"
                }
              ]
            },
            "baseFunctions": [75226],
            "functionSelector": "6a987c69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawCollateral",
            "nameLocation": "14576:18:124",
            "parameters": {
              "id": 83911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83906,
                  "mutability": "mutable",
                  "name": "collateral",
                  "nameLocation": "14603:10:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 83945,
                  "src": "14595:18:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 83905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14595:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83908,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14623:6:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 83945,
                  "src": "14615:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 83907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14615:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83910,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83945,
                  "src": "14631:14:124",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": { "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes" },
                  "typeName": {
                    "id": 83909,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14631:5:124",
                    "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14594:52:124"
            },
            "returnParameters": {
              "id": 83914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83913,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83945,
                  "src": "14665:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 83912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14665:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14664:9:124"
            },
            "scope": 84083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 83962,
            "nodeType": "FunctionDefinition",
            "src": "14889:160:124",
            "nodes": [],
            "body": {
              "id": 83961,
              "nodeType": "Block",
              "src": "14968:81:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                        "id": 83955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 83953,
                          "name": "collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83947,
                          "src": "14986:10:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 83954,
                          "name": "base",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83848,
                          "src": "15000:4:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "src": "14986:18:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "62616c2f6173736574",
                        "id": 83956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15006:11:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33a97c458680632b1356af19ef01c892a0e97148421ef4205ffa842dc9d0b578",
                          "typeString": "literal_string \"bal/asset\""
                        },
                        "value": "bal/asset"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_33a97c458680632b1356af19ef01c892a0e97148421ef4205ffa842dc9d0b578",
                          "typeString": "literal_string \"bal/asset\""
                        }
                      ],
                      "id": 83952,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "14978:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14978:40:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83958,
                  "nodeType": "ExpressionStatement",
                  "src": "14978:40:124"
                },
                {
                  "expression": {
                    "id": 83959,
                    "name": "collBal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 83852,
                    "src": "15035:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "functionReturnParameters": 83951,
                  "id": 83960,
                  "nodeType": "Return",
                  "src": "15028:14:124"
                }
              ]
            },
            "baseFunctions": [75233],
            "functionSelector": "a1bf2840",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collateralBalance",
            "nameLocation": "14898:17:124",
            "parameters": {
              "id": 83948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83947,
                  "mutability": "mutable",
                  "name": "collateral",
                  "nameLocation": "14924:10:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 83962,
                  "src": "14916:18:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 83946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14916:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14915:20:124"
            },
            "returnParameters": {
              "id": 83951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83950,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83962,
                  "src": "14959:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 83949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14959:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14958:9:124"
            },
            "scope": 84083,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 83992,
            "nodeType": "FunctionDefinition",
            "src": "15055:252:124",
            "nodes": [],
            "body": {
              "id": 83991,
              "nodeType": "Block",
              "src": "15127:180:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                        "id": 83974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 83972,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83964,
                          "src": "15145:5:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 83973,
                          "name": "debtAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83850,
                          "src": "15154:9:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "src": "15145:18:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "626f72726f772f6173736574",
                        "id": 83975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15165:14:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00bc98e40035055b0d580a66bbf01e1b1c2094c178879f26f539b8736f43515f",
                          "typeString": "literal_string \"borrow/asset\""
                        },
                        "value": "borrow/asset"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_00bc98e40035055b0d580a66bbf01e1b1c2094c178879f26f539b8736f43515f",
                          "typeString": "literal_string \"borrow/asset\""
                        }
                      ],
                      "id": 83971,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "15137:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15137:43:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83977,
                  "nodeType": "ExpressionStatement",
                  "src": "15137:43:124"
                },
                {
                  "expression": {
                    "id": 83980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83978,
                      "name": "debtBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83854,
                      "src": "15190:7:124",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 83979,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83966,
                      "src": "15201:6:124",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "15190:17:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "id": 83981,
                  "nodeType": "ExpressionStatement",
                  "src": "15190:17:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 83986,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15281:3:124",
                          "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                        },
                        "id": 83987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15285:6:124",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15281:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 83988,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83966,
                        "src": "15293:6:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 83983,
                            "name": "debtAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83850,
                            "src": "15265:9:124",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "id": 83982,
                          "name": "MockERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28758,
                          "src": "15255:9:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MockERC20_$28758_$",
                            "typeString": "type(contract MockERC20)"
                          }
                        },
                        "id": 83984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15255:20:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 83985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15276:4:124",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28757,
                      "src": "15255:25:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 83989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15255:45:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 83990,
                  "nodeType": "ExpressionStatement",
                  "src": "15255:45:124"
                }
              ]
            },
            "baseFunctions": [75242],
            "functionSelector": "6e2246a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrow",
            "nameLocation": "15064:6:124",
            "parameters": {
              "id": 83969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83964,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "15079:5:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 83992,
                  "src": "15071:13:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 83963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15071:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83966,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15094:6:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 83992,
                  "src": "15086:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 83965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15086:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83968,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83992,
                  "src": "15102:14:124",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": { "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes" },
                  "typeName": {
                    "id": 83967,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15102:5:124",
                    "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15070:47:124"
            },
            "returnParameters": { "id": 83970, "nodeType": "ParameterList", "parameters": [], "src": "15127:0:124" },
            "scope": 84083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 84044,
            "nodeType": "FunctionDefinition",
            "src": "15313:421:124",
            "nodes": [],
            "body": {
              "id": 84043,
              "nodeType": "Block",
              "src": "15409:325:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                        "id": 84006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 84004,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83994,
                          "src": "15427:5:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 84005,
                          "name": "debtAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83850,
                          "src": "15436:9:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "src": "15427:18:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "72657061792f6173736574",
                        "id": 84007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15447:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0eda4a18c70a910e9881a8bd54c0a35e58dd50511e0d27257a47e3949a80156",
                          "typeString": "literal_string \"repay/asset\""
                        },
                        "value": "repay/asset"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_a0eda4a18c70a910e9881a8bd54c0a35e58dd50511e0d27257a47e3949a80156",
                          "typeString": "literal_string \"repay/asset\""
                        }
                      ],
                      "id": 84003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "15419:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 84008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15419:42:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84009,
                  "nodeType": "ExpressionStatement",
                  "src": "15419:42:124"
                },
                {
                  "assignments": [84011],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84011,
                      "mutability": "mutable",
                      "name": "want",
                      "nameLocation": "15521:4:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84043,
                      "src": "15513:12:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 84010,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15513:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84018,
                  "initialValue": {
                    "condition": {
                      "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "id": 84014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 84012,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83996,
                        "src": "15528:6:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 84013,
                        "name": "debtBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83854,
                        "src": "15537:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "src": "15528:16:124",
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    },
                    "falseExpression": {
                      "id": 84016,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83996,
                      "src": "15557:6:124",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "id": 84017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "15528:35:124",
                    "trueExpression": {
                      "id": 84015,
                      "name": "debtBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83854,
                      "src": "15547:7:124",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15513:50:124"
                },
                {
                  "condition": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 84021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 84019,
                      "name": "want",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84011,
                      "src": "15577:4:124",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 84020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15584:1:124",
                      "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                      "value": "0"
                    },
                    "src": "15577:8:124",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 84040,
                  "nodeType": "IfStatement",
                  "src": "15573:134:124",
                  "trueBody": {
                    "id": 84039,
                    "nodeType": "Block",
                    "src": "15587:120:124",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 84026,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "15635:3:124",
                                "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                              },
                              "id": 84027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15639:6:124",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "15635:10:124",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 84030,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "15655:4:124",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockBorrowVenueAdapter_$84083",
                                    "typeString": "contract MockBorrowVenueAdapter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockBorrowVenueAdapter_$84083",
                                    "typeString": "contract MockBorrowVenueAdapter"
                                  }
                                ],
                                "id": 84029,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15647:7:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 84028,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15647:7:124",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 84031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15647:13:124",
                              "tryCall": false,
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "id": 84032,
                              "name": "want",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84011,
                              "src": "15662:4:124",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 84023,
                                  "name": "debtAsset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 83850,
                                  "src": "15611:9:124",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                                "id": 84022,
                                "name": "MockERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28758,
                                "src": "15601:9:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MockERC20_$28758_$",
                                  "typeString": "type(contract MockERC20)"
                                }
                              },
                              "id": 84024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15601:20:124",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$28758",
                                "typeString": "contract MockERC20"
                              }
                            },
                            "id": 84025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15622:12:124",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6236,
                            "src": "15601:33:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 84033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15601:66:124",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "id": 84034,
                        "nodeType": "ExpressionStatement",
                        "src": "15601:66:124"
                      },
                      {
                        "expression": {
                          "id": 84037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 84035,
                            "name": "debtBal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83854,
                            "src": "15681:7:124",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 84036,
                            "name": "want",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84011,
                            "src": "15692:4:124",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "src": "15681:15:124",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "id": 84038,
                        "nodeType": "ExpressionStatement",
                        "src": "15681:15:124"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 84041,
                    "name": "want",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 84011,
                    "src": "15723:4:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "functionReturnParameters": 84002,
                  "id": 84042,
                  "nodeType": "Return",
                  "src": "15716:11:124"
                }
              ]
            },
            "baseFunctions": [75253],
            "functionSelector": "86a5191e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repay",
            "nameLocation": "15322:5:124",
            "parameters": {
              "id": 83999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83994,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "15336:5:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 84044,
                  "src": "15328:13:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 83993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15328:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83996,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15351:6:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 84044,
                  "src": "15343:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 83995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15343:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83998,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 84044,
                  "src": "15359:14:124",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": { "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes" },
                  "typeName": {
                    "id": 83997,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15359:5:124",
                    "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15327:47:124"
            },
            "returnParameters": {
              "id": 84002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84001,
                  "mutability": "mutable",
                  "name": "repaid",
                  "nameLocation": "15401:6:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 84044,
                  "src": "15393:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 84000,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15393:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15392:16:124"
            },
            "scope": 84083,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 84061,
            "nodeType": "FunctionDefinition",
            "src": "15740:150:124",
            "nodes": [],
            "body": {
              "id": 84060,
              "nodeType": "Block",
              "src": "15808:82:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                        "id": 84054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 84052,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84046,
                          "src": "15826:5:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 84053,
                          "name": "debtAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83850,
                          "src": "15835:9:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "src": "15826:18:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "646562742f6173736574",
                        "id": 84055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15846:12:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0134fab7ed1e98d52b62e15165bdff1d8f912600554c6bbd107072f268e8b6ec",
                          "typeString": "literal_string \"debt/asset\""
                        },
                        "value": "debt/asset"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_0134fab7ed1e98d52b62e15165bdff1d8f912600554c6bbd107072f268e8b6ec",
                          "typeString": "literal_string \"debt/asset\""
                        }
                      ],
                      "id": 84051,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "15818:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 84056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15818:41:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84057,
                  "nodeType": "ExpressionStatement",
                  "src": "15818:41:124"
                },
                {
                  "expression": {
                    "id": 84058,
                    "name": "debtBal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 83854,
                    "src": "15876:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "functionReturnParameters": 84050,
                  "id": 84059,
                  "nodeType": "Return",
                  "src": "15869:14:124"
                }
              ]
            },
            "baseFunctions": [75260],
            "functionSelector": "11005b07",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "debtBalance",
            "nameLocation": "15749:11:124",
            "parameters": {
              "id": 84047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84046,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "15769:5:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 84061,
                  "src": "15761:13:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 84045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15761:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15760:15:124"
            },
            "returnParameters": {
              "id": 84050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84049,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 84061,
                  "src": "15799:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 84048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15799:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15798:9:124"
            },
            "scope": 84083,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 84082,
            "nodeType": "FunctionDefinition",
            "src": "15896:232:124",
            "nodes": [],
            "body": {
              "id": 84081,
              "nodeType": "Block",
              "src": "16061:67:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "66616c7365",
                        "id": 84075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16079:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 84076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16086:1:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        "value": "0"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 84077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16089:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 84078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16096:1:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        "value": "0"
                      }
                    ],
                    "id": 84079,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "16078:20:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$_t_bool_$_t_rational_0_by_1_$",
                      "typeString": "tuple(bool,int_const 0,bool,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 84074,
                  "id": 84080,
                  "nodeType": "Return",
                  "src": "16071:27:124"
                }
              ]
            },
            "baseFunctions": [75273],
            "functionSelector": "f80b6565",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRiskSignals",
            "nameLocation": "15905:14:124",
            "overrides": { "id": 84065, "nodeType": "OverrideSpecifier", "overrides": [], "src": "15980:8:124" },
            "parameters": {
              "id": 84064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84063,
                  "mutability": "mutable",
                  "name": "debtAssetadd",
                  "nameLocation": "15928:12:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 84082,
                  "src": "15920:20:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 84062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15920:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15919:22:124"
            },
            "returnParameters": {
              "id": 84074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84067,
                  "mutability": "mutable",
                  "name": "hasApr",
                  "nameLocation": "16011:6:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 84082,
                  "src": "16006:11:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                  "typeName": {
                    "id": 84066,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16006:4:124",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84069,
                  "mutability": "mutable",
                  "name": "aprBps",
                  "nameLocation": "16024:6:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 84082,
                  "src": "16019:11:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 84068,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16019:4:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84071,
                  "mutability": "mutable",
                  "name": "haveHf",
                  "nameLocation": "16037:6:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 84082,
                  "src": "16032:11:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                  "typeName": {
                    "id": 84070,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16032:4:124",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84073,
                  "mutability": "mutable",
                  "name": "hfBps",
                  "nameLocation": "16050:5:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 84082,
                  "src": "16045:10:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 84072,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16045:4:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16005:51:124"
            },
            "scope": 84083,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 83845,
              "name": "IBorrowVenueAdapter",
              "nameLocations": ["13892:19:124"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 75274,
              "src": "13892:19:124"
            },
            "id": 83846,
            "nodeType": "InheritanceSpecifier",
            "src": "13892:19:124"
          }
        ],
        "canonicalName": "MockBorrowVenueAdapter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [84083, 75274],
        "name": "MockBorrowVenueAdapter",
        "nameLocation": "13866:22:124",
        "scope": 84825,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 84824,
        "nodeType": "ContractDefinition",
        "src": "16215:7737:124",
        "nodes": [
          {
            "id": 84092,
            "nodeType": "VariableDeclaration",
            "src": "16291:41:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "12d43a51",
            "mutability": "mutable",
            "name": "gov",
            "nameLocation": "16306:3:124",
            "scope": 84824,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
            "typeName": {
              "id": 84088,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "16291:7:124",
              "stateMutability": "nonpayable",
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "676f76",
                  "id": 84090,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "16326:5:124",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_0513914b5dbefa3a0eed07f860beb4ab89366ecf422e323f9160c4de52afed69",
                    "typeString": "literal_string \"gov\""
                  },
                  "value": "gov"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_0513914b5dbefa3a0eed07f860beb4ab89366ecf422e323f9160c4de52afed69",
                    "typeString": "literal_string \"gov\""
                  }
                ],
                "id": 84089,
                "name": "makeAddr",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 34526,
                "src": "16317:8:124",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                  "typeString": "function (string memory) returns (address)"
                }
              },
              "id": 84091,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "16317:15:124",
              "tryCall": false,
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "visibility": "public"
          },
          {
            "id": 84097,
            "nodeType": "VariableDeclaration",
            "src": "16338:46:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "570ca735",
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "16353:8:124",
            "scope": 84824,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
            "typeName": {
              "id": 84093,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "16338:7:124",
              "stateMutability": "nonpayable",
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "6f70657261746f72",
                  "id": 84095,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "16373:10:124",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_46a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f622",
                    "typeString": "literal_string \"operator\""
                  },
                  "value": "operator"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_46a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f622",
                    "typeString": "literal_string \"operator\""
                  }
                ],
                "id": 84094,
                "name": "makeAddr",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 34526,
                "src": "16364:8:124",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                  "typeString": "function (string memory) returns (address)"
                }
              },
              "id": 84096,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "16364:20:124",
              "tryCall": false,
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "visibility": "public"
          },
          {
            "id": 84102,
            "nodeType": "VariableDeclaration",
            "src": "16409:43:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "16424:5:124",
            "scope": 84824,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
            "typeName": {
              "id": 84098,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "16409:7:124",
              "stateMutability": "nonpayable",
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "616c696365",
                  "id": 84100,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "16444:7:124",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9c0257114eb9399a2985f8e75dad7600c5d89fe3824ffa99ec1c3eb8bf3b0501",
                    "typeString": "literal_string \"alice\""
                  },
                  "value": "alice"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9c0257114eb9399a2985f8e75dad7600c5d89fe3824ffa99ec1c3eb8bf3b0501",
                    "typeString": "literal_string \"alice\""
                  }
                ],
                "id": 84099,
                "name": "makeAddr",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 34526,
                "src": "16435:8:124",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                  "typeString": "function (string memory) returns (address)"
                }
              },
              "id": 84101,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "16435:17:124",
              "tryCall": false,
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "visibility": "public"
          },
          {
            "id": 84105,
            "nodeType": "VariableDeclaration",
            "src": "16473:21:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "ec342ad0",
            "mutability": "mutable",
            "name": "BASE",
            "nameLocation": "16490:4:124",
            "scope": 84824,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$28758",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 84104,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 84103,
                "name": "MockERC20",
                "nameLocations": ["16473:9:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28758,
                "src": "16473:9:124"
              },
              "referencedDeclaration": 28758,
              "src": "16473:9:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$28758",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 84108,
            "nodeType": "VariableDeclaration",
            "src": "16533:21:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "20c61c89",
            "mutability": "mutable",
            "name": "DEBT",
            "nameLocation": "16550:4:124",
            "scope": 84824,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$28758",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 84107,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 84106,
                "name": "MockERC20",
                "nameLocations": ["16533:9:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28758,
                "src": "16533:9:124"
              },
              "referencedDeclaration": 28758,
              "src": "16533:9:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$28758",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 84111,
            "nodeType": "VariableDeclaration",
            "src": "16593:24:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "16611:6:124",
            "scope": 84824,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockOracle_$82718",
              "typeString": "contract MockOracle"
            },
            "typeName": {
              "id": 84110,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 84109,
                "name": "MockOracle",
                "nameLocations": ["16593:10:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 82718,
                "src": "16593:10:124"
              },
              "referencedDeclaration": 82718,
              "src": "16593:10:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockOracle_$82718",
                "typeString": "contract MockOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 84114,
            "nodeType": "VariableDeclaration",
            "src": "16645:24:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "fbfa77cf",
            "mutability": "mutable",
            "name": "vault",
            "nameLocation": "16664:5:124",
            "scope": 84824,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
              "typeString": "contract SLAYVaultV2"
            },
            "typeName": {
              "id": 84113,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 84112,
                "name": "SLAYVaultV2",
                "nameLocations": ["16645:11:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27419,
                "src": "16645:11:124"
              },
              "referencedDeclaration": 27419,
              "src": "16645:11:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                "typeString": "contract SLAYVaultV2"
              }
            },
            "visibility": "public"
          },
          {
            "id": 84117,
            "nodeType": "VariableDeclaration",
            "src": "16675:24:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "90e1437c",
            "mutability": "mutable",
            "name": "pl",
            "nameLocation": "16697:2:124",
            "scope": 84824,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PositionLocker_$73835",
              "typeString": "contract PositionLocker"
            },
            "typeName": {
              "id": 84116,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 84115,
                "name": "PositionLocker",
                "nameLocations": ["16675:14:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 73835,
                "src": "16675:14:124"
              },
              "referencedDeclaration": 73835,
              "src": "16675:14:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PositionLocker_$73835",
                "typeString": "contract PositionLocker"
              }
            },
            "visibility": "public"
          },
          {
            "id": 84120,
            "nodeType": "VariableDeclaration",
            "src": "16705:27:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "b215a879",
            "mutability": "mutable",
            "name": "cg",
            "nameLocation": "16730:2:124",
            "scope": 84824,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ConversionGateway_$71634",
              "typeString": "contract ConversionGateway"
            },
            "typeName": {
              "id": 84119,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 84118,
                "name": "ConversionGateway",
                "nameLocations": ["16705:17:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 71634,
                "src": "16705:17:124"
              },
              "referencedDeclaration": 71634,
              "src": "16705:17:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                "typeString": "contract ConversionGateway"
              }
            },
            "visibility": "public"
          },
          {
            "id": 84123,
            "nodeType": "VariableDeclaration",
            "src": "16759:37:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "03eadcfc",
            "mutability": "mutable",
            "name": "adapter",
            "nameLocation": "16789:7:124",
            "scope": 84824,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockBorrowVenueAdapter_$84083",
              "typeString": "contract MockBorrowVenueAdapter"
            },
            "typeName": {
              "id": 84122,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 84121,
                "name": "MockBorrowVenueAdapter",
                "nameLocations": ["16759:22:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 84083,
                "src": "16759:22:124"
              },
              "referencedDeclaration": 84083,
              "src": "16759:22:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockBorrowVenueAdapter_$84083",
                "typeString": "contract MockBorrowVenueAdapter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 84126,
            "nodeType": "VariableDeclaration",
            "src": "16802:39:124",
            "nodes": [],
            "constant": false,
            "functionSelector": "9df8e155",
            "mutability": "mutable",
            "name": "debtConn",
            "nameLocation": "16833:8:124",
            "scope": 84824,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
              "typeString": "contract ExternalVaultConnector"
            },
            "typeName": {
              "id": 84125,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 84124,
                "name": "ExternalVaultConnector",
                "nameLocations": ["16802:22:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 72007,
                "src": "16802:22:124"
              },
              "referencedDeclaration": 72007,
              "src": "16802:22:124",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                "typeString": "contract ExternalVaultConnector"
              }
            },
            "visibility": "public"
          },
          {
            "id": 84131,
            "nodeType": "VariableDeclaration",
            "src": "16900:57:124",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "STRAT_BORROW",
            "nameLocation": "16917:12:124",
            "scope": 84824,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
            "typeName": {
              "id": 84127,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "16900:7:124",
              "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "524f5554455f424f52524f57",
                  "id": 84129,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "16942:14:124",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_3e074ab914832eac7ed4f8b75017e824903d0ca7a254387fde9b09f3e0822e6f",
                    "typeString": "literal_string \"ROUTE_BORROW\""
                  },
                  "value": "ROUTE_BORROW"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_3e074ab914832eac7ed4f8b75017e824903d0ca7a254387fde9b09f3e0822e6f",
                    "typeString": "literal_string \"ROUTE_BORROW\""
                  }
                ],
                "id": 84128,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "16932:9:124",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 84130,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "16932:25:124",
              "tryCall": false,
              "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
            },
            "visibility": "internal"
          },
          {
            "id": 84138,
            "nodeType": "VariableDeclaration",
            "src": "16963:67:124",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "STRAT_BORROW_ID",
            "nameLocation": "16983:15:124",
            "scope": 84824,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
              "typeString": "StrategyId"
            },
            "typeName": {
              "id": 84133,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 84132,
                "name": "StrategyId",
                "nameLocations": ["16963:10:124"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 72139,
                "src": "16963:10:124"
              },
              "referencedDeclaration": 72139,
              "src": "16963:10:124",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                "typeString": "StrategyId"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 84136,
                  "name": "STRAT_BORROW",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 84131,
                  "src": "17017:12:124",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                }
              ],
              "expression": {
                "argumentTypes": [{ "typeIdentifier": "t_bytes32", "typeString": "bytes32" }],
                "expression": {
                  "id": 84134,
                  "name": "StrategyId",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 72139,
                  "src": "17001:10:124",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_userDefinedValueType$_StrategyId_$72139_$",
                    "typeString": "type(StrategyId)"
                  }
                },
                "id": 84135,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "memberLocation": "17012:4:124",
                "memberName": "wrap",
                "nodeType": "MemberAccess",
                "src": "17001:15:124",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_StrategyId_$72139_$",
                  "typeString": "function (bytes32) pure returns (StrategyId)"
                }
              },
              "id": 84137,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "17001:29:124",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                "typeString": "StrategyId"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 84511,
            "nodeType": "FunctionDefinition",
            "src": "17037:3277:124",
            "nodes": [],
            "body": {
              "id": 84510,
              "nodeType": "Block",
              "src": "17070:3244:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 84150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84142,
                      "name": "BASE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84105,
                      "src": "17098:4:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28758",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "5772617070656420425443",
                          "id": 84146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17119:13:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2ef08214ff447791a5e9afb7318f8e3059fd5f496df6b60a73eead50d2471ef1",
                            "typeString": "literal_string \"Wrapped BTC\""
                          },
                          "value": "Wrapped BTC"
                        },
                        {
                          "hexValue": "57425443",
                          "id": 84147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17134:6:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73",
                            "typeString": "literal_string \"WBTC\""
                          },
                          "value": "WBTC"
                        },
                        {
                          "hexValue": "38",
                          "id": 84148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17142:1:124",
                          "typeDescriptions": { "typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8" },
                          "value": "8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_2ef08214ff447791a5e9afb7318f8e3059fd5f496df6b60a73eead50d2471ef1",
                            "typeString": "literal_string \"Wrapped BTC\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73",
                            "typeString": "literal_string \"WBTC\""
                          },
                          { "typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8" }
                        ],
                        "id": 84145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "17105:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$28758_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 84144,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 84143,
                            "name": "MockERC20",
                            "nameLocations": ["17109:9:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28758,
                            "src": "17109:9:124"
                          },
                          "referencedDeclaration": 28758,
                          "src": "17109:9:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$28758",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 84149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17105:39:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28758",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "17098:46:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$28758",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 84151,
                  "nodeType": "ExpressionStatement",
                  "src": "17098:46:124"
                },
                {
                  "expression": {
                    "id": 84160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84152,
                      "name": "DEBT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84108,
                      "src": "17154:4:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28758",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "55534420436f696e",
                          "id": 84156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17175:10:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_52878b207aaddbfc15ea7bebcda681eb8ccd306e2227b61cef68505c8c056341",
                            "typeString": "literal_string \"USD Coin\""
                          },
                          "value": "USD Coin"
                        },
                        {
                          "hexValue": "55534443",
                          "id": 84157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17187:6:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa",
                            "typeString": "literal_string \"USDC\""
                          },
                          "value": "USDC"
                        },
                        {
                          "hexValue": "36",
                          "id": 84158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17195:1:124",
                          "typeDescriptions": { "typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6" },
                          "value": "6"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_52878b207aaddbfc15ea7bebcda681eb8ccd306e2227b61cef68505c8c056341",
                            "typeString": "literal_string \"USD Coin\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa",
                            "typeString": "literal_string \"USDC\""
                          },
                          { "typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6" }
                        ],
                        "id": 84155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "17161:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$28758_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 84154,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 84153,
                            "name": "MockERC20",
                            "nameLocations": ["17165:9:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28758,
                            "src": "17165:9:124"
                          },
                          "referencedDeclaration": 28758,
                          "src": "17165:9:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$28758",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 84159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17161:36:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28758",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "17154:43:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$28758",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 84161,
                  "nodeType": "ExpressionStatement",
                  "src": "17154:43:124"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 84162,
                        "name": "TestSuiteV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29031,
                        "src": "17236:11:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TestSuiteV2_$29031_$",
                          "typeString": "type(contract TestSuiteV2)"
                        }
                      },
                      "id": 84164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17248:5:124",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28976,
                      "src": "17236:17:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 84165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17236:19:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84166,
                  "nodeType": "ExpressionStatement",
                  "src": "17236:19:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84170,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84097,
                        "src": "17304:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 84167,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "17295:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17298:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "17295:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17295:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84172,
                  "nodeType": "ExpressionStatement",
                  "src": "17295:18:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "68747470733a2f2f6578616d706c652e636f6d",
                        "id": 84176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17351:21:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edba3f8cfcd4165f73cd4641ced2b2ec0d3ba4338e3eec30edd58777d86b53b2",
                          "typeString": "literal_string \"https://example.com\""
                        },
                        "value": "https://example.com"
                      },
                      {
                        "hexValue": "4f70657261746f722059",
                        "id": 84177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17374:12:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1038313a1e75734d78a6160e04e6865b81fc5c9166adb208e9f84694c6f7893",
                          "typeString": "literal_string \"Operator Y\""
                        },
                        "value": "Operator Y"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_edba3f8cfcd4165f73cd4641ced2b2ec0d3ba4338e3eec30edd58777d86b53b2",
                          "typeString": "literal_string \"https://example.com\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1038313a1e75734d78a6160e04e6865b81fc5c9166adb208e9f84694c6f7893",
                          "typeString": "literal_string \"Operator Y\""
                        }
                      ],
                      "expression": {
                        "id": 84173,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28802,
                        "src": "17323:8:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SLAYRegistryV2_$24613",
                          "typeString": "contract SLAYRegistryV2"
                        }
                      },
                      "id": 84175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17332:18:124",
                      "memberName": "registerAsOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23341,
                      "src": "17323:27:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory) external"
                      }
                    },
                    "id": 84178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17323:64:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84179,
                  "nodeType": "ExpressionStatement",
                  "src": "17323:64:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84183,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84097,
                        "src": "17447:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 84180,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "17438:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17441:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "17438:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17438:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84185,
                  "nodeType": "ExpressionStatement",
                  "src": "17438:18:124"
                },
                {
                  "expression": {
                    "id": 84193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84186,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84114,
                      "src": "17466:5:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                        "typeString": "contract SLAYVaultV2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 84189,
                          "name": "BASE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84105,
                          "src": "17494:4:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$28758",
                            "typeString": "contract MockERC20"
                          }
                        },
                        {
                          "hexValue": "74657374",
                          "id": 84190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17500:6:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                            "typeString": "literal_string \"test\""
                          },
                          "value": "test"
                        },
                        {
                          "hexValue": "54",
                          "id": 84191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17508:3:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
                            "typeString": "literal_string \"T\""
                          },
                          "value": "T"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" },
                          {
                            "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                            "typeString": "literal_string \"test\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
                            "typeString": "literal_string \"T\""
                          }
                        ],
                        "expression": {
                          "id": 84187,
                          "name": "vaultFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28805,
                          "src": "17474:12:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLAYVaultFactoryV2_$26472",
                            "typeString": "contract SLAYVaultFactoryV2"
                          }
                        },
                        "id": 84188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17487:6:124",
                        "memberName": "create",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26417,
                        "src": "17474:19:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20Metadata_$7351_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_SLAYVaultV2_$27419_$",
                          "typeString": "function (contract IERC20Metadata,string memory,string memory) external returns (contract SLAYVaultV2)"
                        }
                      },
                      "id": 84192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17474:38:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                        "typeString": "contract SLAYVaultV2"
                      }
                    },
                    "src": "17466:46:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                      "typeString": "contract SLAYVaultV2"
                    }
                  },
                  "id": 84194,
                  "nodeType": "ExpressionStatement",
                  "src": "17466:46:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 84196,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84114,
                            "src": "17531:5:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                              "typeString": "contract SLAYVaultV2"
                            }
                          },
                          "id": 84197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17537:9:124",
                          "memberName": "delegated",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 26664,
                          "src": "17531:15:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 84198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17531:17:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 84199,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84097,
                        "src": "17550:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_address", "typeString": "address" }
                      ],
                      "id": 84195,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29538,
                      "src": "17522:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) pure"
                      }
                    },
                    "id": 84200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17522:37:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84201,
                  "nodeType": "ExpressionStatement",
                  "src": "17522:37:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84205,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28787,
                        "src": "17578:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 84202,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "17569:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17572:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "17569:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17569:15:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84207,
                  "nodeType": "ExpressionStatement",
                  "src": "17569:15:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84213,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84114,
                            "src": "17627:5:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                              "typeString": "contract SLAYVaultV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_SLAYVaultV2_$27419", "typeString": "contract SLAYVaultV2" }
                          ],
                          "id": 84212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17619:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84211,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17619:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17619:14:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 84215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17635:4:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" }
                      ],
                      "expression": {
                        "id": 84208,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28799,
                        "src": "17594:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SLAYRouterV2_$26255",
                          "typeString": "contract SLAYRouterV2"
                        }
                      },
                      "id": 84210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17601:17:124",
                      "memberName": "setVaultWhitelist",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25373,
                      "src": "17594:24:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 84216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17594:46:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84217,
                  "nodeType": "ExpressionStatement",
                  "src": "17594:46:124"
                },
                {
                  "expression": {
                    "id": 84224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84218,
                      "name": "pl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84117,
                      "src": "17665:2:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PositionLocker_$73835",
                        "typeString": "contract PositionLocker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 84222,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84114,
                          "src": "17689:5:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                            "typeString": "contract SLAYVaultV2"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_contract$_SLAYVaultV2_$27419", "typeString": "contract SLAYVaultV2" }
                        ],
                        "id": 84221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "17670:18:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_SLAYVaultV2_$27419_$returns$_t_contract$_PositionLocker_$73835_$",
                          "typeString": "function (contract SLAYVaultV2) returns (contract PositionLocker)"
                        },
                        "typeName": {
                          "id": 84220,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 84219,
                            "name": "PositionLocker",
                            "nameLocations": ["17674:14:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 73835,
                            "src": "17674:14:124"
                          },
                          "referencedDeclaration": 73835,
                          "src": "17674:14:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PositionLocker_$73835",
                            "typeString": "contract PositionLocker"
                          }
                        }
                      },
                      "id": 84223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17670:25:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PositionLocker_$73835",
                        "typeString": "contract PositionLocker"
                      }
                    },
                    "src": "17665:30:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PositionLocker_$73835",
                      "typeString": "contract PositionLocker"
                    }
                  },
                  "id": 84225,
                  "nodeType": "ExpressionStatement",
                  "src": "17665:30:124"
                },
                {
                  "expression": {
                    "id": 84231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84226,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84111,
                      "src": "17705:6:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockOracle_$82718",
                        "typeString": "contract MockOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 84229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "17714:14:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockOracle_$82718_$",
                          "typeString": "function () returns (contract MockOracle)"
                        },
                        "typeName": {
                          "id": 84228,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 84227,
                            "name": "MockOracle",
                            "nameLocations": ["17718:10:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 82718,
                            "src": "17718:10:124"
                          },
                          "referencedDeclaration": 82718,
                          "src": "17718:10:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOracle_$82718",
                            "typeString": "contract MockOracle"
                          }
                        }
                      },
                      "id": 84230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17714:16:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockOracle_$82718",
                        "typeString": "contract MockOracle"
                      }
                    },
                    "src": "17705:25:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockOracle_$82718",
                      "typeString": "contract MockOracle"
                    }
                  },
                  "id": 84232,
                  "nodeType": "ExpressionStatement",
                  "src": "17705:25:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84238,
                            "name": "BASE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84105,
                            "src": "17807:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 84237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17799:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84236,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17799:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17799:13:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_5000000000000_by_1",
                          "typeString": "int_const 5000000000000"
                        },
                        "id": 84242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "35305f303030",
                          "id": 84240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17814:6:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50000_by_1",
                            "typeString": "int_const 50000"
                          },
                          "value": "50_000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "316538",
                          "id": 84241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17823:3:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          "value": "1e8"
                        },
                        "src": "17814:12:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000_by_1",
                          "typeString": "int_const 5000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_rational_5000000000000_by_1", "typeString": "int_const 5000000000000" }
                      ],
                      "expression": {
                        "id": 84233,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84111,
                        "src": "17788:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOracle_$82718",
                          "typeString": "contract MockOracle"
                        }
                      },
                      "id": 84235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17795:3:124",
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82705,
                      "src": "17788:10:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 84243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17788:39:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84244,
                  "nodeType": "ExpressionStatement",
                  "src": "17788:39:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84250,
                            "name": "DEBT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84108,
                            "src": "17856:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 84249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17848:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84248,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17848:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17848:13:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "316538",
                        "id": 84252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17863:3:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000_by_1",
                          "typeString": "int_const 100000000"
                        },
                        "value": "1e8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_rational_100000000_by_1", "typeString": "int_const 100000000" }
                      ],
                      "expression": {
                        "id": 84245,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84111,
                        "src": "17837:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockOracle_$82718",
                          "typeString": "contract MockOracle"
                        }
                      },
                      "id": 84247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17844:3:124",
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82705,
                      "src": "17837:10:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 84253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17837:30:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84254,
                  "nodeType": "ExpressionStatement",
                  "src": "17837:30:124"
                },
                {
                  "expression": {
                    "id": 84274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84255,
                      "name": "cg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84120,
                      "src": "17904:2:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                        "typeString": "contract ConversionGateway"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 84259,
                          "name": "gov",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84092,
                          "src": "17931:3:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "id": 84260,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84097,
                          "src": "17936:8:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "id": 84261,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84097,
                          "src": "17946:8:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "arguments": [
                            {
                              "id": 84264,
                              "name": "pl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84117,
                              "src": "17964:2:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PositionLocker_$73835",
                                "typeString": "contract PositionLocker"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PositionLocker_$73835",
                                "typeString": "contract PositionLocker"
                              }
                            ],
                            "id": 84263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17956:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84262,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17956:7:124",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17956:11:124",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "id": 84266,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84111,
                          "src": "17969:6:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockOracle_$82718",
                            "typeString": "contract MockOracle"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 84270,
                                  "name": "BASE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 84105,
                                  "src": "17992:4:124",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockERC20_$28758",
                                    "typeString": "contract MockERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockERC20_$28758",
                                    "typeString": "contract MockERC20"
                                  }
                                ],
                                "id": 84269,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17984:7:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 84268,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17984:7:124",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 84271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17984:13:124",
                              "tryCall": false,
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                            "id": 84267,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6631,
                            "src": "17977:6:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$6631_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 84272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17977:21:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$6631",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_contract$_MockOracle_$82718", "typeString": "contract MockOracle" },
                          { "typeIdentifier": "t_contract$_IERC20_$6631", "typeString": "contract IERC20" }
                        ],
                        "id": 84258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "17909:21:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_contract$_IPriceOracle_$69067_$_t_contract$_IERC20_$6631_$returns$_t_contract$_ConversionGateway_$71634_$",
                          "typeString": "function (address,address,address,address,contract IPriceOracle,contract IERC20) returns (contract ConversionGateway)"
                        },
                        "typeName": {
                          "id": 84257,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 84256,
                            "name": "ConversionGateway",
                            "nameLocations": ["17913:17:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 71634,
                            "src": "17913:17:124"
                          },
                          "referencedDeclaration": 71634,
                          "src": "17913:17:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                            "typeString": "contract ConversionGateway"
                          }
                        }
                      },
                      "id": 84273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17909:90:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                        "typeString": "contract ConversionGateway"
                      }
                    },
                    "src": "17904:95:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                      "typeString": "contract ConversionGateway"
                    }
                  },
                  "id": 84275,
                  "nodeType": "ExpressionStatement",
                  "src": "17904:95:124"
                },
                {
                  "expression": {
                    "id": 84289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84276,
                      "name": "adapter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84123,
                      "src": "18041:7:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockBorrowVenueAdapter_$84083",
                        "typeString": "contract MockBorrowVenueAdapter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 84282,
                              "name": "BASE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84105,
                              "src": "18087:4:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$28758",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                            ],
                            "id": 84281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "18079:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84280,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18079:7:124",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18079:13:124",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "arguments": [
                            {
                              "id": 84286,
                              "name": "DEBT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84108,
                              "src": "18102:4:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$28758",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                            ],
                            "id": 84285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "18094:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84284,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18094:7:124",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18094:13:124",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_address", "typeString": "address" }
                        ],
                        "id": 84279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "18052:26:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_MockBorrowVenueAdapter_$84083_$",
                          "typeString": "function (address,address) returns (contract MockBorrowVenueAdapter)"
                        },
                        "typeName": {
                          "id": 84278,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 84277,
                            "name": "MockBorrowVenueAdapter",
                            "nameLocations": ["18056:22:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 84083,
                            "src": "18056:22:124"
                          },
                          "referencedDeclaration": 84083,
                          "src": "18056:22:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockBorrowVenueAdapter_$84083",
                            "typeString": "contract MockBorrowVenueAdapter"
                          }
                        }
                      },
                      "id": 84288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18052:56:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockBorrowVenueAdapter_$84083",
                        "typeString": "contract MockBorrowVenueAdapter"
                      }
                    },
                    "src": "18041:67:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockBorrowVenueAdapter_$84083",
                      "typeString": "contract MockBorrowVenueAdapter"
                    }
                  },
                  "id": 84290,
                  "nodeType": "ExpressionStatement",
                  "src": "18041:67:124"
                },
                {
                  "expression": {
                    "id": 84318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84291,
                      "name": "debtConn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84126,
                      "src": "18238:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                        "typeString": "contract ExternalVaultConnector"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 84295,
                          "name": "gov",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84092,
                          "src": "18289:3:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "arguments": [
                            {
                              "id": 84298,
                              "name": "cg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84120,
                              "src": "18314:2:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                                "typeString": "contract ConversionGateway"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                                "typeString": "contract ConversionGateway"
                              }
                            ],
                            "id": 84297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "18306:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84296,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18306:7:124",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18306:11:124",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 84309,
                                              "name": "DEBT",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 84108,
                                              "src": "18377:4:124",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_MockERC20_$28758",
                                                "typeString": "contract MockERC20"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_MockERC20_$28758",
                                                "typeString": "contract MockERC20"
                                              }
                                            ],
                                            "id": 84308,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "18369:7:124",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 84307,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "18369:7:124",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 84310,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "18369:13:124",
                                          "tryCall": false,
                                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                                        "id": 84306,
                                        "name": "ERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6553,
                                        "src": "18363:5:124",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ERC20_$6553_$",
                                          "typeString": "type(contract ERC20)"
                                        }
                                      },
                                      "id": 84311,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "18363:20:124",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$6553",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    {
                                      "hexValue": "6578742064656274",
                                      "id": 84312,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "18385:10:124",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_ed895f1540d2a69d8d99a38888cc4bd066e7934bbb04cb03021265c303a94065",
                                        "typeString": "literal_string \"ext debt\""
                                      },
                                      "value": "ext debt"
                                    },
                                    {
                                      "hexValue": "65787444454254",
                                      "id": 84313,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "18397:9:124",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_53d25f76549d92c458ab1132956afab97989eaf7332c656fef6913e7e605a406",
                                        "typeString": "literal_string \"extDEBT\""
                                      },
                                      "value": "extDEBT"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      { "typeIdentifier": "t_contract$_ERC20_$6553", "typeString": "contract ERC20" },
                                      {
                                        "typeIdentifier": "t_stringliteral_ed895f1540d2a69d8d99a38888cc4bd066e7934bbb04cb03021265c303a94065",
                                        "typeString": "literal_string \"ext debt\""
                                      },
                                      {
                                        "typeIdentifier": "t_stringliteral_53d25f76549d92c458ab1132956afab97989eaf7332c656fef6913e7e605a406",
                                        "typeString": "literal_string \"extDEBT\""
                                      }
                                    ],
                                    "id": 84305,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "18348:14:124",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$6553_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_Simple4626_$82685_$",
                                      "typeString": "function (contract ERC20,string memory,string memory) returns (contract Simple4626)"
                                    },
                                    "typeName": {
                                      "id": 84304,
                                      "nodeType": "UserDefinedTypeName",
                                      "pathNode": {
                                        "id": 84303,
                                        "name": "Simple4626",
                                        "nameLocations": ["18352:10:124"],
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 82685,
                                        "src": "18352:10:124"
                                      },
                                      "referencedDeclaration": 82685,
                                      "src": "18352:10:124",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Simple4626_$82685",
                                        "typeString": "contract Simple4626"
                                      }
                                    }
                                  },
                                  "id": 84314,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18348:59:124",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Simple4626_$82685",
                                    "typeString": "contract Simple4626"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Simple4626_$82685",
                                    "typeString": "contract Simple4626"
                                  }
                                ],
                                "id": 84302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18340:7:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 84301,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18340:7:124",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 84315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18340:68:124",
                              "tryCall": false,
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                            "id": 84300,
                            "name": "IERC4626",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5158,
                            "src": "18331:8:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC4626_$5158_$",
                              "typeString": "type(contract IERC4626)"
                            }
                          },
                          "id": 84316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18331:78:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC4626_$5158",
                            "typeString": "contract IERC4626"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_contract$_IERC4626_$5158", "typeString": "contract IERC4626" }
                        ],
                        "id": 84294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "18249:26:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_contract$_IERC4626_$5158_$returns$_t_contract$_ExternalVaultConnector_$72007_$",
                          "typeString": "function (address,address,contract IERC4626) returns (contract ExternalVaultConnector)"
                        },
                        "typeName": {
                          "id": 84293,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 84292,
                            "name": "ExternalVaultConnector",
                            "nameLocations": ["18253:22:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 72007,
                            "src": "18253:22:124"
                          },
                          "referencedDeclaration": 72007,
                          "src": "18253:22:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                            "typeString": "contract ExternalVaultConnector"
                          }
                        }
                      },
                      "id": 84317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18249:170:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                        "typeString": "contract ExternalVaultConnector"
                      }
                    },
                    "src": "18238:181:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                      "typeString": "contract ExternalVaultConnector"
                    }
                  },
                  "id": 84319,
                  "nodeType": "ExpressionStatement",
                  "src": "18238:181:124"
                },
                {
                  "assignments": [84324],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84324,
                      "mutability": "mutable",
                      "name": "bSafe",
                      "nameLocation": "18472:5:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84510,
                      "src": "18434:43:124",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BorrowSafety_$69175_memory_ptr",
                        "typeString": "struct ConversionGateway.BorrowSafety"
                      },
                      "typeName": {
                        "id": 84323,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 84322,
                          "name": "ConversionGateway.BorrowSafety",
                          "nameLocations": ["18434:17:124", "18452:12:124"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69175,
                          "src": "18434:30:124"
                        },
                        "referencedDeclaration": 69175,
                        "src": "18434:30:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BorrowSafety_$69175_storage_ptr",
                          "typeString": "struct ConversionGateway.BorrowSafety"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84335,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "3530",
                        "id": 84327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18545:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_50_by_1", "typeString": "int_const 50" },
                        "value": "50"
                      },
                      {
                        "hexValue": "3530",
                        "id": 84328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18637:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_50_by_1", "typeString": "int_const 50" },
                        "value": "50"
                      },
                      {
                        "hexValue": "31353030",
                        "id": 84329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18726:4:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1500_by_1",
                          "typeString": "int_const 1500"
                        },
                        "value": "1500"
                      },
                      {
                        "hexValue": "31323030",
                        "id": 84330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18801:4:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1200_by_1",
                          "typeString": "int_const 1200"
                        },
                        "value": "1200"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 84331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18892:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "false"
                      },
                      {
                        "hexValue": "333030",
                        "id": 84332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18931:3:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_300_by_1", "typeString": "int_const 300" },
                        "value": "300"
                      },
                      {
                        "hexValue": "333030",
                        "id": 84333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19009:3:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_300_by_1", "typeString": "int_const 300" },
                        "value": "300"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_rational_50_by_1", "typeString": "int_const 50" },
                        { "typeIdentifier": "t_rational_50_by_1", "typeString": "int_const 50" },
                        { "typeIdentifier": "t_rational_1500_by_1", "typeString": "int_const 1500" },
                        { "typeIdentifier": "t_rational_1200_by_1", "typeString": "int_const 1200" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_rational_300_by_1", "typeString": "int_const 300" },
                        { "typeIdentifier": "t_rational_300_by_1", "typeString": "int_const 300" }
                      ],
                      "expression": {
                        "id": 84325,
                        "name": "ConversionGateway",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71634,
                        "src": "18480:17:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ConversionGateway_$71634_$",
                          "typeString": "type(contract ConversionGateway)"
                        }
                      },
                      "id": 84326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18498:12:124",
                      "memberName": "BorrowSafety",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69175,
                      "src": "18480:30:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_BorrowSafety_$69175_storage_ptr_$",
                        "typeString": "type(struct ConversionGateway.BorrowSafety storage pointer)"
                      }
                    },
                    "id": 84334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "18525:18:124",
                      "18616:19:124",
                      "18708:9:124",
                      "18783:8:124",
                      "18874:13:124",
                      "18911:18:124",
                      "18987:20:124"
                    ],
                    "names": [
                      "redeemToleranceBps",
                      "withdrawSlippageBps",
                      "maxAprBps",
                      "minHfBps",
                      "emergencyMode",
                      "emergencyRedeemBps",
                      "emergencyWithdrawBps"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "18480:583:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BorrowSafety_$69175_memory_ptr",
                      "typeString": "struct ConversionGateway.BorrowSafety memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18434:629:124"
                },
                {
                  "assignments": [84340],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84340,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "19157:1:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84510,
                      "src": "19120:38:124",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StrategyCfg_$69149_memory_ptr",
                        "typeString": "struct ConversionGateway.StrategyCfg"
                      },
                      "typeName": {
                        "id": 84339,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 84338,
                          "name": "ConversionGateway.StrategyCfg",
                          "nameLocations": ["19120:17:124", "19138:11:124"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69149,
                          "src": "19120:29:124"
                        },
                        "referencedDeclaration": 69149,
                        "src": "19120:29:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StrategyCfg_$69149_storage_ptr",
                          "typeString": "struct ConversionGateway.StrategyCfg"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84341,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19120:38:124"
                },
                {
                  "expression": {
                    "id": 84348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 84342,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84340,
                        "src": "19168:1:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StrategyCfg_$69149_memory_ptr",
                          "typeString": "struct ConversionGateway.StrategyCfg memory"
                        }
                      },
                      "id": 84344,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "19170:4:124",
                      "memberName": "kind",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69142,
                      "src": "19168:6:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RouteKind_$69119",
                        "typeString": "enum ConversionGateway.RouteKind"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 84345,
                          "name": "ConversionGateway",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71634,
                          "src": "19177:17:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ConversionGateway_$71634_$",
                            "typeString": "type(contract ConversionGateway)"
                          }
                        },
                        "id": 84346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19195:9:124",
                        "memberName": "RouteKind",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69119,
                        "src": "19177:27:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_RouteKind_$69119_$",
                          "typeString": "type(enum ConversionGateway.RouteKind)"
                        }
                      },
                      "id": 84347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "19205:12:124",
                      "memberName": "BorrowVsBase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69118,
                      "src": "19177:40:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_RouteKind_$69119",
                        "typeString": "enum ConversionGateway.RouteKind"
                      }
                    },
                    "src": "19168:49:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_RouteKind_$69119",
                      "typeString": "enum ConversionGateway.RouteKind"
                    }
                  },
                  "id": 84349,
                  "nodeType": "ExpressionStatement",
                  "src": "19168:49:124"
                },
                {
                  "expression": {
                    "id": 84370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 84350,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84340,
                        "src": "19227:1:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StrategyCfg_$69149_memory_ptr",
                          "typeString": "struct ConversionGateway.StrategyCfg memory"
                        }
                      },
                      "id": 84352,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "19229:6:124",
                      "memberName": "borrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69148,
                      "src": "19227:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BorrowCfg_$69139_memory_ptr",
                        "typeString": "struct ConversionGateway.BorrowCfg memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 84357,
                              "name": "adapter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84123,
                              "src": "19297:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockBorrowVenueAdapter_$84083",
                                "typeString": "contract MockBorrowVenueAdapter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockBorrowVenueAdapter_$84083",
                                "typeString": "contract MockBorrowVenueAdapter"
                              }
                            ],
                            "id": 84356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19289:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84355,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19289:7:124",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19289:16:124",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "arguments": [
                            {
                              "id": 84361,
                              "name": "DEBT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84108,
                              "src": "19338:4:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$28758",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                            ],
                            "id": 84360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19330:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84359,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19330:7:124",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19330:13:124",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "arguments": [
                            {
                              "id": 84365,
                              "name": "debtConn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84126,
                              "src": "19384:8:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                                "typeString": "contract ExternalVaultConnector"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                                "typeString": "contract ExternalVaultConnector"
                              }
                            ],
                            "id": 84364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19376:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84363,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19376:7:124",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19376:17:124",
                          "tryCall": false,
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "hexValue": "37303030",
                          "id": 84367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19421:4:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7000_by_1",
                            "typeString": "int_const 7000"
                          },
                          "value": "7000"
                        },
                        {
                          "id": 84368,
                          "name": "bSafe",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84324,
                          "src": "19472:5:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BorrowSafety_$69175_memory_ptr",
                            "typeString": "struct ConversionGateway.BorrowSafety memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_rational_7000_by_1", "typeString": "int_const 7000" },
                          {
                            "typeIdentifier": "t_struct$_BorrowSafety_$69175_memory_ptr",
                            "typeString": "struct ConversionGateway.BorrowSafety memory"
                          }
                        ],
                        "expression": {
                          "id": 84353,
                          "name": "ConversionGateway",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71634,
                          "src": "19238:17:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ConversionGateway_$71634_$",
                            "typeString": "type(contract ConversionGateway)"
                          }
                        },
                        "id": 84354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19256:9:124",
                        "memberName": "BorrowCfg",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69139,
                        "src": "19238:27:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_BorrowCfg_$69139_storage_ptr_$",
                          "typeString": "type(struct ConversionGateway.BorrowCfg storage pointer)"
                        }
                      },
                      "id": 84369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": ["19280:7:124", "19319:9:124", "19357:17:124", "19407:12:124", "19464:6:124"],
                      "names": ["adapter", "debtAsset", "borrowedConnector", "maxBorrowBps", "safety"],
                      "nodeType": "FunctionCall",
                      "src": "19238:314:124",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BorrowCfg_$69139_memory_ptr",
                        "typeString": "struct ConversionGateway.BorrowCfg memory"
                      }
                    },
                    "src": "19227:325:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BorrowCfg_$69139_memory_ptr",
                      "typeString": "struct ConversionGateway.BorrowCfg memory"
                    }
                  },
                  "id": 84371,
                  "nodeType": "ExpressionStatement",
                  "src": "19227:325:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84375,
                        "name": "gov",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84092,
                        "src": "19572:3:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 84372,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "19563:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19566:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "19563:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19563:13:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84377,
                  "nodeType": "ExpressionStatement",
                  "src": "19563:13:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84381,
                        "name": "STRAT_BORROW",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84131,
                        "src": "19601:12:124",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      },
                      {
                        "id": 84382,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84340,
                        "src": "19615:1:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StrategyCfg_$69149_memory_ptr",
                          "typeString": "struct ConversionGateway.StrategyCfg memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                        {
                          "typeIdentifier": "t_struct$_StrategyCfg_$69149_memory_ptr",
                          "typeString": "struct ConversionGateway.StrategyCfg memory"
                        }
                      ],
                      "expression": {
                        "id": 84378,
                        "name": "cg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84120,
                        "src": "19586:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                          "typeString": "contract ConversionGateway"
                        }
                      },
                      "id": 84380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19589:11:124",
                      "memberName": "setStrategy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70013,
                      "src": "19586:14:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_struct$_StrategyCfg_$69149_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,struct ConversionGateway.StrategyCfg memory) external"
                      }
                    },
                    "id": 84383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19586:31:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84384,
                  "nodeType": "ExpressionStatement",
                  "src": "19586:31:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84388,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84097,
                        "src": "19667:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 84385,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "19658:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19661:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "19658:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19658:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84390,
                  "nodeType": "ExpressionStatement",
                  "src": "19658:18:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "355f303030",
                        "id": 84394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19697:5:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000_by_1",
                          "typeString": "int_const 5000"
                        },
                        "value": "5_000"
                      },
                      {
                        "hexValue": "355f303030",
                        "id": 84395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19704:5:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000_by_1",
                          "typeString": "int_const 5000"
                        },
                        "value": "5_000"
                      },
                      {
                        "hexValue": "355f303030",
                        "id": 84396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19711:5:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000_by_1",
                          "typeString": "int_const 5000"
                        },
                        "value": "5_000"
                      },
                      {
                        "hexValue": "31",
                        "id": 84397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19718:6:124",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_rational_5000_by_1", "typeString": "int_const 5000" },
                        { "typeIdentifier": "t_rational_5000_by_1", "typeString": "int_const 5000" },
                        { "typeIdentifier": "t_rational_5000_by_1", "typeString": "int_const 5000" },
                        { "typeIdentifier": "t_rational_86400_by_1", "typeString": "int_const 86400" }
                      ],
                      "expression": {
                        "id": 84391,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84117,
                        "src": "19686:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 84393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19689:7:124",
                      "memberName": "setCaps",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72550,
                      "src": "19686:10:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint48_$returns$__$",
                        "typeString": "function (uint16,uint16,uint16,uint48) external"
                      }
                    },
                    "id": 84398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19686:39:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84399,
                  "nodeType": "ExpressionStatement",
                  "src": "19686:39:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84403,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84097,
                        "src": "19790:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 84400,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "19781:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19784:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "19781:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19781:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84405,
                  "nodeType": "ExpressionStatement",
                  "src": "19781:18:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84411,
                            "name": "cg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84120,
                            "src": "19841:2:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                              "typeString": "contract ConversionGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                              "typeString": "contract ConversionGateway"
                            }
                          ],
                          "id": 84410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19833:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84409,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19833:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19833:11:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 84406,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84117,
                        "src": "19809:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 84408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19812:20:124",
                      "memberName": "setConversionGateway",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72582,
                      "src": "19809:23:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19809:36:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84414,
                  "nodeType": "ExpressionStatement",
                  "src": "19809:36:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84418,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84097,
                        "src": "19864:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 84415,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "19855:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19858:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "19855:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19855:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84420,
                  "nodeType": "ExpressionStatement",
                  "src": "19855:18:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84424,
                        "name": "STRAT_BORROW_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84138,
                        "src": "19905:15:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                          "typeString": "StrategyId"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 84425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19922:4:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139", "typeString": "StrategyId" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" }
                      ],
                      "expression": {
                        "id": 84421,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84117,
                        "src": "19883:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 84423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19886:18:124",
                      "memberName": "setStrategyEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72605,
                      "src": "19883:21:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_userDefinedValueType$_StrategyId_$72139_$_t_bool_$returns$__$",
                        "typeString": "function (StrategyId,bool) external"
                      }
                    },
                    "id": 84426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19883:44:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84427,
                  "nodeType": "ExpressionStatement",
                  "src": "19883:44:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84431,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84097,
                        "src": "19946:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 84428,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "19937:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19940:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "19937:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19937:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84433,
                  "nodeType": "ExpressionStatement",
                  "src": "19937:18:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 84437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19978:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }],
                      "expression": {
                        "id": 84434,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84117,
                        "src": "19965:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 84436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19968:9:124",
                      "memberName": "setPaused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72648,
                      "src": "19965:12:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 84438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19965:19:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84439,
                  "nodeType": "ExpressionStatement",
                  "src": "19965:19:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84445,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84114,
                            "src": "20030:5:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                              "typeString": "contract SLAYVaultV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_SLAYVaultV2_$27419", "typeString": "contract SLAYVaultV2" }
                          ],
                          "id": 84444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20022:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84443,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20022:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20022:14:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "534c41595661756c74",
                        "id": 84447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20038:11:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99f53b233ce46e3d48520599d22c887400462f3e3b60f6fb4be68eb475f55f1b",
                          "typeString": "literal_string \"SLAYVault\""
                        },
                        "value": "SLAYVault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_99f53b233ce46e3d48520599d22c887400462f3e3b60f6fb4be68eb475f55f1b",
                          "typeString": "literal_string \"SLAYVault\""
                        }
                      ],
                      "expression": {
                        "id": 84440,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "20013:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20016:5:124",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "20013:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 84448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20013:37:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84449,
                  "nodeType": "ExpressionStatement",
                  "src": "20013:37:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84455,
                            "name": "pl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84117,
                            "src": "20077:2:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionLocker_$73835",
                              "typeString": "contract PositionLocker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionLocker_$73835",
                              "typeString": "contract PositionLocker"
                            }
                          ],
                          "id": 84454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20069:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84453,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20069:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20069:11:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "504c",
                        "id": 84457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20082:4:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_876138161d860b1265e6206748b138a5de33dd60f8d22eb8229bb1ff8d1d9fd0",
                          "typeString": "literal_string \"PL\""
                        },
                        "value": "PL"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_876138161d860b1265e6206748b138a5de33dd60f8d22eb8229bb1ff8d1d9fd0",
                          "typeString": "literal_string \"PL\""
                        }
                      ],
                      "expression": {
                        "id": 84450,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "20060:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20063:5:124",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "20060:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 84458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20060:27:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84459,
                  "nodeType": "ExpressionStatement",
                  "src": "20060:27:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84465,
                            "name": "cg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84120,
                            "src": "20114:2:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                              "typeString": "contract ConversionGateway"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                              "typeString": "contract ConversionGateway"
                            }
                          ],
                          "id": 84464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20106:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84463,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20106:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20106:11:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "4347",
                        "id": 84467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20119:4:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_057537b6778caf7350f1d109e8920782d4826c3fc64124776c686911ef890822",
                          "typeString": "literal_string \"CG\""
                        },
                        "value": "CG"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_057537b6778caf7350f1d109e8920782d4826c3fc64124776c686911ef890822",
                          "typeString": "literal_string \"CG\""
                        }
                      ],
                      "expression": {
                        "id": 84460,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "20097:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20100:5:124",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "20097:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 84468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20097:27:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84469,
                  "nodeType": "ExpressionStatement",
                  "src": "20097:27:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84475,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84123,
                            "src": "20151:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowVenueAdapter_$84083",
                              "typeString": "contract MockBorrowVenueAdapter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockBorrowVenueAdapter_$84083",
                              "typeString": "contract MockBorrowVenueAdapter"
                            }
                          ],
                          "id": 84474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20143:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84473,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20143:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20143:16:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "41646170746572",
                        "id": 84477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20161:9:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a9de363ffe7cdff02cb2d14a7f1cb507fd245dcddbd6334df7afc1608a3abb7",
                          "typeString": "literal_string \"Adapter\""
                        },
                        "value": "Adapter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_1a9de363ffe7cdff02cb2d14a7f1cb507fd245dcddbd6334df7afc1608a3abb7",
                          "typeString": "literal_string \"Adapter\""
                        }
                      ],
                      "expression": {
                        "id": 84470,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "20134:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20137:5:124",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "20134:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 84478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20134:37:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84479,
                  "nodeType": "ExpressionStatement",
                  "src": "20134:37:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84485,
                            "name": "debtConn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84126,
                            "src": "20198:8:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                              "typeString": "contract ExternalVaultConnector"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                              "typeString": "contract ExternalVaultConnector"
                            }
                          ],
                          "id": 84484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20190:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84483,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20190:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20190:17:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "44656274436f6e6e6563746f72",
                        "id": 84487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20209:15:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72d637bc3f94284c36b4e0b9e5dea6fd18176cdf25698b7412d72b4c352b340f",
                          "typeString": "literal_string \"DebtConnector\""
                        },
                        "value": "DebtConnector"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_72d637bc3f94284c36b4e0b9e5dea6fd18176cdf25698b7412d72b4c352b340f",
                          "typeString": "literal_string \"DebtConnector\""
                        }
                      ],
                      "expression": {
                        "id": 84480,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "20181:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20184:5:124",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "20181:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 84488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20181:44:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84489,
                  "nodeType": "ExpressionStatement",
                  "src": "20181:44:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84495,
                            "name": "BASE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84105,
                            "src": "20252:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 84494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20244:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84493,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20244:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20244:13:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "42415345",
                        "id": 84497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20259:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a96b772a8c17d9c8cf2c92a171b3dcdcf9453b286b3b47d988d07a79acc72567",
                          "typeString": "literal_string \"BASE\""
                        },
                        "value": "BASE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_a96b772a8c17d9c8cf2c92a171b3dcdcf9453b286b3b47d988d07a79acc72567",
                          "typeString": "literal_string \"BASE\""
                        }
                      ],
                      "expression": {
                        "id": 84490,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "20235:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20238:5:124",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "20235:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 84498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20235:31:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84499,
                  "nodeType": "ExpressionStatement",
                  "src": "20235:31:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84505,
                            "name": "DEBT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84108,
                            "src": "20293:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 84504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20285:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84503,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20285:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20285:13:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "44454254",
                        "id": 84507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20300:6:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b2527ad5e3edfee867b1b10ab34d699ac8fb9d070b6b55717d7b6bb991eadb59",
                          "typeString": "literal_string \"DEBT\""
                        },
                        "value": "DEBT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_b2527ad5e3edfee867b1b10ab34d699ac8fb9d070b6b55717d7b6bb991eadb59",
                          "typeString": "literal_string \"DEBT\""
                        }
                      ],
                      "expression": {
                        "id": 84500,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "20276:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20279:5:124",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "20276:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 84508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20276:31:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84509,
                  "nodeType": "ExpressionStatement",
                  "src": "20276:31:124"
                }
              ]
            },
            "baseFunctions": [28976],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "17046:5:124",
            "overrides": { "id": 84140, "nodeType": "OverrideSpecifier", "overrides": [], "src": "17061:8:124" },
            "parameters": { "id": 84139, "nodeType": "ParameterList", "parameters": [], "src": "17051:2:124" },
            "returnParameters": { "id": 84141, "nodeType": "ParameterList", "parameters": [], "src": "17070:0:124" },
            "scope": 84824,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 84589,
            "nodeType": "FunctionDefinition",
            "src": "20405:446:124",
            "nodes": [],
            "body": {
              "id": 84588,
              "nodeType": "Block",
              "src": "20541:310:124",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84526,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84513,
                        "src": "20561:4:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 84527,
                        "name": "baseAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84515,
                        "src": "20567:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 84523,
                        "name": "BASE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84105,
                        "src": "20551:4:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 84525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20556:4:124",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28757,
                      "src": "20551:9:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 84528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20551:27:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84529,
                  "nodeType": "ExpressionStatement",
                  "src": "20551:27:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84533,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84513,
                        "src": "20603:4:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 84530,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "20589:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20592:10:124",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46477,
                      "src": "20589:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20589:19:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84535,
                  "nodeType": "ExpressionStatement",
                  "src": "20589:19:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84541,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84114,
                            "src": "20639:5:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                              "typeString": "contract SLAYVaultV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_SLAYVaultV2_$27419", "typeString": "contract SLAYVaultV2" }
                          ],
                          "id": 84540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20631:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84539,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20631:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20631:14:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20652:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 84544,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20652:7:124",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)" }
                            ],
                            "id": 84543,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "20647:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 84546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20647:13:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 84547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "20661:3:124",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "20647:17:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 84536,
                        "name": "BASE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84105,
                        "src": "20618:4:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 84538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20623:7:124",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6204,
                      "src": "20618:12:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 84548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20618:47:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 84549,
                  "nodeType": "ExpressionStatement",
                  "src": "20618:47:124"
                },
                {
                  "expression": {
                    "id": 84556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84550,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84521,
                      "src": "20675:6:124",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 84553,
                          "name": "baseAssets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84515,
                          "src": "20698:10:124",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        {
                          "id": 84554,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84513,
                          "src": "20710:4:124",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                          { "typeIdentifier": "t_address", "typeString": "address" }
                        ],
                        "expression": {
                          "id": 84551,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84114,
                          "src": "20684:5:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                            "typeString": "contract SLAYVaultV2"
                          }
                        },
                        "id": 84552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20690:7:124",
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3226,
                        "src": "20684:13:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address) external returns (uint256)"
                        }
                      },
                      "id": 84555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20684:31:124",
                      "tryCall": false,
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "20675:40:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "id": 84557,
                  "nodeType": "ExpressionStatement",
                  "src": "20675:40:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84567,
                            "name": "pl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84117,
                            "src": "20764:2:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PositionLocker_$73835",
                              "typeString": "contract PositionLocker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PositionLocker_$73835",
                              "typeString": "contract PositionLocker"
                            }
                          ],
                          "id": 84566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20756:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84565,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20756:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20756:11:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20774:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 84570,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "20774:7:124",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)" }
                            ],
                            "id": 84569,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "20769:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 84572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20769:13:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 84573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "20783:3:124",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "20769:17:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 84561,
                                "name": "vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84114,
                                "src": "20740:5:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                                  "typeString": "contract SLAYVaultV2"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SLAYVaultV2_$27419",
                                  "typeString": "contract SLAYVaultV2"
                                }
                              ],
                              "id": 84560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "20732:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 84559,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "20732:7:124",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 84562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20732:14:124",
                            "tryCall": false,
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "id": 84558,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6553,
                          "src": "20726:5:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$6553_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 84563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20726:21:124",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$6553",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 84564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20748:7:124",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6204,
                      "src": "20726:29:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 84574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20726:61:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 84575,
                  "nodeType": "ExpressionStatement",
                  "src": "20726:61:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84579,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84521,
                        "src": "20806:6:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 84580,
                        "name": "strat",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84518,
                        "src": "20814:5:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                          "typeString": "StrategyId"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139", "typeString": "StrategyId" }
                      ],
                      "expression": {
                        "id": 84576,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84117,
                        "src": "20797:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 84578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20800:5:124",
                      "memberName": "optIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72750,
                      "src": "20797:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_userDefinedValueType$_StrategyId_$72139_$returns$__$",
                        "typeString": "function (uint256,StrategyId) external"
                      }
                    },
                    "id": 84581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20797:23:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84582,
                  "nodeType": "ExpressionStatement",
                  "src": "20797:23:124"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 84583,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "20830:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20833:9:124",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46521,
                      "src": "20830:12:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 84586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20830:14:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84587,
                  "nodeType": "ExpressionStatement",
                  "src": "20830:14:124"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_userDepositAndOptIn",
            "nameLocation": "20414:20:124",
            "parameters": {
              "id": 84519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84513,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "20443:4:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 84589,
                  "src": "20435:12:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 84512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20435:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84515,
                  "mutability": "mutable",
                  "name": "baseAssets",
                  "nameLocation": "20457:10:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 84589,
                  "src": "20449:18:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 84514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20449:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84518,
                  "mutability": "mutable",
                  "name": "strat",
                  "nameLocation": "20480:5:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 84589,
                  "src": "20469:16:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                    "typeString": "StrategyId"
                  },
                  "typeName": {
                    "id": 84517,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 84516,
                      "name": "StrategyId",
                      "nameLocations": ["20469:10:124"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72139,
                      "src": "20469:10:124"
                    },
                    "referencedDeclaration": 72139,
                    "src": "20469:10:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                      "typeString": "StrategyId"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20434:52:124"
            },
            "returnParameters": {
              "id": 84522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84521,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "20529:6:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 84589,
                  "src": "20521:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 84520,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20521:7:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20520:16:124"
            },
            "scope": 84824,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 84823,
            "nodeType": "FunctionDefinition",
            "src": "20938:3012:124",
            "nodes": [],
            "body": {
              "id": 84822,
              "nodeType": "Block",
              "src": "20977:2973:124",
              "nodes": [],
              "statements": [
                {
                  "assignments": [84593],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84593,
                      "mutability": "mutable",
                      "name": "depositAmt",
                      "nameLocation": "21033:10:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84822,
                      "src": "21025:18:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 84592,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21025:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84595,
                  "initialValue": {
                    "hexValue": "315f3030306538",
                    "id": 84594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "21046:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000_by_1",
                      "typeString": "int_const 100000000000"
                    },
                    "value": "1_000e8"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21025:28:124"
                },
                {
                  "assignments": [84597],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84597,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "21115:6:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84822,
                      "src": "21107:14:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 84596,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21107:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84603,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 84599,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84102,
                        "src": "21145:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 84600,
                        "name": "depositAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84593,
                        "src": "21152:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 84601,
                        "name": "STRAT_BORROW_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84138,
                        "src": "21164:15:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                          "typeString": "StrategyId"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139", "typeString": "StrategyId" }
                      ],
                      "id": 84598,
                      "name": "_userDepositAndOptIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84589,
                      "src": "21124:20:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_userDefinedValueType$_StrategyId_$72139_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,StrategyId) returns (uint256)"
                      }
                    },
                    "id": 84602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21124:56:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21107:73:124"
                },
                {
                  "assignments": [84605],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84605,
                      "mutability": "mutable",
                      "name": "reqShares",
                      "nameLocation": "21256:9:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84822,
                      "src": "21248:17:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 84604,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21248:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84609,
                  "initialValue": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 84608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 84606,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84597,
                      "src": "21268:6:124",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 84607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21277:1:124",
                      "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" },
                      "value": "2"
                    },
                    "src": "21268:10:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21248:30:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84613,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84097,
                        "src": "21302:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 84610,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "21288:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21291:10:124",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46477,
                      "src": "21288:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21288:23:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84615,
                  "nodeType": "ExpressionStatement",
                  "src": "21288:23:124"
                },
                {
                  "assignments": [84617],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84617,
                      "mutability": "mutable",
                      "name": "reqId",
                      "nameLocation": "21329:5:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84822,
                      "src": "21321:13:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 84616,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21321:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84624,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 84620,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84102,
                        "src": "21351:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 84621,
                        "name": "reqShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84605,
                        "src": "21358:9:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 84622,
                        "name": "STRAT_BORROW_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84138,
                        "src": "21369:15:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                          "typeString": "StrategyId"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139", "typeString": "StrategyId" }
                      ],
                      "expression": {
                        "id": 84618,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84117,
                        "src": "21337:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 84619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21340:10:124",
                      "memberName": "requestFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73306,
                      "src": "21337:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_userDefinedValueType$_StrategyId_$72139_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,StrategyId) external returns (uint256)"
                      }
                    },
                    "id": 84623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21337:48:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21321:64:124"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 84625,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "21395:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21398:9:124",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46521,
                      "src": "21395:12:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 84628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21395:14:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84629,
                  "nodeType": "ExpressionStatement",
                  "src": "21395:14:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "37",
                        "id": 84631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21425:6:124",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_604800_by_1",
                          "typeString": "int_const 604800"
                        },
                        "value": "7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_rational_604800_by_1", "typeString": "int_const 604800" }
                      ],
                      "id": 84630,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34809,
                      "src": "21420:4:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 84632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21420:12:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84633,
                  "nodeType": "ExpressionStatement",
                  "src": "21420:12:124"
                },
                {
                  "assignments": [84635],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84635,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "21653:6:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84822,
                      "src": "21640:19:124",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" },
                      "typeName": {
                        "id": 84634,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "21640:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84655,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "35303030",
                            "id": 84640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21680:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5000_by_1",
                              "typeString": "int_const 5000"
                            },
                            "value": "5000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_rational_5000_by_1", "typeString": "int_const 5000" }
                          ],
                          "id": 84639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21673:6:124",
                          "typeDescriptions": { "typeIdentifier": "t_type$_t_uint16_$", "typeString": "type(uint16)" },
                          "typeName": {
                            "id": 84638,
                            "name": "uint16",
                            "nodeType": "ElementaryTypeName",
                            "src": "21673:6:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21673:12:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint16", "typeString": "uint16" }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 84644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21693:2:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 84643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21687:5:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 84642,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "21687:5:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21687:9:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 84648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21704:2:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 84647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21698:5:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 84646,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "21698:5:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21698:9:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 84652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21717:1:124",
                            "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }],
                          "id": 84651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21709:7:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 84650,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "21709:7:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21709:10:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint16", "typeString": "uint16" },
                        { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" },
                        { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 84636,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "21662:3:124",
                        "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" }
                      },
                      "id": 84637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "21666:6:124",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "21662:10:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 84654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21662:58:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21640:80:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84659,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84097,
                        "src": "21739:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 84656,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "21730:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21733:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "21730:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21730:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84661,
                  "nodeType": "ExpressionStatement",
                  "src": "21730:18:124"
                },
                {
                  "assignments": [84663],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84663,
                      "mutability": "mutable",
                      "name": "claimedBase",
                      "nameLocation": "21766:11:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84822,
                      "src": "21758:19:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 84662,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21758:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84669,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 84666,
                        "name": "reqId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84617,
                        "src": "21791:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 84667,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84635,
                        "src": "21798:6:124",
                        "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                      ],
                      "expression": {
                        "id": 84664,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84117,
                        "src": "21780:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 84665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21783:7:124",
                      "memberName": "claimTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73433,
                      "src": "21780:10:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes memory) external returns (uint256)"
                      }
                    },
                    "id": 84668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21780:25:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21758:47:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84671,
                        "name": "claimedBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84663,
                        "src": "21919:11:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "30",
                        "id": 84672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21932:1:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        "value": "0"
                      },
                      {
                        "hexValue": "636c61696d65642062617365203e2030",
                        "id": 84673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21935:18:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2bc828285b122b96562f4ff0ae7061e214ce6cb383f5b3d8239cda026e127ce",
                          "typeString": "literal_string \"claimed base > 0\""
                        },
                        "value": "claimed base > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        {
                          "typeIdentifier": "t_stringliteral_e2bc828285b122b96562f4ff0ae7061e214ce6cb383f5b3d8239cda026e127ce",
                          "typeString": "literal_string \"claimed base > 0\""
                        }
                      ],
                      "id": 84670,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [30712, 30730, 30784, 30802],
                      "referencedDeclaration": 30730,
                      "src": "21910:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 84674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21910:44:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84675,
                  "nodeType": "ExpressionStatement",
                  "src": "21910:44:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 84681,
                                "name": "BASE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84105,
                                "src": "22069:4:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$28758",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                              ],
                              "id": 84680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22061:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 84679,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22061:7:124",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 84682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22061:13:124",
                            "tryCall": false,
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 84677,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84123,
                            "src": "22035:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowVenueAdapter_$84083",
                              "typeString": "contract MockBorrowVenueAdapter"
                            }
                          },
                          "id": 84678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "22043:17:124",
                          "memberName": "collateralBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83962,
                          "src": "22035:25:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 84683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22035:40:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 84684,
                        "name": "claimedBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84663,
                        "src": "22077:11:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "636f6c6c61746572616c2061742076656e7565",
                        "id": 84685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22090:21:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33e0bf6d13520453343bc5037f277c52c38b8035aeae348790628e82fda1c84c",
                          "typeString": "literal_string \"collateral at venue\""
                        },
                        "value": "collateral at venue"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_33e0bf6d13520453343bc5037f277c52c38b8035aeae348790628e82fda1c84c",
                          "typeString": "literal_string \"collateral at venue\""
                        }
                      ],
                      "id": 84676,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29412,
                      "src": "22026:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 84686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22026:86:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84687,
                  "nodeType": "ExpressionStatement",
                  "src": "22026:86:124"
                },
                {
                  "assignments": [84689],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84689,
                      "mutability": "mutable",
                      "name": "entitlement",
                      "nameLocation": "22494:11:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84822,
                      "src": "22486:19:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 84688,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22486:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84694,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 84692,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84102,
                        "src": "22526:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 84690,
                        "name": "debtConn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84126,
                        "src": "22508:8:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                          "typeString": "contract ExternalVaultConnector"
                        }
                      },
                      "id": 84691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22517:8:124",
                      "memberName": "assetsOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71969,
                      "src": "22508:17:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 84693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22508:24:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22486:46:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84696,
                        "name": "entitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84689,
                        "src": "22551:11:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "30",
                        "id": 84697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22564:1:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        "value": "0"
                      },
                      {
                        "hexValue": "75736572206465627420656e7469746c656d656e74203e2030",
                        "id": 84698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22567:27:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a7200ce656eabfbd03398ad36396a0df67ca6857734d266eb43ddc510fb614a",
                          "typeString": "literal_string \"user debt entitlement > 0\""
                        },
                        "value": "user debt entitlement > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        {
                          "typeIdentifier": "t_stringliteral_6a7200ce656eabfbd03398ad36396a0df67ca6857734d266eb43ddc510fb614a",
                          "typeString": "literal_string \"user debt entitlement > 0\""
                        }
                      ],
                      "id": 84695,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [30712, 30730, 30784, 30802],
                      "referencedDeclaration": 30730,
                      "src": "22542:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 84699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22542:53:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84700,
                  "nodeType": "ExpressionStatement",
                  "src": "22542:53:124"
                },
                {
                  "assignments": [84702],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84702,
                      "mutability": "mutable",
                      "name": "connectorMinOut",
                      "nameLocation": "22734:15:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84822,
                      "src": "22726:23:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 84701,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22726:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84704,
                  "initialValue": {
                    "id": 84703,
                    "name": "entitlement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 84689,
                    "src": "22752:11:124",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22726:37:124"
                },
                {
                  "assignments": [84706],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84706,
                      "mutability": "mutable",
                      "name": "minCollateralOut",
                      "nameLocation": "22815:16:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84822,
                      "src": "22807:24:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 84705,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22807:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84708,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 84707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "22834:1:124",
                    "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22807:28:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84712,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84097,
                        "src": "22914:8:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 84709,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "22905:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22908:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "22905:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22905:18:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84714,
                  "nodeType": "ExpressionStatement",
                  "src": "22905:18:124"
                },
                {
                  "assignments": [84716, 84718, 84720],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84716,
                      "mutability": "mutable",
                      "name": "baseOut",
                      "nameLocation": "22942:7:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84822,
                      "src": "22934:15:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 84715,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22934:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 84718,
                      "mutability": "mutable",
                      "name": "repaidDebt",
                      "nameLocation": "22959:10:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84822,
                      "src": "22951:18:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 84717,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22951:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 84720,
                      "mutability": "mutable",
                      "name": "redeemedDebt",
                      "nameLocation": "22979:12:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84822,
                      "src": "22971:20:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 84719,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22971:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84737,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 84723,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84102,
                        "src": "23023:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 84724,
                        "name": "STRAT_BORROW",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84131,
                        "src": "23030:12:124",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "23049:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 84726,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "23049:7:124",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)" }
                            ],
                            "id": 84725,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "23044:4:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 84728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23044:13:124",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 84729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "23058:3:124",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "23044:17:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 84730,
                        "name": "minCollateralOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84706,
                        "src": "23063:16:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 84733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23087:2:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 84732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23081:5:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 84731,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "23081:5:124",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23081:9:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                      },
                      {
                        "id": 84735,
                        "name": "connectorMinOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84702,
                        "src": "23092:15:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 84721,
                        "name": "cg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84120,
                        "src": "23007:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConversionGateway_$71634",
                          "typeString": "contract ConversionGateway"
                        }
                      },
                      "id": 84722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23010:12:124",
                      "memberName": "unwindBorrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71241,
                      "src": "23007:15:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,bytes32,uint256,uint256,bytes memory,uint256) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 84736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23007:101:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22933:175:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84741,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84102,
                            "src": "23146:5:124",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 84739,
                            "name": "debtConn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84126,
                            "src": "23128:8:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ExternalVaultConnector_$72007",
                              "typeString": "contract ExternalVaultConnector"
                            }
                          },
                          "id": 84740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "23137:8:124",
                          "memberName": "assetsOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 71969,
                          "src": "23128:17:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 84742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23128:24:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "30",
                        "id": 84743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23154:1:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        "value": "0"
                      },
                      {
                        "hexValue": "656e7469746c656d656e7420636c6561726564",
                        "id": 84744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23157:21:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e39ab97e2dae9caf31c9cee1cbabfbaafe64e5d6c85fe91d4cf5c5da52eeeb8b",
                          "typeString": "literal_string \"entitlement cleared\""
                        },
                        "value": "entitlement cleared"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        {
                          "typeIdentifier": "t_stringliteral_e39ab97e2dae9caf31c9cee1cbabfbaafe64e5d6c85fe91d4cf5c5da52eeeb8b",
                          "typeString": "literal_string \"entitlement cleared\""
                        }
                      ],
                      "id": 84738,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29412,
                      "src": "23119:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 84745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23119:60:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84746,
                  "nodeType": "ExpressionStatement",
                  "src": "23119:60:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84748,
                        "name": "repaidDebt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84718,
                        "src": "23198:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "30",
                        "id": 84749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23210:1:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        "value": "0"
                      },
                      {
                        "hexValue": "726570616964203e2030",
                        "id": 84750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23213:12:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da887bba3b1dd9cb04e7bdf41a5b564af621a5c6ce7c0120d07716052e26d606",
                          "typeString": "literal_string \"repaid > 0\""
                        },
                        "value": "repaid > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        {
                          "typeIdentifier": "t_stringliteral_da887bba3b1dd9cb04e7bdf41a5b564af621a5c6ce7c0120d07716052e26d606",
                          "typeString": "literal_string \"repaid > 0\""
                        }
                      ],
                      "id": 84747,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [30712, 30730, 30784, 30802],
                      "referencedDeclaration": 30730,
                      "src": "23189:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 84751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23189:37:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84752,
                  "nodeType": "ExpressionStatement",
                  "src": "23189:37:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 84758,
                                "name": "DEBT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84108,
                                "src": "23273:4:124",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$28758",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                              ],
                              "id": 84757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "23265:7:124",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 84756,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "23265:7:124",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 84759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "23265:13:124",
                            "tryCall": false,
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 84754,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84123,
                            "src": "23245:7:124",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowVenueAdapter_$84083",
                              "typeString": "contract MockBorrowVenueAdapter"
                            }
                          },
                          "id": 84755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "23253:11:124",
                          "memberName": "debtBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 84061,
                          "src": "23245:19:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 84760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23245:34:124",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "30",
                        "id": 84761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23281:1:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        "value": "0"
                      },
                      {
                        "hexValue": "76656e7565206465627420636c6561726564",
                        "id": 84762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23284:20:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1794bd1db750962bcaa6775f93520cc18ca4ac02be6e2da72f83d4f925004580",
                          "typeString": "literal_string \"venue debt cleared\""
                        },
                        "value": "venue debt cleared"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        {
                          "typeIdentifier": "t_stringliteral_1794bd1db750962bcaa6775f93520cc18ca4ac02be6e2da72f83d4f925004580",
                          "typeString": "literal_string \"venue debt cleared\""
                        }
                      ],
                      "id": 84753,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29412,
                      "src": "23236:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 84763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23236:69:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84764,
                  "nodeType": "ExpressionStatement",
                  "src": "23236:69:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84766,
                        "name": "baseOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84716,
                        "src": "23324:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "30",
                        "id": 84767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23333:1:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        "value": "0"
                      },
                      {
                        "hexValue": "77697468647265772062617365",
                        "id": 84768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23336:15:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58e2e8cf064993f9feeb224f17e1c68cbd06185073216757c46a8a12418dfc59",
                          "typeString": "literal_string \"withdrew base\""
                        },
                        "value": "withdrew base"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        {
                          "typeIdentifier": "t_stringliteral_58e2e8cf064993f9feeb224f17e1c68cbd06185073216757c46a8a12418dfc59",
                          "typeString": "literal_string \"withdrew base\""
                        }
                      ],
                      "id": 84765,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [30712, 30730, 30784, 30802],
                      "referencedDeclaration": 30730,
                      "src": "23315:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 84769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23315:37:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84770,
                  "nodeType": "ExpressionStatement",
                  "src": "23315:37:124"
                },
                {
                  "assignments": [84772],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84772,
                      "mutability": "mutable",
                      "name": "unlockable",
                      "nameLocation": "23561:10:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84822,
                      "src": "23553:18:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 84771,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23553:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84778,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 84775,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84102,
                        "src": "23588:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 84776,
                        "name": "STRAT_BORROW_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84138,
                        "src": "23595:15:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                          "typeString": "StrategyId"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139", "typeString": "StrategyId" }
                      ],
                      "expression": {
                        "id": 84773,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84117,
                        "src": "23574:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 84774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23577:10:124",
                      "memberName": "unlockable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73751,
                      "src": "23574:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_userDefinedValueType$_StrategyId_$72139_$returns$_t_uint256_$",
                        "typeString": "function (address,StrategyId) view external returns (uint256)"
                      }
                    },
                    "id": 84777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23574:37:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23553:58:124"
                },
                {
                  "assignments": [84780, null, null, null],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84780,
                      "mutability": "mutable",
                      "name": "totalShares2",
                      "nameLocation": "23630:12:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84822,
                      "src": "23622:20:124",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 84779,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23622:7:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 84785,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 84783,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84102,
                        "src": "23663:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 84781,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84117,
                        "src": "23649:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 84782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23652:10:124",
                      "memberName": "userTotals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 73780,
                      "src": "23649:13:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 84784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23649:20:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23621:48:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84787,
                        "name": "unlockable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84772,
                        "src": "23688:10:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 84788,
                        "name": "totalShares2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84780,
                        "src": "23700:12:124",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "616c6c2073686172657320756e6c6f636b61626c652061667465722066756c6c20756e77696e64",
                        "id": 84789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23714:41:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e035f9548643decd9c9e94da858e4d88d59b33229e1ed9ee0ea0853a68e2bbc6",
                          "typeString": "literal_string \"all shares unlockable after full unwind\""
                        },
                        "value": "all shares unlockable after full unwind"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_e035f9548643decd9c9e94da858e4d88d59b33229e1ed9ee0ea0853a68e2bbc6",
                          "typeString": "literal_string \"all shares unlockable after full unwind\""
                        }
                      ],
                      "id": 84786,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29412,
                      "src": "23679:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 84790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23679:77:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84791,
                  "nodeType": "ExpressionStatement",
                  "src": "23679:77:124"
                },
                {
                  "assignments": [84796],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84796,
                      "mutability": "mutable",
                      "name": "arr",
                      "nameLocation": "23831:3:124",
                      "nodeType": "VariableDeclaration",
                      "scope": 84822,
                      "src": "23811:23:124",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr",
                        "typeString": "StrategyId[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 84794,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 84793,
                            "name": "StrategyId",
                            "nameLocations": ["23811:10:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 72139,
                            "src": "23811:10:124"
                          },
                          "referencedDeclaration": 72139,
                          "src": "23811:10:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                            "typeString": "StrategyId"
                          }
                        },
                        "id": 84795,
                        "nodeType": "ArrayTypeName",
                        "src": "23811:12:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_storage_ptr",
                          "typeString": "StrategyId[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84803,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 84801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23854:1:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }],
                      "id": 84800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "23837:16:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (StrategyId[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 84798,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 84797,
                            "name": "StrategyId",
                            "nameLocations": ["23841:10:124"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 72139,
                            "src": "23841:10:124"
                          },
                          "referencedDeclaration": 72139,
                          "src": "23841:10:124",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                            "typeString": "StrategyId"
                          }
                        },
                        "id": 84799,
                        "nodeType": "ArrayTypeName",
                        "src": "23841:12:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_storage_ptr",
                          "typeString": "StrategyId[]"
                        }
                      }
                    },
                    "id": 84802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23837:19:124",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr",
                      "typeString": "StrategyId[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23811:45:124"
                },
                {
                  "expression": {
                    "id": 84808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 84804,
                        "name": "arr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84796,
                        "src": "23866:3:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr",
                          "typeString": "StrategyId[] memory"
                        }
                      },
                      "id": 84806,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 84805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23870:1:124",
                        "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23866:6:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                        "typeString": "StrategyId"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 84807,
                      "name": "STRAT_BORROW_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84138,
                      "src": "23875:15:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                        "typeString": "StrategyId"
                      }
                    },
                    "src": "23866:24:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_StrategyId_$72139",
                      "typeString": "StrategyId"
                    }
                  },
                  "id": 84809,
                  "nodeType": "ExpressionStatement",
                  "src": "23866:24:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84813,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84102,
                        "src": "23910:5:124",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 84810,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "23901:2:124",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 84812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23904:5:124",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "23901:8:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23901:15:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84815,
                  "nodeType": "ExpressionStatement",
                  "src": "23901:15:124"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84819,
                        "name": "arr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84796,
                        "src": "23939:3:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr",
                          "typeString": "StrategyId[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr",
                          "typeString": "StrategyId[] memory"
                        }
                      ],
                      "expression": {
                        "id": 84816,
                        "name": "pl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84117,
                        "src": "23926:2:124",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PositionLocker_$73835",
                          "typeString": "contract PositionLocker"
                        }
                      },
                      "id": 84818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23929:9:124",
                      "memberName": "optOutAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72879,
                      "src": "23926:12:124",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_userDefinedValueType$_StrategyId_$72139_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (StrategyId[] memory) external"
                      }
                    },
                    "id": 84820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23926:17:124",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 84821,
                  "nodeType": "ExpressionStatement",
                  "src": "23926:17:124"
                }
              ]
            },
            "functionSelector": "1b985049",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Borrow_FullFlow",
            "nameLocation": "20947:20:124",
            "parameters": { "id": 84590, "nodeType": "ParameterList", "parameters": [], "src": "20967:2:124" },
            "returnParameters": { "id": 84591, "nodeType": "ParameterList", "parameters": [], "src": "20977:0:124" },
            "scope": 84824,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 84084,
              "name": "Test",
              "nameLocations": ["16253:4:124"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41977,
              "src": "16253:4:124"
            },
            "id": 84085,
            "nodeType": "InheritanceSpecifier",
            "src": "16253:4:124"
          },
          {
            "baseName": {
              "id": 84086,
              "name": "TestSuiteV2",
              "nameLocations": ["16259:11:124"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29031,
              "src": "16259:11:124"
            },
            "id": 84087,
            "nodeType": "InheritanceSpecifier",
            "src": "16259:11:124"
          }
        ],
        "canonicalName": "BorrowFlowIntegrationTest",
        "contractDependencies": [
          5368, 5854, 23094, 24613, 25104, 26255, 26472, 27419, 28758, 71634, 72007, 73835, 82685, 82718, 84083
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [84824, 29031, 41977, 41923, 35960, 35559, 34764, 32674, 31712, 29082, 29079],
        "name": "BorrowFlowIntegrationTest",
        "nameLocation": "16224:25:124",
        "scope": 84825,
        "usedErrors": [],
        "usedEvents": [
          29117, 29121, 29125, 29129, 29133, 29137, 29141, 29145, 29151, 29157, 29165, 29173, 29179, 29185, 29191,
          29197, 29202, 29207, 29212, 29219, 29226, 29233
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 124
}
