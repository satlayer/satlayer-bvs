{
  "abi": [
    {
      "type": "function",
      "name": "IS_TEST",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "USDC",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract MockERC20" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "WBTC",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract MockERC20" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "adapter",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "contract MockBorrowAdapter" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "cg",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "excludeArtifacts",
      "inputs": [],
      "outputs": [{ "name": "excludedArtifacts_", "type": "string[]", "internalType": "string[]" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "excludeContracts",
      "inputs": [],
      "outputs": [{ "name": "excludedContracts_", "type": "address[]", "internalType": "address[]" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "excludeSelectors",
      "inputs": [],
      "outputs": [
        {
          "name": "excludedSelectors_",
          "type": "tuple[]",
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "components": [
            { "name": "addr", "type": "address", "internalType": "address" },
            { "name": "selectors", "type": "bytes4[]", "internalType": "bytes4[]" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "excludeSenders",
      "inputs": [],
      "outputs": [{ "name": "excludedSenders_", "type": "address[]", "internalType": "address[]" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "failed",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "gov",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "rando",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    { "type": "function", "name": "setUp", "inputs": [], "outputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "targetArtifactSelectors",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]",
          "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
          "components": [
            { "name": "artifact", "type": "string", "internalType": "string" },
            { "name": "selectors", "type": "bytes4[]", "internalType": "bytes4[]" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetArtifacts",
      "inputs": [],
      "outputs": [{ "name": "targetedArtifacts_", "type": "string[]", "internalType": "string[]" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetContracts",
      "inputs": [],
      "outputs": [{ "name": "targetedContracts_", "type": "address[]", "internalType": "address[]" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetInterfaces",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedInterfaces_",
          "type": "tuple[]",
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "components": [
            { "name": "addr", "type": "address", "internalType": "address" },
            { "name": "artifacts", "type": "string[]", "internalType": "string[]" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetSelectors",
      "inputs": [],
      "outputs": [
        {
          "name": "targetedSelectors_",
          "type": "tuple[]",
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "components": [
            { "name": "addr", "type": "address", "internalType": "address" },
            { "name": "selectors", "type": "bytes4[]", "internalType": "bytes4[]" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "targetSenders",
      "inputs": [],
      "outputs": [{ "name": "targetedSenders_", "type": "address[]", "internalType": "address[]" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "test_borrow_and_repay_happy_path",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "test_onlyCG_enforced",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "test_pause_blocks_calls",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "test_repay_requires_allowance_and_balance",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    { "type": "function", "name": "test_roles_are_set", "inputs": [], "outputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "test_supply_and_withdraw_happy_path",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "test_views_after_activity",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "test_withdraw_reverts_if_insufficient",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Borrowed",
      "inputs": [
        { "name": "debtAsset", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Repaid",
      "inputs": [
        { "name": "debtAsset", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Supplied",
      "inputs": [
        { "name": "collateral", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Withdrawn",
      "inputs": [
        { "name": "collateral", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log",
      "inputs": [{ "name": "", "type": "string", "indexed": false, "internalType": "string" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_address",
      "inputs": [{ "name": "", "type": "address", "indexed": false, "internalType": "address" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_array",
      "inputs": [{ "name": "val", "type": "uint256[]", "indexed": false, "internalType": "uint256[]" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_array",
      "inputs": [{ "name": "val", "type": "int256[]", "indexed": false, "internalType": "int256[]" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_array",
      "inputs": [{ "name": "val", "type": "address[]", "indexed": false, "internalType": "address[]" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_bytes",
      "inputs": [{ "name": "", "type": "bytes", "indexed": false, "internalType": "bytes" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_bytes32",
      "inputs": [{ "name": "", "type": "bytes32", "indexed": false, "internalType": "bytes32" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_int",
      "inputs": [{ "name": "", "type": "int256", "indexed": false, "internalType": "int256" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_address",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "address", "indexed": false, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_array",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "uint256[]", "indexed": false, "internalType": "uint256[]" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_array",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "int256[]", "indexed": false, "internalType": "int256[]" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_array",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "address[]", "indexed": false, "internalType": "address[]" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_bytes",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "bytes", "indexed": false, "internalType": "bytes" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_bytes32",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "bytes32", "indexed": false, "internalType": "bytes32" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_decimal_int",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "int256", "indexed": false, "internalType": "int256" },
        { "name": "decimals", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_decimal_uint",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "decimals", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_int",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "int256", "indexed": false, "internalType": "int256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_string",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "string", "indexed": false, "internalType": "string" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_named_uint",
      "inputs": [
        { "name": "key", "type": "string", "indexed": false, "internalType": "string" },
        { "name": "val", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_string",
      "inputs": [{ "name": "", "type": "string", "indexed": false, "internalType": "string" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "log_uint",
      "inputs": [{ "name": "", "type": "uint256", "indexed": false, "internalType": "uint256" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "logs",
      "inputs": [{ "name": "", "type": "bytes", "indexed": false, "internalType": "bytes" }],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "0x600c8054600160ff199182168117909255601f8054909116909117905560c0604052600360809081526233b7bb60e91b60a0526200003d906200010e565b601f80546001600160a01b039290921661010002610100600160a81b0319909216919091179055604080518082019091526002815261636760f01b602082015262000088906200010e565b60205f6101000a8154816001600160a01b0302191690836001600160a01b03160217905550620000db6040518060400160405280600581526020016472616e646f60d81b8152506200010e60201b60201c565b602180546001600160a01b0319166001600160a01b039290921691909117905534801562000107575f80fd5b50620002eb565b5f6200011a8262000121565b5092915050565b5f80826040516020016200013691906200025c565b60408051808303601f190181529082905280516020909101206001625e79b760e01b03198252600482018190529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa158015620001a0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620001c6919062000279565b6040516318caf8e360e31b8152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890620002049085908790600401620002a8565b5f604051808303815f87803b1580156200021c575f80fd5b505af11580156200022f573d5f803e3d5ffd5b50505050915091565b5f5b83811015620002545781810151838201526020016200023a565b50505f910152565b5f82516200026f81846020870162000238565b9190910192915050565b5f602082840312156200028a575f80fd5b81516001600160a01b0381168114620002a1575f80fd5b9392505050565b60018060a01b0383168152604060208201525f8251806040840152620002d681606085016020870162000238565b601f01601f1916919091016060019392505050565b614f6e80620002f95f395ff3fe608060405234801562000010575f80fd5b5060043610620001c4575f3560e01c80637e988aed1162000107578063b215a879116200009f578063d09d67d11162000077578063d09d67d1146200036a578063dbde82171462000374578063e20c9f71146200037e578063fa7626d41462000388575f80fd5b8063b215a8791462000331578063b5508aa91462000345578063ba414fa6146200034f575f80fd5b8063916a17c611620000df578063916a17c614620002f05780639c63088e1462000309578063a3b13e8a146200031d578063b0464fdc1462000327575f80fd5b80637e988aed14620002b957806385226c8114620002c357806389a3027114620002dc575f80fd5b80632ade3880116200017b5780634dede3de11620001535780634dede3de14620002785780635f81ba61146200028c57806364601ec4146200029657806366d9a9a014620002a0575f80fd5b80632ade3880146200024b5780633e5e3c2314620002645780633f7286f4146200026e575f80fd5b806303eadcfc14620001c85780630a9254e414620001f95780630d362f8d146200020557806312d43a51146200020f5780631ed7831c146200022857806325c7f70b1462000241575b5f80fd5b602454620001dc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6200020362000396565b005b6200020362000616565b601f54620001dc9061010090046001600160a01b031681565b6200023262000f01565b604051620001f0919062002f85565b6200020362000f63565b62000255620011f4565b604051620001f0919062003018565b620002326200133c565b620002326200139c565b602254620001dc906001600160a01b031681565b62000203620013fc565b6200020362001b1d565b620002aa62001ed6565b604051620001f0919062003121565b6200020362002046565b620002cd62002275565b604051620001f09190620031ac565b602354620001dc906001600160a01b031681565b620002fa6200234a565b604051620001f0919062003212565b602154620001dc906001600160a01b031681565b620002036200242f565b620002fa620025a0565b602054620001dc906001600160a01b031681565b620002cd62002685565b620003596200275a565b6040519015158152602001620001f0565b620002036200281b565b6200020362002a76565b6200023262002dfe565b601f54620003599060ff1681565b6008604051620003a69062002f69565b620003b2919062003285565b604051809103905ff080158015620003cc573d5f803e3d5ffd5b50602280546001600160a01b0319166001600160a01b0392909216919091179055604051600690620003fe9062002f69565b6200040a9190620032dc565b604051809103905ff08015801562000424573d5f803e3d5ffd5b50602380546001600160a01b0319166001600160a01b03928316179055601f546020546040516101009092048316921690620004609062002f77565b6001600160a01b03928316815291166020820152604001604051809103905ff08015801562000491573d5f803e3d5ffd5b50602480546001600160a01b0319166001600160a01b039283161790556022546040516318caf8e360e31b81525f8051602062004f198339815191529263c657c71892620004e5929116906004016200331f565b5f604051808303815f87803b158015620004fd575f80fd5b505af115801562000510573d5f803e3d5ffd5b50506023546040516318caf8e360e31b81525f8051602062004f19833981519152935063c657c718925062000552916001600160a01b03169060040162003354565b5f604051808303815f87803b1580156200056a575f80fd5b505af11580156200057d573d5f803e3d5ffd5b505060248054604080516318caf8e360e31b81526001600160a01b03909216600483015291810191909152601160448201527026b7b1b5a137b93937bba0b230b83a32b960791b60648201525f8051602062004f19833981519152925063c657c71891506084015b5f604051808303815f87803b158015620005fd575f80fd5b505af115801562000610573d5f803e3d5ffd5b50505050565b6024546040516381bad6f360e01b815264e8d4a51000915f8051602062004f19833981519152916381bad6f39162000666916001915f91829184916001600160a01b039091169060040162003387565b5f604051808303815f87803b1580156200067e575f80fd5b505af115801562000691573d5f803e3d5ffd5b50506023546040518481526001600160a01b0390911692507fac59582e5396aca512fa873a2047e7f4c80f8f55d4a06cb34a78a0187f62719f915060200160405180910390a260205460405163ca669fa760e01b81526001600160a01b0390911660048201525f8051602062004f198339815191529063ca669fa7906024015f604051808303815f87803b15801562000728575f80fd5b505af11580156200073b573d5f803e3d5ffd5b5050602454602354604051636e2246a760e01b81526001600160a01b039283169450636e2246a793506200077892909116908590600401620033b7565b5f604051808303815f87803b15801562000790575f80fd5b505af1158015620007a3573d5f803e3d5ffd5b50506023546020546040516370a0823160e01b81526001600160a01b0391821660048201526200085a9450911691506370a0823190602401602060405180830381865afa158015620007f7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200081d9190620033de565b826040518060400160405280601d81526020017f63616c6c657220726563656976656420626f72726f776564205553444300000081525062002e5e565b602480546023546040516311005b0760e01b81526001600160a01b039182166004820152620009069391909216916311005b079101602060405180830381865afa158015620008ab573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620008d19190620033de565b82604051806040016040528060158152602001741919589d081b195919d95c881a5b98dc99585cd959605a1b81525062002e5e565b5f620009146002836200340a565b6020546040516303223eab60e11b81526001600160a01b0390911660048201529091505f8051602062004f19833981519152906306447d56906024015f604051808303815f87803b15801562000968575f80fd5b505af11580156200097b573d5f803e3d5ffd5b505060235460245460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620009b992909116905f19906004016200342a565b6020604051808303815f875af1158015620009d6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620009fc919062003443565b506024546040516381bad6f360e01b81525f8051602062004f19833981519152916381bad6f39162000a44916001915f91829184916001600160a01b03169060040162003387565b5f604051808303815f87803b15801562000a5c575f80fd5b505af115801562000a6f573d5f803e3d5ffd5b50506023546040518481526001600160a01b0390911692507f0516911bcc3a0a7412a44601057c0a0a1ec628bde049a84284bc428866534488915060200160405180910390a26024546023546040516343528c8f60e11b81525f926001600160a01b03908116926386a5191e9262000af092909116908690600401620033b7565b6020604051808303815f875af115801562000b0d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000b339190620033de565b90505f8051602062004f198339815191526001600160a01b03166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562000b7c575f80fd5b505af115801562000b8f573d5f803e3d5ffd5b5050505062000bcc8183604051806040016040528060148152602001731c995c185e481c995d1d5c9b9cc81858dd1d585b60621b81525062002e5e565b602480546023546040516311005b0760e01b81526001600160a01b03918216600482015262000c839391909216916311005b079101602060405180830381865afa15801562000c1d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000c439190620033de565b62000c4f848662003464565b604051806040016040528060158152602001741919589d081b195919d95c88191958dc99585cd959605a1b81525062002e5e565b6020546040516303223eab60e11b81526001600160a01b0390911660048201525f8051602062004f19833981519152906306447d56906024015f604051808303815f87803b15801562000cd4575f80fd5b505af115801562000ce7573d5f803e3d5ffd5b505050505f828462000cfa919062003464565b60235460245460405163095ea7b360e01b81529293506001600160a01b039182169263095ea7b39262000d359216905f19906004016200342a565b6020604051808303815f875af115801562000d52573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000d78919062003443565b506024546023546001600160a01b03918216916386a5191e911662000d9f84607b62003480565b6040518363ffffffff1660e01b815260040162000dbe929190620033b7565b6020604051808303815f875af115801562000ddb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000e019190620033de565b505f8051602062004f198339815191526001600160a01b03166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562000e49575f80fd5b505af115801562000e5c573d5f803e3d5ffd5b5050602480546023546040516311005b0760e01b81526001600160a01b039182166004820152620006109550911692506311005b079101602060405180830381865afa15801562000eaf573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000ed59190620033de565b5f6040518060400160405280600c81526020016b1919589d0818db19585c995960a21b81525062002e5e565b6060601680548060200260200160405190810160405280929190818152602001828054801562000f5957602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831162000f3a575b5050505050905090565b601f5460405163ca669fa760e01b81526101009091046001600160a01b031660048201525f8051602062004f198339815191529063ca669fa7906024015f604051808303815f87803b15801562000fb8575f80fd5b505af115801562000fcb573d5f803e3d5ffd5b5050602480546040516305b0e2cf60e21b8152600160048201526001600160a01b0390911693506316c38b3c9250015f604051808303815f87803b15801562001012575f80fd5b505af115801562001025573d5f803e3d5ffd5b505050505f8051602062004f198339815191526001600160a01b031663f48448146040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562001070575f80fd5b505af115801562001083573d5f803e3d5ffd5b505060205460405163ca669fa760e01b81526001600160a01b0390911660048201525f8051602062004f19833981519152925063ca669fa791506024015f604051808303815f87803b158015620010d8575f80fd5b505af1158015620010eb573d5f803e3d5ffd5b505060245460225460405163016f1aa360e41b81526001600160a01b0392831694506316f1aa309350620011299290911690600190600401620033b7565b5f604051808303815f87803b15801562001141575f80fd5b505af115801562001154573d5f803e3d5ffd5b5050601f5460405163ca669fa760e01b81526101009091046001600160a01b031660048201525f8051602062004f19833981519152925063ca669fa791506024015f604051808303815f87803b158015620011ad575f80fd5b505af1158015620011c0573d5f803e3d5ffd5b5050602480546040516305b0e2cf60e21b81525f60048201526001600160a01b0390911693506316c38b3c925001620005e5565b6060601e805480602002602001604051908101604052809291908181526020015f905b8282101562001333575f84815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156200131b578382905f5260205f20018054620012899062003496565b80601f0160208091040260200160405190810160405280929190818152602001828054620012b79062003496565b8015620013065780601f10620012dc5761010080835404028352916020019162001306565b820191905f5260205f20905b815481529060010190602001808311620012e857829003601f168201915b50505050508152602001906001019062001269565b50505050815250508152602001906001019062001217565b50505050905090565b6060601880548060200260200160405190810160405280929190818152602001828054801562000f5957602002820191905f5260205f209081546001600160a01b0316815260019091019060200180831162000f3a575050505050905090565b6060601780548060200260200160405190810160405280929190818152602001828054801562000f5957602002820191905f5260205f209081546001600160a01b0316815260019091019060200180831162000f3a575050505050905090565b6022546020546040516340c10f1960e01b8152633b9aca00926001600160a01b03908116926340c10f19926200143b929091169085906004016200342a565b5f604051808303815f87803b15801562001453575f80fd5b505af115801562001466573d5f803e3d5ffd5b50506020546040516303223eab60e11b81526001600160a01b0390911660048201525f8051602062004f1983398151915292506306447d5691506024015f604051808303815f87803b158015620014bb575f80fd5b505af1158015620014ce573d5f803e3d5ffd5b505060225460245460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b393506200150c92909116905f19906004016200342a565b6020604051808303815f875af115801562001529573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200154f919062003443565b506024546040516381bad6f360e01b81525f8051602062004f19833981519152916381bad6f39162001597916001915f91829184916001600160a01b03169060040162003387565b5f604051808303815f87803b158015620015af575f80fd5b505af1158015620015c2573d5f803e3d5ffd5b50506022546040518481526001600160a01b0390911692507f6473c9f7da8f23a3d810f05b3e8fb3945f0ad17deadcc09e302cdf5d58e48fe7915060200160405180910390a260245460225460405163016f1aa360e41b81526001600160a01b03928316926316f1aa309262001640929116908590600401620033b7565b5f604051808303815f87803b15801562001658575f80fd5b505af11580156200166b573d5f803e3d5ffd5b5050602254602480546040516370a0823160e01b81526001600160a01b039182166004820152620017219550921692506370a082319101602060405180830381865afa158015620016be573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620016e49190620033de565b826040518060400160405280601b81526020017f6164617074657220686f6c647320737570706c6965642057425443000000000081525062002e5e565b60248054602254604051630286fca160e61b81526001600160a01b039182166004820152620017c693919092169163a1bf28409101602060405180830381865afa15801562001772573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620017989190620033de565b826040518060400160405280600e81526020016d1b195919d95c881d5c19185d195960921b81525062002e5e565b5f620017d46002836200340a565b6024546040516381bad6f360e01b81529192505f8051602062004f19833981519152916381bad6f39162001820916001915f91829184916001600160a01b039091169060040162003387565b5f604051808303815f87803b15801562001838575f80fd5b505af11580156200184b573d5f803e3d5ffd5b50506022546040518481526001600160a01b0390911692507f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5915060200160405180910390a2602454602254604051636a987c6960e01b81525f926001600160a01b0390811692636a987c6992620018cc92909116908690600401620033b7565b6020604051808303815f875af1158015620018e9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200190f9190620033de565b90505f8051602062004f198339815191526001600160a01b03166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562001958575f80fd5b505af11580156200196b573d5f803e3d5ffd5b50505050620019b181836040518060400160405280601781526020017f77697468647261772072657475726e7320616d6f756e7400000000000000000081525062002e5e565b6022546020546040516370a0823160e01b81526001600160a01b03918216600482015262001a669291909116906370a0823190602401602060405180830381865afa15801562001a03573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001a299190620033de565b836040518060400160405280601e81526020017f63616c6c65722072656365697665642077697468647261776e2057425443000081525062002e5e565b60248054602254604051630286fca160e61b81526001600160a01b03918216600482015262001b1893919092169163a1bf28409101602060405180830381865afa15801562001ab7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001add9190620033de565b62001ae9848662003464565b6040518060400160405280601081526020016f1b195919d95c88191958dc99585cd95960821b81525062002e5e565b505050565b6023546020546040516340c10f1960e01b81526001600160a01b03928316926340c10f199262001b56929116906064906004016200342a565b5f604051808303815f87803b15801562001b6e575f80fd5b505af115801562001b81573d5f803e3d5ffd5b50506020546040516303223eab60e11b81526001600160a01b0390911660048201525f8051602062004f1983398151915292506306447d5691506024015f604051808303815f87803b15801562001bd6575f80fd5b505af115801562001be9573d5f803e3d5ffd5b5050602454602354604051636e2246a760e01b81526001600160a01b039283169450636e2246a7935062001c279290911690606490600401620033b7565b5f604051808303815f87803b15801562001c3f575f80fd5b505af115801562001c52573d5f803e3d5ffd5b50506023546020546040516370a0823160e01b81526001600160a01b0391821660048201529116925063a9059cbb915061dead9083906370a0823190602401602060405180830381865afa15801562001cad573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001cd39190620033de565b6040518363ffffffff1660e01b815260040162001cf29291906200342a565b6020604051808303815f875af115801562001d0f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001d35919062003443565b5060235460245460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262001d6f929116906064906004016200342a565b6020604051808303815f875af115801562001d8c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001db2919062003443565b505f8051602062004f198339815191526001600160a01b031663f48448146040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562001dfa575f80fd5b505af115801562001e0d573d5f803e3d5ffd5b50506024546023546040516343528c8f60e11b81526001600160a01b0392831694506386a5191e935062001e4b9290911690606490600401620033b7565b6020604051808303815f875af115801562001e68573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001e8e9190620033de565b505f8051602062004f198339815191526001600160a01b03166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b158015620005fd575f80fd5b6060601b805480602002602001604051908101604052809291908181526020015f905b8282101562001333578382905f5260205f2090600202016040518060400160405290815f8201805462001f2c9062003496565b80601f016020809104026020016040519081016040528092919081815260200182805462001f5a9062003496565b801562001fa95780601f1062001f7f5761010080835404028352916020019162001fa9565b820191905f5260205f20905b81548152906001019060200180831162001f8b57829003601f168201915b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156200202d57602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162001fee5790505b5050505050815250508152602001906001019062001ef9565b5f8051602062004f198339815191526001600160a01b031663f48448146040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156200208d575f80fd5b505af1158015620020a0573d5f803e3d5ffd5b505060215460405163ca669fa760e01b81526001600160a01b0390911660048201525f8051602062004f19833981519152925063ca669fa791506024015f604051808303815f87803b158015620020f5575f80fd5b505af115801562002108573d5f803e3d5ffd5b505060245460225460405163016f1aa360e41b81526001600160a01b0392831694506316f1aa309350620021469290911690600190600401620033b7565b5f604051808303815f87803b1580156200215e575f80fd5b505af115801562002171573d5f803e3d5ffd5b505050505f8051602062004f198339815191526001600160a01b031663f48448146040518163ffffffff1660e01b81526004015f604051808303815f87803b158015620021bc575f80fd5b505af1158015620021cf573d5f803e3d5ffd5b505060215460405163ca669fa760e01b81526001600160a01b0390911660048201525f8051602062004f19833981519152925063ca669fa791506024015f604051808303815f87803b15801562002224575f80fd5b505af115801562002237573d5f803e3d5ffd5b5050602454602354604051636e2246a760e01b81526001600160a01b039283169450636e2246a79350620005e59290911690600190600401620033b7565b6060601a805480602002602001604051908101604052809291908181526020015f905b8282101562001333578382905f5260205f20018054620022b89062003496565b80601f0160208091040260200160405190810160405280929190818152602001828054620022e69062003496565b8015620023355780601f106200230b5761010080835404028352916020019162002335565b820191905f5260205f20905b8154815290600101906020018083116200231757829003601f168201915b50505050508152602001906001019062002298565b6060601d805480602002602001604051908101604052809291908181526020015f905b8282101562001333575f8481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200241657602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620023d75790505b505050505081525050815260200190600101906200236d565b60205460405163ca669fa760e01b81526001600160a01b0390911660048201525f8051602062004f198339815191529063ca669fa7906024015f604051808303815f87803b15801562002480575f80fd5b505af115801562002493573d5f803e3d5ffd5b50506040805180820182526013815272125394d551919250d251539517d0d3d3131055606a1b6020820152905163f28dceb360e01b81525f8051602062004f19833981519152935063f28dceb39250620024f19190600401620034d0565b5f604051808303815f87803b15801562002509575f80fd5b505af11580156200251c573d5f803e3d5ffd5b5050602454602254604051636a987c6960e01b81526001600160a01b039283169450636a987c6993506200255a9290911690600190600401620033b7565b6020604051808303815f875af115801562002577573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200259d9190620033de565b50565b6060601c805480602002602001604051908101604052809291908181526020015f905b8282101562001333575f8481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200266c57602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200262d5790505b50505050508152505081526020019060010190620025c3565b60606019805480602002602001604051908101604052809291908181526020015f905b8282101562001333578382905f5260205f20018054620026c89062003496565b80601f0160208091040260200160405190810160405280929190818152602001828054620026f69062003496565b8015620027455780601f106200271b5761010080835404028352916020019162002745565b820191905f5260205f20905b8154815290600101906020018083116200272757829003601f168201915b505050505081526020019060010190620026a8565b6008545f9060ff161562002772575060085460ff1690565b604051630667f9d760e41b81525f905f8051602062004f198339815191529063667f9d7090620027d2907f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d906519985a5b195960d21b906004016200342a565b602060405180830381865afa158015620027ee573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620028149190620033de565b1415905090565b6024546040805163a515ace360e01b815290515f926001600160a01b03169163a515ace39160048083019260209291908290030181865afa15801562002863573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620028899190620033de565b90505f60245f9054906101000a90046001600160a01b03166001600160a01b03166307c7ac1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620028dd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620029039190620033de565b60248054601f54604051632474521560e21b8152600481018790526001600160a01b03610100909204821693810193909352929350620029bf9216906391d1485490604401602060405180830381865afa15801562002964573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200298a919062003443565b6040518060400160405280601681526020017533b7bb1036bab9ba103430bb32902927a622afa3a7ab60511b81525062002ec8565b60248054602054604051632474521560e21b8152600481018590526001600160a01b039182169381019390935262002a72929116906391d1485490604401602060405180830381865afa15801562002a19573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002a3f919062003443565b604051806040016040528060148152602001736367206d757374206861766520524f4c455f434760601b81525062002ec8565b5050565b6022546020546040516340c10f1960e01b81526001600160a01b03928316926340c10f199262002ab292911690631dcd6500906004016200342a565b5f604051808303815f87803b15801562002aca575f80fd5b505af115801562002add573d5f803e3d5ffd5b50506020546040516303223eab60e11b81526001600160a01b0390911660048201525f8051602062004f1983398151915292506306447d5691506024015f604051808303815f87803b15801562002b32575f80fd5b505af115801562002b45573d5f803e3d5ffd5b505060225460245460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062002b8392909116905f19906004016200342a565b6020604051808303815f875af115801562002ba0573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002bc6919062003443565b5060245460225460405163016f1aa360e41b81526001600160a01b03928316926316f1aa309262002c0392911690631dcd650090600401620033b7565b5f604051808303815f87803b15801562002c1b575f80fd5b505af115801562002c2e573d5f803e3d5ffd5b5050602454602354604051636e2246a760e01b81526001600160a01b039283169450636e2246a7935062002c6e92909116906298968090600401620033b7565b5f604051808303815f87803b15801562002c86575f80fd5b505af115801562002c99573d5f803e3d5ffd5b505050505f8051602062004f198339815191526001600160a01b03166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562002ce4575f80fd5b505af115801562002cf7573d5f803e3d5ffd5b505060248054602254604051630286fca160e61b81526001600160a01b03918216600482015262002d7b95509116925063a1bf28409101602060405180830381865afa15801562002d4a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002d709190620033de565b631dcd650062002f2f565b602480546023546040516311005b0760e01b81526001600160a01b03918216600482015262002dfc9391909216916311005b079101602060405180830381865afa15801562002dcc573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002df29190620033de565b6298968062002f2f565b565b6060601580548060200260200160405190810160405280929190818152602001828054801562000f5957602002820191905f5260205f209081546001600160a01b0316815260019091019060200180831162000f3a575050505050905090565b6040516388b44c8560e01b81525f8051602062004f19833981519152906388b44c859062002e9590869086908690600401620034e4565b5f6040518083038186803b15801562002eac575f80fd5b505afa15801562002ebf573d5f803e3d5ffd5b50505050505050565b60405163a34edc0360e01b81525f8051602062004f198339815191529063a34edc039062002efd90859085906004016200350d565b5f6040518083038186803b15801562002f14575f80fd5b505afa15801562002f27573d5f803e3d5ffd5b505050505050565b60405163260a5b1560e21b815260048101839052602481018290525f8051602062004f19833981519152906398296c549060440162002efd565b610a79806200353283390190565b610f6e8062003fab83390190565b602080825282518282018190525f9190848201906040850190845b8181101562002fc75783516001600160a01b03168352928401929184019160010162002fa0565b50909695505050505050565b5f81518084525f5b8181101562002ff95760208185018101518683018201520162002fdb565b505f602082860101526020601f19601f83011685010191505092915050565b602080825282518282018190525f919060409081850190600581811b87018401888601875b84811015620030cc57603f198a8403018652815180516001600160a01b03168452880151888401889052805188850181905290890190606081871b8601810191908601905f5b81811015620030b557605f19888503018352620030a284865162002fd3565b948d01949350918c019160010162003083565b50505096890196935050908701906001016200303d565b50909998505050505050505050565b5f815180845260208085019450602084015f5b83811015620031165781516001600160e01b03191687529582019590820190600101620030ee565b509495945050505050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b838110156200319e57888303603f19018552815180518785526200316f8886018262002fd3565b91890151858303868b0152919050620031898183620030db565b96890196945050509086019060010162003148565b509098975050505050505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b828110156200320557603f19888603018452620031f285835162002fd3565b94509285019290850190600101620031d3565b5092979650505050505050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b838110156200319e57888303603f19018552815180516001600160a01b031684528701518784018790526200327187850182620030db565b958801959350509086019060010162003239565b60608152600b60608201526a577261707065642042544360a81b608082015260a060208201525f620032cb60a0830160048152635742544360e01b602082015260400190565b905060ff8316604083015292915050565b6060815260086060820152672aa9a21021b7b4b760c11b608082015260a060208201525f620032cb60a0830160048152635553444360e01b602082015260400190565b6001600160a01b0382168152604060208201819052600490820152635742544360e01b60608201525f608082015b9392505050565b6001600160a01b0382168152604060208201819052600490820152635553444360e01b60608201525f608082016200334d565b941515855292151560208501529015156040840152151560608301526001600160a01b0316608082015260a00190565b6001600160a01b0392909216825260208201526060604082018190525f9082015260800190565b5f60208284031215620033ef575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b5f826200342557634e487b7160e01b5f52601260045260245ffd5b500490565b6001600160a01b03929092168252602082015260400190565b5f6020828403121562003454575f80fd5b815180151581146200334d575f80fd5b818103818111156200347a576200347a620033f6565b92915050565b808201808211156200347a576200347a620033f6565b600181811c90821680620034ab57607f821691505b602082108103620034ca57634e487b7160e01b5f52602260045260245ffd5b50919050565b602081525f6200334d602083018462002fd3565b838152826020820152606060408201525f62003504606083018462002fd3565b95945050505050565b8215158152604060208201525f62003529604083018462002fd3565b94935050505056fe608060405234801562000010575f80fd5b5060405162000a7938038062000a79833981016040819052620000339162000134565b828260036200004383826200023d565b5060046200005282826200023d565b50506005805460ff191660ff93909316929092179091555062000309915050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011262000097575f80fd5b81516001600160401b0380821115620000b457620000b462000073565b604051601f8301601f19908116603f01168101908282118183101715620000df57620000df62000073565b8160405283815260209250866020858801011115620000fc575f80fd5b5f91505b838210156200011f578582018301518183018401529082019062000100565b5f602085830101528094505050505092915050565b5f805f6060848603121562000147575f80fd5b83516001600160401b03808211156200015e575f80fd5b6200016c8783880162000087565b9450602086015191508082111562000182575f80fd5b50620001918682870162000087565b925050604084015160ff81168114620001a8575f80fd5b809150509250925092565b600181811c90821680620001c857607f821691505b602082108103620001e757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200023857805f5260205f20601f840160051c81016020851015620002145750805b601f840160051c820191505b8181101562000235575f815560010162000220565b50505b505050565b81516001600160401b0381111562000259576200025962000073565b62000271816200026a8454620001b3565b84620001ed565b602080601f831160018114620002a7575f84156200028f5750858301515b5f19600386901b1c1916600185901b17855562000301565b5f85815260208120601f198616915b82811015620002d757888601518255948401946001909101908401620002b6565b5085821015620002f557878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b61076280620003175f395ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c806340c10f191161006357806340c10f191461011a57806370a082311461012f57806395d89b4114610157578063a9059cbb1461015f578063dd62ed3e14610172575f80fd5b806306fdde031461009f578063095ea7b3146100bd57806318160ddd146100e057806323b872dd146100f2578063313ce56714610105575b5f80fd5b6100a76101aa565b6040516100b491906105bc565b60405180910390f35b6100d06100cb366004610623565b61023a565b60405190151581526020016100b4565b6002545b6040519081526020016100b4565b6100d061010036600461064b565b610253565b60055460405160ff90911681526020016100b4565b61012d610128366004610623565b610276565b005b6100e461013d366004610684565b6001600160a01b03165f9081526020819052604090205490565b6100a7610284565b6100d061016d366004610623565b610293565b6100e46101803660046106a4565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101b9906106d5565b80601f01602080910402602001604051908101604052809291908181526020018280546101e5906106d5565b80156102305780601f1061020757610100808354040283529160200191610230565b820191905f5260205f20905b81548152906001019060200180831161021357829003601f168201915b5050505050905090565b5f336102478185856102a0565b60019150505b92915050565b5f336102608582856102b2565b61026b858585610333565b506001949350505050565b6102808282610390565b5050565b6060600480546101b9906106d5565b5f33610247818585610333565b6102ad83838360016103c4565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981101561032d578181101561031f57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61032d84848484035f6103c4565b50505050565b6001600160a01b03831661035c57604051634b637e8f60e11b81525f6004820152602401610316565b6001600160a01b0382166103855760405163ec442f0560e01b81525f6004820152602401610316565b6102ad838383610496565b6001600160a01b0382166103b95760405163ec442f0560e01b81525f6004820152602401610316565b6102805f8383610496565b6001600160a01b0384166103ed5760405163e602df0560e01b81525f6004820152602401610316565b6001600160a01b03831661041657604051634a1406b160e11b81525f6004820152602401610316565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561032d57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161048891815260200190565b60405180910390a350505050565b6001600160a01b0383166104c0578060025f8282546104b5919061070d565b909155506105309050565b6001600160a01b0383165f90815260208190526040902054818110156105125760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610316565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661054c5760028054829003905561056a565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105af91815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b818110156105e8578581018301518582016040015282016105cc565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461061e575f80fd5b919050565b5f8060408385031215610634575f80fd5b61063d83610608565b946020939093013593505050565b5f805f6060848603121561065d575f80fd5b61066684610608565b925061067460208501610608565b9150604084013590509250925092565b5f60208284031215610694575f80fd5b61069d82610608565b9392505050565b5f80604083850312156106b5575f80fd5b6106be83610608565b91506106cc60208401610608565b90509250929050565b600181811c908216806106e957607f821691505b60208210810361070757634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561024d57634e487b7160e01b5f52601160045260245ffdfea26469706673582212206067df3effa80f6cfd878bb3a653b0a8e6307cb018f56f38af6dd1f4e9a9157564736f6c63430008180033608060405234801561000f575f80fd5b5060405162000f6e38038062000f6e83398101604081905261003091610155565b818161005c7fb058f49d6462f3b1a3b260356aa683712ff15e590972bfac826dd6f0ac9f69cc83610091565b506100877f14d709f3f05686e62c95aa969cf0a78b04a197162d2e5b7a0b48f3c77bb2512482610091565b5050505050610186565b5f828152602081815260408083206001600160a01b038516845290915281205460ff16610131575f838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556100e93390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610134565b505f5b92915050565b80516001600160a01b0381168114610150575f80fd5b919050565b5f8060408385031215610166575f80fd5b61016f8361013a565b915061017d6020840161013a565b90509250929050565b610dda80620001945f395ff3fe608060405234801561000f575f80fd5b5060043610610127575f3560e01c80636a987c69116100a9578063a217fddf1161006e578063a217fddf146102ab578063a515ace3146102b2578063d283e75f146102d9578063d547741f146102f8578063f80b65651461030b575f80fd5b80636a987c69146102375780636e2246a71461024a57806386a5191e1461025d57806391d1485414610270578063a1bf284014610283575f80fd5b80631aefb107116100ef5780631aefb107146101c5578063248a9ca3146101e45780632f2ff15d1461020657806336568abe146102195780635c975abb1461022c575f80fd5b806301ffc9a71461012b57806307c7ac1b1461015357806311005b071461017557806316c38b3c1461019d57806316f1aa30146101b2575b5f80fd5b61013e610139366004610bbf565b61034c565b60405190151581526020015b60405180910390f35b6101675f80516020610d8583398151915281565b60405190815260200161014a565b610167610183366004610c08565b6001600160a01b03165f9081526003602052604090205490565b6101b06101ab366004610c2e565b610382565b005b6101b06101c0366004610c49565b6103c5565b6101676101d3366004610c08565b60026020525f908152604090205481565b6101676101f2366004610cc9565b5f9081526020819052604090206001015490565b6101b0610214366004610ce0565b61043a565b6101b0610227366004610ce0565b610464565b60015460ff1661013e565b610167610245366004610c49565b61049c565b6101b0610258366004610c49565b610516565b61016761026b366004610c49565b61057c565b61013e61027e366004610ce0565b6105e5565b610167610291366004610c08565b6001600160a01b03165f9081526002602052604090205490565b6101675f81565b6101677fb058f49d6462f3b1a3b260356aa683712ff15e590972bfac826dd6f0ac9f69cc81565b6101676102e7366004610c08565b60036020525f908152604090205481565b6101b0610306366004610ce0565b61060d565b610324610319366004610c08565b5f8080809193509193565b604080519415158552602085019390935290151591830191909152606082015260800161014a565b5f6001600160e01b03198216637965db0b60e01b148061037c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b7fb058f49d6462f3b1a3b260356aa683712ff15e590972bfac826dd6f0ac9f69cc6103ac81610631565b816103bd576103b961063e565b5050565b6103b9610690565b5f80516020610d858339815191526103dc81610631565b6103e46106cb565b6103f0858585856106f1565b846001600160a01b03167f6473c9f7da8f23a3d810f05b3e8fb3945f0ad17deadcc09e302cdf5d58e48fe78560405161042b91815260200190565b60405180910390a25050505050565b5f8281526020819052604090206001015461045481610631565b61045e83836107c0565b50505050565b6001600160a01b038116331461048d5760405163334bd91960e11b815260040160405180910390fd5b610497828261084f565b505050565b5f5f80516020610d858339815191526104b481610631565b6104bc6106cb565b6104c8868686866108b8565b9150856001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58360405161050591815260200190565b60405180910390a250949350505050565b5f80516020610d8583398151915261052d81610631565b6105356106cb565b610541858585856109ca565b846001600160a01b03167fac59582e5396aca512fa873a2047e7f4c80f8f55d4a06cb34a78a0187f62719f8560405161042b91815260200190565b5f5f80516020610d8583398151915261059481610631565b61059c6106cb565b6105a886868686610a76565b9150856001600160a01b03167f0516911bcc3a0a7412a44601057c0a0a1ec628bde049a84284bc4288665344888360405161050591815260200190565b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b5f8281526020819052604090206001015461062781610631565b61045e838361084f565b61063b8133610b63565b50565b610646610b9c565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6106986106cb565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610673565b60015460ff16156106ef5760405163d93c066560e01b815260040160405180910390fd5b565b5f83116107195760405162461bcd60e51b815260040161071090610d0a565b60405180910390fd5b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303815f875af1158015610769573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061078d9190610d2f565b506001600160a01b0384165f90815260026020526040812080548592906107b5908490610d5e565b909155505050505050565b5f6107cb83836105e5565b610848575f838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556108003390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600161037c565b505f61037c565b5f61085a83836105e5565b15610848575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a450600161037c565b5f8084116108d85760405162461bcd60e51b815260040161071090610d0a565b6001600160a01b0385165f90815260026020526040902054848110156109365760405162461bcd60e51b8152602060048201526013602482015272125394d551919250d251539517d0d3d3131055606a1b6044820152606401610710565b6109408582610d71565b6001600160a01b0387165f818152600260205260409081902092909255905163a9059cbb60e01b81523360048201526024810187905263a9059cbb906044016020604051808303815f875af115801561099b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109bf9190610d2f565b509395945050505050565b5f83116109e95760405162461bcd60e51b815260040161071090610d0a565b6001600160a01b0384165f9081526003602052604081208054859290610a10908490610d5e565b90915550506040516340c10f1960e01b8152336004820152602481018490526001600160a01b038516906340c10f19906044015f604051808303815f87803b158015610a5a575f80fd5b505af1158015610a6c573d5f803e3d5ffd5b5050505050505050565b5f808411610a965760405162461bcd60e51b815260040161071090610d0a565b6001600160a01b0385165f9081526003602052604081205490818611610abc5785610abe565b815b6040516323b872dd60e01b8152336004820152306024820152604481018290529091506001600160a01b038816906323b872dd906064016020604051808303815f875af1158015610b11573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b359190610d2f565b50610b408183610d71565b6001600160a01b0388165f90815260036020526040902055915050949350505050565b610b6d82826105e5565b6103b95760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610710565b60015460ff166106ef57604051638dfc202b60e01b815260040160405180910390fd5b5f60208284031215610bcf575f80fd5b81356001600160e01b031981168114610be6575f80fd5b9392505050565b80356001600160a01b0381168114610c03575f80fd5b919050565b5f60208284031215610c18575f80fd5b610be682610bed565b801515811461063b575f80fd5b5f60208284031215610c3e575f80fd5b8135610be681610c21565b5f805f8060608587031215610c5c575f80fd5b610c6585610bed565b935060208501359250604085013567ffffffffffffffff80821115610c88575f80fd5b818701915087601f830112610c9b575f80fd5b813581811115610ca9575f80fd5b886020828501011115610cba575f80fd5b95989497505060200194505050565b5f60208284031215610cd9575f80fd5b5035919050565b5f8060408385031215610cf1575f80fd5b82359150610d0160208401610bed565b90509250929050565b6020808252600b908201526a16915493d7d05353d5539560aa1b604082015260600190565b5f60208284031215610d3f575f80fd5b8151610be681610c21565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561037c5761037c610d4a565b8181038181111561037c5761037c610d4a56fe14d709f3f05686e62c95aa969cf0a78b04a197162d2e5b7a0b48f3c77bb25124a26469706673582212205a604256dea9301e520be55be55bbd31056c5c6c0c883465cbc3c9d402ac86d964736f6c634300081800330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122038d6db189820877a9d704f9f22ec51911f77d011e99d0c101157ccf18aab0bb664736f6c63430008180033",
    "sourceMap": "3126:44:93:-:0;;;3166:4;-1:-1:-1;;3126:44:93;;;;;;;;1065:26:104;;;;;;;;;;;482:15:117;417:5972;482:15;;417:5972;482:15;;;-1:-1:-1;;;482:15:117;;;;:8;:15::i;:::-;458:39;;;-1:-1:-1;;;;;458:39:117;;;;;;-1:-1:-1;;;;;;458:39:117;;;;;;;;;527:14;;;;;;;;;;;;-1:-1:-1;;;527:14:117;;;;;;:8;:14::i;:::-;503:38;;;;;;;-1:-1:-1;;;;;503:38:117;;;;;-1:-1:-1;;;;;503:38:117;;;;;;610:17;;;;;;;;;;;;;;-1:-1:-1;;;610:17:117;;;:8;;;:17;;:::i;:::-;586:41;;;-1:-1:-1;;;;;;586:41:117;-1:-1:-1;;;;;586:41:117;;;;;;;;;;417:5972;;;;;;;;;;;;20760:125:94;20824:12;20858:20;20873:4;20858:14;:20::i;:::-;-1:-1:-1;20848:30:94;20760:125;-1:-1:-1;;20760:125:94:o;20479:242::-;20549:12;20563:18;20641:4;20624:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;20624:22:94;;;;;;;20614:33;;20624:22;20614:33;;;;-1:-1:-1;;;;;;20665:19:94;;;;;709:25:124;;;20614:33:94;-1:-1:-1;20665:7:94;;;;682:18:124;;20665:19:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20694:20;;-1:-1:-1;;;20694:20:94;;20658:26;;-1:-1:-1;20694:8:94;;;;:20;;20658:26;;20709:4;;20694:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20479:242;;;:::o;14:250:124:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:124;238:16;;231:27;14:250::o;269:289::-;400:3;438:6;432:13;454:66;513:6;508:3;501:4;493:6;489:17;454:66;:::i;:::-;536:16;;;;;269:289;-1:-1:-1;;269:289:124:o;745:290::-;815:6;868:2;856:9;847:7;843:23;839:32;836:52;;;884:1;881;874:12;836:52;910:16;;-1:-1:-1;;;;;955:31:124;;945:42;;935:70;;1001:1;998;991:12;935:70;1024:5;745:290;-1:-1:-1;;;745:290:124:o;1040:493::-;1246:1;1242;1237:3;1233:11;1229:19;1221:6;1217:32;1206:9;1199:51;1286:2;1281;1270:9;1266:18;1259:30;1180:4;1318:6;1312:13;1361:6;1356:2;1345:9;1341:18;1334:34;1377:79;1449:6;1444:2;1433:9;1429:18;1424:2;1416:6;1412:15;1377:79;:::i;:::-;1517:2;1496:15;-1:-1:-1;;1492:29:124;1477:45;;;;1524:2;1473:54;;1040:493;-1:-1:-1;;;1040:493:124:o;:::-;417:5972:117;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801562000010575f80fd5b5060043610620001c4575f3560e01c80637e988aed1162000107578063b215a879116200009f578063d09d67d11162000077578063d09d67d1146200036a578063dbde82171462000374578063e20c9f71146200037e578063fa7626d41462000388575f80fd5b8063b215a8791462000331578063b5508aa91462000345578063ba414fa6146200034f575f80fd5b8063916a17c611620000df578063916a17c614620002f05780639c63088e1462000309578063a3b13e8a146200031d578063b0464fdc1462000327575f80fd5b80637e988aed14620002b957806385226c8114620002c357806389a3027114620002dc575f80fd5b80632ade3880116200017b5780634dede3de11620001535780634dede3de14620002785780635f81ba61146200028c57806364601ec4146200029657806366d9a9a014620002a0575f80fd5b80632ade3880146200024b5780633e5e3c2314620002645780633f7286f4146200026e575f80fd5b806303eadcfc14620001c85780630a9254e414620001f95780630d362f8d146200020557806312d43a51146200020f5780631ed7831c146200022857806325c7f70b1462000241575b5f80fd5b602454620001dc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6200020362000396565b005b6200020362000616565b601f54620001dc9061010090046001600160a01b031681565b6200023262000f01565b604051620001f0919062002f85565b6200020362000f63565b62000255620011f4565b604051620001f0919062003018565b620002326200133c565b620002326200139c565b602254620001dc906001600160a01b031681565b62000203620013fc565b6200020362001b1d565b620002aa62001ed6565b604051620001f0919062003121565b6200020362002046565b620002cd62002275565b604051620001f09190620031ac565b602354620001dc906001600160a01b031681565b620002fa6200234a565b604051620001f0919062003212565b602154620001dc906001600160a01b031681565b620002036200242f565b620002fa620025a0565b602054620001dc906001600160a01b031681565b620002cd62002685565b620003596200275a565b6040519015158152602001620001f0565b620002036200281b565b6200020362002a76565b6200023262002dfe565b601f54620003599060ff1681565b6008604051620003a69062002f69565b620003b2919062003285565b604051809103905ff080158015620003cc573d5f803e3d5ffd5b50602280546001600160a01b0319166001600160a01b0392909216919091179055604051600690620003fe9062002f69565b6200040a9190620032dc565b604051809103905ff08015801562000424573d5f803e3d5ffd5b50602380546001600160a01b0319166001600160a01b03928316179055601f546020546040516101009092048316921690620004609062002f77565b6001600160a01b03928316815291166020820152604001604051809103905ff08015801562000491573d5f803e3d5ffd5b50602480546001600160a01b0319166001600160a01b039283161790556022546040516318caf8e360e31b81525f8051602062004f198339815191529263c657c71892620004e5929116906004016200331f565b5f604051808303815f87803b158015620004fd575f80fd5b505af115801562000510573d5f803e3d5ffd5b50506023546040516318caf8e360e31b81525f8051602062004f19833981519152935063c657c718925062000552916001600160a01b03169060040162003354565b5f604051808303815f87803b1580156200056a575f80fd5b505af11580156200057d573d5f803e3d5ffd5b505060248054604080516318caf8e360e31b81526001600160a01b03909216600483015291810191909152601160448201527026b7b1b5a137b93937bba0b230b83a32b960791b60648201525f8051602062004f19833981519152925063c657c71891506084015b5f604051808303815f87803b158015620005fd575f80fd5b505af115801562000610573d5f803e3d5ffd5b50505050565b6024546040516381bad6f360e01b815264e8d4a51000915f8051602062004f19833981519152916381bad6f39162000666916001915f91829184916001600160a01b039091169060040162003387565b5f604051808303815f87803b1580156200067e575f80fd5b505af115801562000691573d5f803e3d5ffd5b50506023546040518481526001600160a01b0390911692507fac59582e5396aca512fa873a2047e7f4c80f8f55d4a06cb34a78a0187f62719f915060200160405180910390a260205460405163ca669fa760e01b81526001600160a01b0390911660048201525f8051602062004f198339815191529063ca669fa7906024015f604051808303815f87803b15801562000728575f80fd5b505af11580156200073b573d5f803e3d5ffd5b5050602454602354604051636e2246a760e01b81526001600160a01b039283169450636e2246a793506200077892909116908590600401620033b7565b5f604051808303815f87803b15801562000790575f80fd5b505af1158015620007a3573d5f803e3d5ffd5b50506023546020546040516370a0823160e01b81526001600160a01b0391821660048201526200085a9450911691506370a0823190602401602060405180830381865afa158015620007f7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200081d9190620033de565b826040518060400160405280601d81526020017f63616c6c657220726563656976656420626f72726f776564205553444300000081525062002e5e565b602480546023546040516311005b0760e01b81526001600160a01b039182166004820152620009069391909216916311005b079101602060405180830381865afa158015620008ab573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620008d19190620033de565b82604051806040016040528060158152602001741919589d081b195919d95c881a5b98dc99585cd959605a1b81525062002e5e565b5f620009146002836200340a565b6020546040516303223eab60e11b81526001600160a01b0390911660048201529091505f8051602062004f19833981519152906306447d56906024015f604051808303815f87803b15801562000968575f80fd5b505af11580156200097b573d5f803e3d5ffd5b505060235460245460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b39350620009b992909116905f19906004016200342a565b6020604051808303815f875af1158015620009d6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620009fc919062003443565b506024546040516381bad6f360e01b81525f8051602062004f19833981519152916381bad6f39162000a44916001915f91829184916001600160a01b03169060040162003387565b5f604051808303815f87803b15801562000a5c575f80fd5b505af115801562000a6f573d5f803e3d5ffd5b50506023546040518481526001600160a01b0390911692507f0516911bcc3a0a7412a44601057c0a0a1ec628bde049a84284bc428866534488915060200160405180910390a26024546023546040516343528c8f60e11b81525f926001600160a01b03908116926386a5191e9262000af092909116908690600401620033b7565b6020604051808303815f875af115801562000b0d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000b339190620033de565b90505f8051602062004f198339815191526001600160a01b03166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562000b7c575f80fd5b505af115801562000b8f573d5f803e3d5ffd5b5050505062000bcc8183604051806040016040528060148152602001731c995c185e481c995d1d5c9b9cc81858dd1d585b60621b81525062002e5e565b602480546023546040516311005b0760e01b81526001600160a01b03918216600482015262000c839391909216916311005b079101602060405180830381865afa15801562000c1d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000c439190620033de565b62000c4f848662003464565b604051806040016040528060158152602001741919589d081b195919d95c88191958dc99585cd959605a1b81525062002e5e565b6020546040516303223eab60e11b81526001600160a01b0390911660048201525f8051602062004f19833981519152906306447d56906024015f604051808303815f87803b15801562000cd4575f80fd5b505af115801562000ce7573d5f803e3d5ffd5b505050505f828462000cfa919062003464565b60235460245460405163095ea7b360e01b81529293506001600160a01b039182169263095ea7b39262000d359216905f19906004016200342a565b6020604051808303815f875af115801562000d52573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000d78919062003443565b506024546023546001600160a01b03918216916386a5191e911662000d9f84607b62003480565b6040518363ffffffff1660e01b815260040162000dbe929190620033b7565b6020604051808303815f875af115801562000ddb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000e019190620033de565b505f8051602062004f198339815191526001600160a01b03166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562000e49575f80fd5b505af115801562000e5c573d5f803e3d5ffd5b5050602480546023546040516311005b0760e01b81526001600160a01b039182166004820152620006109550911692506311005b079101602060405180830381865afa15801562000eaf573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062000ed59190620033de565b5f6040518060400160405280600c81526020016b1919589d0818db19585c995960a21b81525062002e5e565b6060601680548060200260200160405190810160405280929190818152602001828054801562000f5957602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831162000f3a575b5050505050905090565b601f5460405163ca669fa760e01b81526101009091046001600160a01b031660048201525f8051602062004f198339815191529063ca669fa7906024015f604051808303815f87803b15801562000fb8575f80fd5b505af115801562000fcb573d5f803e3d5ffd5b5050602480546040516305b0e2cf60e21b8152600160048201526001600160a01b0390911693506316c38b3c9250015f604051808303815f87803b15801562001012575f80fd5b505af115801562001025573d5f803e3d5ffd5b505050505f8051602062004f198339815191526001600160a01b031663f48448146040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562001070575f80fd5b505af115801562001083573d5f803e3d5ffd5b505060205460405163ca669fa760e01b81526001600160a01b0390911660048201525f8051602062004f19833981519152925063ca669fa791506024015f604051808303815f87803b158015620010d8575f80fd5b505af1158015620010eb573d5f803e3d5ffd5b505060245460225460405163016f1aa360e41b81526001600160a01b0392831694506316f1aa309350620011299290911690600190600401620033b7565b5f604051808303815f87803b15801562001141575f80fd5b505af115801562001154573d5f803e3d5ffd5b5050601f5460405163ca669fa760e01b81526101009091046001600160a01b031660048201525f8051602062004f19833981519152925063ca669fa791506024015f604051808303815f87803b158015620011ad575f80fd5b505af1158015620011c0573d5f803e3d5ffd5b5050602480546040516305b0e2cf60e21b81525f60048201526001600160a01b0390911693506316c38b3c925001620005e5565b6060601e805480602002602001604051908101604052809291908181526020015f905b8282101562001333575f84815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156200131b578382905f5260205f20018054620012899062003496565b80601f0160208091040260200160405190810160405280929190818152602001828054620012b79062003496565b8015620013065780601f10620012dc5761010080835404028352916020019162001306565b820191905f5260205f20905b815481529060010190602001808311620012e857829003601f168201915b50505050508152602001906001019062001269565b50505050815250508152602001906001019062001217565b50505050905090565b6060601880548060200260200160405190810160405280929190818152602001828054801562000f5957602002820191905f5260205f209081546001600160a01b0316815260019091019060200180831162000f3a575050505050905090565b6060601780548060200260200160405190810160405280929190818152602001828054801562000f5957602002820191905f5260205f209081546001600160a01b0316815260019091019060200180831162000f3a575050505050905090565b6022546020546040516340c10f1960e01b8152633b9aca00926001600160a01b03908116926340c10f19926200143b929091169085906004016200342a565b5f604051808303815f87803b15801562001453575f80fd5b505af115801562001466573d5f803e3d5ffd5b50506020546040516303223eab60e11b81526001600160a01b0390911660048201525f8051602062004f1983398151915292506306447d5691506024015f604051808303815f87803b158015620014bb575f80fd5b505af1158015620014ce573d5f803e3d5ffd5b505060225460245460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b393506200150c92909116905f19906004016200342a565b6020604051808303815f875af115801562001529573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200154f919062003443565b506024546040516381bad6f360e01b81525f8051602062004f19833981519152916381bad6f39162001597916001915f91829184916001600160a01b03169060040162003387565b5f604051808303815f87803b158015620015af575f80fd5b505af1158015620015c2573d5f803e3d5ffd5b50506022546040518481526001600160a01b0390911692507f6473c9f7da8f23a3d810f05b3e8fb3945f0ad17deadcc09e302cdf5d58e48fe7915060200160405180910390a260245460225460405163016f1aa360e41b81526001600160a01b03928316926316f1aa309262001640929116908590600401620033b7565b5f604051808303815f87803b15801562001658575f80fd5b505af11580156200166b573d5f803e3d5ffd5b5050602254602480546040516370a0823160e01b81526001600160a01b039182166004820152620017219550921692506370a082319101602060405180830381865afa158015620016be573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620016e49190620033de565b826040518060400160405280601b81526020017f6164617074657220686f6c647320737570706c6965642057425443000000000081525062002e5e565b60248054602254604051630286fca160e61b81526001600160a01b039182166004820152620017c693919092169163a1bf28409101602060405180830381865afa15801562001772573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620017989190620033de565b826040518060400160405280600e81526020016d1b195919d95c881d5c19185d195960921b81525062002e5e565b5f620017d46002836200340a565b6024546040516381bad6f360e01b81529192505f8051602062004f19833981519152916381bad6f39162001820916001915f91829184916001600160a01b039091169060040162003387565b5f604051808303815f87803b15801562001838575f80fd5b505af11580156200184b573d5f803e3d5ffd5b50506022546040518481526001600160a01b0390911692507f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5915060200160405180910390a2602454602254604051636a987c6960e01b81525f926001600160a01b0390811692636a987c6992620018cc92909116908690600401620033b7565b6020604051808303815f875af1158015620018e9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200190f9190620033de565b90505f8051602062004f198339815191526001600160a01b03166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562001958575f80fd5b505af11580156200196b573d5f803e3d5ffd5b50505050620019b181836040518060400160405280601781526020017f77697468647261772072657475726e7320616d6f756e7400000000000000000081525062002e5e565b6022546020546040516370a0823160e01b81526001600160a01b03918216600482015262001a669291909116906370a0823190602401602060405180830381865afa15801562001a03573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001a299190620033de565b836040518060400160405280601e81526020017f63616c6c65722072656365697665642077697468647261776e2057425443000081525062002e5e565b60248054602254604051630286fca160e61b81526001600160a01b03918216600482015262001b1893919092169163a1bf28409101602060405180830381865afa15801562001ab7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001add9190620033de565b62001ae9848662003464565b6040518060400160405280601081526020016f1b195919d95c88191958dc99585cd95960821b81525062002e5e565b505050565b6023546020546040516340c10f1960e01b81526001600160a01b03928316926340c10f199262001b56929116906064906004016200342a565b5f604051808303815f87803b15801562001b6e575f80fd5b505af115801562001b81573d5f803e3d5ffd5b50506020546040516303223eab60e11b81526001600160a01b0390911660048201525f8051602062004f1983398151915292506306447d5691506024015f604051808303815f87803b15801562001bd6575f80fd5b505af115801562001be9573d5f803e3d5ffd5b5050602454602354604051636e2246a760e01b81526001600160a01b039283169450636e2246a7935062001c279290911690606490600401620033b7565b5f604051808303815f87803b15801562001c3f575f80fd5b505af115801562001c52573d5f803e3d5ffd5b50506023546020546040516370a0823160e01b81526001600160a01b0391821660048201529116925063a9059cbb915061dead9083906370a0823190602401602060405180830381865afa15801562001cad573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001cd39190620033de565b6040518363ffffffff1660e01b815260040162001cf29291906200342a565b6020604051808303815f875af115801562001d0f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001d35919062003443565b5060235460245460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39262001d6f929116906064906004016200342a565b6020604051808303815f875af115801562001d8c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001db2919062003443565b505f8051602062004f198339815191526001600160a01b031663f48448146040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562001dfa575f80fd5b505af115801562001e0d573d5f803e3d5ffd5b50506024546023546040516343528c8f60e11b81526001600160a01b0392831694506386a5191e935062001e4b9290911690606490600401620033b7565b6020604051808303815f875af115801562001e68573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062001e8e9190620033de565b505f8051602062004f198339815191526001600160a01b03166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b158015620005fd575f80fd5b6060601b805480602002602001604051908101604052809291908181526020015f905b8282101562001333578382905f5260205f2090600202016040518060400160405290815f8201805462001f2c9062003496565b80601f016020809104026020016040519081016040528092919081815260200182805462001f5a9062003496565b801562001fa95780601f1062001f7f5761010080835404028352916020019162001fa9565b820191905f5260205f20905b81548152906001019060200180831162001f8b57829003601f168201915b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156200202d57602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162001fee5790505b5050505050815250508152602001906001019062001ef9565b5f8051602062004f198339815191526001600160a01b031663f48448146040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156200208d575f80fd5b505af1158015620020a0573d5f803e3d5ffd5b505060215460405163ca669fa760e01b81526001600160a01b0390911660048201525f8051602062004f19833981519152925063ca669fa791506024015f604051808303815f87803b158015620020f5575f80fd5b505af115801562002108573d5f803e3d5ffd5b505060245460225460405163016f1aa360e41b81526001600160a01b0392831694506316f1aa309350620021469290911690600190600401620033b7565b5f604051808303815f87803b1580156200215e575f80fd5b505af115801562002171573d5f803e3d5ffd5b505050505f8051602062004f198339815191526001600160a01b031663f48448146040518163ffffffff1660e01b81526004015f604051808303815f87803b158015620021bc575f80fd5b505af1158015620021cf573d5f803e3d5ffd5b505060215460405163ca669fa760e01b81526001600160a01b0390911660048201525f8051602062004f19833981519152925063ca669fa791506024015f604051808303815f87803b15801562002224575f80fd5b505af115801562002237573d5f803e3d5ffd5b5050602454602354604051636e2246a760e01b81526001600160a01b039283169450636e2246a79350620005e59290911690600190600401620033b7565b6060601a805480602002602001604051908101604052809291908181526020015f905b8282101562001333578382905f5260205f20018054620022b89062003496565b80601f0160208091040260200160405190810160405280929190818152602001828054620022e69062003496565b8015620023355780601f106200230b5761010080835404028352916020019162002335565b820191905f5260205f20905b8154815290600101906020018083116200231757829003601f168201915b50505050508152602001906001019062002298565b6060601d805480602002602001604051908101604052809291908181526020015f905b8282101562001333575f8481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200241657602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620023d75790505b505050505081525050815260200190600101906200236d565b60205460405163ca669fa760e01b81526001600160a01b0390911660048201525f8051602062004f198339815191529063ca669fa7906024015f604051808303815f87803b15801562002480575f80fd5b505af115801562002493573d5f803e3d5ffd5b50506040805180820182526013815272125394d551919250d251539517d0d3d3131055606a1b6020820152905163f28dceb360e01b81525f8051602062004f19833981519152935063f28dceb39250620024f19190600401620034d0565b5f604051808303815f87803b15801562002509575f80fd5b505af11580156200251c573d5f803e3d5ffd5b5050602454602254604051636a987c6960e01b81526001600160a01b039283169450636a987c6993506200255a9290911690600190600401620033b7565b6020604051808303815f875af115801562002577573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200259d9190620033de565b50565b6060601c805480602002602001604051908101604052809291908181526020015f905b8282101562001333575f8481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200266c57602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200262d5790505b50505050508152505081526020019060010190620025c3565b60606019805480602002602001604051908101604052809291908181526020015f905b8282101562001333578382905f5260205f20018054620026c89062003496565b80601f0160208091040260200160405190810160405280929190818152602001828054620026f69062003496565b8015620027455780601f106200271b5761010080835404028352916020019162002745565b820191905f5260205f20905b8154815290600101906020018083116200272757829003601f168201915b505050505081526020019060010190620026a8565b6008545f9060ff161562002772575060085460ff1690565b604051630667f9d760e41b81525f905f8051602062004f198339815191529063667f9d7090620027d2907f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d906519985a5b195960d21b906004016200342a565b602060405180830381865afa158015620027ee573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620028149190620033de565b1415905090565b6024546040805163a515ace360e01b815290515f926001600160a01b03169163a515ace39160048083019260209291908290030181865afa15801562002863573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620028899190620033de565b90505f60245f9054906101000a90046001600160a01b03166001600160a01b03166307c7ac1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620028dd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620029039190620033de565b60248054601f54604051632474521560e21b8152600481018790526001600160a01b03610100909204821693810193909352929350620029bf9216906391d1485490604401602060405180830381865afa15801562002964573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200298a919062003443565b6040518060400160405280601681526020017533b7bb1036bab9ba103430bb32902927a622afa3a7ab60511b81525062002ec8565b60248054602054604051632474521560e21b8152600481018590526001600160a01b039182169381019390935262002a72929116906391d1485490604401602060405180830381865afa15801562002a19573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002a3f919062003443565b604051806040016040528060148152602001736367206d757374206861766520524f4c455f434760601b81525062002ec8565b5050565b6022546020546040516340c10f1960e01b81526001600160a01b03928316926340c10f199262002ab292911690631dcd6500906004016200342a565b5f604051808303815f87803b15801562002aca575f80fd5b505af115801562002add573d5f803e3d5ffd5b50506020546040516303223eab60e11b81526001600160a01b0390911660048201525f8051602062004f1983398151915292506306447d5691506024015f604051808303815f87803b15801562002b32575f80fd5b505af115801562002b45573d5f803e3d5ffd5b505060225460245460405163095ea7b360e01b81526001600160a01b03928316945063095ea7b3935062002b8392909116905f19906004016200342a565b6020604051808303815f875af115801562002ba0573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002bc6919062003443565b5060245460225460405163016f1aa360e41b81526001600160a01b03928316926316f1aa309262002c0392911690631dcd650090600401620033b7565b5f604051808303815f87803b15801562002c1b575f80fd5b505af115801562002c2e573d5f803e3d5ffd5b5050602454602354604051636e2246a760e01b81526001600160a01b039283169450636e2246a7935062002c6e92909116906298968090600401620033b7565b5f604051808303815f87803b15801562002c86575f80fd5b505af115801562002c99573d5f803e3d5ffd5b505050505f8051602062004f198339815191526001600160a01b03166390c5013b6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801562002ce4575f80fd5b505af115801562002cf7573d5f803e3d5ffd5b505060248054602254604051630286fca160e61b81526001600160a01b03918216600482015262002d7b95509116925063a1bf28409101602060405180830381865afa15801562002d4a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002d709190620033de565b631dcd650062002f2f565b602480546023546040516311005b0760e01b81526001600160a01b03918216600482015262002dfc9391909216916311005b079101602060405180830381865afa15801562002dcc573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019062002df29190620033de565b6298968062002f2f565b565b6060601580548060200260200160405190810160405280929190818152602001828054801562000f5957602002820191905f5260205f209081546001600160a01b0316815260019091019060200180831162000f3a575050505050905090565b6040516388b44c8560e01b81525f8051602062004f19833981519152906388b44c859062002e9590869086908690600401620034e4565b5f6040518083038186803b15801562002eac575f80fd5b505afa15801562002ebf573d5f803e3d5ffd5b50505050505050565b60405163a34edc0360e01b81525f8051602062004f198339815191529063a34edc039062002efd90859085906004016200350d565b5f6040518083038186803b15801562002f14575f80fd5b505afa15801562002f27573d5f803e3d5ffd5b505050505050565b60405163260a5b1560e21b815260048101839052602481018290525f8051602062004f19833981519152906398296c549060440162002efd565b610a79806200353283390190565b610f6e8062003fab83390190565b602080825282518282018190525f9190848201906040850190845b8181101562002fc75783516001600160a01b03168352928401929184019160010162002fa0565b50909695505050505050565b5f81518084525f5b8181101562002ff95760208185018101518683018201520162002fdb565b505f602082860101526020601f19601f83011685010191505092915050565b602080825282518282018190525f919060409081850190600581811b87018401888601875b84811015620030cc57603f198a8403018652815180516001600160a01b03168452880151888401889052805188850181905290890190606081871b8601810191908601905f5b81811015620030b557605f19888503018352620030a284865162002fd3565b948d01949350918c019160010162003083565b50505096890196935050908701906001016200303d565b50909998505050505050505050565b5f815180845260208085019450602084015f5b83811015620031165781516001600160e01b03191687529582019590820190600101620030ee565b509495945050505050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b838110156200319e57888303603f19018552815180518785526200316f8886018262002fd3565b91890151858303868b0152919050620031898183620030db565b96890196945050509086019060010162003148565b509098975050505050505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b828110156200320557603f19888603018452620031f285835162002fd3565b94509285019290850190600101620031d3565b5092979650505050505050565b5f60208083018184528085518083526040925060408601915060408160051b8701018488015f5b838110156200319e57888303603f19018552815180516001600160a01b031684528701518784018790526200327187850182620030db565b958801959350509086019060010162003239565b60608152600b60608201526a577261707065642042544360a81b608082015260a060208201525f620032cb60a0830160048152635742544360e01b602082015260400190565b905060ff8316604083015292915050565b6060815260086060820152672aa9a21021b7b4b760c11b608082015260a060208201525f620032cb60a0830160048152635553444360e01b602082015260400190565b6001600160a01b0382168152604060208201819052600490820152635742544360e01b60608201525f608082015b9392505050565b6001600160a01b0382168152604060208201819052600490820152635553444360e01b60608201525f608082016200334d565b941515855292151560208501529015156040840152151560608301526001600160a01b0316608082015260a00190565b6001600160a01b0392909216825260208201526060604082018190525f9082015260800190565b5f60208284031215620033ef575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b5f826200342557634e487b7160e01b5f52601260045260245ffd5b500490565b6001600160a01b03929092168252602082015260400190565b5f6020828403121562003454575f80fd5b815180151581146200334d575f80fd5b818103818111156200347a576200347a620033f6565b92915050565b808201808211156200347a576200347a620033f6565b600181811c90821680620034ab57607f821691505b602082108103620034ca57634e487b7160e01b5f52602260045260245ffd5b50919050565b602081525f6200334d602083018462002fd3565b838152826020820152606060408201525f62003504606083018462002fd3565b95945050505050565b8215158152604060208201525f62003529604083018462002fd3565b94935050505056fe608060405234801562000010575f80fd5b5060405162000a7938038062000a79833981016040819052620000339162000134565b828260036200004383826200023d565b5060046200005282826200023d565b50506005805460ff191660ff93909316929092179091555062000309915050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011262000097575f80fd5b81516001600160401b0380821115620000b457620000b462000073565b604051601f8301601f19908116603f01168101908282118183101715620000df57620000df62000073565b8160405283815260209250866020858801011115620000fc575f80fd5b5f91505b838210156200011f578582018301518183018401529082019062000100565b5f602085830101528094505050505092915050565b5f805f6060848603121562000147575f80fd5b83516001600160401b03808211156200015e575f80fd5b6200016c8783880162000087565b9450602086015191508082111562000182575f80fd5b50620001918682870162000087565b925050604084015160ff81168114620001a8575f80fd5b809150509250925092565b600181811c90821680620001c857607f821691505b602082108103620001e757634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200023857805f5260205f20601f840160051c81016020851015620002145750805b601f840160051c820191505b8181101562000235575f815560010162000220565b50505b505050565b81516001600160401b0381111562000259576200025962000073565b62000271816200026a8454620001b3565b84620001ed565b602080601f831160018114620002a7575f84156200028f5750858301515b5f19600386901b1c1916600185901b17855562000301565b5f85815260208120601f198616915b82811015620002d757888601518255948401946001909101908401620002b6565b5085821015620002f557878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b61076280620003175f395ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c806340c10f191161006357806340c10f191461011a57806370a082311461012f57806395d89b4114610157578063a9059cbb1461015f578063dd62ed3e14610172575f80fd5b806306fdde031461009f578063095ea7b3146100bd57806318160ddd146100e057806323b872dd146100f2578063313ce56714610105575b5f80fd5b6100a76101aa565b6040516100b491906105bc565b60405180910390f35b6100d06100cb366004610623565b61023a565b60405190151581526020016100b4565b6002545b6040519081526020016100b4565b6100d061010036600461064b565b610253565b60055460405160ff90911681526020016100b4565b61012d610128366004610623565b610276565b005b6100e461013d366004610684565b6001600160a01b03165f9081526020819052604090205490565b6100a7610284565b6100d061016d366004610623565b610293565b6100e46101803660046106a4565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101b9906106d5565b80601f01602080910402602001604051908101604052809291908181526020018280546101e5906106d5565b80156102305780601f1061020757610100808354040283529160200191610230565b820191905f5260205f20905b81548152906001019060200180831161021357829003601f168201915b5050505050905090565b5f336102478185856102a0565b60019150505b92915050565b5f336102608582856102b2565b61026b858585610333565b506001949350505050565b6102808282610390565b5050565b6060600480546101b9906106d5565b5f33610247818585610333565b6102ad83838360016103c4565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981101561032d578181101561031f57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61032d84848484035f6103c4565b50505050565b6001600160a01b03831661035c57604051634b637e8f60e11b81525f6004820152602401610316565b6001600160a01b0382166103855760405163ec442f0560e01b81525f6004820152602401610316565b6102ad838383610496565b6001600160a01b0382166103b95760405163ec442f0560e01b81525f6004820152602401610316565b6102805f8383610496565b6001600160a01b0384166103ed5760405163e602df0560e01b81525f6004820152602401610316565b6001600160a01b03831661041657604051634a1406b160e11b81525f6004820152602401610316565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561032d57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161048891815260200190565b60405180910390a350505050565b6001600160a01b0383166104c0578060025f8282546104b5919061070d565b909155506105309050565b6001600160a01b0383165f90815260208190526040902054818110156105125760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610316565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661054c5760028054829003905561056a565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105af91815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b818110156105e8578581018301518582016040015282016105cc565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461061e575f80fd5b919050565b5f8060408385031215610634575f80fd5b61063d83610608565b946020939093013593505050565b5f805f6060848603121561065d575f80fd5b61066684610608565b925061067460208501610608565b9150604084013590509250925092565b5f60208284031215610694575f80fd5b61069d82610608565b9392505050565b5f80604083850312156106b5575f80fd5b6106be83610608565b91506106cc60208401610608565b90509250929050565b600181811c908216806106e957607f821691505b60208210810361070757634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561024d57634e487b7160e01b5f52601160045260245ffdfea26469706673582212206067df3effa80f6cfd878bb3a653b0a8e6307cb018f56f38af6dd1f4e9a9157564736f6c63430008180033608060405234801561000f575f80fd5b5060405162000f6e38038062000f6e83398101604081905261003091610155565b818161005c7fb058f49d6462f3b1a3b260356aa683712ff15e590972bfac826dd6f0ac9f69cc83610091565b506100877f14d709f3f05686e62c95aa969cf0a78b04a197162d2e5b7a0b48f3c77bb2512482610091565b5050505050610186565b5f828152602081815260408083206001600160a01b038516845290915281205460ff16610131575f838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556100e93390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610134565b505f5b92915050565b80516001600160a01b0381168114610150575f80fd5b919050565b5f8060408385031215610166575f80fd5b61016f8361013a565b915061017d6020840161013a565b90509250929050565b610dda80620001945f395ff3fe608060405234801561000f575f80fd5b5060043610610127575f3560e01c80636a987c69116100a9578063a217fddf1161006e578063a217fddf146102ab578063a515ace3146102b2578063d283e75f146102d9578063d547741f146102f8578063f80b65651461030b575f80fd5b80636a987c69146102375780636e2246a71461024a57806386a5191e1461025d57806391d1485414610270578063a1bf284014610283575f80fd5b80631aefb107116100ef5780631aefb107146101c5578063248a9ca3146101e45780632f2ff15d1461020657806336568abe146102195780635c975abb1461022c575f80fd5b806301ffc9a71461012b57806307c7ac1b1461015357806311005b071461017557806316c38b3c1461019d57806316f1aa30146101b2575b5f80fd5b61013e610139366004610bbf565b61034c565b60405190151581526020015b60405180910390f35b6101675f80516020610d8583398151915281565b60405190815260200161014a565b610167610183366004610c08565b6001600160a01b03165f9081526003602052604090205490565b6101b06101ab366004610c2e565b610382565b005b6101b06101c0366004610c49565b6103c5565b6101676101d3366004610c08565b60026020525f908152604090205481565b6101676101f2366004610cc9565b5f9081526020819052604090206001015490565b6101b0610214366004610ce0565b61043a565b6101b0610227366004610ce0565b610464565b60015460ff1661013e565b610167610245366004610c49565b61049c565b6101b0610258366004610c49565b610516565b61016761026b366004610c49565b61057c565b61013e61027e366004610ce0565b6105e5565b610167610291366004610c08565b6001600160a01b03165f9081526002602052604090205490565b6101675f81565b6101677fb058f49d6462f3b1a3b260356aa683712ff15e590972bfac826dd6f0ac9f69cc81565b6101676102e7366004610c08565b60036020525f908152604090205481565b6101b0610306366004610ce0565b61060d565b610324610319366004610c08565b5f8080809193509193565b604080519415158552602085019390935290151591830191909152606082015260800161014a565b5f6001600160e01b03198216637965db0b60e01b148061037c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b7fb058f49d6462f3b1a3b260356aa683712ff15e590972bfac826dd6f0ac9f69cc6103ac81610631565b816103bd576103b961063e565b5050565b6103b9610690565b5f80516020610d858339815191526103dc81610631565b6103e46106cb565b6103f0858585856106f1565b846001600160a01b03167f6473c9f7da8f23a3d810f05b3e8fb3945f0ad17deadcc09e302cdf5d58e48fe78560405161042b91815260200190565b60405180910390a25050505050565b5f8281526020819052604090206001015461045481610631565b61045e83836107c0565b50505050565b6001600160a01b038116331461048d5760405163334bd91960e11b815260040160405180910390fd5b610497828261084f565b505050565b5f5f80516020610d858339815191526104b481610631565b6104bc6106cb565b6104c8868686866108b8565b9150856001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58360405161050591815260200190565b60405180910390a250949350505050565b5f80516020610d8583398151915261052d81610631565b6105356106cb565b610541858585856109ca565b846001600160a01b03167fac59582e5396aca512fa873a2047e7f4c80f8f55d4a06cb34a78a0187f62719f8560405161042b91815260200190565b5f5f80516020610d8583398151915261059481610631565b61059c6106cb565b6105a886868686610a76565b9150856001600160a01b03167f0516911bcc3a0a7412a44601057c0a0a1ec628bde049a84284bc4288665344888360405161050591815260200190565b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b5f8281526020819052604090206001015461062781610631565b61045e838361084f565b61063b8133610b63565b50565b610646610b9c565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6106986106cb565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610673565b60015460ff16156106ef5760405163d93c066560e01b815260040160405180910390fd5b565b5f83116107195760405162461bcd60e51b815260040161071090610d0a565b60405180910390fd5b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303815f875af1158015610769573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061078d9190610d2f565b506001600160a01b0384165f90815260026020526040812080548592906107b5908490610d5e565b909155505050505050565b5f6107cb83836105e5565b610848575f838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556108003390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600161037c565b505f61037c565b5f61085a83836105e5565b15610848575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a450600161037c565b5f8084116108d85760405162461bcd60e51b815260040161071090610d0a565b6001600160a01b0385165f90815260026020526040902054848110156109365760405162461bcd60e51b8152602060048201526013602482015272125394d551919250d251539517d0d3d3131055606a1b6044820152606401610710565b6109408582610d71565b6001600160a01b0387165f818152600260205260409081902092909255905163a9059cbb60e01b81523360048201526024810187905263a9059cbb906044016020604051808303815f875af115801561099b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109bf9190610d2f565b509395945050505050565b5f83116109e95760405162461bcd60e51b815260040161071090610d0a565b6001600160a01b0384165f9081526003602052604081208054859290610a10908490610d5e565b90915550506040516340c10f1960e01b8152336004820152602481018490526001600160a01b038516906340c10f19906044015f604051808303815f87803b158015610a5a575f80fd5b505af1158015610a6c573d5f803e3d5ffd5b5050505050505050565b5f808411610a965760405162461bcd60e51b815260040161071090610d0a565b6001600160a01b0385165f9081526003602052604081205490818611610abc5785610abe565b815b6040516323b872dd60e01b8152336004820152306024820152604481018290529091506001600160a01b038816906323b872dd906064016020604051808303815f875af1158015610b11573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b359190610d2f565b50610b408183610d71565b6001600160a01b0388165f90815260036020526040902055915050949350505050565b610b6d82826105e5565b6103b95760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610710565b60015460ff166106ef57604051638dfc202b60e01b815260040160405180910390fd5b5f60208284031215610bcf575f80fd5b81356001600160e01b031981168114610be6575f80fd5b9392505050565b80356001600160a01b0381168114610c03575f80fd5b919050565b5f60208284031215610c18575f80fd5b610be682610bed565b801515811461063b575f80fd5b5f60208284031215610c3e575f80fd5b8135610be681610c21565b5f805f8060608587031215610c5c575f80fd5b610c6585610bed565b935060208501359250604085013567ffffffffffffffff80821115610c88575f80fd5b818701915087601f830112610c9b575f80fd5b813581811115610ca9575f80fd5b886020828501011115610cba575f80fd5b95989497505060200194505050565b5f60208284031215610cd9575f80fd5b5035919050565b5f8060408385031215610cf1575f80fd5b82359150610d0160208401610bed565b90509250929050565b6020808252600b908201526a16915493d7d05353d5539560aa1b604082015260600190565b5f60208284031215610d3f575f80fd5b8151610be681610c21565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561037c5761037c610d4a565b8181038181111561037c5761037c610d4a56fe14d709f3f05686e62c95aa969cf0a78b04a197162d2e5b7a0b48f3c77bb25124a26469706673582212205a604256dea9301e520be55be55bbd31056c5c6c0c883465cbc3c9d402ac86d964736f6c634300081800330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122038d6db189820877a9d704f9f22ec51911f77d011e99d0c101157ccf18aab0bb664736f6c63430008180033",
    "sourceMap": "417:5972:117:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;743:32;;;;;-1:-1:-1;;;;;743:32:117;;;;;;-1:-1:-1;;;;;205:32:124;;;187:51;;175:2;160:18;743:32:117;;;;;;;;782:331;;;:::i;:::-;;3818:1379;;;:::i;458:39::-;;;;;;;;-1:-1:-1;;;;;458:39:117;;;2907:134:97;;;:::i;:::-;;;;;;;:::i;1800:390:117:-;;;:::i;3823:151:97:-;;;:::i;:::-;;;;;;;:::i;3684:133::-;;;:::i;3385:141::-;;;:::i;634:21:117:-;;;;;-1:-1:-1;;;;;634:21:117;;;2267:1220;;;:::i;5203:646::-;;;:::i;3193:186:97:-;;;:::i;:::-;;;;;;;:::i;1463:331:117:-;;;:::i;3047:140:97:-;;;:::i;:::-;;;;;;;:::i;688:21:117:-;;;;;-1:-1:-1;;;;;688:21:117;;;3532:146:97;;;:::i;:::-;;;;;;;:::i;586:41:117:-;;;;;-1:-1:-1;;;;;586:41:117;;;3493:251;;;:::i;2754:147:97:-;;;:::i;503:38:117:-;;;;;-1:-1:-1;;;;;503:38:117;;;2459:141:97;;;:::i;1243:204:92:-;;;:::i;:::-;;;7211:14:124;;7204:22;7186:41;;7174:2;7159:18;1243:204:92;7046:187:124;1186:271:117;;;:::i;5914:473::-;;;:::i;2606:142:97:-;;;:::i;1065:26:104:-;;;;;;;;;782:331:117;860:1;823:39;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;816:4:117;:46;;-1:-1:-1;;;;;;816:46:117;-1:-1:-1;;;;;816:46:117;;;;;;;;;;879:36;;913:1;;879:36;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;872:4:117;:43;;-1:-1:-1;;;;;;872:43:117;-1:-1:-1;;;;;872:43:117;;;;;;958:3;;963:2;;936:30;;872:43;958:3;;;;;;963:2;;936:30;;;:::i;:::-;-1:-1:-1;;;;;8986:15:124;;;8968:34;;9038:15;;9033:2;9018:18;;9011:43;8918:2;8903:18;936:30:117;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;926:7:117;:40;;-1:-1:-1;;;;;;926:40:117;-1:-1:-1;;;;;926:40:117;;;;;;994:4;;977:31;;-1:-1:-1;;;977:31:117;;-1:-1:-1;;;;;;;;;;;336:42:91;977:8:117;;:31;;994:4;;;977:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1035:4:117;;1018:31;;-1:-1:-1;;;1018:31:117;;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;1018:8:117;;-1:-1:-1;1018:31:117;;-1:-1:-1;;;;;1035:4:117;;1018:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1076:7:117;;;1059:47;;;-1:-1:-1;;;1059:47:117;;-1:-1:-1;;;;;1076:7:117;;;1059:47;;;10035:51:124;10102:18;;;10095:30;;;;10161:2;10141:18;;;10134:30;-1:-1:-1;;;10180:18:124;;;10173:47;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;1059:8:117;;-1:-1:-1;10237:19:124;;1059:47:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;782:331::o;3818:1379::-;4038:7;;3990:57;;-1:-1:-1;;;3990:57:117;;3894:11;;-1:-1:-1;;;;;;;;;;;336:42:91;3990:13:117;;:57;;4004:4;;3879:12;;;;4004:4;;-1:-1:-1;;;;;4038:7:117;;;;3990:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4097:4:117;;4062:47;;10947:25:124;;;-1:-1:-1;;;;;4097:4:117;;;;-1:-1:-1;4062:47:117;;-1:-1:-1;10935:2:124;10920:18;4062:47:117;;;;;;;4128:2;;4119:12;;-1:-1:-1;;;4119:12:117;;-1:-1:-1;;;;;4128:2:117;;;4119:12;;;187:51:124;-1:-1:-1;;;;;;;;;;;336:42:91;4119:8:117;;160:18:124;;4119:12:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4141:7:117;;4164:4;;4141:39;;-1:-1:-1;;;4141:39:117;;-1:-1:-1;;;;;4141:7:117;;;;-1:-1:-1;4141:14:117;;-1:-1:-1;4141:39:117;;4164:4;;;;4171;;4141:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4200:4:117;;4215:2;;4200:18;;-1:-1:-1;;;4200:18:117;;-1:-1:-1;;;;;4215:2:117;;;4200:18;;;187:51:124;4191:67:117;;-1:-1:-1;4200:4:117;;;-1:-1:-1;4200:14:117;;160:18:124;;4200::117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4220:4;4191:67;;;;;;;;;;;;;;;;;:8;:67::i;:::-;4277:7;;;4305:4;;4277:34;;-1:-1:-1;;;4277:34:117;;-1:-1:-1;;;;;4305:4:117;;;4277:34;;;187:51:124;4268:75:117;;4277:7;;;;;:19;;160:18:124;4277:34:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4313:4;4268:75;;;;;;;;;;;;;-1:-1:-1;;;4268:75:117;;;:8;:75::i;:::-;4376:12;4391:8;4398:1;4391:4;:8;:::i;:::-;4423:2;;4409:17;;-1:-1:-1;;;4409:17:117;;-1:-1:-1;;;;;4423:2:117;;;4409:17;;;187:51:124;4376:23:117;;-1:-1:-1;;;;;;;;;;;;336:42:91;4409:13:117;;160:18:124;;4409:17:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4436:4:117;;4457:7;;4436:49;;-1:-1:-1;;;4436:49:117;;-1:-1:-1;;;;;4436:4:117;;;;-1:-1:-1;4436:12:117;;-1:-1:-1;4436:49:117;;4457:7;;;;-1:-1:-1;;4467:17:117;4436:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4544:7:117;;4496:57;;-1:-1:-1;;;4496:57:117;;-1:-1:-1;;;;;;;;;;;336:42:91;4496:13:117;;:57;;4510:4;;4516:5;;;;4510:4;;-1:-1:-1;;;;;4544:7:117;;4496:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4601:4:117;;4568:45;;10947:25:124;;;-1:-1:-1;;;;;4601:4:117;;;;-1:-1:-1;4568:45:117;;-1:-1:-1;10935:2:124;10920:18;4568:45:117;;;;;;;4640:7;;4662:4;;4640:38;;-1:-1:-1;;;4640:38:117;;4623:14;;-1:-1:-1;;;;;4640:7:117;;;;:13;;:38;;4662:4;;;;4669;;4640:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4623:55;;-1:-1:-1;;;;;;;;;;;;;;;;4688:12:117;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4713:46;4722:6;4730:4;4713:46;;;;;;;;;;;;;-1:-1:-1;;;4713:46:117;;;:8;:46::i;:::-;4778:7;;;4806:4;;4778:34;;-1:-1:-1;;;4778:34:117;;-1:-1:-1;;;;;4806:4:117;;;4778:34;;;187:51:124;4769:82:117;;4778:7;;;;;:19;;160:18:124;4778:34:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4814:11;4821:4;4814;:11;:::i;:::-;4769:82;;;;;;;;;;;;;-1:-1:-1;;;4769:82:117;;;:8;:82::i;:::-;4923:2;;4909:17;;-1:-1:-1;;;4909:17:117;;-1:-1:-1;;;;;4923:2:117;;;4909:17;;;187:51:124;-1:-1:-1;;;;;;;;;;;336:42:91;4909:13:117;;160:18:124;;4909:17:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4936:12;4958:4;4951;:11;;;;:::i;:::-;4972:4;;4993:7;;4972:49;;-1:-1:-1;;;4972:49:117;;4936:26;;-1:-1:-1;;;;;;4972:4:117;;;;:12;;:49;;4993:7;;-1:-1:-1;;5003:17:117;4972:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5031:7:117;;5053:4;;-1:-1:-1;;;;;5031:7:117;;;;:13;;5053:4;5060:10;:4;5067:3;5060:10;:::i;:::-;5031:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;;;;;;5102:12:117;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5136:7:117;;;5164:4;;5136:34;;-1:-1:-1;;;5136:34:117;;-1:-1:-1;;;;;5164:4:117;;;5136:34;;;187:51:124;5127:63:117;;-1:-1:-1;5136:7:117;;;-1:-1:-1;5136:19:117;;160:18:124;5136:34:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5172:1;5127:63;;;;;;;;;;;;;-1:-1:-1;;;5127:63:117;;;:8;:63::i;2907:134:97:-;2954:33;3018:16;2999:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2999:35:97;;;;;;;;;;;;;;;;;;;;;;;2907:134;:::o;1800:390:117:-;1883:3;;1874:13;;-1:-1:-1;;;1874:13:117;;1883:3;;;;-1:-1:-1;;;;;1883:3:117;1874:13;;;187:51:124;-1:-1:-1;;;;;;;;;;;336:42:91;1874:8:117;;160:18:124;;1874:13:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1897:7:117;;;:23;;-1:-1:-1;;;1897:23:117;;:7;:23;;;7186:41:124;-1:-1:-1;;;;;1897:7:117;;;;-1:-1:-1;1897:17:117;;-1:-1:-1;7159:18:124;1897:23:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;1969:15:117;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2005:2:117;;1996:12;;-1:-1:-1;;;1996:12:117;;-1:-1:-1;;;;;2005:2:117;;;1996:12;;;187:51:124;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;1996:8:117;;-1:-1:-1;160:18:124;;1996:12:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2018:7:117;;2051:4;;2018:46;;-1:-1:-1;;;2018:46:117;;-1:-1:-1;;;;;2018:7:117;;;;-1:-1:-1;2018:24:117;;-1:-1:-1;2018:46:117;;2051:4;;;;2018:7;;:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2103:3:117;;2094:13;;-1:-1:-1;;;2094:13:117;;2103:3;;;;-1:-1:-1;;;;;2103:3:117;2094:13;;;187:51:124;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;2094:8:117;;-1:-1:-1;160:18:124;;2094:13:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2117:7:117;;;:24;;-1:-1:-1;;;2117:24:117;;:7;:24;;;7186:41:124;-1:-1:-1;;;;;2117:7:117;;;;-1:-1:-1;2117:17:117;;-1:-1:-1;7159:18:124;2117:24:117;7046:187:124;3823:151:97;3872:42;3948:19;3926:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3926:41:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:151;:::o;3684:133::-;3730:33;3794:16;3775:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3775:35:97;;;;;;;;;;;;;;;;;;;;;;3684:133;:::o;3385:141::-;3433:35;3501:18;3480:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3480:39:97;;;;;;;;;;;;;;;;;;;;;;3385:141;:::o;2267:1220:117:-;2406:4;;2416:2;;2406:18;;-1:-1:-1;;;2406:18:117;;2345:4;;-1:-1:-1;;;;;2406:4:117;;;;:9;;:18;;2416:2;;;;2345:4;;2406:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2488:2:117;;2474:17;;-1:-1:-1;;;2474:17:117;;-1:-1:-1;;;;;2488:2:117;;;2474:17;;;187:51:124;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;2474:13:117;;-1:-1:-1;160:18:124;;2474:17:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2501:4:117;;2522:7;;2501:49;;-1:-1:-1;;;2501:49:117;;-1:-1:-1;;;;;2501:4:117;;;;-1:-1:-1;2501:12:117;;-1:-1:-1;2501:49:117;;2522:7;;;;-1:-1:-1;;2532:17:117;2501:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2660:7:117;;2612:57;;-1:-1:-1;;;2612:57:117;;-1:-1:-1;;;;;;;;;;;336:42:91;2612:13:117;;:57;;2626:4;;2632:5;;;;2626:4;;-1:-1:-1;;;;;2660:7:117;;2612:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2719:4:117;;2684:46;;10947:25:124;;;-1:-1:-1;;;;;2719:4:117;;;;-1:-1:-1;2684:46:117;;-1:-1:-1;10935:2:124;10920:18;2684:46:117;;;;;;;2740:7;;2773:4;;2740:48;;-1:-1:-1;;;2740:48:117;;-1:-1:-1;;;;;2740:7:117;;;;:24;;:48;;2773:4;;;2780:3;;2740:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2808:4:117;;2831:7;;;2808:32;;-1:-1:-1;;;2808:32:117;;-1:-1:-1;;;;;2831:7:117;;;2808:32;;;187:51:124;2799:78:117;;-1:-1:-1;2808:4:117;;;-1:-1:-1;2808:14:117;;160:18:124;2808:32:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2842:3;2799:78;;;;;;;;;;;;;;;;;:8;:78::i;:::-;2896:7;;;2930:4;;2896:40;;-1:-1:-1;;;2896:40:117;;-1:-1:-1;;;;;2930:4:117;;;2896:40;;;187:51:124;2887:73:117;;2896:7;;;;;:25;;160:18:124;2896:40:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2938:3;2887:73;;;;;;;;;;;;;-1:-1:-1;;;2887:73:117;;;:8;:73::i;:::-;3002:12;3017:7;3023:1;3017:3;:7;:::i;:::-;3082;;3034:57;;-1:-1:-1;;;3034:57:117;;3002:22;;-1:-1:-1;;;;;;;;;;;;336:42:91;3034:13:117;;:57;;3048:4;;3054:5;;;;3048:4;;-1:-1:-1;;;;;3082:7:117;;;;3034:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3142:4:117;;3106:48;;10947:25:124;;;-1:-1:-1;;;;;3142:4:117;;;;-1:-1:-1;3106:48:117;;-1:-1:-1;10935:2:124;10920:18;3106:48:117;;;;;;;3178:7;;3213:4;;3178:51;;-1:-1:-1;;;3178:51:117;;3164:11;;-1:-1:-1;;;;;3178:7:117;;;;:26;;:51;;3213:4;;;;3220;;3178:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3164:65;;-1:-1:-1;;;;;;;;;;;;;;;;3239:12:117;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3264:46;3273:3;3278:4;3264:46;;;;;;;;;;;;;;;;;:8;:46::i;:::-;3329:4;;3344:2;;3329:18;;-1:-1:-1;;;3329:18:117;;-1:-1:-1;;;;;3344:2:117;;;3329:18;;;187:51:124;3320:68:117;;3329:4;;;;;:14;;160:18:124;;3329::117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3349:4;3320:68;;;;;;;;;;;;;;;;;:8;:68::i;:::-;3407:7;;;3441:4;;3407:40;;-1:-1:-1;;;3407:40:117;;-1:-1:-1;;;;;3441:4:117;;;3407:40;;;187:51:124;3398:82:117;;3407:7;;;;;:25;;160:18:124;3407:40:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3449:10;3455:4;3449:3;:10;:::i;:::-;3398:82;;;;;;;;;;;;;-1:-1:-1;;;3398:82:117;;;:8;:82::i;:::-;2321:1166;;;2267:1220::o;5203:646::-;5426:4;;5436:2;;5426:18;;-1:-1:-1;;;5426:18:117;;-1:-1:-1;;;;;5426:4:117;;;;:9;;:18;;5436:2;;;5440:3;;5426:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5468:2:117;;5454:17;;-1:-1:-1;;;5454:17:117;;-1:-1:-1;;;;;5468:2:117;;;5454:17;;;187:51:124;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;5454:13:117;;-1:-1:-1;160:18:124;;5454:17:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5481:7:117;;5504:4;;5481:38;;-1:-1:-1;;;5481:38:117;;-1:-1:-1;;;;;5481:7:117;;;;-1:-1:-1;5481:14:117;;-1:-1:-1;5481:38:117;;5504:4;;;;5511:3;;5481:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5622:4:117;;5668:2;;5653:18;;-1:-1:-1;;;5653:18:117;;-1:-1:-1;;;;;5668:2:117;;;5653:18;;;187:51:124;5622:4:117;;;-1:-1:-1;5622:13:117;;-1:-1:-1;5644:6:117;;5622:4;;5653:14;;160:18:124;;5653::117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5622:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5682:4:117;;5703:7;;5682:35;;-1:-1:-1;;;5682:35:117;;-1:-1:-1;;;;;5682:4:117;;;;:12;;:35;;5703:7;;;5713:3;;5682:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;;;;;;5727:15:117;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5781:7:117;;5803:4;;5781:37;;-1:-1:-1;;;5781:37:117;;-1:-1:-1;;;;;5781:7:117;;;;-1:-1:-1;5781:13:117;;-1:-1:-1;5781:37:117;;5803:4;;;;5810:3;;5781:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;;;;;;5828:12:117;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3193:186:97;3249:56;3346:26;3317:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3317:55:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1463:331:117;-1:-1:-1;;;;;;;;;;;;;;;;1551:15:117;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1587:5:117;;1578:15;;-1:-1:-1;;;1578:15:117;;-1:-1:-1;;;;;1587:5:117;;;1578:15;;;187:51:124;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;1578:8:117;;-1:-1:-1;160:18:124;;1578:15:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1603:7:117;;1636:4;;1603:46;;-1:-1:-1;;;1603:46:117;;-1:-1:-1;;;;;1603:7:117;;;;-1:-1:-1;1603:24:117;;-1:-1:-1;1603:46:117;;1636:4;;;;1603:7;;:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;1699:15:117;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1735:5:117;;1726:15;;-1:-1:-1;;;1726:15:117;;-1:-1:-1;;;;;1735:5:117;;;1726:15;;;187:51:124;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;1726:8:117;;-1:-1:-1;160:18:124;;1726:15:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1751:7:117;;1774:4;;1751:36;;-1:-1:-1;;;1751:36:117;;-1:-1:-1;;;;;1751:7:117;;;;-1:-1:-1;1751:14:117;;-1:-1:-1;1751:36:117;;1774:4;;;;1751:7;;:36;;;:::i;3047:140:97:-;3095:34;3162:18;3141:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3532:146;3580:40;3653:18;3632:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3493:251:117;3621:2;;3612:12;;-1:-1:-1;;;3612:12:117;;-1:-1:-1;;;;;3621:2:117;;;3612:12;;;187:51:124;-1:-1:-1;;;;;;;;;;;336:42:91;3612:8:117;;160:18:124;;3612:12:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3650:28:117;;;;;;;;;;;-1:-1:-1;;;3650:28:117;;;;3634:45;;-1:-1:-1;;;3634:45:117;;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;3634:15:117;;-1:-1:-1;3634:45:117;;3650:28;3634:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3689:7:117;;3724:4;;3689:48;;-1:-1:-1;;;3689:48:117;;-1:-1:-1;;;;;3689:7:117;;;;-1:-1:-1;3689:26:117;;-1:-1:-1;3689:48:117;;3724:4;;;;3689:7;;:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3493:251::o;2754:147:97:-;2803:40;2876:18;2855:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:141;2508:34;2575:18;2554:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:204:92;1302:7;;1282:4;;1302:7;;1298:143;;;-1:-1:-1;1332:7:92;;;;;1243:204::o;1298:143::-;1377:39;;-1:-1:-1;;;1377:39:92;;1428:1;;-1:-1:-1;;;;;;;;;;;1377:7:92;;;:39;;219:28;;-1:-1:-1;;;1398:17:92;1377:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;:::o;1186:271:117:-;1248:7;;:18;;;-1:-1:-1;;;1248:18:117;;;;1233:12;;-1:-1:-1;;;;;1248:7:117;;:16;;:18;;;;;;;;;;;;;;:7;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1233:33;;1276:10;1289:7;;;;;;;;;-1:-1:-1;;;;;1289:7:117;-1:-1:-1;;;;;1289:15:117;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1327:7;;;1349:3;;1327:26;;-1:-1:-1;;;1327:26:117;;;;;15278:25:124;;;-1:-1:-1;;;;;1327:7:117;1349:3;;;;;15319:18:124;;;15312:60;;;;1276:30:117;;-1:-1:-1;1316:64:117;;1327:7;;:15;;15251:18:124;;1327:26:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1316:64;;;;;;;;;;;;;-1:-1:-1;;;1316:64:117;;;:10;:64::i;:::-;1401:7;;;1421:2;;1401:23;;-1:-1:-1;;;1401:23:117;;;;;15278:25:124;;;-1:-1:-1;;;;;1421:2:117;;;15319:18:124;;;15312:60;;;;1390::117;;1401:7;;;:15;;15251:18:124;;1401:23:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:60;;;;;;;;;;;;;-1:-1:-1;;;1390:60:117;;;:10;:60::i;:::-;1223:234;;1186:271::o;5914:473::-;5993:4;;6003:2;;5993:18;;-1:-1:-1;;;5993:18:117;;-1:-1:-1;;;;;5993:4:117;;;;:9;;:18;;6003:2;;;6007:3;;5993:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6035:2:117;;6021:17;;-1:-1:-1;;;6021:17:117;;-1:-1:-1;;;;;6035:2:117;;;6021:17;;;187:51:124;-1:-1:-1;;;;;;;;;;;336:42:91;-1:-1:-1;6021:13:117;;-1:-1:-1;160:18:124;;6021:17:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6048:4:117;;6069:7;;6048:49;;-1:-1:-1;;;6048:49:117;;-1:-1:-1;;;;;6048:4:117;;;;-1:-1:-1;6048:12:117;;-1:-1:-1;6048:49:117;;6069:7;;;;-1:-1:-1;;6079:17:117;6048:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6107:7:117;;6140:4;;6107:48;;-1:-1:-1;;;6107:48:117;;-1:-1:-1;;;;;6107:7:117;;;;:24;;:48;;6140:4;;;6147:3;;6107:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6191:7:117;;6214:4;;6191:39;;-1:-1:-1;;;6191:39:117;;-1:-1:-1;;;;;6191:7:117;;;;-1:-1:-1;6191:14:117;;-1:-1:-1;6191:39:117;;6214:4;;;;6221;;6191:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;6240:12:117;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6274:7:117;;;6308:4;;6274:40;;-1:-1:-1;;;6274:40:117;;-1:-1:-1;;;;;6308:4:117;;;6274:40;;;187:51:124;6265:55:117;;-1:-1:-1;6274:7:117;;;-1:-1:-1;6274:25:117;;160:18:124;6274:40:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6316:3;6265:8;:55::i;:::-;6339:7;;;6367:4;;6339:34;;-1:-1:-1;;;6339:34:117;;-1:-1:-1;;;;;6367:4:117;;;6339:34;;;187:51:124;6330:50:117;;6339:7;;;;;:19;;160:18:124;6339:34:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6375:4;6330:8;:50::i;:::-;5914:473::o;2606:142:97:-;2655:35;2723:18;2702:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2702:39:97;;;;;;;;;;;;;;;;;;;;;;2606:142;:::o;2386:134:92:-;2484:29;;-1:-1:-1;;;2484:29:92;;-1:-1:-1;;;;;;;;;;;2484:11:92;;;:29;;2496:4;;2502:5;;2509:3;;2484:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2386:134;;;:::o;1689:113::-;1771:24;;-1:-1:-1;;;1771:24:92;;-1:-1:-1;;;;;;;;;;;1771:13:92;;;:24;;1785:4;;1791:3;;1771:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1689:113;;:::o;2270:110::-;2349:24;;-1:-1:-1;;;2349:24:92;;;;;17470:25:124;;;17511:18;;;17504:34;;;-1:-1:-1;;;;;;;;;;;2349:11:92;;;17443:18:124;;2349:24:92;17296:248:124;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;:::o;457:658:124:-;628:2;680:21;;;750:13;;653:18;;;772:22;;;599:4;;628:2;851:15;;;;825:2;810:18;;;599:4;894:195;908:6;905:1;902:13;894:195;;;973:13;;-1:-1:-1;;;;;969:39:124;957:52;;1064:15;;;;1029:12;;;;1005:1;923:9;894:195;;;-1:-1:-1;1106:3:124;;457:658;-1:-1:-1;;;;;;457:658:124:o;1120:423::-;1162:3;1200:5;1194:12;1227:6;1222:3;1215:19;1252:1;1262:162;1276:6;1273:1;1270:13;1262:162;;;1338:4;1394:13;;;1390:22;;1384:29;1366:11;;;1362:20;;1355:59;1291:12;1262:162;;;1266:3;1469:1;1462:4;1453:6;1448:3;1444:16;1440:27;1433:38;1532:4;1525:2;1521:7;1516:2;1508:6;1504:15;1500:29;1495:3;1491:39;1487:50;1480:57;;;1120:423;;;;:::o;1548:1716::-;1783:2;1835:21;;;1905:13;;1808:18;;;1927:22;;;1754:4;;1783:2;1968;;1986:18;;;;2023:1;2066:14;;;2051:30;;2047:39;;2109:15;;;1754:4;2152:1083;2166:6;2163:1;2160:13;2152:1083;;;-1:-1:-1;;2231:22:124;;;2227:36;2215:49;;2287:13;;2374:9;;-1:-1:-1;;;;;2370:35:124;2355:51;;2445:11;;2439:18;2477:15;;;2470:27;;;2558:19;;2327:15;;;2590:24;;;2771:21;;;;2637:2;2719:17;;;2707:30;;2703:39;;;2661:15;;;;2816:1;2830:296;2846:8;2841:3;2838:17;2830:296;;;2952:2;2948:7;2939:6;2931;2927:19;2923:33;2916:5;2909:48;2984:42;3019:6;3008:8;3002:15;2984:42;:::i;:::-;3055:17;;;;2974:52;-1:-1:-1;3098:14:124;;;;2874:1;2865:11;2830:296;;;-1:-1:-1;;;3213:12:124;;;;3149:6;-1:-1:-1;;3178:15:124;;;;2188:1;2181:9;2152:1083;;;-1:-1:-1;3252:6:124;;1548:1716;-1:-1:-1;;;;;;;;;1548:1716:124:o;3496:465::-;3548:3;3586:5;3580:12;3613:6;3608:3;3601:19;3639:4;3668;3663:3;3659:14;3652:21;;3707:4;3700:5;3696:16;3730:1;3740:196;3754:6;3751:1;3748:13;3740:196;;;3819:13;;-1:-1:-1;;;;;;3815:40:124;3803:53;;3876:12;;;;3911:15;;;;3776:1;3769:9;3740:196;;;-1:-1:-1;3952:3:124;;3496:465;-1:-1:-1;;;;;3496:465:124:o;3966:1187::-;4186:4;4215:2;4255;4244:9;4240:18;4285:2;4274:9;4267:21;4308:6;4343;4337:13;4374:6;4366;4359:22;4400:2;4390:12;;4433:2;4422:9;4418:18;4411:25;;4495:2;4485:6;4482:1;4478:14;4467:9;4463:30;4459:39;4533:2;4525:6;4521:15;4554:1;4564:560;4578:6;4575:1;4572:13;4564:560;;;4643:22;;;-1:-1:-1;;4639:36:124;4627:49;;4699:13;;4745:9;;4767:18;;;4812:48;4844:15;;;4745:9;4812:48;:::i;:::-;4901:11;;;4895:18;4950:19;;;4933:15;;;4926:44;4895:18;4798:62;-1:-1:-1;4993:51:124;4798:62;4895:18;4993:51;:::i;:::-;5102:12;;;;4983:61;-1:-1:-1;;;5067:15:124;;;;4600:1;4593:9;4564:560;;;-1:-1:-1;5141:6:124;;3966:1187;-1:-1:-1;;;;;;;;3966:1187:124:o;5158:803::-;5320:4;5349:2;5389;5378:9;5374:18;5419:2;5408:9;5401:21;5442:6;5477;5471:13;5508:6;5500;5493:22;5546:2;5535:9;5531:18;5524:25;;5608:2;5598:6;5595:1;5591:14;5580:9;5576:30;5572:39;5558:53;;5646:2;5638:6;5634:15;5667:1;5677:255;5691:6;5688:1;5685:13;5677:255;;;5784:2;5780:7;5768:9;5760:6;5756:22;5752:36;5747:3;5740:49;5812:40;5845:6;5836;5830:13;5812:40;:::i;:::-;5802:50;-1:-1:-1;5910:12:124;;;;5875:15;;;;5713:1;5706:9;5677:255;;;-1:-1:-1;5949:6:124;;5158:803;-1:-1:-1;;;;;;;5158:803:124:o;5966:1075::-;6170:4;6199:2;6239;6228:9;6224:18;6269:2;6258:9;6251:21;6292:6;6327;6321:13;6358:6;6350;6343:22;6384:2;6374:12;;6417:2;6406:9;6402:18;6395:25;;6479:2;6469:6;6466:1;6462:14;6451:9;6447:30;6443:39;6517:2;6509:6;6505:15;6538:1;6548:464;6562:6;6559:1;6556:13;6548:464;;;6627:22;;;-1:-1:-1;;6623:36:124;6611:49;;6683:13;;6728:9;;-1:-1:-1;;;;;6724:35:124;6709:51;;6799:11;;6793:18;6831:15;;;6824:27;;;6874:58;6916:15;;;6793:18;6874:58;:::i;:::-;6990:12;;;;6864:68;-1:-1:-1;;6955:15:124;;;;6584:1;6577:9;6548:464;;7395:599;7732:2;7721:9;7714:21;7771:2;7766;7755:9;7751:18;7744:30;-1:-1:-1;;;7805:3:124;7794:9;7790:19;7783:42;7863:3;7856:4;7845:9;7841:20;7834:33;7695:4;7884:50;7929:3;7918:9;7914:19;7315:1;7303:14;;-1:-1:-1;;;7342:4:124;7333:14;;7326:30;7381:2;7372:12;;7238:152;7884:50;7876:58;;7982:4;7974:6;7970:17;7965:2;7954:9;7950:18;7943:45;7395:599;;;;:::o;8156:595::-;8493:2;8482:9;8475:21;8532:1;8527:2;8516:9;8512:18;8505:29;-1:-1:-1;;;8565:3:124;8554:9;8550:19;8543:39;8620:3;8613:4;8602:9;8598:20;8591:33;8456:4;8641:50;8686:3;8675:9;8671:19;8076:1;8064:14;;-1:-1:-1;;;8103:4:124;8094:14;;8087:30;8142:2;8133:12;;7999:152;9065:374;-1:-1:-1;;;;;9295:32:124;;9277:51;;9364:2;9359;9344:18;;9337:30;;;7315:1;9414:18;;;7303:14;-1:-1:-1;;;7333:14:124;;;7326:30;-1:-1:-1;7372:12:124;;;9384:49;9376:57;9065:374;-1:-1:-1;;;9065:374:124:o;9444:::-;-1:-1:-1;;;;;9674:32:124;;9656:51;;9743:2;9738;9723:18;;9716:30;;;8076:1;9793:18;;;8064:14;-1:-1:-1;;;8094:14:124;;;8087:30;-1:-1:-1;8133:12:124;;;9763:49;7999:152;10267:529;10527:14;;10520:22;10502:41;;10586:14;;10579:22;10574:2;10559:18;;10552:50;10645:14;;10638:22;10633:2;10618:18;;10611:50;10704:14;10697:22;10692:2;10677:18;;10670:50;-1:-1:-1;;;;;10757:32:124;10751:3;10736:19;;10729:61;10489:3;10474:19;;10267:529::o;10983:452::-;-1:-1:-1;;;;;11240:32:124;;;;11222:51;;11304:2;11289:18;;11282:34;11352:2;11347;11332:18;;11325:30;;;-1:-1:-1;11371:18:124;;;11364:29;11425:3;11410:19;;10983:452::o;11440:184::-;11510:6;11563:2;11551:9;11542:7;11538:23;11534:32;11531:52;;;11579:1;11576;11569:12;11531:52;-1:-1:-1;11602:16:124;;11440:184;-1:-1:-1;11440:184:124:o;11629:127::-;11690:10;11685:3;11681:20;11678:1;11671:31;11721:4;11718:1;11711:15;11745:4;11742:1;11735:15;11761:217;11801:1;11827;11817:132;;11871:10;11866:3;11862:20;11859:1;11852:31;11906:4;11903:1;11896:15;11934:4;11931:1;11924:15;11817:132;-1:-1:-1;11963:9:124;;11761:217::o;11983:274::-;-1:-1:-1;;;;;12175:32:124;;;;12157:51;;12239:2;12224:18;;12217:34;12145:2;12130:18;;11983:274::o;12262:277::-;12329:6;12382:2;12370:9;12361:7;12357:23;12353:32;12350:52;;;12398:1;12395;12388:12;12350:52;12430:9;12424:16;12483:5;12476:13;12469:21;12462:5;12459:32;12449:60;;12505:1;12502;12495:12;12544:128;12611:9;;;12632:11;;;12629:37;;;12646:18;;:::i;:::-;12544:128;;;;:::o;12677:125::-;12742:9;;;12763:10;;;12760:36;;;12776:18;;:::i;13272:380::-;13351:1;13347:12;;;;13394;;;13415:61;;13469:4;13461:6;13457:17;13447:27;;13415:61;13522:2;13514:6;13511:14;13491:18;13488:38;13485:161;;13568:10;13563:3;13559:20;13556:1;13549:31;13603:4;13600:1;13593:15;13631:4;13628:1;13621:15;13485:161;;13272:380;;;:::o;14413:218::-;14560:2;14549:9;14542:21;14523:4;14580:45;14621:2;14610:9;14606:18;14598:6;14580:45;:::i;16623:362::-;16828:6;16817:9;16810:25;16871:6;16866:2;16855:9;16851:18;16844:34;16914:2;16909;16898:9;16894:18;16887:30;16791:4;16934:45;16975:2;16964:9;16960:18;16952:6;16934:45;:::i;:::-;16926:53;16623:362;-1:-1:-1;;;;;16623:362:124:o;16990:301::-;17175:6;17168:14;17161:22;17150:9;17143:41;17220:2;17215;17204:9;17200:18;17193:30;17124:4;17240:45;17281:2;17270:9;17266:18;17258:6;17240:45;:::i;:::-;17232:53;16990:301;-1:-1:-1;;;;16990:301:124:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "USDC()": "89a30271",
    "WBTC()": "4dede3de",
    "adapter()": "03eadcfc",
    "cg()": "b215a879",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSelectors()": "b0464fdc",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "gov()": "12d43a51",
    "rando()": "9c63088e",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_borrow_and_repay_happy_path()": "0d362f8d",
    "test_onlyCG_enforced()": "7e988aed",
    "test_pause_blocks_calls()": "25c7f70b",
    "test_repay_requires_allowance_and_balance()": "64601ec4",
    "test_roles_are_set()": "d09d67d1",
    "test_supply_and_withdraw_happy_path()": "5f81ba61",
    "test_views_after_activity()": "dbde8217",
    "test_withdraw_reverts_if_insufficient()": "a3b13e8a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Borrowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Repaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Supplied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract MockERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBTC\",\"outputs\":[{\"internalType\":\"contract MockERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adapter\",\"outputs\":[{\"internalType\":\"contract MockBorrowAdapter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rando\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_borrow_and_repay_happy_path\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_onlyCG_enforced\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_pause_blocks_calls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_repay_requires_allowance_and_balance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_roles_are_set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_supply_and_withdraw_happy_path\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_views_after_activity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_withdraw_reverts_if_insufficient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/BorrowAdapterTest.t.sol\":\"BorrowAdapterTest\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=node_modules/@aave/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@openzeppelin/foundry-upgrades/=node_modules/@openzeppelin/foundry-upgrades/src/\",\":@satlayer/contracts/=node_modules/@satlayer/contracts/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"node_modules/@satlayer/contracts/test/MockERC20.sol\":{\"keccak256\":\"0x971d55f75400611df4ea7a3e5bcf31212e5b5c537d895c9789554ac40e70f5af\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://12c60932fb2b09f777c33f543c6e2bc088f4da5d6d445b5f6d9250680e669cd2\",\"dweb:/ipfs/QmextXW1Bo6uspRPBb6cPszKVuuqPtUtsSCUKYTE4uksa5\"]},\"node_modules/forge-std/src/Base.sol\":{\"keccak256\":\"0xa3735a6618a3014e42bb4329ad143e3b2c59cd95094350202e4c4a06c9d585dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eef9db48d94726ec3d3fa3a84a8d520903705190f7ee7a04a065335a6aeeac4d\",\"dweb:/ipfs/QmSWmNny7TkzyqRPjGdpERAJuBwwznrGPLUqS4DZy5fX5z\"]},\"node_modules/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"node_modules/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xd3edaf57db178f839d97ccee0009c2b7b20f78c2adca9028a6013acb8d5b4c5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f17329ac1d25d3e6657ca240dee0a3f9b2cf22a64a05b87dac15252dee74351\",\"dweb:/ipfs/QmPHxkEwgVpQNbU52s58RmmegrkYGj8bNKTVSW8rZm3dBm\"]},\"node_modules/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0fa6ec03602648b62cce41aab2096e6b7e052f2846075d967b6958dd586db746\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd84e2ca9c1eaed6b76768cc12bb8c1af8289170ea8b7706f58d516460d79c41\",\"dweb:/ipfs/QmQ7BK7co6DE4eWUqMyv11s5eHYkS1tyx8tDSZGZVtf2aK\"]},\"node_modules/forge-std/src/StdConstants.sol\":{\"keccak256\":\"0x319ccdabfa2c0b2428301445873270ffea20f0e039d4fd5e6eeba65158e4e534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b633f9d3a719e1d035ce7daa6cc051ddf89a72d34200d14cec37728e245cdabc\",\"dweb:/ipfs/QmRP7HQJpHMx1CsFrY8tXVVx1DQmi2dcb2BoGfiWaA923r\"]},\"node_modules/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"node_modules/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"node_modules/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974\",\"dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3\"]},\"node_modules/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"node_modules/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb91ab24383a5872b894fc93325eef1add6cbbf981628f18e860068bf88bb7dcc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2651e33b9ac8fc5803ed0a43078c1bf4fa90a0b0347aafd95776b02daccdcc57\",\"dweb:/ipfs/QmbdRyPuGJdZgnCuMnp7c1WsBo1Spf7j1KMmws1Z5rd4BQ\"]},\"node_modules/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"node_modules/forge-std/src/StdToml.sol\":{\"keccak256\":\"0x58a72c765ed3f7ff6b105509689658795b8a3739b8931772a497155878381861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4a3746f4fabaeb980bd77d9e091d3904ee38a6c0e191bfa8ba6874c6f8558a3\",\"dweb:/ipfs/QmUfFDMEn461FgGEXt5HicyGD54sc28sLaQ9JRWDMBKed8\"]},\"node_modules/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x7274081e11c05164fd8eadde4de8305c033e58a43008dea58065f3170ccf0737\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9801614b6c9d3e472982e6cc68f5f1ad03682f84eafb686be65633c7132d138\",\"dweb:/ipfs/QmcQSUcrm2A7XuektnxJjvYGmZtBeA6LKPxCXRqdXBX776\"]},\"node_modules/forge-std/src/Test.sol\":{\"keccak256\":\"0x3dda6083a83dfa3e8526e97bcc28e862ee2442dd58fe94d5c426d65b8e38f73c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33f8c02e4dabdab86a6825125856446a8657eacd712318b51b7818e4a6f6e3f4\",\"dweb:/ipfs/QmRKSjVnrk54yr8wTK2e6QxRjiuba2H8HJSKunHAkdo7RG\"]},\"node_modules/forge-std/src/Vm.sol\":{\"keccak256\":\"0xaae88142a348064677cf81169ea0ca706be3e99e2a0f13a01878ff8d52cf6b25\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://da4fb0ed1b31381c7e60ee386acc72796e8a8325c83739ec9a3678e2f841073c\",\"dweb:/ipfs/Qmb4MU6FpAi8Wt5kUQ3wa7ooHnfMVbdd9zuvnqbTehLmxJ\"]},\"node_modules/forge-std/src/console.sol\":{\"keccak256\":\"0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57\",\"dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP\"]},\"node_modules/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"node_modules/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab\",\"dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3\"]},\"src/BorrowAdapterBase.sol\":{\"keccak256\":\"0x9777ce2c13c7a40db9ed832b37f83a48e7005b23985c3471c6141de20abecaba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://967f526d10cab884bedbca75424e8defe2a2d3a99041207c6d6d6b1ec9c07821\",\"dweb:/ipfs/QmPMhrtHUptUEJb7gcre6ufgtvWxhcgXEwp9hZUzzy2cXK\"]},\"src/Interfaces/IBorrowVenueAdapter.sol\":{\"keccak256\":\"0xf0663ba90cde311b218ba12afb3c192cb7e3613900d7d1d8cb5315b01593fab7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68c512c03aab50f4f42963311dd8612feb88acacaf46b37c9f009caf300fc023\",\"dweb:/ipfs/QmWBHvBeZ8KvxXWpvRmXmPq5wJH1AzuQ79z8KZjqivvg6a\"]},\"test/BorrowAdapterTest.t.sol\":{\"keccak256\":\"0xcb7278083c5f70f956cdb6d4f6bb74d1d1a1b17ccbac4d7a5b89c062255592bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cfbc1172519475c7efc6cfd28b2f2fe08b3ab7142841b67cfcbe474b1be2823\",\"dweb:/ipfs/QmWZEa8nEtMjBr45GvSmjzJYUt2wFhNe9kNjyw7FrL67aL\"]},\"test/MockBorrowAdapter.sol\":{\"keccak256\":\"0xd79471285ee4fdf89822d2e8bc3b6ac25fa469f96a435654d0193d14397bb1a4\",\"urls\":[\"bzz-raw://fe9c4d166a49fa0e5dc6a58a499c1abedd87678ced67b5546b7019631abea525\",\"dweb:/ipfs/QmYoYhfrKo4ZkmRs4GaYby6jbpdHb235y7nSnM1NRVwRTr\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.24+commit.e11b9ed9" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "debtAsset", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "amount", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "Borrowed",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "debtAsset", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "amount", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "Repaid",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "collateral", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "amount", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "Supplied",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "collateral", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "amount", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "Withdrawn",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "string", "name": "", "type": "string", "indexed": false }],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "address", "name": "", "type": "address", "indexed": false }],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "uint256[]", "name": "val", "type": "uint256[]", "indexed": false }],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "int256[]", "name": "val", "type": "int256[]", "indexed": false }],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "address[]", "name": "val", "type": "address[]", "indexed": false }],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "bytes", "name": "", "type": "bytes", "indexed": false }],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32", "indexed": false }],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "int256", "name": "", "type": "int256", "indexed": false }],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "address", "name": "val", "type": "address", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "uint256[]", "name": "val", "type": "uint256[]", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "int256[]", "name": "val", "type": "int256[]", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "address[]", "name": "val", "type": "address[]", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "bytes", "name": "val", "type": "bytes", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "bytes32", "name": "val", "type": "bytes32", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "int256", "name": "val", "type": "int256", "indexed": false },
            { "internalType": "uint256", "name": "decimals", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "uint256", "name": "val", "type": "uint256", "indexed": false },
            { "internalType": "uint256", "name": "decimals", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "int256", "name": "val", "type": "int256", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "string", "name": "val", "type": "string", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "string", "name": "key", "type": "string", "indexed": false },
            { "internalType": "uint256", "name": "val", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "string", "name": "", "type": "string", "indexed": false }],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256", "indexed": false }],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "bytes", "name": "", "type": "bytes", "indexed": false }],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USDC",
          "outputs": [{ "internalType": "contract MockERC20", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WBTC",
          "outputs": [{ "internalType": "contract MockERC20", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "adapter",
          "outputs": [{ "internalType": "contract MockBorrowAdapter", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cg",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [{ "internalType": "string[]", "name": "excludedArtifacts_", "type": "string[]" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [{ "internalType": "address[]", "name": "excludedContracts_", "type": "address[]" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "excludedSelectors_",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "addr", "type": "address" },
                { "internalType": "bytes4[]", "name": "selectors", "type": "bytes4[]" }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [{ "internalType": "address[]", "name": "excludedSenders_", "type": "address[]" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gov",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rando",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "setUp" },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                { "internalType": "string", "name": "artifact", "type": "string" },
                { "internalType": "bytes4[]", "name": "selectors", "type": "bytes4[]" }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [{ "internalType": "string[]", "name": "targetedArtifacts_", "type": "string[]" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [{ "internalType": "address[]", "name": "targetedContracts_", "type": "address[]" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "addr", "type": "address" },
                { "internalType": "string[]", "name": "artifacts", "type": "string[]" }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "addr", "type": "address" },
                { "internalType": "bytes4[]", "name": "selectors", "type": "bytes4[]" }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [{ "internalType": "address[]", "name": "targetedSenders_", "type": "address[]" }]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_borrow_and_repay_happy_path"
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "test_onlyCG_enforced" },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "test_pause_blocks_calls" },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_repay_requires_allowance_and_balance"
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "test_roles_are_set" },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_supply_and_withdraw_happy_path"
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "test_views_after_activity" },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_withdraw_reverts_if_insufficient"
        }
      ],
      "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@aave/=node_modules/@aave/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@openzeppelin/foundry-upgrades/=node_modules/@openzeppelin/foundry-upgrades/src/",
        "@satlayer/contracts/=node_modules/@satlayer/contracts/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "test/BorrowAdapterTest.t.sol": "BorrowAdapterTest" },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
        "keccak256": "0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af",
        "urls": [
          "bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c",
          "dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
        "keccak256": "0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c",
        "urls": [
          "bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d",
          "dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e",
        "urls": [
          "bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23",
          "dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994",
        "urls": [
          "bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c",
          "dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2",
        "urls": [
          "bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303",
          "dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f",
        "urls": [
          "bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e",
          "dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Pausable.sol": {
        "keccak256": "0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f",
        "urls": [
          "bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c",
          "dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e",
        "urls": [
          "bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377",
          "dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c",
        "urls": [
          "bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617",
          "dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"
        ],
        "license": "MIT"
      },
      "node_modules/@satlayer/contracts/test/MockERC20.sol": {
        "keccak256": "0x971d55f75400611df4ea7a3e5bcf31212e5b5c537d895c9789554ac40e70f5af",
        "urls": [
          "bzz-raw://12c60932fb2b09f777c33f543c6e2bc088f4da5d6d445b5f6d9250680e669cd2",
          "dweb:/ipfs/QmextXW1Bo6uspRPBb6cPszKVuuqPtUtsSCUKYTE4uksa5"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/forge-std/src/Base.sol": {
        "keccak256": "0xa3735a6618a3014e42bb4329ad143e3b2c59cd95094350202e4c4a06c9d585dd",
        "urls": [
          "bzz-raw://eef9db48d94726ec3d3fa3a84a8d520903705190f7ee7a04a065335a6aeeac4d",
          "dweb:/ipfs/QmSWmNny7TkzyqRPjGdpERAJuBwwznrGPLUqS4DZy5fX5z"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270",
        "urls": [
          "bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe",
          "dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdChains.sol": {
        "keccak256": "0xd3edaf57db178f839d97ccee0009c2b7b20f78c2adca9028a6013acb8d5b4c5e",
        "urls": [
          "bzz-raw://0f17329ac1d25d3e6657ca240dee0a3f9b2cf22a64a05b87dac15252dee74351",
          "dweb:/ipfs/QmPHxkEwgVpQNbU52s58RmmegrkYGj8bNKTVSW8rZm3dBm"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0fa6ec03602648b62cce41aab2096e6b7e052f2846075d967b6958dd586db746",
        "urls": [
          "bzz-raw://cd84e2ca9c1eaed6b76768cc12bb8c1af8289170ea8b7706f58d516460d79c41",
          "dweb:/ipfs/QmQ7BK7co6DE4eWUqMyv11s5eHYkS1tyx8tDSZGZVtf2aK"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdConstants.sol": {
        "keccak256": "0x319ccdabfa2c0b2428301445873270ffea20f0e039d4fd5e6eeba65158e4e534",
        "urls": [
          "bzz-raw://b633f9d3a719e1d035ce7daa6cc051ddf89a72d34200d14cec37728e245cdabc",
          "dweb:/ipfs/QmRP7HQJpHMx1CsFrY8tXVVx1DQmi2dcb2BoGfiWaA923r"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d",
        "urls": [
          "bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391",
          "dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdJson.sol": {
        "keccak256": "0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500",
        "urls": [
          "bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974",
          "dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb91ab24383a5872b894fc93325eef1add6cbbf981628f18e860068bf88bb7dcc",
        "urls": [
          "bzz-raw://2651e33b9ac8fc5803ed0a43078c1bf4fa90a0b0347aafd95776b02daccdcc57",
          "dweb:/ipfs/QmbdRyPuGJdZgnCuMnp7c1WsBo1Spf7j1KMmws1Z5rd4BQ"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdToml.sol": {
        "keccak256": "0x58a72c765ed3f7ff6b105509689658795b8a3739b8931772a497155878381861",
        "urls": [
          "bzz-raw://b4a3746f4fabaeb980bd77d9e091d3904ee38a6c0e191bfa8ba6874c6f8558a3",
          "dweb:/ipfs/QmUfFDMEn461FgGEXt5HicyGD54sc28sLaQ9JRWDMBKed8"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdUtils.sol": {
        "keccak256": "0x7274081e11c05164fd8eadde4de8305c033e58a43008dea58065f3170ccf0737",
        "urls": [
          "bzz-raw://e9801614b6c9d3e472982e6cc68f5f1ad03682f84eafb686be65633c7132d138",
          "dweb:/ipfs/QmcQSUcrm2A7XuektnxJjvYGmZtBeA6LKPxCXRqdXBX776"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Test.sol": {
        "keccak256": "0x3dda6083a83dfa3e8526e97bcc28e862ee2442dd58fe94d5c426d65b8e38f73c",
        "urls": [
          "bzz-raw://33f8c02e4dabdab86a6825125856446a8657eacd712318b51b7818e4a6f6e3f4",
          "dweb:/ipfs/QmRKSjVnrk54yr8wTK2e6QxRjiuba2H8HJSKunHAkdo7RG"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Vm.sol": {
        "keccak256": "0xaae88142a348064677cf81169ea0ca706be3e99e2a0f13a01878ff8d52cf6b25",
        "urls": [
          "bzz-raw://da4fb0ed1b31381c7e60ee386acc72796e8a8325c83739ec9a3678e2f841073c",
          "dweb:/ipfs/Qmb4MU6FpAi8Wt5kUQ3wa7ooHnfMVbdd9zuvnqbTehLmxJ"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "node_modules/forge-std/src/console.sol": {
        "keccak256": "0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5",
        "urls": [
          "bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57",
          "dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console2.sol": {
        "keccak256": "0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f",
        "urls": [
          "bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d",
          "dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11",
        "urls": [
          "bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab",
          "dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3"
        ],
        "license": "MIT"
      },
      "src/BorrowAdapterBase.sol": {
        "keccak256": "0x9777ce2c13c7a40db9ed832b37f83a48e7005b23985c3471c6141de20abecaba",
        "urls": [
          "bzz-raw://967f526d10cab884bedbca75424e8defe2a2d3a99041207c6d6d6b1ec9c07821",
          "dweb:/ipfs/QmPMhrtHUptUEJb7gcre6ufgtvWxhcgXEwp9hZUzzy2cXK"
        ],
        "license": "MIT"
      },
      "src/Interfaces/IBorrowVenueAdapter.sol": {
        "keccak256": "0xf0663ba90cde311b218ba12afb3c192cb7e3613900d7d1d8cb5315b01593fab7",
        "urls": [
          "bzz-raw://68c512c03aab50f4f42963311dd8612feb88acacaf46b37c9f009caf300fc023",
          "dweb:/ipfs/QmWBHvBeZ8KvxXWpvRmXmPq5wJH1AzuQ79z8KZjqivvg6a"
        ],
        "license": "MIT"
      },
      "test/BorrowAdapterTest.t.sol": {
        "keccak256": "0xcb7278083c5f70f956cdb6d4f6bb74d1d1a1b17ccbac4d7a5b89c062255592bc",
        "urls": [
          "bzz-raw://2cfbc1172519475c7efc6cfd28b2f2fe08b3ab7142841b67cfcbe474b1be2823",
          "dweb:/ipfs/QmWZEa8nEtMjBr45GvSmjzJYUt2wFhNe9kNjyw7FrL67aL"
        ],
        "license": "MIT"
      },
      "test/MockBorrowAdapter.sol": {
        "keccak256": "0xd79471285ee4fdf89822d2e8bc3b6ac25fa469f96a435654d0193d14397bb1a4",
        "urls": [
          "bzz-raw://fe9c4d166a49fa0e5dc6a58a499c1abedd87678ced67b5546b7019631abea525",
          "dweb:/ipfs/QmYoYhfrKo4ZkmRs4GaYby6jbpdHb235y7nSnM1NRVwRTr"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 29078,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "stdstore",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(StdStorage)37084_storage"
      },
      {
        "astId": 29235,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "_failed",
        "offset": 0,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 31736,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "stdChainsInitialized",
        "offset": 1,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 31757,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "chains",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)31752_storage)"
      },
      {
        "astId": 31761,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "defaultRpcUrls",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      {
        "astId": 31765,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "idToAlias",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 31768,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "fallbackToDefaultRpcUrls",
        "offset": 0,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 32706,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "gasMeteringOff",
        "offset": 1,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 34773,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "stdstore",
        "offset": 0,
        "slot": "13",
        "type": "t_struct(StdStorage)37084_storage"
      },
      {
        "astId": 35690,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "_excludedContracts",
        "offset": 0,
        "slot": "21",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 35693,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "_excludedSenders",
        "offset": 0,
        "slot": "22",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 35696,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "_targetedContracts",
        "offset": 0,
        "slot": "23",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 35699,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "_targetedSenders",
        "offset": 0,
        "slot": "24",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 35702,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "_excludedArtifacts",
        "offset": 0,
        "slot": "25",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 35705,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "_targetedArtifacts",
        "offset": 0,
        "slot": "26",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 35709,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "_targetedArtifactSelectors",
        "offset": 0,
        "slot": "27",
        "type": "t_array(t_struct(FuzzArtifactSelector)35681_storage)dyn_storage"
      },
      {
        "astId": 35713,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "_excludedSelectors",
        "offset": 0,
        "slot": "28",
        "type": "t_array(t_struct(FuzzSelector)35675_storage)dyn_storage"
      },
      {
        "astId": 35717,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "_targetedSelectors",
        "offset": 0,
        "slot": "29",
        "type": "t_array(t_struct(FuzzSelector)35675_storage)dyn_storage"
      },
      {
        "astId": 35721,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "_targetedInterfaces",
        "offset": 0,
        "slot": "30",
        "type": "t_array(t_struct(FuzzInterface)35687_storage)dyn_storage"
      },
      {
        "astId": 41976,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "IS_TEST",
        "offset": 0,
        "slot": "31",
        "type": "t_bool"
      },
      {
        "astId": 75225,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "gov",
        "offset": 1,
        "slot": "31",
        "type": "t_address"
      },
      {
        "astId": 75230,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "cg",
        "offset": 0,
        "slot": "32",
        "type": "t_address"
      },
      {
        "astId": 75235,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "rando",
        "offset": 0,
        "slot": "33",
        "type": "t_address"
      },
      {
        "astId": 75238,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "WBTC",
        "offset": 0,
        "slot": "34",
        "type": "t_contract(MockERC20)28758"
      },
      {
        "astId": 75241,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "USDC",
        "offset": 0,
        "slot": "35",
        "type": "t_contract(MockERC20)28758"
      },
      {
        "astId": 75244,
        "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
        "label": "adapter",
        "offset": 0,
        "slot": "36",
        "type": "t_contract(MockBorrowAdapter)80010"
      }
    ],
    "types": {
      "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
      "t_array(t_address)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32",
        "base": "t_address"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_array(t_bytes4)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes4[]",
        "numberOfBytes": "32",
        "base": "t_bytes4"
      },
      "t_array(t_string_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32",
        "base": "t_string_storage"
      },
      "t_array(t_struct(FuzzArtifactSelector)35681_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct StdInvariant.FuzzArtifactSelector[]",
        "numberOfBytes": "32",
        "base": "t_struct(FuzzArtifactSelector)35681_storage"
      },
      "t_array(t_struct(FuzzInterface)35687_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct StdInvariant.FuzzInterface[]",
        "numberOfBytes": "32",
        "base": "t_struct(FuzzInterface)35687_storage"
      },
      "t_array(t_struct(FuzzSelector)35675_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct StdInvariant.FuzzSelector[]",
        "numberOfBytes": "32",
        "base": "t_struct(FuzzSelector)35675_storage"
      },
      "t_bool": { "encoding": "inplace", "label": "bool", "numberOfBytes": "1" },
      "t_bytes32": { "encoding": "inplace", "label": "bytes32", "numberOfBytes": "32" },
      "t_bytes4": { "encoding": "inplace", "label": "bytes4", "numberOfBytes": "4" },
      "t_bytes_storage": { "encoding": "bytes", "label": "bytes", "numberOfBytes": "32" },
      "t_contract(MockBorrowAdapter)80010": {
        "encoding": "inplace",
        "label": "contract MockBorrowAdapter",
        "numberOfBytes": "20"
      },
      "t_contract(MockERC20)28758": { "encoding": "inplace", "label": "contract MockERC20", "numberOfBytes": "20" },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)37059_storage)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => struct FindData)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)37059_storage))"
      },
      "t_mapping(t_bytes32,t_struct(FindData)37059_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct FindData)",
        "numberOfBytes": "32",
        "value": "t_struct(FindData)37059_storage"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)37059_storage))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => struct FindData))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_struct(FindData)37059_storage)"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Chain)31752_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct StdChains.Chain)",
        "numberOfBytes": "32",
        "value": "t_struct(Chain)31752_storage"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_memory_ptr": { "encoding": "bytes", "label": "string", "numberOfBytes": "32" },
      "t_string_storage": { "encoding": "bytes", "label": "string", "numberOfBytes": "32" },
      "t_struct(Chain)31752_storage": {
        "encoding": "inplace",
        "label": "struct StdChains.Chain",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 31745,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 31747,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "chainId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 31749,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "chainAlias",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 31751,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "rpcUrl",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ]
      },
      "t_struct(FindData)37059_storage": {
        "encoding": "inplace",
        "label": "struct FindData",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 37052,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "slot",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 37054,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "offsetLeft",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 37056,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "offsetRight",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 37058,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "found",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          }
        ]
      },
      "t_struct(FuzzArtifactSelector)35681_storage": {
        "encoding": "inplace",
        "label": "struct StdInvariant.FuzzArtifactSelector",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 35677,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "artifact",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 35680,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "selectors",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes4)dyn_storage"
          }
        ]
      },
      "t_struct(FuzzInterface)35687_storage": {
        "encoding": "inplace",
        "label": "struct StdInvariant.FuzzInterface",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 35683,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 35686,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "artifacts",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_string_storage)dyn_storage"
          }
        ]
      },
      "t_struct(FuzzSelector)35675_storage": {
        "encoding": "inplace",
        "label": "struct StdInvariant.FuzzSelector",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 35671,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 35674,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "selectors",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes4)dyn_storage"
          }
        ]
      },
      "t_struct(StdStorage)37084_storage": {
        "encoding": "inplace",
        "label": "struct StdStorage",
        "numberOfBytes": "256",
        "members": [
          {
            "astId": 37068,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "finds",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_struct(FindData)37059_storage)))"
          },
          {
            "astId": 37071,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "_keys",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 37073,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "_sig",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes4"
          },
          {
            "astId": 37075,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "_depth",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 37077,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "_target",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 37079,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "_set",
            "offset": 0,
            "slot": "5",
            "type": "t_bytes32"
          },
          {
            "astId": 37081,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "_enable_packed_slots",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 37083,
            "contract": "test/BorrowAdapterTest.t.sol:BorrowAdapterTest",
            "label": "_calldata",
            "offset": 0,
            "slot": "7",
            "type": "t_bytes_storage"
          }
        ]
      },
      "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" }
    }
  },
  "ast": {
    "absolutePath": "test/BorrowAdapterTest.t.sol",
    "id": 76002,
    "exportedSymbols": {
      "AccessControl": [4646],
      "BorrowAdapterBase": [68970],
      "BorrowAdapterTest": [76001],
      "IAccessControl": [4729],
      "IBorrowVenueAdapter": [72079],
      "IERC20": [6631],
      "IMockMintable": [79759],
      "MockBorrowAdapter": [80010],
      "MockERC20": [28758],
      "Pausable": [9333],
      "Test": [41977],
      "console": [55108]
    },
    "nodeType": "SourceUnit",
    "src": "32:6358:117",
    "nodes": [
      {
        "id": 75208,
        "nodeType": "PragmaDirective",
        "src": "32:24:117",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".24"]
      },
      {
        "id": 75211,
        "nodeType": "ImportDirective",
        "src": "58:49:117",
        "nodes": [],
        "absolutePath": "node_modules/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76002,
        "sourceUnit": 41978,
        "symbolAliases": [
          {
            "foreign": {
              "id": 75209,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41977,
              "src": "66:4:117",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 75210,
              "name": "console",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55108,
              "src": "72:7:117",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 75213,
        "nodeType": "ImportDirective",
        "src": "108:81:117",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "file": "@openzeppelin/contracts/access/IAccessControl.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76002,
        "sourceUnit": 4730,
        "symbolAliases": [
          {
            "foreign": {
              "id": 75212,
              "name": "IAccessControl",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4729,
              "src": "116:14:117",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 75215,
        "nodeType": "ImportDirective",
        "src": "190:70:117",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76002,
        "sourceUnit": 6632,
        "symbolAliases": [
          {
            "foreign": {
              "id": 75214,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6631,
              "src": "198:6:117",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 75217,
        "nodeType": "ImportDirective",
        "src": "262:65:117",
        "nodes": [],
        "absolutePath": "node_modules/@satlayer/contracts/test/MockERC20.sol",
        "file": "@satlayer/contracts/test/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76002,
        "sourceUnit": 28759,
        "symbolAliases": [
          {
            "foreign": {
              "id": 75216,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28758,
              "src": "270:9:117",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 75218,
        "nodeType": "ImportDirective",
        "src": "356:33:117",
        "nodes": [],
        "absolutePath": "test/MockBorrowAdapter.sol",
        "file": "./MockBorrowAdapter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76002,
        "sourceUnit": 80011,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76001,
        "nodeType": "ContractDefinition",
        "src": "417:5972:117",
        "nodes": [
          {
            "id": 75225,
            "nodeType": "VariableDeclaration",
            "src": "458:39:117",
            "nodes": [],
            "constant": false,
            "functionSelector": "12d43a51",
            "mutability": "mutable",
            "name": "gov",
            "nameLocation": "473:3:117",
            "scope": 76001,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
            "typeName": {
              "id": 75221,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "458:7:117",
              "stateMutability": "nonpayable",
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "676f76",
                  "id": 75223,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "491:5:117",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_0513914b5dbefa3a0eed07f860beb4ab89366ecf422e323f9160c4de52afed69",
                    "typeString": "literal_string \"gov\""
                  },
                  "value": "gov"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_0513914b5dbefa3a0eed07f860beb4ab89366ecf422e323f9160c4de52afed69",
                    "typeString": "literal_string \"gov\""
                  }
                ],
                "id": 75222,
                "name": "makeAddr",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 34526,
                "src": "482:8:117",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                  "typeString": "function (string memory) returns (address)"
                }
              },
              "id": 75224,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "482:15:117",
              "tryCall": false,
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "visibility": "public"
          },
          {
            "id": 75230,
            "nodeType": "VariableDeclaration",
            "src": "503:38:117",
            "nodes": [],
            "constant": false,
            "functionSelector": "b215a879",
            "mutability": "mutable",
            "name": "cg",
            "nameLocation": "518:2:117",
            "scope": 76001,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
            "typeName": {
              "id": 75226,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "503:7:117",
              "stateMutability": "nonpayable",
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "6367",
                  "id": 75228,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "536:4:117",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_858b6cd8250d3134ae94ce77c171c375b11520ffa28f588a35726b17327eb708",
                    "typeString": "literal_string \"cg\""
                  },
                  "value": "cg"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_858b6cd8250d3134ae94ce77c171c375b11520ffa28f588a35726b17327eb708",
                    "typeString": "literal_string \"cg\""
                  }
                ],
                "id": 75227,
                "name": "makeAddr",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 34526,
                "src": "527:8:117",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                  "typeString": "function (string memory) returns (address)"
                }
              },
              "id": 75229,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "527:14:117",
              "tryCall": false,
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "visibility": "public"
          },
          {
            "id": 75235,
            "nodeType": "VariableDeclaration",
            "src": "586:41:117",
            "nodes": [],
            "constant": false,
            "functionSelector": "9c63088e",
            "mutability": "mutable",
            "name": "rando",
            "nameLocation": "601:5:117",
            "scope": 76001,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
            "typeName": {
              "id": 75231,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "586:7:117",
              "stateMutability": "nonpayable",
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "72616e646f",
                  "id": 75233,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "619:7:117",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_c1bd5d7805a90cc43ef3450b042edddc4d569e442b06c421d2d4659f05df32da",
                    "typeString": "literal_string \"rando\""
                  },
                  "value": "rando"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_c1bd5d7805a90cc43ef3450b042edddc4d569e442b06c421d2d4659f05df32da",
                    "typeString": "literal_string \"rando\""
                  }
                ],
                "id": 75232,
                "name": "makeAddr",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 34526,
                "src": "610:8:117",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                  "typeString": "function (string memory) returns (address)"
                }
              },
              "id": 75234,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "610:17:117",
              "tryCall": false,
              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
            },
            "visibility": "public"
          },
          {
            "id": 75238,
            "nodeType": "VariableDeclaration",
            "src": "634:21:117",
            "nodes": [],
            "constant": false,
            "functionSelector": "4dede3de",
            "mutability": "mutable",
            "name": "WBTC",
            "nameLocation": "651:4:117",
            "scope": 76001,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$28758",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 75237,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 75236,
                "name": "MockERC20",
                "nameLocations": ["634:9:117"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28758,
                "src": "634:9:117"
              },
              "referencedDeclaration": 28758,
              "src": "634:9:117",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$28758",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 75241,
            "nodeType": "VariableDeclaration",
            "src": "688:21:117",
            "nodes": [],
            "constant": false,
            "functionSelector": "89a30271",
            "mutability": "mutable",
            "name": "USDC",
            "nameLocation": "705:4:117",
            "scope": 76001,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$28758",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 75240,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 75239,
                "name": "MockERC20",
                "nameLocations": ["688:9:117"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28758,
                "src": "688:9:117"
              },
              "referencedDeclaration": 28758,
              "src": "688:9:117",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$28758",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 75244,
            "nodeType": "VariableDeclaration",
            "src": "743:32:117",
            "nodes": [],
            "constant": false,
            "functionSelector": "03eadcfc",
            "mutability": "mutable",
            "name": "adapter",
            "nameLocation": "768:7:117",
            "scope": 76001,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
              "typeString": "contract MockBorrowAdapter"
            },
            "typeName": {
              "id": 75243,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 75242,
                "name": "MockBorrowAdapter",
                "nameLocations": ["743:17:117"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 80010,
                "src": "743:17:117"
              },
              "referencedDeclaration": 80010,
              "src": "743:17:117",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                "typeString": "contract MockBorrowAdapter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 75307,
            "nodeType": "FunctionDefinition",
            "src": "782:331:117",
            "nodes": [],
            "body": {
              "id": 75306,
              "nodeType": "Block",
              "src": "806:307:117",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 75255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75247,
                      "name": "WBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75238,
                      "src": "816:4:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28758",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "5772617070656420425443",
                          "id": 75251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "837:13:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2ef08214ff447791a5e9afb7318f8e3059fd5f496df6b60a73eead50d2471ef1",
                            "typeString": "literal_string \"Wrapped BTC\""
                          },
                          "value": "Wrapped BTC"
                        },
                        {
                          "hexValue": "57425443",
                          "id": 75252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "852:6:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73",
                            "typeString": "literal_string \"WBTC\""
                          },
                          "value": "WBTC"
                        },
                        {
                          "hexValue": "38",
                          "id": 75253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "860:1:117",
                          "typeDescriptions": { "typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8" },
                          "value": "8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_2ef08214ff447791a5e9afb7318f8e3059fd5f496df6b60a73eead50d2471ef1",
                            "typeString": "literal_string \"Wrapped BTC\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73",
                            "typeString": "literal_string \"WBTC\""
                          },
                          { "typeIdentifier": "t_rational_8_by_1", "typeString": "int_const 8" }
                        ],
                        "id": 75250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "823:13:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$28758_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 75249,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 75248,
                            "name": "MockERC20",
                            "nameLocations": ["827:9:117"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28758,
                            "src": "827:9:117"
                          },
                          "referencedDeclaration": 28758,
                          "src": "827:9:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$28758",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 75254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "823:39:117",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28758",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "816:46:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$28758",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 75256,
                  "nodeType": "ExpressionStatement",
                  "src": "816:46:117"
                },
                {
                  "expression": {
                    "id": 75265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75257,
                      "name": "USDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75241,
                      "src": "872:4:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28758",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "55534420436f696e",
                          "id": 75261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "893:10:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_52878b207aaddbfc15ea7bebcda681eb8ccd306e2227b61cef68505c8c056341",
                            "typeString": "literal_string \"USD Coin\""
                          },
                          "value": "USD Coin"
                        },
                        {
                          "hexValue": "55534443",
                          "id": 75262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "905:6:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa",
                            "typeString": "literal_string \"USDC\""
                          },
                          "value": "USDC"
                        },
                        {
                          "hexValue": "36",
                          "id": 75263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "913:1:117",
                          "typeDescriptions": { "typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6" },
                          "value": "6"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_52878b207aaddbfc15ea7bebcda681eb8ccd306e2227b61cef68505c8c056341",
                            "typeString": "literal_string \"USD Coin\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa",
                            "typeString": "literal_string \"USDC\""
                          },
                          { "typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6" }
                        ],
                        "id": 75260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "879:13:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_MockERC20_$28758_$",
                          "typeString": "function (string memory,string memory,uint8) returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 75259,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 75258,
                            "name": "MockERC20",
                            "nameLocations": ["883:9:117"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28758,
                            "src": "883:9:117"
                          },
                          "referencedDeclaration": 28758,
                          "src": "883:9:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$28758",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 75264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "879:36:117",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$28758",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "872:43:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$28758",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 75266,
                  "nodeType": "ExpressionStatement",
                  "src": "872:43:117"
                },
                {
                  "expression": {
                    "id": 75274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 75267,
                      "name": "adapter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75244,
                      "src": "926:7:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                        "typeString": "contract MockBorrowAdapter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 75271,
                          "name": "gov",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75225,
                          "src": "958:3:117",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        {
                          "id": 75272,
                          "name": "cg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75230,
                          "src": "963:2:117",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          { "typeIdentifier": "t_address", "typeString": "address" },
                          { "typeIdentifier": "t_address", "typeString": "address" }
                        ],
                        "id": 75270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "936:21:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_MockBorrowAdapter_$80010_$",
                          "typeString": "function (address,address) returns (contract MockBorrowAdapter)"
                        },
                        "typeName": {
                          "id": 75269,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 75268,
                            "name": "MockBorrowAdapter",
                            "nameLocations": ["940:17:117"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 80010,
                            "src": "940:17:117"
                          },
                          "referencedDeclaration": 80010,
                          "src": "940:17:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                            "typeString": "contract MockBorrowAdapter"
                          }
                        }
                      },
                      "id": 75273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "936:30:117",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                        "typeString": "contract MockBorrowAdapter"
                      }
                    },
                    "src": "926:40:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                      "typeString": "contract MockBorrowAdapter"
                    }
                  },
                  "id": 75275,
                  "nodeType": "ExpressionStatement",
                  "src": "926:40:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75281,
                            "name": "WBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75238,
                            "src": "994:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "986:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75279,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "986:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "986:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "57425443",
                        "id": 75283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1001:6:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73",
                          "typeString": "literal_string \"WBTC\""
                        },
                        "value": "WBTC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73",
                          "typeString": "literal_string \"WBTC\""
                        }
                      ],
                      "expression": {
                        "id": 75276,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "977:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "980:5:117",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "977:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 75284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "977:31:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75285,
                  "nodeType": "ExpressionStatement",
                  "src": "977:31:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75291,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75241,
                            "src": "1035:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1027:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75289,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1027:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1027:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "55534443",
                        "id": 75293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1042:6:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa",
                          "typeString": "literal_string \"USDC\""
                        },
                        "value": "USDC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa",
                          "typeString": "literal_string \"USDC\""
                        }
                      ],
                      "expression": {
                        "id": 75286,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "1018:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1021:5:117",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "1018:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 75294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1018:31:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75295,
                  "nodeType": "ExpressionStatement",
                  "src": "1018:31:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75301,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "1076:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          ],
                          "id": 75300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1068:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75299,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1068:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1068:16:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "4d6f636b426f72726f7741646170746572",
                        "id": 75303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1086:19:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a25d7ef8777b9a2b8357177764e99db40d6549c73c6c1b6f400eb81eae6bdba",
                          "typeString": "literal_string \"MockBorrowAdapter\""
                        },
                        "value": "MockBorrowAdapter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        {
                          "typeIdentifier": "t_stringliteral_4a25d7ef8777b9a2b8357177764e99db40d6549c73c6c1b6f400eb81eae6bdba",
                          "typeString": "literal_string \"MockBorrowAdapter\""
                        }
                      ],
                      "expression": {
                        "id": 75296,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "1059:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1062:5:117",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45776,
                      "src": "1059:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 75304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1059:47:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75305,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:47:117"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "791:5:117",
            "parameters": { "id": 75245, "nodeType": "ParameterList", "parameters": [], "src": "796:2:117" },
            "returnParameters": { "id": 75246, "nodeType": "ParameterList", "parameters": [], "src": "806:0:117" },
            "scope": 76001,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75341,
            "nodeType": "FunctionDefinition",
            "src": "1186:271:117",
            "nodes": [],
            "body": {
              "id": 75340,
              "nodeType": "Block",
              "src": "1223:234:117",
              "nodes": [],
              "statements": [
                {
                  "assignments": [75311],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75311,
                      "mutability": "mutable",
                      "name": "RGOV",
                      "nameLocation": "1241:4:117",
                      "nodeType": "VariableDeclaration",
                      "scope": 75340,
                      "src": "1233:12:117",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                      "typeName": {
                        "id": 75310,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1233:7:117",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75315,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75312,
                        "name": "adapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75244,
                        "src": "1248:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                          "typeString": "contract MockBorrowAdapter"
                        }
                      },
                      "id": 75313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1256:8:117",
                      "memberName": "ROLE_GOV",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68702,
                      "src": "1248:16:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 75314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1248:18:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1233:33:117"
                },
                {
                  "assignments": [75317],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75317,
                      "mutability": "mutable",
                      "name": "RG",
                      "nameLocation": "1284:2:117",
                      "nodeType": "VariableDeclaration",
                      "scope": 75340,
                      "src": "1276:10:117",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                      "typeName": {
                        "id": 75316,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1276:7:117",
                        "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75321,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75318,
                        "name": "adapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75244,
                        "src": "1289:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                          "typeString": "contract MockBorrowAdapter"
                        }
                      },
                      "id": 75319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1297:7:117",
                      "memberName": "ROLE_CG",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68707,
                      "src": "1289:15:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 75320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1289:17:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1276:30:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75325,
                            "name": "RGOV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75311,
                            "src": "1343:4:117",
                            "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                          },
                          {
                            "id": 75326,
                            "name": "gov",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75225,
                            "src": "1349:3:117",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                            { "typeIdentifier": "t_address", "typeString": "address" }
                          ],
                          "expression": {
                            "id": 75323,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "1327:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          },
                          "id": 75324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1335:7:117",
                          "memberName": "hasRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4431,
                          "src": "1327:15:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view external returns (bool)"
                          }
                        },
                        "id": 75327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1327:26:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "676f76206d757374206861766520524f4c455f474f56",
                        "id": 75328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1355:24:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fbb7f6d960fbb6ac702f31070fb04a9cb410986540de2f99d42438e02d88b412",
                          "typeString": "literal_string \"gov must have ROLE_GOV\""
                        },
                        "value": "gov must have ROLE_GOV"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_fbb7f6d960fbb6ac702f31070fb04a9cb410986540de2f99d42438e02d88b412",
                          "typeString": "literal_string \"gov must have ROLE_GOV\""
                        }
                      ],
                      "id": 75322,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [29304, 29319],
                      "referencedDeclaration": 29319,
                      "src": "1316:10:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 75329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1316:64:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75330,
                  "nodeType": "ExpressionStatement",
                  "src": "1316:64:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75334,
                            "name": "RG",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75317,
                            "src": "1417:2:117",
                            "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                          },
                          {
                            "id": 75335,
                            "name": "cg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75230,
                            "src": "1421:2:117",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                            { "typeIdentifier": "t_address", "typeString": "address" }
                          ],
                          "expression": {
                            "id": 75332,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "1401:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          },
                          "id": 75333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1409:7:117",
                          "memberName": "hasRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4431,
                          "src": "1401:15:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view external returns (bool)"
                          }
                        },
                        "id": 75336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1401:23:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                      },
                      {
                        "hexValue": "6367206d757374206861766520524f4c455f4347",
                        "id": 75337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1427:22:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df8b57e600de3db3b75795e353daa08b8a89a39410d6b8db6f3c9f314408b5f5",
                          "typeString": "literal_string \"cg must have ROLE_CG\""
                        },
                        "value": "cg must have ROLE_CG"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_df8b57e600de3db3b75795e353daa08b8a89a39410d6b8db6f3c9f314408b5f5",
                          "typeString": "literal_string \"cg must have ROLE_CG\""
                        }
                      ],
                      "id": 75331,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [29304, 29319],
                      "referencedDeclaration": 29319,
                      "src": "1390:10:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 75338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1390:60:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75339,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:60:117"
                }
              ]
            },
            "functionSelector": "d09d67d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_roles_are_set",
            "nameLocation": "1195:18:117",
            "parameters": { "id": 75308, "nodeType": "ParameterList", "parameters": [], "src": "1213:2:117" },
            "returnParameters": { "id": 75309, "nodeType": "ParameterList", "parameters": [], "src": "1223:0:117" },
            "scope": 76001,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75389,
            "nodeType": "FunctionDefinition",
            "src": "1463:331:117",
            "nodes": [],
            "body": {
              "id": 75388,
              "nodeType": "Block",
              "src": "1502:292:117",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75344,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "1551:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1554:12:117",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46869,
                      "src": "1551:15:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 75347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1551:17:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75348,
                  "nodeType": "ExpressionStatement",
                  "src": "1551:17:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75352,
                        "name": "rando",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75235,
                        "src": "1587:5:117",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 75349,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "1578:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1581:5:117",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "1578:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 75353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1578:15:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75354,
                  "nodeType": "ExpressionStatement",
                  "src": "1578:15:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75360,
                            "name": "WBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75238,
                            "src": "1636:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1628:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75358,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1628:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1628:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "31",
                        "id": 75362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1643:1:117",
                        "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 75363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1646:2:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 75355,
                        "name": "adapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75244,
                        "src": "1603:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                          "typeString": "contract MockBorrowAdapter"
                        }
                      },
                      "id": 75357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1611:16:117",
                      "memberName": "supplyCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68792,
                      "src": "1603:24:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 75364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1603:46:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75365,
                  "nodeType": "ExpressionStatement",
                  "src": "1603:46:117"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75366,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "1699:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1702:12:117",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46869,
                      "src": "1699:15:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 75369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1699:17:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75370,
                  "nodeType": "ExpressionStatement",
                  "src": "1699:17:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75374,
                        "name": "rando",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75235,
                        "src": "1735:5:117",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 75371,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "1726:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1729:5:117",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "1726:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 75375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1726:15:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75376,
                  "nodeType": "ExpressionStatement",
                  "src": "1726:15:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75382,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75241,
                            "src": "1774:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1766:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75380,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1766:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1766:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "31",
                        "id": 75384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1781:1:117",
                        "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 75385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1784:2:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 75377,
                        "name": "adapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75244,
                        "src": "1751:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                          "typeString": "contract MockBorrowAdapter"
                        }
                      },
                      "id": 75379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1759:6:117",
                      "memberName": "borrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68850,
                      "src": "1751:14:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 75386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1751:36:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75387,
                  "nodeType": "ExpressionStatement",
                  "src": "1751:36:117"
                }
              ]
            },
            "functionSelector": "7e988aed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_onlyCG_enforced",
            "nameLocation": "1472:20:117",
            "parameters": { "id": 75342, "nodeType": "ParameterList", "parameters": [], "src": "1492:2:117" },
            "returnParameters": { "id": 75343, "nodeType": "ParameterList", "parameters": [], "src": "1502:0:117" },
            "scope": 76001,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75439,
            "nodeType": "FunctionDefinition",
            "src": "1800:390:117",
            "nodes": [],
            "body": {
              "id": 75438,
              "nodeType": "Block",
              "src": "1842:348:117",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75395,
                        "name": "gov",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75225,
                        "src": "1883:3:117",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 75392,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "1874:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1877:5:117",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "1874:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 75396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1874:13:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75397,
                  "nodeType": "ExpressionStatement",
                  "src": "1874:13:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 75401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1915:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }],
                      "expression": {
                        "id": 75398,
                        "name": "adapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75244,
                        "src": "1897:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                          "typeString": "contract MockBorrowAdapter"
                        }
                      },
                      "id": 75400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1905:9:117",
                      "memberName": "setPaused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68765,
                      "src": "1897:17:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 75402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1897:23:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75403,
                  "nodeType": "ExpressionStatement",
                  "src": "1897:23:117"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75404,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "1969:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1972:12:117",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46869,
                      "src": "1969:15:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 75407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1969:17:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75408,
                  "nodeType": "ExpressionStatement",
                  "src": "1969:17:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75412,
                        "name": "cg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75230,
                        "src": "2005:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 75409,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "1996:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1999:5:117",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "1996:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 75413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:12:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75414,
                  "nodeType": "ExpressionStatement",
                  "src": "1996:12:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75420,
                            "name": "WBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75238,
                            "src": "2051:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2043:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75418,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2043:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2043:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "31",
                        "id": 75422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2058:1:117",
                        "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 75423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2061:2:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 75415,
                        "name": "adapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75244,
                        "src": "2018:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                          "typeString": "contract MockBorrowAdapter"
                        }
                      },
                      "id": 75417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2026:16:117",
                      "memberName": "supplyCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68792,
                      "src": "2018:24:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 75424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2018:46:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75425,
                  "nodeType": "ExpressionStatement",
                  "src": "2018:46:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75429,
                        "name": "gov",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75225,
                        "src": "2103:3:117",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 75426,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "2094:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2097:5:117",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "2094:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 75430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2094:13:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75431,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:13:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 75435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2135:5:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }],
                      "expression": {
                        "id": 75432,
                        "name": "adapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75244,
                        "src": "2117:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                          "typeString": "contract MockBorrowAdapter"
                        }
                      },
                      "id": 75434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2125:9:117",
                      "memberName": "setPaused",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68765,
                      "src": "2117:17:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 75436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2117:24:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75437,
                  "nodeType": "ExpressionStatement",
                  "src": "2117:24:117"
                }
              ]
            },
            "functionSelector": "25c7f70b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_pause_blocks_calls",
            "nameLocation": "1809:23:117",
            "parameters": { "id": 75390, "nodeType": "ParameterList", "parameters": [], "src": "1832:2:117" },
            "returnParameters": { "id": 75391, "nodeType": "ParameterList", "parameters": [], "src": "1842:0:117" },
            "scope": 76001,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75607,
            "nodeType": "FunctionDefinition",
            "src": "2267:1220:117",
            "nodes": [],
            "body": {
              "id": 75606,
              "nodeType": "Block",
              "src": "2321:1166:117",
              "nodes": [],
              "statements": [
                {
                  "assignments": [75443],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75443,
                      "mutability": "mutable",
                      "name": "amt",
                      "nameLocation": "2339:3:117",
                      "nodeType": "VariableDeclaration",
                      "scope": 75606,
                      "src": "2331:11:117",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 75442,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2331:7:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75445,
                  "initialValue": {
                    "hexValue": "31306538",
                    "id": 75444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2345:4:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000_by_1",
                      "typeString": "int_const 1000000000"
                    },
                    "value": "10e8"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2331:18:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75449,
                        "name": "cg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75230,
                        "src": "2416:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 75450,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75443,
                        "src": "2420:3:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 75446,
                        "name": "WBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75238,
                        "src": "2406:4:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 75448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2411:4:117",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28757,
                      "src": "2406:9:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 75451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2406:18:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75452,
                  "nodeType": "ExpressionStatement",
                  "src": "2406:18:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75456,
                        "name": "cg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75230,
                        "src": "2488:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 75453,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "2474:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2477:10:117",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46477,
                      "src": "2474:13:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 75457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2474:17:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75458,
                  "nodeType": "ExpressionStatement",
                  "src": "2474:17:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75464,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "2522:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          ],
                          "id": 75463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2514:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75462,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2514:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2514:16:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 75468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2537:7:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 75467,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2537:7:117",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)" }
                            ],
                            "id": 75466,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2532:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 75469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2532:13:117",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 75470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2546:3:117",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2532:17:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 75459,
                        "name": "WBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75238,
                        "src": "2501:4:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 75461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2506:7:117",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6204,
                      "src": "2501:12:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 75471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2501:49:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 75472,
                  "nodeType": "ExpressionStatement",
                  "src": "2501:49:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 75476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2626:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 75477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2632:5:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 75478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2639:5:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "false"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 75479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2646:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 75482,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "2660:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          ],
                          "id": 75481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2652:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75480,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2652:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2652:16:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_address", "typeString": "address" }
                      ],
                      "expression": {
                        "id": 75473,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "2612:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2615:10:117",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46797,
                      "src": "2612:13:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool,address) external"
                      }
                    },
                    "id": 75484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2612:57:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75485,
                  "nodeType": "ExpressionStatement",
                  "src": "2612:57:117"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75491,
                            "name": "WBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75238,
                            "src": "2719:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2711:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75489,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2711:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2711:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 75493,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75443,
                        "src": "2726:3:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 75486,
                        "name": "BorrowAdapterBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68970,
                        "src": "2684:17:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BorrowAdapterBase_$68970_$",
                          "typeString": "type(contract BorrowAdapterBase)"
                        }
                      },
                      "id": 75488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2702:8:117",
                      "memberName": "Supplied",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68713,
                      "src": "2684:26:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 75494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2684:46:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75495,
                  "nodeType": "EmitStatement",
                  "src": "2679:51:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75501,
                            "name": "WBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75238,
                            "src": "2773:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2765:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75499,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2765:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2765:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 75503,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75443,
                        "src": "2780:3:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "",
                        "id": 75504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2785:2:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 75496,
                        "name": "adapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75244,
                        "src": "2740:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                          "typeString": "contract MockBorrowAdapter"
                        }
                      },
                      "id": 75498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2748:16:117",
                      "memberName": "supplyCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68792,
                      "src": "2740:24:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 75505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2740:48:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75506,
                  "nodeType": "ExpressionStatement",
                  "src": "2740:48:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 75512,
                                "name": "adapter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75244,
                                "src": "2831:7:117",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                                  "typeString": "contract MockBorrowAdapter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                                  "typeString": "contract MockBorrowAdapter"
                                }
                              ],
                              "id": 75511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2823:7:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 75510,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2823:7:117",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 75513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2823:16:117",
                            "tryCall": false,
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 75508,
                            "name": "WBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75238,
                            "src": "2808:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 75509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2813:9:117",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6139,
                          "src": "2808:14:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 75514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2808:32:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 75515,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75443,
                        "src": "2842:3:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "6164617074657220686f6c647320737570706c6965642057425443",
                        "id": 75516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2847:29:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445f79975b0e99c45deadaed83323b1c4d8734b48f31ac517aa406f94ae5a09b",
                          "typeString": "literal_string \"adapter holds supplied WBTC\""
                        },
                        "value": "adapter holds supplied WBTC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_445f79975b0e99c45deadaed83323b1c4d8734b48f31ac517aa406f94ae5a09b",
                          "typeString": "literal_string \"adapter holds supplied WBTC\""
                        }
                      ],
                      "id": 75507,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29412,
                      "src": "2799:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 75517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2799:78:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75518,
                  "nodeType": "ExpressionStatement",
                  "src": "2799:78:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 75524,
                                "name": "WBTC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75238,
                                "src": "2930:4:117",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$28758",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                              ],
                              "id": 75523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2922:7:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 75522,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2922:7:117",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 75525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2922:13:117",
                            "tryCall": false,
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 75520,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "2896:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          },
                          "id": 75521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2904:17:117",
                          "memberName": "collateralBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79795,
                          "src": "2896:25:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 75526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2896:40:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 75527,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75443,
                        "src": "2938:3:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "6c65646765722075706461746564",
                        "id": 75528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2943:16:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d84918815f263c57d77c000dcc6d1b789ddba996027118d187a23fd39c13c1f4",
                          "typeString": "literal_string \"ledger updated\""
                        },
                        "value": "ledger updated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_d84918815f263c57d77c000dcc6d1b789ddba996027118d187a23fd39c13c1f4",
                          "typeString": "literal_string \"ledger updated\""
                        }
                      ],
                      "id": 75519,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29412,
                      "src": "2887:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 75529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2887:73:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75530,
                  "nodeType": "ExpressionStatement",
                  "src": "2887:73:117"
                },
                {
                  "assignments": [75532],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75532,
                      "mutability": "mutable",
                      "name": "half",
                      "nameLocation": "3010:4:117",
                      "nodeType": "VariableDeclaration",
                      "scope": 75606,
                      "src": "3002:12:117",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 75531,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3002:7:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75536,
                  "initialValue": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 75535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 75533,
                      "name": "amt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75443,
                      "src": "3017:3:117",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 75534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3023:1:117",
                      "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" },
                      "value": "2"
                    },
                    "src": "3017:7:117",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3002:22:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 75540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3048:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 75541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3054:5:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 75542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3061:5:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "false"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 75543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3068:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 75546,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "3082:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          ],
                          "id": 75545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3074:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75544,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3074:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3074:16:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_address", "typeString": "address" }
                      ],
                      "expression": {
                        "id": 75537,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "3034:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3037:10:117",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46797,
                      "src": "3034:13:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool,address) external"
                      }
                    },
                    "id": 75548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3034:57:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75549,
                  "nodeType": "ExpressionStatement",
                  "src": "3034:57:117"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75555,
                            "name": "WBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75238,
                            "src": "3142:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3134:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75553,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3134:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3134:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 75557,
                        "name": "half",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75532,
                        "src": "3149:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 75550,
                        "name": "BorrowAdapterBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68970,
                        "src": "3106:17:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BorrowAdapterBase_$68970_$",
                          "typeString": "type(contract BorrowAdapterBase)"
                        }
                      },
                      "id": 75552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3124:9:117",
                      "memberName": "Withdrawn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68719,
                      "src": "3106:27:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 75558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3106:48:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75559,
                  "nodeType": "EmitStatement",
                  "src": "3101:53:117"
                },
                {
                  "assignments": [75561],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75561,
                      "mutability": "mutable",
                      "name": "out",
                      "nameLocation": "3172:3:117",
                      "nodeType": "VariableDeclaration",
                      "scope": 75606,
                      "src": "3164:11:117",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 75560,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3164:7:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75571,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75566,
                            "name": "WBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75238,
                            "src": "3213:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3205:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75564,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3205:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3205:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 75568,
                        "name": "half",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75532,
                        "src": "3220:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "",
                        "id": 75569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3226:2:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 75562,
                        "name": "adapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75244,
                        "src": "3178:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                          "typeString": "contract MockBorrowAdapter"
                        }
                      },
                      "id": 75563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3186:18:117",
                      "memberName": "withdrawCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68823,
                      "src": "3178:26:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,bytes memory) external returns (uint256)"
                      }
                    },
                    "id": 75570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3178:51:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3164:65:117"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75572,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "3239:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3242:9:117",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46521,
                      "src": "3239:12:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 75575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3239:14:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75576,
                  "nodeType": "ExpressionStatement",
                  "src": "3239:14:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75578,
                        "name": "out",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75561,
                        "src": "3273:3:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 75579,
                        "name": "half",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75532,
                        "src": "3278:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "77697468647261772072657475726e7320616d6f756e74",
                        "id": 75580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3284:25:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13f56100473e6482363fcc96e04e424888690c7b0e8a46ca6381bbde92753f67",
                          "typeString": "literal_string \"withdraw returns amount\""
                        },
                        "value": "withdraw returns amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_13f56100473e6482363fcc96e04e424888690c7b0e8a46ca6381bbde92753f67",
                          "typeString": "literal_string \"withdraw returns amount\""
                        }
                      ],
                      "id": 75577,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29412,
                      "src": "3264:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 75581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3264:46:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75582,
                  "nodeType": "ExpressionStatement",
                  "src": "3264:46:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75586,
                            "name": "cg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75230,
                            "src": "3344:2:117",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 75584,
                            "name": "WBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75238,
                            "src": "3329:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 75585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3334:9:117",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6139,
                          "src": "3329:14:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 75587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3329:18:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 75588,
                        "name": "half",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75532,
                        "src": "3349:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "63616c6c65722072656365697665642077697468647261776e2057425443",
                        "id": 75589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3355:32:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ebffc60e356b3a98157c5e47f7ce3b06272dbcfe64259bc71d0d7c339caee6d",
                          "typeString": "literal_string \"caller received withdrawn WBTC\""
                        },
                        "value": "caller received withdrawn WBTC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_4ebffc60e356b3a98157c5e47f7ce3b06272dbcfe64259bc71d0d7c339caee6d",
                          "typeString": "literal_string \"caller received withdrawn WBTC\""
                        }
                      ],
                      "id": 75583,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29412,
                      "src": "3320:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 75590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3320:68:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75591,
                  "nodeType": "ExpressionStatement",
                  "src": "3320:68:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 75597,
                                "name": "WBTC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75238,
                                "src": "3441:4:117",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$28758",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                              ],
                              "id": 75596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3433:7:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 75595,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3433:7:117",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 75598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3433:13:117",
                            "tryCall": false,
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 75593,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "3407:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          },
                          "id": 75594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3415:17:117",
                          "memberName": "collateralBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79795,
                          "src": "3407:25:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 75599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3407:40:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "id": 75602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 75600,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75443,
                          "src": "3449:3:117",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 75601,
                          "name": "half",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75532,
                          "src": "3455:4:117",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "src": "3449:10:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "6c656467657220646563726561736564",
                        "id": 75603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3461:18:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0ece70846b480737a3827b423e53a7aa23aa1d40317f8f01f6e65aa98f972a5",
                          "typeString": "literal_string \"ledger decreased\""
                        },
                        "value": "ledger decreased"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_c0ece70846b480737a3827b423e53a7aa23aa1d40317f8f01f6e65aa98f972a5",
                          "typeString": "literal_string \"ledger decreased\""
                        }
                      ],
                      "id": 75592,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29412,
                      "src": "3398:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 75604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3398:82:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75605,
                  "nodeType": "ExpressionStatement",
                  "src": "3398:82:117"
                }
              ]
            },
            "functionSelector": "5f81ba61",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_supply_and_withdraw_happy_path",
            "nameLocation": "2276:35:117",
            "parameters": { "id": 75440, "nodeType": "ParameterList", "parameters": [], "src": "2311:2:117" },
            "returnParameters": { "id": 75441, "nodeType": "ParameterList", "parameters": [], "src": "2321:0:117" },
            "scope": 76001,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75637,
            "nodeType": "FunctionDefinition",
            "src": "3493:251:117",
            "nodes": [],
            "body": {
              "id": 75636,
              "nodeType": "Block",
              "src": "3549:195:117",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75613,
                        "name": "cg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75230,
                        "src": "3621:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 75610,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "3612:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3615:5:117",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "3612:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 75614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3612:12:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75615,
                  "nodeType": "ExpressionStatement",
                  "src": "3612:12:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "494e53554646494349454e545f434f4c4c4154",
                            "id": 75621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3656:21:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_59e0751a8a4029b5742ef3b016d43fc2389a3d7bb15fe308a274c6cbcd644c91",
                              "typeString": "literal_string \"INSUFFICIENT_COLLAT\""
                            },
                            "value": "INSUFFICIENT_COLLAT"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_59e0751a8a4029b5742ef3b016d43fc2389a3d7bb15fe308a274c6cbcd644c91",
                              "typeString": "literal_string \"INSUFFICIENT_COLLAT\""
                            }
                          ],
                          "id": 75620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3650:5:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 75619,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "3650:5:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3650:28:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }],
                      "expression": {
                        "id": 75616,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "3634:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3637:12:117",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46901,
                      "src": "3634:15:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 75623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3634:45:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75624,
                  "nodeType": "ExpressionStatement",
                  "src": "3634:45:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75630,
                            "name": "WBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75238,
                            "src": "3724:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3716:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75628,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3716:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3716:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "31",
                        "id": 75632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3731:1:117",
                        "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 75633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3734:2:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 75625,
                        "name": "adapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75244,
                        "src": "3689:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                          "typeString": "contract MockBorrowAdapter"
                        }
                      },
                      "id": 75627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3697:18:117",
                      "memberName": "withdrawCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68823,
                      "src": "3689:26:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,bytes memory) external returns (uint256)"
                      }
                    },
                    "id": 75634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3689:48:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "id": 75635,
                  "nodeType": "ExpressionStatement",
                  "src": "3689:48:117"
                }
              ]
            },
            "functionSelector": "a3b13e8a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_withdraw_reverts_if_insufficient",
            "nameLocation": "3502:37:117",
            "parameters": { "id": 75608, "nodeType": "ParameterList", "parameters": [], "src": "3539:2:117" },
            "returnParameters": { "id": 75609, "nodeType": "ParameterList", "parameters": [], "src": "3549:0:117" },
            "scope": 76001,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75848,
            "nodeType": "FunctionDefinition",
            "src": "3818:1379:117",
            "nodes": [],
            "body": {
              "id": 75847,
              "nodeType": "Block",
              "src": "3869:1328:117",
              "nodes": [],
              "statements": [
                {
                  "assignments": [75641],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75641,
                      "mutability": "mutable",
                      "name": "draw",
                      "nameLocation": "3887:4:117",
                      "nodeType": "VariableDeclaration",
                      "scope": 75847,
                      "src": "3879:12:117",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 75640,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3879:7:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75643,
                  "initialValue": {
                    "hexValue": "315f3030305f3030306536",
                    "id": 75642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3894:11:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000_by_1",
                      "typeString": "int_const 1000000000000"
                    },
                    "value": "1_000_000e6"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3879:26:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 75647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4004:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 75648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4010:5:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 75649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4017:5:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "false"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 75650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4024:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 75653,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "4038:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          ],
                          "id": 75652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4030:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75651,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4030:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4030:16:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_address", "typeString": "address" }
                      ],
                      "expression": {
                        "id": 75644,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "3990:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3993:10:117",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46797,
                      "src": "3990:13:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool,address) external"
                      }
                    },
                    "id": 75655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3990:57:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75656,
                  "nodeType": "ExpressionStatement",
                  "src": "3990:57:117"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75662,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75241,
                            "src": "4097:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4089:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75660,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4089:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4089:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 75664,
                        "name": "draw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75641,
                        "src": "4104:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 75657,
                        "name": "BorrowAdapterBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68970,
                        "src": "4062:17:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BorrowAdapterBase_$68970_$",
                          "typeString": "type(contract BorrowAdapterBase)"
                        }
                      },
                      "id": 75659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4080:8:117",
                      "memberName": "Borrowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68725,
                      "src": "4062:26:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 75665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4062:47:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75666,
                  "nodeType": "EmitStatement",
                  "src": "4057:52:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75670,
                        "name": "cg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75230,
                        "src": "4128:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 75667,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "4119:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4122:5:117",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46281,
                      "src": "4119:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 75671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4119:12:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75672,
                  "nodeType": "ExpressionStatement",
                  "src": "4119:12:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75678,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75241,
                            "src": "4164:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4156:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75676,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4156:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4156:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 75680,
                        "name": "draw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75641,
                        "src": "4171:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "",
                        "id": 75681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4177:2:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 75673,
                        "name": "adapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75244,
                        "src": "4141:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                          "typeString": "contract MockBorrowAdapter"
                        }
                      },
                      "id": 75675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4149:6:117",
                      "memberName": "borrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68850,
                      "src": "4141:14:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 75682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4141:39:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75683,
                  "nodeType": "ExpressionStatement",
                  "src": "4141:39:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75687,
                            "name": "cg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75230,
                            "src": "4215:2:117",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 75685,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75241,
                            "src": "4200:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 75686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4205:9:117",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6139,
                          "src": "4200:14:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 75688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4200:18:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 75689,
                        "name": "draw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75641,
                        "src": "4220:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "63616c6c657220726563656976656420626f72726f7765642055534443",
                        "id": 75690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4226:31:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62c6cd30dd88122e0716cdded0ffa7563bf13797e2439581c2ef6511c8d841b7",
                          "typeString": "literal_string \"caller received borrowed USDC\""
                        },
                        "value": "caller received borrowed USDC"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_62c6cd30dd88122e0716cdded0ffa7563bf13797e2439581c2ef6511c8d841b7",
                          "typeString": "literal_string \"caller received borrowed USDC\""
                        }
                      ],
                      "id": 75684,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29412,
                      "src": "4191:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 75691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4191:67:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75692,
                  "nodeType": "ExpressionStatement",
                  "src": "4191:67:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 75698,
                                "name": "USDC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75241,
                                "src": "4305:4:117",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$28758",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                              ],
                              "id": 75697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4297:7:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 75696,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4297:7:117",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 75699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4297:13:117",
                            "tryCall": false,
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 75694,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "4277:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          },
                          "id": 75695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4285:11:117",
                          "memberName": "debtBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79808,
                          "src": "4277:19:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 75700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4277:34:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 75701,
                        "name": "draw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75641,
                        "src": "4313:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "64656274206c656467657220696e63726561736564",
                        "id": 75702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4319:23:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff7b54294e1015846a125f7beca437bb1ca6cb4d8f5ec932ac231f4c84815c1d",
                          "typeString": "literal_string \"debt ledger increased\""
                        },
                        "value": "debt ledger increased"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_ff7b54294e1015846a125f7beca437bb1ca6cb4d8f5ec932ac231f4c84815c1d",
                          "typeString": "literal_string \"debt ledger increased\""
                        }
                      ],
                      "id": 75693,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29412,
                      "src": "4268:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 75703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4268:75:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75704,
                  "nodeType": "ExpressionStatement",
                  "src": "4268:75:117"
                },
                {
                  "assignments": [75706],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75706,
                      "mutability": "mutable",
                      "name": "half",
                      "nameLocation": "4384:4:117",
                      "nodeType": "VariableDeclaration",
                      "scope": 75847,
                      "src": "4376:12:117",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 75705,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4376:7:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75710,
                  "initialValue": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 75709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 75707,
                      "name": "draw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75641,
                      "src": "4391:4:117",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 75708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4398:1:117",
                      "typeDescriptions": { "typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2" },
                      "value": "2"
                    },
                    "src": "4391:8:117",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4376:23:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75714,
                        "name": "cg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75230,
                        "src": "4423:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 75711,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "4409:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4412:10:117",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46477,
                      "src": "4409:13:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 75715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4409:17:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75716,
                  "nodeType": "ExpressionStatement",
                  "src": "4409:17:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75722,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "4457:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          ],
                          "id": 75721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4449:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75720,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4449:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4449:16:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 75726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4472:7:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 75725,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4472:7:117",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)" }
                            ],
                            "id": 75724,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4467:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 75727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4467:13:117",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 75728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4481:3:117",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "4467:17:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 75717,
                        "name": "USDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75241,
                        "src": "4436:4:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 75719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4441:7:117",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6204,
                      "src": "4436:12:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 75729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4436:49:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 75730,
                  "nodeType": "ExpressionStatement",
                  "src": "4436:49:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 75734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4510:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 75735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4516:5:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 75736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4523:5:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "false"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 75737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4530:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 75740,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "4544:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          ],
                          "id": 75739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4536:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75738,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4536:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4536:16:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        { "typeIdentifier": "t_address", "typeString": "address" }
                      ],
                      "expression": {
                        "id": 75731,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "4496:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4499:10:117",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46797,
                      "src": "4496:13:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool,address) external"
                      }
                    },
                    "id": 75742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4496:57:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75743,
                  "nodeType": "ExpressionStatement",
                  "src": "4496:57:117"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75749,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75241,
                            "src": "4601:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4593:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75747,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4593:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4593:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 75751,
                        "name": "half",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75706,
                        "src": "4608:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 75744,
                        "name": "BorrowAdapterBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68970,
                        "src": "4568:17:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BorrowAdapterBase_$68970_$",
                          "typeString": "type(contract BorrowAdapterBase)"
                        }
                      },
                      "id": 75746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4586:6:117",
                      "memberName": "Repaid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68731,
                      "src": "4568:24:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 75752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4568:45:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75753,
                  "nodeType": "EmitStatement",
                  "src": "4563:50:117"
                },
                {
                  "assignments": [75755],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75755,
                      "mutability": "mutable",
                      "name": "repaid",
                      "nameLocation": "4631:6:117",
                      "nodeType": "VariableDeclaration",
                      "scope": 75847,
                      "src": "4623:14:117",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 75754,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4623:7:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75765,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75760,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75241,
                            "src": "4662:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4654:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75758,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4654:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4654:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "id": 75762,
                        "name": "half",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75706,
                        "src": "4669:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "",
                        "id": 75763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4675:2:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 75756,
                        "name": "adapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75244,
                        "src": "4640:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                          "typeString": "contract MockBorrowAdapter"
                        }
                      },
                      "id": 75757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4648:5:117",
                      "memberName": "repay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68881,
                      "src": "4640:13:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,bytes memory) external returns (uint256)"
                      }
                    },
                    "id": 75764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4640:38:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4623:55:117"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75766,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "4688:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4691:9:117",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46521,
                      "src": "4688:12:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 75769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4688:14:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75770,
                  "nodeType": "ExpressionStatement",
                  "src": "4688:14:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75772,
                        "name": "repaid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75755,
                        "src": "4722:6:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "id": 75773,
                        "name": "half",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75706,
                        "src": "4730:4:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "72657061792072657475726e732061637475616c",
                        "id": 75774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4736:22:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bb032e13133ab0f10962d1d1460aae929bb3bfddb29b299faa62268e741dce9",
                          "typeString": "literal_string \"repay returns actual\""
                        },
                        "value": "repay returns actual"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_0bb032e13133ab0f10962d1d1460aae929bb3bfddb29b299faa62268e741dce9",
                          "typeString": "literal_string \"repay returns actual\""
                        }
                      ],
                      "id": 75771,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29412,
                      "src": "4713:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 75775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4713:46:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75776,
                  "nodeType": "ExpressionStatement",
                  "src": "4713:46:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 75782,
                                "name": "USDC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75241,
                                "src": "4806:4:117",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$28758",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                              ],
                              "id": 75781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4798:7:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 75780,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4798:7:117",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 75783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4798:13:117",
                            "tryCall": false,
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 75778,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "4778:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          },
                          "id": 75779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4786:11:117",
                          "memberName": "debtBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79808,
                          "src": "4778:19:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 75784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4778:34:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "id": 75787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 75785,
                          "name": "draw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75641,
                          "src": "4814:4:117",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 75786,
                          "name": "half",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75706,
                          "src": "4821:4:117",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "src": "4814:11:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "64656274206c656467657220646563726561736564",
                        "id": 75788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4827:23:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1dff54e64ce3ad81552aaa7c34ad9bc41308a95026404d446055f2f9f1f84f3",
                          "typeString": "literal_string \"debt ledger decreased\""
                        },
                        "value": "debt ledger decreased"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_b1dff54e64ce3ad81552aaa7c34ad9bc41308a95026404d446055f2f9f1f84f3",
                          "typeString": "literal_string \"debt ledger decreased\""
                        }
                      ],
                      "id": 75777,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29412,
                      "src": "4769:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 75789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4769:82:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75790,
                  "nodeType": "ExpressionStatement",
                  "src": "4769:82:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75794,
                        "name": "cg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75230,
                        "src": "4923:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 75791,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "4909:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4912:10:117",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46477,
                      "src": "4909:13:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 75795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4909:17:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75796,
                  "nodeType": "ExpressionStatement",
                  "src": "4909:17:117"
                },
                {
                  "assignments": [75798],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75798,
                      "mutability": "mutable",
                      "name": "rest",
                      "nameLocation": "4944:4:117",
                      "nodeType": "VariableDeclaration",
                      "scope": 75847,
                      "src": "4936:12:117",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 75797,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4936:7:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75802,
                  "initialValue": {
                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                    "id": 75801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 75799,
                      "name": "draw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75641,
                      "src": "4951:4:117",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 75800,
                      "name": "half",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75706,
                      "src": "4958:4:117",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "src": "4951:11:117",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4936:26:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75808,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "4993:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          ],
                          "id": 75807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4985:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75806,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4985:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4985:16:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 75812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5008:7:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 75811,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5008:7:117",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)" }
                            ],
                            "id": 75810,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "5003:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 75813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5003:13:117",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 75814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5017:3:117",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "5003:17:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 75803,
                        "name": "USDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75241,
                        "src": "4972:4:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 75805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4977:7:117",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6204,
                      "src": "4972:12:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 75815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4972:49:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 75816,
                  "nodeType": "ExpressionStatement",
                  "src": "4972:49:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75822,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75241,
                            "src": "5053:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5045:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75820,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5045:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5045:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "id": 75826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 75824,
                          "name": "rest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75798,
                          "src": "5060:4:117",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "313233",
                          "id": 75825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5067:3:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_123_by_1",
                            "typeString": "int_const 123"
                          },
                          "value": "123"
                        },
                        "src": "5060:10:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "",
                        "id": 75827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5072:2:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 75817,
                        "name": "adapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75244,
                        "src": "5031:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                          "typeString": "contract MockBorrowAdapter"
                        }
                      },
                      "id": 75819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5039:5:117",
                      "memberName": "repay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68881,
                      "src": "5031:13:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,bytes memory) external returns (uint256)"
                      }
                    },
                    "id": 75828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5031:44:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "id": 75829,
                  "nodeType": "ExpressionStatement",
                  "src": "5031:44:117"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75830,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "5102:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5105:9:117",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46521,
                      "src": "5102:12:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 75833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5102:14:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75834,
                  "nodeType": "ExpressionStatement",
                  "src": "5102:14:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 75840,
                                "name": "USDC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75241,
                                "src": "5164:4:117",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$28758",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                              ],
                              "id": 75839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5156:7:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 75838,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5156:7:117",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 75841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5156:13:117",
                            "tryCall": false,
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 75836,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "5136:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          },
                          "id": 75837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5144:11:117",
                          "memberName": "debtBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79808,
                          "src": "5136:19:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 75842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5136:34:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "30",
                        "id": 75843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5172:1:117",
                        "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        "value": "0"
                      },
                      {
                        "hexValue": "6465627420636c6561726564",
                        "id": 75844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5175:14:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7691a3e7c2246baa86a2d82d3b5bc009781149124eac2ddb67b57b17777e078b",
                          "typeString": "literal_string \"debt cleared\""
                        },
                        "value": "debt cleared"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                        {
                          "typeIdentifier": "t_stringliteral_7691a3e7c2246baa86a2d82d3b5bc009781149124eac2ddb67b57b17777e078b",
                          "typeString": "literal_string \"debt cleared\""
                        }
                      ],
                      "id": 75835,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29412,
                      "src": "5127:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 75845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5127:63:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75846,
                  "nodeType": "ExpressionStatement",
                  "src": "5127:63:117"
                }
              ]
            },
            "functionSelector": "0d362f8d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_borrow_and_repay_happy_path",
            "nameLocation": "3827:32:117",
            "parameters": { "id": 75638, "nodeType": "ParameterList", "parameters": [], "src": "3859:2:117" },
            "returnParameters": { "id": 75639, "nodeType": "ParameterList", "parameters": [], "src": "3869:0:117" },
            "scope": 76001,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 75920,
            "nodeType": "FunctionDefinition",
            "src": "5203:646:117",
            "nodes": [],
            "body": {
              "id": 75919,
              "nodeType": "Block",
              "src": "5263:586:117",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75854,
                        "name": "cg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75230,
                        "src": "5436:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "313030",
                        "id": 75855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5440:3:117",
                        "typeDescriptions": { "typeIdentifier": "t_rational_100_by_1", "typeString": "int_const 100" },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_rational_100_by_1", "typeString": "int_const 100" }
                      ],
                      "expression": {
                        "id": 75851,
                        "name": "USDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75241,
                        "src": "5426:4:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 75853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5431:4:117",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28757,
                      "src": "5426:9:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 75856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5426:18:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75857,
                  "nodeType": "ExpressionStatement",
                  "src": "5426:18:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75861,
                        "name": "cg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75230,
                        "src": "5468:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 75858,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "5454:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5457:10:117",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46477,
                      "src": "5454:13:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 75862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5454:17:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75863,
                  "nodeType": "ExpressionStatement",
                  "src": "5454:17:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75869,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75241,
                            "src": "5504:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5496:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75867,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5496:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5496:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "313030",
                        "id": 75871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5511:3:117",
                        "typeDescriptions": { "typeIdentifier": "t_rational_100_by_1", "typeString": "int_const 100" },
                        "value": "100"
                      },
                      {
                        "hexValue": "",
                        "id": 75872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5516:2:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_rational_100_by_1", "typeString": "int_const 100" },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 75864,
                        "name": "adapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75244,
                        "src": "5481:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                          "typeString": "contract MockBorrowAdapter"
                        }
                      },
                      "id": 75866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5489:6:117",
                      "memberName": "borrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68850,
                      "src": "5481:14:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 75873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5481:38:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75874,
                  "nodeType": "ExpressionStatement",
                  "src": "5481:38:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307864656164",
                            "id": 75880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5644:6:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_57005_by_1",
                              "typeString": "int_const 57005"
                            },
                            "value": "0xdead"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_rational_57005_by_1", "typeString": "int_const 57005" }
                          ],
                          "id": 75879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5636:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75878,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5636:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5636:15:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "arguments": [
                          {
                            "id": 75884,
                            "name": "cg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75230,
                            "src": "5668:2:117",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 75882,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75241,
                            "src": "5653:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 75883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5658:9:117",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6139,
                          "src": "5653:14:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 75885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5653:18:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 75875,
                        "name": "USDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75241,
                        "src": "5622:4:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 75877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5627:8:117",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6163,
                      "src": "5622:13:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 75886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5622:50:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 75887,
                  "nodeType": "ExpressionStatement",
                  "src": "5622:50:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75893,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "5703:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          ],
                          "id": 75892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5695:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75891,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5695:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5695:16:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "313030",
                        "id": 75895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5713:3:117",
                        "typeDescriptions": { "typeIdentifier": "t_rational_100_by_1", "typeString": "int_const 100" },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_rational_100_by_1", "typeString": "int_const 100" }
                      ],
                      "expression": {
                        "id": 75888,
                        "name": "USDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75241,
                        "src": "5682:4:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 75890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5687:7:117",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6204,
                      "src": "5682:12:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 75896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5682:35:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 75897,
                  "nodeType": "ExpressionStatement",
                  "src": "5682:35:117"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75898,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "5727:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5730:12:117",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46869,
                      "src": "5727:15:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 75901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5727:17:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75902,
                  "nodeType": "ExpressionStatement",
                  "src": "5727:17:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75908,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75241,
                            "src": "5803:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5795:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75906,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5795:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5795:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "313030",
                        "id": 75910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5810:3:117",
                        "typeDescriptions": { "typeIdentifier": "t_rational_100_by_1", "typeString": "int_const 100" },
                        "value": "100"
                      },
                      {
                        "hexValue": "",
                        "id": 75911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5815:2:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_rational_100_by_1", "typeString": "int_const 100" },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 75903,
                        "name": "adapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75244,
                        "src": "5781:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                          "typeString": "contract MockBorrowAdapter"
                        }
                      },
                      "id": 75905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5789:5:117",
                      "memberName": "repay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68881,
                      "src": "5781:13:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,bytes memory) external returns (uint256)"
                      }
                    },
                    "id": 75912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5781:37:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "id": 75913,
                  "nodeType": "ExpressionStatement",
                  "src": "5781:37:117"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75914,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "5828:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5831:9:117",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46521,
                      "src": "5828:12:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 75917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5828:14:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75918,
                  "nodeType": "ExpressionStatement",
                  "src": "5828:14:117"
                }
              ]
            },
            "functionSelector": "64601ec4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_repay_requires_allowance_and_balance",
            "nameLocation": "5212:41:117",
            "parameters": { "id": 75849, "nodeType": "ParameterList", "parameters": [], "src": "5253:2:117" },
            "returnParameters": { "id": 75850, "nodeType": "ParameterList", "parameters": [], "src": "5263:0:117" },
            "scope": 76001,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 76000,
            "nodeType": "FunctionDefinition",
            "src": "5914:473:117",
            "nodes": [],
            "body": {
              "id": 75999,
              "nodeType": "Block",
              "src": "5958:429:117",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75926,
                        "name": "cg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75230,
                        "src": "6003:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "356538",
                        "id": 75927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6007:3:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000_by_1",
                          "typeString": "int_const 500000000"
                        },
                        "value": "5e8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_rational_500000000_by_1", "typeString": "int_const 500000000" }
                      ],
                      "expression": {
                        "id": 75923,
                        "name": "WBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75238,
                        "src": "5993:4:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 75925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5998:4:117",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28757,
                      "src": "5993:9:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 75928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5993:18:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75929,
                  "nodeType": "ExpressionStatement",
                  "src": "5993:18:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 75933,
                        "name": "cg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75230,
                        "src": "6035:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                      "expression": {
                        "id": 75930,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "6021:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6024:10:117",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46477,
                      "src": "6021:13:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 75934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6021:17:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75935,
                  "nodeType": "ExpressionStatement",
                  "src": "6021:17:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75941,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "6069:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          ],
                          "id": 75940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6061:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75939,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6061:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6061:16:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 75945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6084:7:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 75944,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6084:7:117",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)" }
                            ],
                            "id": 75943,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "6079:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 75946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6079:13:117",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 75947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "6093:3:117",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "6079:17:117",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      ],
                      "expression": {
                        "id": 75936,
                        "name": "WBTC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75238,
                        "src": "6048:4:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$28758",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 75938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6053:7:117",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6204,
                      "src": "6048:12:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 75948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6048:49:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "id": 75949,
                  "nodeType": "ExpressionStatement",
                  "src": "6048:49:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75955,
                            "name": "WBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75238,
                            "src": "6140:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6132:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75953,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6132:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6132:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "356538",
                        "id": 75957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6147:3:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000_by_1",
                          "typeString": "int_const 500000000"
                        },
                        "value": "5e8"
                      },
                      {
                        "hexValue": "",
                        "id": 75958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6152:2:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_rational_500000000_by_1", "typeString": "int_const 500000000" },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 75950,
                        "name": "adapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75244,
                        "src": "6107:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                          "typeString": "contract MockBorrowAdapter"
                        }
                      },
                      "id": 75952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6115:16:117",
                      "memberName": "supplyCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68792,
                      "src": "6107:24:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 75959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6107:48:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75960,
                  "nodeType": "ExpressionStatement",
                  "src": "6107:48:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 75966,
                            "name": "USDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75241,
                            "src": "6214:4:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$28758",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                          ],
                          "id": 75965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6206:7:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 75964,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6206:7:117",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 75967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6206:13:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      {
                        "hexValue": "31306536",
                        "id": 75968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6221:4:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000_by_1",
                          "typeString": "int_const 10000000"
                        },
                        "value": "10e6"
                      },
                      {
                        "hexValue": "",
                        "id": 75969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6227:2:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_address", "typeString": "address" },
                        { "typeIdentifier": "t_rational_10000000_by_1", "typeString": "int_const 10000000" },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 75961,
                        "name": "adapter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75244,
                        "src": "6191:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                          "typeString": "contract MockBorrowAdapter"
                        }
                      },
                      "id": 75963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6199:6:117",
                      "memberName": "borrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68850,
                      "src": "6191:14:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 75970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6191:39:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75971,
                  "nodeType": "ExpressionStatement",
                  "src": "6191:39:117"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 75972,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29075,
                        "src": "6240:2:117",
                        "typeDescriptions": { "typeIdentifier": "t_contract$_Vm_$46992", "typeString": "contract Vm" }
                      },
                      "id": 75974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6243:9:117",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46521,
                      "src": "6240:12:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 75975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6240:14:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75976,
                  "nodeType": "ExpressionStatement",
                  "src": "6240:14:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 75982,
                                "name": "WBTC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75238,
                                "src": "6308:4:117",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$28758",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                              ],
                              "id": 75981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6300:7:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 75980,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6300:7:117",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 75983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6300:13:117",
                            "tryCall": false,
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 75978,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "6274:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          },
                          "id": 75979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6282:17:117",
                          "memberName": "collateralBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79795,
                          "src": "6274:25:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 75984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6274:40:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "356538",
                        "id": 75985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6316:3:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000_by_1",
                          "typeString": "int_const 500000000"
                        },
                        "value": "5e8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_rational_500000000_by_1", "typeString": "int_const 500000000" }
                      ],
                      "id": 75977,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29394,
                      "src": "6265:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 75986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6265:55:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75987,
                  "nodeType": "ExpressionStatement",
                  "src": "6265:55:117"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 75993,
                                "name": "USDC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75241,
                                "src": "6367:4:117",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC20_$28758",
                                  "typeString": "contract MockERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                { "typeIdentifier": "t_contract$_MockERC20_$28758", "typeString": "contract MockERC20" }
                              ],
                              "id": 75992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6359:7:117",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 75991,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6359:7:117",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 75994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6359:13:117",
                            "tryCall": false,
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                          "expression": {
                            "id": 75989,
                            "name": "adapter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75244,
                            "src": "6339:7:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockBorrowAdapter_$80010",
                              "typeString": "contract MockBorrowAdapter"
                            }
                          },
                          "id": 75990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6347:11:117",
                          "memberName": "debtBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79808,
                          "src": "6339:19:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 75995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6339:34:117",
                        "tryCall": false,
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      {
                        "hexValue": "31306536",
                        "id": 75996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6375:4:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000_by_1",
                          "typeString": "int_const 10000000"
                        },
                        "value": "10e6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        { "typeIdentifier": "t_rational_10000000_by_1", "typeString": "int_const 10000000" }
                      ],
                      "id": 75988,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        29361, 29379, 29394, 29412, 29466, 29484, 29538, 29556, 29571, 29589, 29633, 29651, 29666,
                        29684, 29701, 29721, 29738, 29758, 29775, 29795, 29812, 29832, 29849, 29869, 29886, 29906,
                        29923, 29943
                      ],
                      "referencedDeclaration": 29394,
                      "src": "6330:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) pure"
                      }
                    },
                    "id": 75997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6330:50:117",
                    "tryCall": false,
                    "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                  },
                  "id": 75998,
                  "nodeType": "ExpressionStatement",
                  "src": "6330:50:117"
                }
              ]
            },
            "functionSelector": "dbde8217",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_views_after_activity",
            "nameLocation": "5923:25:117",
            "parameters": { "id": 75921, "nodeType": "ParameterList", "parameters": [], "src": "5948:2:117" },
            "returnParameters": { "id": 75922, "nodeType": "ParameterList", "parameters": [], "src": "5958:0:117" },
            "scope": 76001,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 75219,
              "name": "Test",
              "nameLocations": ["447:4:117"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41977,
              "src": "447:4:117"
            },
            "id": 75220,
            "nodeType": "InheritanceSpecifier",
            "src": "447:4:117"
          }
        ],
        "canonicalName": "BorrowAdapterTest",
        "contractDependencies": [28758, 80010],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [76001, 41977, 41923, 35960, 35559, 34764, 32674, 31712, 29082, 29079],
        "name": "BorrowAdapterTest",
        "nameLocation": "426:17:117",
        "scope": 76002,
        "usedErrors": [],
        "usedEvents": [
          29117, 29121, 29125, 29129, 29133, 29137, 29141, 29145, 29151, 29157, 29165, 29173, 29179, 29185, 29191,
          29197, 29202, 29207, 29212, 29219, 29226, 29233, 68713, 68719, 68725, 68731
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 117
}
