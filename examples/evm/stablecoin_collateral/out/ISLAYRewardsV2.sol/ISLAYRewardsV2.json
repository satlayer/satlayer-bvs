{
  "abi": [
    {
      "type": "function",
      "name": "claimRewards",
      "inputs": [
        {
          "name": "params",
          "type": "tuple",
          "internalType": "struct ISLAYRewardsV2.ClaimableRewardProof",
          "components": [
            { "name": "provider", "type": "address", "internalType": "address" },
            { "name": "token", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "recipient", "type": "address", "internalType": "address" },
            { "name": "merkleRoot", "type": "bytes32", "internalType": "bytes32" },
            { "name": "proof", "type": "bytes32[]", "internalType": "bytes32[]" },
            { "name": "leafIndex", "type": "uint32", "internalType": "uint32" },
            { "name": "totalLeaves", "type": "uint32", "internalType": "uint32" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "distributeRewards",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" },
        { "name": "merkleRoot", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getBalance",
      "inputs": [
        { "name": "provider", "type": "address", "internalType": "address" },
        { "name": "token", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getClaimedRewards",
      "inputs": [
        { "name": "provider", "type": "address", "internalType": "address" },
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "earner", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDistributionRoots",
      "inputs": [
        { "name": "provider", "type": "address", "internalType": "address" },
        { "name": "token", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ISLAYRewardsV2.DistributionRoots",
          "components": [
            { "name": "prevRoot", "type": "bytes32", "internalType": "bytes32" },
            { "name": "currentRoot", "type": "bytes32", "internalType": "bytes32" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "RewardsClaimed",
      "inputs": [
        { "name": "provider", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "token", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "earner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "recipient", "type": "address", "indexed": false, "internalType": "address" },
        { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "merkleRoot", "type": "bytes32", "indexed": false, "internalType": "bytes32" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RewardsDistributed",
      "inputs": [
        { "name": "provider", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "token", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "merkleRoot", "type": "bytes32", "indexed": true, "internalType": "bytes32" }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AmountAlreadyClaimed",
      "inputs": [
        { "name": "provider", "type": "address", "internalType": "address" },
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "earner", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ]
    },
    {
      "type": "error",
      "name": "InsufficientBalance",
      "inputs": [
        { "name": "provider", "type": "address", "internalType": "address" },
        { "name": "token", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "InvalidMerkleProof", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidMerkleRoot",
      "inputs": [
        { "name": "provider", "type": "address", "internalType": "address" },
        { "name": "token", "type": "address", "internalType": "address" },
        { "name": "merkleRoot", "type": "bytes32", "internalType": "bytes32" }
      ]
    }
  ],
  "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "methodIdentifiers": {
    "claimRewards((address,address,uint256,address,bytes32,bytes32[],uint32,uint32))": "6fdaf166",
    "distributeRewards(address,uint256,bytes32)": "40b3a4bf",
    "getBalance(address,address)": "d4fac45d",
    "getClaimedRewards(address,address,address)": "7733369c",
    "getDistributionRoots(address,address)": "5e04f87e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AmountAlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"InvalidMerkleRoot\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint32\",\"name\":\"leafIndex\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"totalLeaves\",\"type\":\"uint32\"}],\"internalType\":\"struct ISLAYRewardsV2.ClaimableRewardProof\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"distributeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"earner\",\"type\":\"address\"}],\"name\":\"getClaimedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getDistributionRoots\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"prevRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"currentRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct ISLAYRewardsV2.DistributionRoots\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the SLAYRewardsV2 contract, which handles the distribution and claiming of rewards. In this context, a provider is an actor that distribute rewards (think rewards provider). This can be a service an operator, or any other entity that wants to distribute rewards.\",\"errors\":{\"AmountAlreadyClaimed(address,address,address,uint256)\":[{\"details\":\"Error thrown when an earner attempts to claim an amount that has already been claimed.\"}],\"InsufficientBalance(address,address)\":[{\"details\":\"Error thrown when a provider has insufficient balance for a token to distribute rewards.\"}],\"InvalidMerkleProof()\":[{\"details\":\"Error thrown when an invalid Merkle proof is provided during reward claiming.\"}],\"InvalidMerkleRoot(address,address,bytes32)\":[{\"details\":\"Error thrown when an invalid Merkle root is provided for a provider and token pair.\"}]},\"events\":{\"RewardsClaimed(address,address,address,address,uint256,bytes32)\":{\"params\":{\"amount\":\"The amount of tokens claimed.\",\"earner\":\"The address of the earner claiming rewards.\",\"merkleRoot\":\"The Merkle root of the distribution from which the claim is made.\",\"provider\":\"The address of the provider from which rewards are claimed.\",\"recipient\":\"The address receiving the claimed rewards.\",\"token\":\"The address of the token being claimed.\"}},\"RewardsDistributed(address,address,uint256,bytes32)\":{\"params\":{\"amount\":\"The total amount of tokens distributed.\",\"merkleRoot\":\"The Merkle root of the distribution.\",\"provider\":\"The address of the provider (service or operator) distributing rewards.\",\"token\":\"The address of the token being distributed.\"}}},\"kind\":\"dev\",\"methods\":{\"claimRewards((address,address,uint256,address,bytes32,bytes32[],uint32,uint32))\":{\"details\":\"The function checks the Merkle proof, updates the claimed rewards and send the tokens to the recipient.\",\"params\":{\"params\":\"The parameters containing provider, token, amount, recipient, merkleRoot, proof, leafIndex, and totalLeaves.\"}},\"distributeRewards(address,uint256,bytes32)\":{\"details\":\"Service needs to ensure proper allowance is made for the contract to transfer tokens. When the {amount} is 0, the function will essentially only update the Merkle root without any token transfer. This allows for patching of existing distributions.\",\"params\":{\"amount\":\"The amount of tokens to distribute.\",\"merkleRoot\":\"The Merkle root of the distribution.\",\"token\":\"The address of the token to distribute.\"}},\"getBalance(address,address)\":{\"params\":{\"provider\":\"The address of the provider (e.g. service or operator).\",\"token\":\"The address of the token.\"},\"returns\":{\"_0\":\"The balance of the provider for the specified token.\"}},\"getClaimedRewards(address,address,address)\":{\"params\":{\"earner\":\"The address of the earner.\",\"provider\":\"The address of the provider (e.g. service or operator).\",\"token\":\"The address of the token.\"},\"returns\":{\"_0\":\"The total amount of claimed rewards for the specified provider, token, and earner.\"}},\"getDistributionRoots(address,address)\":{\"params\":{\"provider\":\"The address of the provider (e.g. service or operator).\",\"token\":\"The address of the token.\"},\"returns\":{\"_0\":\"DistributionRoots containing the previous and current Merkle roots.\"}}},\"title\":\"Rewards Interface\",\"version\":1},\"userdoc\":{\"events\":{\"RewardsClaimed(address,address,address,address,uint256,bytes32)\":{\"notice\":\"Emitted when rewards are claimed by an earner.\"},\"RewardsDistributed(address,address,uint256,bytes32)\":{\"notice\":\"Emitted when rewards are distributed by provider.\"}},\"kind\":\"user\",\"methods\":{\"claimRewards((address,address,uint256,address,bytes32,bytes32[],uint32,uint32))\":{\"notice\":\"Claims rewards for an earner for a specific provider and token using merkle proof.\"},\"distributeRewards(address,uint256,bytes32)\":{\"notice\":\"Distributes rewards from a provider (service or operator) to earners using a Merkle tree. Although rewards are usually distributed by service or operator, anybody can distribute rewards. This is not limited to the service/operator itself to allow for flexibility in reward distribution.\"},\"getBalance(address,address)\":{\"notice\":\"Returns the balance of a provider for a specific token.\"},\"getClaimedRewards(address,address,address)\":{\"notice\":\"Returns the total claimed rewards for a specific provider, token, and earner.\"},\"getDistributionRoots(address,address)\":{\"notice\":\"Returns the current and previous Merkle roots for a (provider,token) pair.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@satlayer/contracts/src/interface/ISLAYRewardsV2.sol\":\"ISLAYRewardsV2\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=node_modules/@aave/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@openzeppelin/foundry-upgrades/=node_modules/@openzeppelin/foundry-upgrades/src/\",\":@satlayer/contracts/=node_modules/@satlayer/contracts/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@satlayer/contracts/src/interface/ISLAYRewardsV2.sol\":{\"keccak256\":\"0x89f65258107bb504b36d4bc89511e667813f9f7c21bacff59ee44a84b4e36030\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cd83f14b1331eb43266c3616a6f49a8fff9ae461a1e4d929bc27d1da3974ba11\",\"dweb:/ipfs/QmVXVaqKeAcMgm18NdTyu1KHw6MSyDjhHAowzZQgyKHfzD\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.24+commit.e11b9ed9" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "provider", "type": "address" },
            { "internalType": "address", "name": "token", "type": "address" },
            { "internalType": "address", "name": "earner", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "type": "error",
          "name": "AmountAlreadyClaimed"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "provider", "type": "address" },
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "type": "error",
          "name": "InsufficientBalance"
        },
        { "inputs": [], "type": "error", "name": "InvalidMerkleProof" },
        {
          "inputs": [
            { "internalType": "address", "name": "provider", "type": "address" },
            { "internalType": "address", "name": "token", "type": "address" },
            { "internalType": "bytes32", "name": "merkleRoot", "type": "bytes32" }
          ],
          "type": "error",
          "name": "InvalidMerkleRoot"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "provider", "type": "address", "indexed": true },
            { "internalType": "address", "name": "token", "type": "address", "indexed": true },
            { "internalType": "address", "name": "earner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "recipient", "type": "address", "indexed": false },
            { "internalType": "uint256", "name": "amount", "type": "uint256", "indexed": false },
            { "internalType": "bytes32", "name": "merkleRoot", "type": "bytes32", "indexed": false }
          ],
          "type": "event",
          "name": "RewardsClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "provider", "type": "address", "indexed": true },
            { "internalType": "address", "name": "token", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "amount", "type": "uint256", "indexed": false },
            { "internalType": "bytes32", "name": "merkleRoot", "type": "bytes32", "indexed": true }
          ],
          "type": "event",
          "name": "RewardsDistributed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct ISLAYRewardsV2.ClaimableRewardProof",
              "name": "params",
              "type": "tuple",
              "components": [
                { "internalType": "address", "name": "provider", "type": "address" },
                { "internalType": "address", "name": "token", "type": "address" },
                { "internalType": "uint256", "name": "amount", "type": "uint256" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "bytes32", "name": "merkleRoot", "type": "bytes32" },
                { "internalType": "bytes32[]", "name": "proof", "type": "bytes32[]" },
                { "internalType": "uint32", "name": "leafIndex", "type": "uint32" },
                { "internalType": "uint32", "name": "totalLeaves", "type": "uint32" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            { "internalType": "bytes32", "name": "merkleRoot", "type": "bytes32" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "distributeRewards"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "provider", "type": "address" },
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBalance",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "provider", "type": "address" },
            { "internalType": "address", "name": "token", "type": "address" },
            { "internalType": "address", "name": "earner", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimedRewards",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "provider", "type": "address" },
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDistributionRoots",
          "outputs": [
            {
              "internalType": "struct ISLAYRewardsV2.DistributionRoots",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "bytes32", "name": "prevRoot", "type": "bytes32" },
                { "internalType": "bytes32", "name": "currentRoot", "type": "bytes32" }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claimRewards((address,address,uint256,address,bytes32,bytes32[],uint32,uint32))": {
            "details": "The function checks the Merkle proof, updates the claimed rewards and send the tokens to the recipient.",
            "params": {
              "params": "The parameters containing provider, token, amount, recipient, merkleRoot, proof, leafIndex, and totalLeaves."
            }
          },
          "distributeRewards(address,uint256,bytes32)": {
            "details": "Service needs to ensure proper allowance is made for the contract to transfer tokens. When the {amount} is 0, the function will essentially only update the Merkle root without any token transfer. This allows for patching of existing distributions.",
            "params": {
              "amount": "The amount of tokens to distribute.",
              "merkleRoot": "The Merkle root of the distribution.",
              "token": "The address of the token to distribute."
            }
          },
          "getBalance(address,address)": {
            "params": {
              "provider": "The address of the provider (e.g. service or operator).",
              "token": "The address of the token."
            },
            "returns": { "_0": "The balance of the provider for the specified token." }
          },
          "getClaimedRewards(address,address,address)": {
            "params": {
              "earner": "The address of the earner.",
              "provider": "The address of the provider (e.g. service or operator).",
              "token": "The address of the token."
            },
            "returns": { "_0": "The total amount of claimed rewards for the specified provider, token, and earner." }
          },
          "getDistributionRoots(address,address)": {
            "params": {
              "provider": "The address of the provider (e.g. service or operator).",
              "token": "The address of the token."
            },
            "returns": { "_0": "DistributionRoots containing the previous and current Merkle roots." }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "claimRewards((address,address,uint256,address,bytes32,bytes32[],uint32,uint32))": {
            "notice": "Claims rewards for an earner for a specific provider and token using merkle proof."
          },
          "distributeRewards(address,uint256,bytes32)": {
            "notice": "Distributes rewards from a provider (service or operator) to earners using a Merkle tree. Although rewards are usually distributed by service or operator, anybody can distribute rewards. This is not limited to the service/operator itself to allow for flexibility in reward distribution."
          },
          "getBalance(address,address)": { "notice": "Returns the balance of a provider for a specific token." },
          "getClaimedRewards(address,address,address)": {
            "notice": "Returns the total claimed rewards for a specific provider, token, and earner."
          },
          "getDistributionRoots(address,address)": {
            "notice": "Returns the current and previous Merkle roots for a (provider,token) pair."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aave/=node_modules/@aave/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "@openzeppelin/foundry-upgrades/=node_modules/@openzeppelin/foundry-upgrades/src/",
        "@satlayer/contracts/=node_modules/@satlayer/contracts/",
        "forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "node_modules/@satlayer/contracts/src/interface/ISLAYRewardsV2.sol": "ISLAYRewardsV2" },
      "evmVersion": "shanghai",
      "libraries": {}
    },
    "sources": {
      "node_modules/@satlayer/contracts/src/interface/ISLAYRewardsV2.sol": {
        "keccak256": "0x89f65258107bb504b36d4bc89511e667813f9f7c21bacff59ee44a84b4e36030",
        "urls": [
          "bzz-raw://cd83f14b1331eb43266c3616a6f49a8fff9ae461a1e4d929bc27d1da3974ba11",
          "dweb:/ipfs/QmVXVaqKeAcMgm18NdTyu1KHw6MSyDjhHAowzZQgyKHfzD"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "storageLayout": { "storage": [], "types": {} },
  "ast": {
    "absolutePath": "node_modules/@satlayer/contracts/src/interface/ISLAYRewardsV2.sol",
    "id": 28268,
    "exportedSymbols": { "ISLAYRewardsV2": [28267] },
    "nodeType": "SourceUnit",
    "src": "37:6876:84",
    "nodes": [
      {
        "id": 28124,
        "nodeType": "PragmaDirective",
        "src": "37:24:84",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".24"]
      },
      {
        "id": 28267,
        "nodeType": "ContractDefinition",
        "src": "390:6522:84",
        "nodes": [
          {
            "id": 28134,
            "nodeType": "ErrorDefinition",
            "src": "696:77:84",
            "nodes": [],
            "documentation": {
              "id": 28126,
              "nodeType": "StructuredDocumentation",
              "src": "599:92:84",
              "text": "@dev Error thrown when an invalid Merkle root is provided for a provider and token pair."
            },
            "errorSelector": "c9f7e851",
            "name": "InvalidMerkleRoot",
            "nameLocation": "702:17:84",
            "parameters": {
              "id": 28133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28128,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "728:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28134,
                  "src": "720:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28130,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "746:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28134,
                  "src": "738:13:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28132,
                  "mutability": "mutable",
                  "name": "merkleRoot",
                  "nameLocation": "761:10:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28134,
                  "src": "753:18:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 28131,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "753:7:84",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "719:53:84"
            }
          },
          {
            "id": 28145,
            "nodeType": "ErrorDefinition",
            "src": "879:92:84",
            "nodes": [],
            "documentation": {
              "id": 28135,
              "nodeType": "StructuredDocumentation",
              "src": "779:95:84",
              "text": "@dev Error thrown when an earner attempts to claim an amount that has already been claimed."
            },
            "errorSelector": "ed7deb9d",
            "name": "AmountAlreadyClaimed",
            "nameLocation": "885:20:84",
            "parameters": {
              "id": 28144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28137,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "914:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28145,
                  "src": "906:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "906:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28139,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "932:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28145,
                  "src": "924:13:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28141,
                  "mutability": "mutable",
                  "name": "earner",
                  "nameLocation": "947:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28145,
                  "src": "939:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28143,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "963:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28145,
                  "src": "955:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 28142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:84",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:65:84"
            }
          },
          {
            "id": 28148,
            "nodeType": "ErrorDefinition",
            "src": "1068:27:84",
            "nodes": [],
            "documentation": {
              "id": 28146,
              "nodeType": "StructuredDocumentation",
              "src": "977:86:84",
              "text": "@dev Error thrown when an invalid Merkle proof is provided during reward claiming."
            },
            "errorSelector": "b05e92fa",
            "name": "InvalidMerkleProof",
            "nameLocation": "1074:18:84",
            "parameters": { "id": 28147, "nodeType": "ParameterList", "parameters": [], "src": "1092:2:84" }
          },
          {
            "id": 28155,
            "nodeType": "ErrorDefinition",
            "src": "1203:59:84",
            "nodes": [],
            "documentation": {
              "id": 28149,
              "nodeType": "StructuredDocumentation",
              "src": "1101:97:84",
              "text": "@dev Error thrown when a provider has insufficient balance for a token to distribute rewards."
            },
            "errorSelector": "52a16ee8",
            "name": "InsufficientBalance",
            "nameLocation": "1209:19:84",
            "parameters": {
              "id": 28154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28151,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "1237:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28155,
                  "src": "1229:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1229:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28153,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1255:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28155,
                  "src": "1247:13:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1228:33:84"
            }
          },
          {
            "id": 28166,
            "nodeType": "EventDefinition",
            "src": "1809:132:84",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 28156,
              "nodeType": "StructuredDocumentation",
              "src": "1446:358:84",
              "text": " @notice Emitted when rewards are distributed by provider.\n @param provider The address of the provider (service or operator) distributing rewards.\n @param token The address of the token being distributed.\n @param amount The total amount of tokens distributed.\n @param merkleRoot The Merkle root of the distribution."
            },
            "eventSelector": "9b7287e3e899d95da564c38a8d18e3c3d2135143b3d53bd6fa257cd8a961afd9",
            "name": "RewardsDistributed",
            "nameLocation": "1815:18:84",
            "parameters": {
              "id": 28165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28158,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "1859:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28166,
                  "src": "1843:24:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1843:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28160,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1885:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28166,
                  "src": "1869:21:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1869:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28162,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1900:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28166,
                  "src": "1892:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 28161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:7:84",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28164,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "merkleRoot",
                  "nameLocation": "1924:10:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28166,
                  "src": "1908:26:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 28163,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1908:7:84",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1833:107:84"
            }
          },
          {
            "id": 28181,
            "nodeType": "EventDefinition",
            "src": "2442:203:84",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 28167,
              "nodeType": "StructuredDocumentation",
              "src": "1947:490:84",
              "text": " @notice Emitted when rewards are claimed by an earner.\n @param provider The address of the provider from which rewards are claimed.\n @param token The address of the token being claimed.\n @param earner The address of the earner claiming rewards.\n @param recipient The address receiving the claimed rewards.\n @param amount The amount of tokens claimed.\n @param merkleRoot The Merkle root of the distribution from which the claim is made."
            },
            "eventSelector": "4ba395584971ca8c6ff7586af6bcfddf50b5c3cb179dd2be9cf9316578e24a16",
            "name": "RewardsClaimed",
            "nameLocation": "2448:14:84",
            "parameters": {
              "id": 28180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28169,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "2488:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28181,
                  "src": "2472:24:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2472:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28171,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2522:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28181,
                  "src": "2506:21:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2506:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28173,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "earner",
                  "nameLocation": "2553:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28181,
                  "src": "2537:22:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2537:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28175,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2577:9:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28181,
                  "src": "2569:17:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2569:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28177,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2604:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28181,
                  "src": "2596:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 28176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2596:7:84",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28179,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "merkleRoot",
                  "nameLocation": "2628:10:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28181,
                  "src": "2620:18:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 28178,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2620:7:84",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2462:182:84"
            }
          },
          {
            "id": 28208,
            "nodeType": "StructDefinition",
            "src": "2873:790:84",
            "nodes": [],
            "canonicalName": "ISLAYRewardsV2.ClaimableRewardProof",
            "documentation": {
              "id": 28182,
              "nodeType": "StructuredDocumentation",
              "src": "2651:217:84",
              "text": " @title Claimable Reward Proof\n @dev Contains all the necessary information to verify and process a reward claim.\n This struct is used as an input parameter for the claimRewards function."
            },
            "members": [
              {
                "constant": false,
                "id": 28185,
                "mutability": "mutable",
                "name": "provider",
                "nameLocation": "3002:8:84",
                "nodeType": "VariableDeclaration",
                "scope": 28208,
                "src": "2994:16:84",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                "typeName": {
                  "id": 28184,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2994:7:84",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28188,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "3085:5:84",
                "nodeType": "VariableDeclaration",
                "scope": 28208,
                "src": "3077:13:84",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                "typeName": {
                  "id": 28187,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3077:7:84",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28191,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "3156:6:84",
                "nodeType": "VariableDeclaration",
                "scope": 28208,
                "src": "3148:14:84",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                "typeName": {
                  "id": 28190,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3148:7:84",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28194,
                "mutability": "mutable",
                "name": "recipient",
                "nameLocation": "3247:9:84",
                "nodeType": "VariableDeclaration",
                "scope": 28208,
                "src": "3239:17:84",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                "typeName": {
                  "id": 28193,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3239:7:84",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28197,
                "mutability": "mutable",
                "name": "merkleRoot",
                "nameLocation": "3357:10:84",
                "nodeType": "VariableDeclaration",
                "scope": 28208,
                "src": "3349:18:84",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                "typeName": {
                  "id": 28196,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "3349:7:84",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28201,
                "mutability": "mutable",
                "name": "proof",
                "nameLocation": "3474:5:84",
                "nodeType": "VariableDeclaration",
                "scope": 28208,
                "src": "3464:15:84",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 28199,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3464:7:84",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "id": 28200,
                  "nodeType": "ArrayTypeName",
                  "src": "3464:9:84",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                    "typeString": "bytes32[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28204,
                "mutability": "mutable",
                "name": "leafIndex",
                "nameLocation": "3555:9:84",
                "nodeType": "VariableDeclaration",
                "scope": 28208,
                "src": "3548:16:84",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" },
                "typeName": {
                  "id": 28203,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "3548:6:84",
                  "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28207,
                "mutability": "mutable",
                "name": "totalLeaves",
                "nameLocation": "3645:11:84",
                "nodeType": "VariableDeclaration",
                "scope": 28208,
                "src": "3638:18:84",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" },
                "typeName": {
                  "id": 28206,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "3638:6:84",
                  "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" }
                },
                "visibility": "internal"
              }
            ],
            "name": "ClaimableRewardProof",
            "nameLocation": "2880:20:84",
            "scope": 28267,
            "visibility": "public"
          },
          {
            "id": 28216,
            "nodeType": "StructDefinition",
            "src": "3891:214:84",
            "nodes": [],
            "canonicalName": "ISLAYRewardsV2.DistributionRoots",
            "documentation": {
              "id": 28209,
              "nodeType": "StructuredDocumentation",
              "src": "3669:217:84",
              "text": " @title Distribution Roots\n @dev Stores the previous and current Merkle roots for a provider-token pair.\n This allows for a transition period where claims can be made against either root."
            },
            "members": [
              {
                "constant": false,
                "id": 28212,
                "mutability": "mutable",
                "name": "prevRoot",
                "nameLocation": "3998:8:84",
                "nodeType": "VariableDeclaration",
                "scope": 28216,
                "src": "3990:16:84",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                "typeName": {
                  "id": 28211,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "3990:7:84",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28215,
                "mutability": "mutable",
                "name": "currentRoot",
                "nameLocation": "4087:11:84",
                "nodeType": "VariableDeclaration",
                "scope": 28216,
                "src": "4079:19:84",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                "typeName": {
                  "id": 28214,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "4079:7:84",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                },
                "visibility": "internal"
              }
            ],
            "name": "DistributionRoots",
            "nameLocation": "3898:17:84",
            "scope": 28267,
            "visibility": "public"
          },
          {
            "id": 28227,
            "nodeType": "FunctionDefinition",
            "src": "4606:112:84",
            "nodes": [],
            "documentation": {
              "id": 28217,
              "nodeType": "StructuredDocumentation",
              "src": "4292:309:84",
              "text": " @notice Returns the current and previous Merkle roots for a (provider,token) pair.\n @param provider The address of the provider (e.g. service or operator).\n @param token The address of the token.\n @return DistributionRoots containing the previous and current Merkle roots."
            },
            "functionSelector": "5e04f87e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getDistributionRoots",
            "nameLocation": "4615:20:84",
            "parameters": {
              "id": 28222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28219,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "4644:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28227,
                  "src": "4636:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4636:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28221,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4662:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28227,
                  "src": "4654:13:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4654:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4635:33:84"
            },
            "returnParameters": {
              "id": 28226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28225,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28227,
                  "src": "4692:24:84",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DistributionRoots_$28216_memory_ptr",
                    "typeString": "struct ISLAYRewardsV2.DistributionRoots"
                  },
                  "typeName": {
                    "id": 28224,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28223,
                      "name": "DistributionRoots",
                      "nameLocations": ["4692:17:84"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28216,
                      "src": "4692:17:84"
                    },
                    "referencedDeclaration": 28216,
                    "src": "4692:17:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DistributionRoots_$28216_storage_ptr",
                      "typeString": "struct ISLAYRewardsV2.DistributionRoots"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4691:26:84"
            },
            "scope": 28267,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28237,
            "nodeType": "FunctionDefinition",
            "src": "5004:85:84",
            "nodes": [],
            "documentation": {
              "id": 28228,
              "nodeType": "StructuredDocumentation",
              "src": "4724:275:84",
              "text": " @notice Returns the balance of a provider for a specific token.\n @param provider The address of the provider (e.g. service or operator).\n @param token The address of the token.\n @return The balance of the provider for the specified token."
            },
            "functionSelector": "d4fac45d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "5013:10:84",
            "parameters": {
              "id": 28233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28230,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "5032:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28237,
                  "src": "5024:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5024:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28232,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5050:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28237,
                  "src": "5042:13:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5042:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5023:33:84"
            },
            "returnParameters": {
              "id": 28236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28237,
                  "src": "5080:7:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 28234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5080:7:84",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5079:9:84"
            },
            "scope": 28267,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28249,
            "nodeType": "FunctionDefinition",
            "src": "5475:108:84",
            "nodes": [],
            "documentation": {
              "id": 28238,
              "nodeType": "StructuredDocumentation",
              "src": "5095:375:84",
              "text": " @notice Returns the total claimed rewards for a specific provider, token, and earner.\n @param provider The address of the provider (e.g. service or operator).\n @param token The address of the token.\n @param earner The address of the earner.\n @return The total amount of claimed rewards for the specified provider, token, and earner."
            },
            "functionSelector": "7733369c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimedRewards",
            "nameLocation": "5484:17:84",
            "parameters": {
              "id": 28245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28240,
                  "mutability": "mutable",
                  "name": "provider",
                  "nameLocation": "5510:8:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28249,
                  "src": "5502:16:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5502:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28242,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5528:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28249,
                  "src": "5520:13:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5520:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28244,
                  "mutability": "mutable",
                  "name": "earner",
                  "nameLocation": "5543:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28249,
                  "src": "5535:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5535:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5501:49:84"
            },
            "returnParameters": {
              "id": 28248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28247,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28249,
                  "src": "5574:7:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 28246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5574:7:84",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5573:9:84"
            },
            "scope": 28267,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28259,
            "nodeType": "FunctionDefinition",
            "src": "6388:87:84",
            "nodes": [],
            "documentation": {
              "id": 28250,
              "nodeType": "StructuredDocumentation",
              "src": "5589:794:84",
              "text": " @notice Distributes rewards from a provider (service or operator) to earners using a Merkle tree.\n Although rewards are usually distributed by service or operator, anybody can distribute rewards.\n This is not limited to the service/operator itself to allow for flexibility in reward distribution.\n @dev Service needs to ensure proper allowance is made for the contract to transfer tokens.\n When the {amount} is 0, the function will essentially only update the Merkle root without any token transfer.\n This allows for patching of existing distributions.\n @param token The address of the token to distribute.\n @param amount The amount of tokens to distribute.\n @param merkleRoot The Merkle root of the distribution."
            },
            "functionSelector": "40b3a4bf",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "distributeRewards",
            "nameLocation": "6397:17:84",
            "parameters": {
              "id": 28257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28252,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6423:5:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28259,
                  "src": "6415:13:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 28251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6415:7:84",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28254,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6438:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28259,
                  "src": "6430:14:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 28253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6430:7:84",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28256,
                  "mutability": "mutable",
                  "name": "merkleRoot",
                  "nameLocation": "6454:10:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28259,
                  "src": "6446:18:84",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 28255,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6446:7:84",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6414:51:84"
            },
            "returnParameters": { "id": 28258, "nodeType": "ParameterList", "parameters": [], "src": "6474:0:84" },
            "scope": 28267,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28266,
            "nodeType": "FunctionDefinition",
            "src": "6841:69:84",
            "nodes": [],
            "documentation": {
              "id": 28260,
              "nodeType": "StructuredDocumentation",
              "src": "6481:355:84",
              "text": " @notice Claims rewards for an earner for a specific provider and token using merkle proof.\n @dev The function checks the Merkle proof, updates the claimed rewards and send the tokens to the recipient.\n @param params The parameters containing provider, token, amount, recipient, merkleRoot, proof, leafIndex, and totalLeaves."
            },
            "functionSelector": "6fdaf166",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claimRewards",
            "nameLocation": "6850:12:84",
            "parameters": {
              "id": 28264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28263,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "6893:6:84",
                  "nodeType": "VariableDeclaration",
                  "scope": 28266,
                  "src": "6863:36:84",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_calldata_ptr",
                    "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof"
                  },
                  "typeName": {
                    "id": 28262,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28261,
                      "name": "ClaimableRewardProof",
                      "nameLocations": ["6863:20:84"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28208,
                      "src": "6863:20:84"
                    },
                    "referencedDeclaration": 28208,
                    "src": "6863:20:84",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimableRewardProof_$28208_storage_ptr",
                      "typeString": "struct ISLAYRewardsV2.ClaimableRewardProof"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6862:38:84"
            },
            "returnParameters": { "id": 28265, "nodeType": "ParameterList", "parameters": [], "src": "6909:0:84" },
            "scope": 28267,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ISLAYRewardsV2",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 28125,
          "nodeType": "StructuredDocumentation",
          "src": "63:326:84",
          "text": " @title Rewards Interface\n @dev Interface for the SLAYRewardsV2 contract, which handles the distribution and claiming of rewards.\n In this context, a provider is an actor that distribute rewards (think rewards provider).\n This can be a service an operator, or any other entity that wants to distribute rewards."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [28267],
        "name": "ISLAYRewardsV2",
        "nameLocation": "400:14:84",
        "scope": 28268,
        "usedErrors": [28134, 28145, 28148, 28155],
        "usedEvents": [28166, 28181]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 84
}
